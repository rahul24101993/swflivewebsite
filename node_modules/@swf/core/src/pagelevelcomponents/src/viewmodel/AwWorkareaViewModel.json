{
    "schemaVersion": "1.0.0",
    "actions": {
        "initialize": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "populateSupportedViewModes"
                },
                {
                    "action": "setViewMode"
                }
            ]
        },
        "populateSupportedViewModes": {
            "actionType": "JSFunction",
            "method": "populateSupportedViewModes",
            "inputData": {
                "viewModes": "{{props.subPanelContext.viewModes}}"
            },
            "outputData": {
                "supportedViewModes": ""
            },
            "deps": "js/viewModeManagementService"
        },
        "setViewMode": {
            "actionType": "JSFunction",
            "method": "setViewMode",
            "inputData": {
                "viewModes": "{{data.supportedViewModes}}",
                "provider": "{{props.subPanelContext}}"
            },
            "deps": "js/viewModeManagementService"
        },
        "handleViewModechange": {
            "actionType": "JSFunctionAsync",
            "method": "handleViewModechange",
            "inputData": {
                "data": "{{data.supportedViewModes}}",
                "context": "{{props.subPanelContext}}",
                "viewModeKey": "{{data.eventMap['appCtx.register'].value.ViewModeContext}}"
            },
            "outputData": {
                "viewSuffix": "viewSuffix",
                "showSecondaryWorkArea": "showSecondaryWorkArea"
            },
            "deps": "js/viewModeManagementService"
        },
        "handleSelectionChange": {
            "actionType": "JSFunction",
            "method": "handleSelectionChange",
            "inputData": {
                "localSelectionData": "{{data.selectionData}}",
                "baseSelection": "{{props.baseSelection}}",
                "parentSelectionData": "{{props.selectionData}}",
                "dispatch": "{{data.dispatch}}",
                "primarySelection": "{{data.primarySelection}}",
                "sublocationState": "{{subPanelContext.pageContext.sublocationState}}",
                "parentSelectionModel": "{{props.selectionModel}}",
                "localSelectionModel": "{{selectionModels.nativeSelectionModel}}"
            },
            "deps": "js/AwWorkareaService"
        },
        "resetViewModes": {
            "actionType": "JSFunction",
            "method": "cleanupViewModeData",
            "deps": "js/AwWorkareaService"
        }
    },
    "data": {
        "selectionData": {
            "initialValues": {},
            "meta": {}
        }
    },
    "conditions": {},
    "lifecycleHooks": {
        "onMount": "initialize",
        "onUpdate": [ {
            "action": "handleSelectionChange",
            "observers": [ "viewModel.atomicData.selectionData" ]
        } ],
        "onUnmount": "resetViewModes"
    },
    "i18n": {},
    "props": {
        "sub-panel-context": {
            "type": "object"
        },
        "view": {
            "type": "string"
        },
        "selection-model": {
            "type": "object"
        },
        "base-selection": {
            "type": "object"
        },
        "selection-data": {
            "type": "object"
        },
        "is-horizontal-orientation": {
            "type": "object"
        }
    },
    "onEvent": [ {
        "eventId": "appCtx.register",
        "condition": "name === 'ViewModeContext' && value.ViewModeContext && value.ViewModeContext !== 'None'",
        "action": "handleViewModechange",
        "cacheEventData": true
    } ],
    "selectionModels": {
        "nativeSelectionModel": {
            "selectionMode": "{{subPanelContext.selectionMode || 'multiple' }}"
        }
    }
}
