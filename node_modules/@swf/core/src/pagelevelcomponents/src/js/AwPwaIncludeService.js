import _ from 'lodash';
import { includeComponent } from 'js/moduleLoader';
import { DerivedStateResult } from 'js/derivedContextService';

export const AwPwaIncludeRenderFunction = ( props ) => {
    const { viewBase, view, ctx } = props;
    return includeComponent( viewBase + _.upperFirst( view ), { subPanelContext: ctx.subPanelContextDerivedState[ 0 ] } );
};

export const getSubPanelContextDerivedState = ( vmDef, props ) => {
    return [ new DerivedStateResult( {
        ctxParameters: [],
        additionalParameters: [ props.subPanelContext, props.selection, props.selectionData, props.showCheckBox ],
        compute: () => {
            let subPanelContextCopy = {
                ...props.subPanelContext
            };
            subPanelContextCopy.pwaSelectionModel = props.selection;
            subPanelContextCopy.selectionModel = props.selection;
            if( props.showCheckBox ) {
                subPanelContextCopy.showCheckBox = props.showCheckBox;
            }
            if( subPanelContextCopy.selectionModel && props.selectionData ) {
                subPanelContextCopy.selectionModel.selectionData = props.selectionData;
                subPanelContextCopy.selectionData = props.selectionData;
            }
            return subPanelContextCopy;
        }
    } ) ];
};
