// Copyright (c) 2021 Siemens
// mixins

/**** section 1: define background classes and contrasting foregrounds ****/
// As long as we get more specific rules out of the way, this simple definition can be sufficient for many cases
// see wiki for details https://gitlab.industrysoftware.automation.siemens.com/Apollo/afx/wikis/stylingOverview#background-color-and-contrasting-text


.afx-accent-background {
    // default is darker accent
    background-color: $brand_quaternary_content_background;
    color: $brand_quaternary_content_text;
    fill: $brand_quaternary_content_text;
}

// aw-layout-subLocation and popup backgrounds are here for backward compatibility, we'd like to remove...
.aw-layout-subLocation,
.aw-layout-popup,
.sw-full-screen-on,
.afx-content-background {
    background-color: $brand_primary_content_background;
    color: $main_text_color;
    fill: $main_text_color;
}

.afx-alt-content-background {
    background-color: $brand_secondary_content_background;
    color: $brand_secondary_content_text;
    fill: $brand_secondary_content_text;
}

//Setting aw-list container color to white
.aw-widgets-cellListWidget {
        .aw-widgets-cellListItem:not(.aw-widgets-dropframe) {
            border-top-color: $cell_item_border_color_alt_content;
            border-bottom-color: $cell_item_main_border_bottom_color;
            &:first-child{
                border-top-color: transparent;
            }
            &:last-child {
                border-bottom-color: transparent;
            }
        }
}

.afx-medium-background,
.afx-medium-background .aw-layout-panel {
    background-color: $medium_background_color;
    color: $medium_text_color;
    fill: $medium_text_color;
}

.aw-layout-subLocationTitles {
    border-bottom-color: $brand_secondary_border;
}


// replace with background class
.aw-layout-panelTitle {
    background-color: $panel_title_background_color;
    color: $panel_title_text_color;
    fill: $panel_title_text_color;
}

.sw-command-panelContent {
    border-color: $panel_border_color;
}

.noty_msg:focus {
    .keyboard & {
        outline-style: solid;
        outline-width: 2px;
        outline-color: $brand_main_focus_color;
    }
}

.sw-container {
    .sw-sublocation-tabs {
        background-color: $aw_common_frame_large_header_tabs_background_color;;
    }
}

.sw-date-time-container {
    .sw-widget-iconContainer:hover {
        background-color: $brand_date_time_icon_hover;
    }
}

/**** section 2: create foreground color overrides based on background group ****/
// Backgrounds are grouped in 2 sets: base and main.
// Base is applied on the body and is the default background (e.g. dark blue gradient in the horizon/light theme).
// Other backgrounds that have a similar level of pigment are grouped in the base set.
// Main contains the contrasting backgrounds (e.g., light in the light/horizon theme).

// styling widgets for main content backgrounds
@mixin main-foreground-styles {
    .aw-widgets-primaryCrumb {
        background-color: transparent;
        color: $link_main;
    }

    a,
    .aw-widgets-crumbLink {
        color: $link_main;

        &:visited {
            color: $link_main_visited;
        }

        &:hover {
            color: $link_main_hover;
        }

        &:active {
            color: $link_main_active;
        }
    }

    textarea,
    input[type="text"],
    input[type="password"],
    .sw-array-val {

        &:disabled,
        &.sw-changed:disabled {
            background-color: $disabled_main_button_background;
            color: rgba($brand_disabled_border_color, 0.57);
            border-color: rgba($brand_disabled_border_color, 0.57);
            opacity: 1;
        }
    }

    .sw-aria-border {

        &:focus,
        &.aw-list-itemFocused {
            .keyboard & {
                border-color: $brand_main_focus_color !important;
            }
        }
    }

    // link with popup
    .aw-link {
        .aw-theme-iconOutline {
            fill: $link_main;
        }
    }

    // command bar
    .aw-commands-commandIconButton,
    .aw-commands-commandToolbarIconButton,
    .sw-button-iconContainer {
        color: $command_text_color;

        &:hover {
            background-color: $brand_selection_background_hover;
            color: $command_text_color;

            &.aw-state-selected {
                background-color: $brand_selection_background_selected_hover;
            }
        }

        // pressed or selected
        &:active,
        &.aw-state-selected {
            background-color: $brand_selection_background_selected;
            color: $command_text_color;
        }

        &:focus {
            outline: none;
        }

        .aw-widgets-groupCommandStack {
            .aw-theme-iconOutline {
                fill: rgba(0, 0, 0, 0.25);
            }
        }

        .keyboard &:focus {
            border-color: $brand_main_focus_color;
        }
    }

    .aw-commands-svg svg,
    .aw-theme-iconHomeOutline,
    .aw-theme-iconOutline {
        fill: $main_text_color;
    }

    .aw-layout-panelSectionTitle {
        color: $panel_section_title_color;
        background-color: $panel_section_title_background;

        //links on panel section title to be wcag compliant
        a {
            color: $aw_link_and_clickable;
        }

        .keyboard &:focus {
            border-color: $brand_main_focus_color;
        }
    }

    .sw-sectionTitleContainer,
    .aw-layout-panelSectionTitle {
        color: $panel_section_title_color;
        background-color: $panel_section_title_background;

        //links on panel section title to be wcag compliant
        a {
            color: $aw_link_and_clickable;
        }
    }

    .sw-panel-summary {
        .keyboard &:focus .sw-sectionTitleContainer {
            outline-color: $brand_main_focus_color;
        }
    }

    .sw-tabContainer .sw-tab {
        a.sw-tab-title {
            color: $tab_title;
            border-color: $tab_title_border_color;

            &:hover {
                color: $tab_title_hover;
            }

            &:active {
                color: $tab_title_active;
            }
        }

        a.sw-tab-selected {
            color: $tab_title_selected;
            border-bottom-color: $tab_title_selected_border_color;
            transition: $hover_border_color_transition;

            &:hover {
                color: $tab_title_hover;
                border-bottom-color: $tab_title_selected_border_color_hover;
            }
        }
    }

    // Buttons & Chips, the two have the same color variants
    .sw-button,
    .aw-widgets-chip {
        color: $default_main_button_text;
        fill: $default_main_button_text;
        background-color: $default_main_button_background;
        border-color: $default_main_button_border;

        &:hover,
        &:focus {
            background-color: $default_main_button_background_hover;
            box-shadow: $default_main_button_hover_shadow;
        }

        &:active {
            background-color: $default_main_button_background_active;
        }

        &:not(.disabled) {

            //default style for AwButton
            &.accent-highContrast {
                color: $default_main_button_text;
                fill: $default_main_button_text;
                background-color: $default_main_button_background;
                border-color: $default_main_button_border;

                &:not(.aw-widgets-staticChip) {

                    &:hover,
                    &:focus {
                        background-color: $default_main_button_background_hover;
                        box-shadow: $default_main_button_hover_shadow;
                    }

                    &:active {
                        background-color: $default_main_button_background_active;
                    }
                }

            }

            &.aw-not-default-button {
                background-color: transparent;
                border-color: $aw_button_color;
                color: $negative_button_text;
                fill: $negative_button_text;
            }

            &.base-button {
                background-color: $base_main_button_background;
                border-color: $base_main_button_border;
                color: $base_main_button_text;
                fill: $base_main_button_text;

                &.aw-widgets-staticChip {
                    cursor: auto;
                }

                &:not(.aw-widgets-staticChip) {

                    &:hover,
                    &:focus {
                        background-color: $base_main_button_background_hover;
                    }

                    &:active {
                        background-color: $base_main_button_background_active;
                    }
                }
            }

            // chromeless is not applicable for chip
            &.chromeless {
                background-color: $chromeless_main_button_background;
                border-color: $chromeless_main_button_border;
                color: $chromeless_main_button_text;
                box-shadow: none;

                &:hover,
                &:focus {
                    background-color: $chromeless_main_button_background_hover;
                }

                &:active {
                    background-color: $chromeless_main_button_background_active;
                }
            }
        }

        &.disabled {
            background-color: $disabled_main_button_background;
            color: rgba($brand_disabled_border_color, 0.57);
            border-color: rgba($brand_disabled_border_color, 0.57);
            fill: $disabled_main_button_text;
            opacity: 1;
        }
    }

    // aw-radiobutton
    /* Box */
    .sw-radio {
        >.radio-label::before {
            border-color: $radiobutton_main_color;
        }

        /* Checked, Indeterminate */
        >input {

            &:checked,
            &:indeterminate,
            &:checked+.radio-label::after {
                background-color: $radiobutton_main_accent_color;
            }

            &:checked:disabled+.radio-label::after,
            &:indeterminate:disabled+.radio-label::after {
                background-color: rgba($brand_disabled_border_color, 0.57);
                opacity: 1;
            }

            &:checked+.radio-label::before,
            &:active+.radio-label::before {
                border-color: $radiobutton_main_accent_color;
            }


            &:indeterminate+.radio-label::before{
                border-color: $radiobutton_main_color;
            }
            &:not(:checked)+.radio-label:hover::before {
                border-color: $radiobutton_main_accent_color;
            }

            &:checked:active+.radio-label::before {
                background-color: rgba($radiobutton_main_accent_color, 0.6);
            }

            &:disabled+.radio-label {
                color: rgba($brand_disabled_border_color, 0.57);
                opacity: 1;
            }

            &:checked:disabled+.radio-label::before,
            &:indeterminate:disabled+.radio-label::before {
                border-color: rgba($brand_disabled_border_color, 0.57);
                background-color: rgba($PL_Black, 0.07);
                opacity: 1;
            }
        }
    }

    //aw-list: border-color
    .aw-widgets-cellListItem {
        border-color: $default_cell_list_main_item_border_color;
    }

    // SPLITTER
    .aw-layout-splitter {
        background-color: $splitter_background_color;

        &:hover {
            .aw-layout-splitterLine {
                border-color: $splitter_main_border_color_hover;
            }

            .aw-layout-splitterLineHorizontal {
                border-color: $splitter_main_border_color_hover;
            }
        }

        &:active {
            .aw-layout-splitterLine {
                border-color: $splitter_main_border_color_active;
            }

            .aw-layout-splitterLineHorizontal {
                border-color: $splitter_main_border_color_active;
            }
        }
    }

    .aw-layout-splitterLine,
    .aw-layout-splitterLineHorizontal {
        border-color: $splitter_main_border_color;
    }

    /* sidenav resize gripper */
    .aw-sidenav-resizer {
        .sw-button-icon {
            svg rect {
                fill: $global_navigation_drag_handle_main_color;
            }
        }

        &:hover {
            .sw-button-icon {
                svg rect {
                    fill: $global_navigation_drag_handle_main_hover_color;
                }
            }
        }
    }

    .aw-sidenav-leftBackground {
        .aw-sidenav-resizer {
            &:hover {
                border-left-color: $global_navigation_drag_handle_main_hover_color;
            }
        }
    }

    .aw-sidenav-rightBackground {
        .aw-sidenav-resizer {
            &:hover {
                border-right-color: $global_navigation_drag_handle_main_hover_color;
            }
        }
    }

    // temp old wcag focus stlyles
    .aw-generic-avatar:focus,
    .aw-avatar-layout:focus,
    .noty_close:focus,
    a.aw-progress-bar-text:focus,
    .aw-widgets-checkSelect input:focus~.aw-widgets-checklistText,
    .aw-widgets-propertyValueLink:focus {
        .keyboard & {
            outline-color: $brand_main_focus_color;
        }
    }

    // updated focus styles
    input.sw-property-val:focus+.sw-checkbox-pseudo::before,
    .sw-toggle-val input:focus+.slider,
    label.sw-radio:focus-within,
    .aw-tile-tileContainer:focus,
    .noty_buttons .btn.btn-notify:focus,
    button.sw-button:focus,
    .sw-avatar-generic:focus,
    .sw-avatar-layout:focus {
        .keyboard & {
            outline-color: $brand_main_focus_color;
        }
    }

    .aw-file-uploadFocus {
        border-color: $brand_main_focus_color;
    }

    .aw-widgets-selectedCrumb {
        background-color: transparent;
        color: $main_text_color;
    }

    // scrollbars
    ::-webkit-scrollbar-track {
        background-color: $brand_scroll_track;
    }

    ::-webkit-scrollbar-thumb {
        background-color: $brand_scroll_thumb; //25%
        border-color: transparent;

        &:hover {
            background-color: $brand_scroll_thumb_hover; //50%
        }
    }

    //disabled Styling
    .disabled .sw-widget-iconContainer .aw-theme-iconOutline {
        fill: rgba($brand_disabled_border_color, 0.57);
        opacity: 1;
    }

    .sw-property {
        &.sw-component {
             &.disabled {
                 opacity: 1;
             }
        }
    }

    .sw-date-container {
        &.sw-property-val {
            &.disabled {
                .flatpickr-input {
                   background-color: rgba($PL_Black,0.07);
                }
                color: rgba($brand_disabled_border_color, 0.57);
                border-color: rgba($brand_disabled_border_color, 0.57);
                opacity: 1;
                svg path {
                    fill : $brand_disabled_border_color;
                }
            }
        }
    }

    .aw-widgets-checkSelect {
        &.disabled {
            opacity: 1;
            ::before {
                color: rgba($brand_disabled_border_color, 0.57);
            }
            .sw-button-iconContainer.sw-aria-border {
                .aw-icon.sw-button-icon {
                .aw-theme-iconOutline {
                    fill: rgba($brand_disabled_border_color, 0.57);
                }
            }
            }
        }
    }

}

// style foregrounds on base backgrounds
// (dark background with light foreground in light/horizon theme)
@mixin base-foreground-styles {
    .aw-widgets-primaryCrumb {
        background-color: transparent;
        color: $chip_text_color_selected;
    }

    .aw-widgets-selectedCrumb {
        background-color: transparent;
        color: $chip_text_color_selected;
    }

    a,
    .aw-widgets-crumbLink {
        color: $link_base;

        &:visited {
            color: $link_base_visited;
        }

        &:hover {
            color: $link_base_hover;
        }

        &:active {
            color: $link_base_active;
        }

        &.disabled {
            color: $link_disabled;
        }
    }

    textarea,
    input[type="text"],
    input[type="password"],
    .sw-array-val {

        &:disabled,
        &.sw-changed:disabled {
            background-color: rgba($brand_disabled_base_background_color, 0.07);
            color: $brand_disabled_base_background_color;
            border-color: $brand_disabled_base_background_color;
            opacity: 1;
        }
    }
    .sw-aria-border {

        &:focus,
        &.aw-list-itemFocused {
            .keyboard & {
                border-color: $brand_base_focus_color !important;
            }
        }
    }

    // link with popup
    .aw-link {
        .aw-theme-iconOutline {
            fill: $link_base;
        }
    }

    // command bar
    .aw-commands-commandIconButton,
    .aw-commands-commandToolbarIconButton,
    .sw-button-iconContainer {
        color: $command_base_text_color;

        &.aw-state-selected,
        &:active {
            background-color: $brand_selection_background_selected_base;
            color: $command_base_text_color;
        }

        &.aw-state-selected {
            border-top-color: $brand_selection_border_accent;
        }

        &:hover {
            background-color: $brand_selection_background_hover_base;

            &.aw-state-selected {
                background-color: $brand_selection_background_hover_base;
                border-top-color: $brand_selection_border_accent;
            }
        }

        .keyboard &:focus {
            border-color: $brand_base_focus_color;
        }
    }

    .aw-commands-svg svg,
    .aw-theme-iconHomeOutline,
    .aw-theme-iconOutline {
        fill: $base_text_color;
    }

    .aw-layout-panelSectionTitle {
        color: $panel_section_title_base_color;
        background-color: $panel_section_title_base_background;

        .aw-theme-iconOutline {
            fill: $main_text_color
        }

        .keyboard &:focus {
            border-color: $brand_base_focus_color;
        }
    }

    .sw-sectionTitleContainer,
    .aw-layout-panelSectionTitle {
        color: $panel_section_title_base_color;
        background-color: $panel_section_title_base_background;
    }

    .sw-panel-summary {
        .keyboard &:focus .sw-sectionTitleContainer {
            outline-color: $brand_base_focus_color;
        }
    }

    .sw-tabContainer {
        .sw-tab {
            a.sw-tab-title {
                color: $brand_primary_content_background;
                border-color: transparent;
            }

            a.sw-tab-selected,
            a.sw-tab-selected:hover,
            a.sw-tab-title:hover {
                color: $parent_tab_title;
                border-bottom-color: $parent_tab_title_border_color;
            }

            a.sw-tab-title:hover {
                border-bottom-color: $tab_title_border_color;
            }
        }
    }

    @media (max-width: 28.75em) {
        .aw-footer-container {
            //Keeping the background color of footer as is for now
            background-color: $aw_toolbar_narrow_mode;
            box-shadow: $footer_toolbar_box_shadow;

            .sw-avatar-normalIcon {
                .aw-theme-iconOutline {
                    fill: $avatar_icon_fill;
                }
            }
        }
    }

    // Buttons
    .sw-button,
    .aw-widgets-chip {
        color: $default_base_button_text;
        fill: $default_base_button_text;
        background-color: $default_base_button_background;
        border-color: $default_base_button_border;

        &:hover,
        &:focus {
            background-color: $default_base_button_background_hover;
        }

        &:active {
            background-color: $default_base_button_background_active;
        }

        &:not(.disabled) {
            &.accent-highContrast {
                color: $default_base_button_text;
                fill: $default_base_button_text;
                background-color: $default_base_button_background;
                border-color: $default_base_button_border;

                &:not(.aw-widgets-staticChip) {

                    &:hover,
                    &:focus {
                        background-color: $default_base_button_background_hover;
                    }

                    &:active {
                        background-color: $default_base_button_background_active;
                    }
                }
            }

            &.aw-not-default-button {
                background-color: transparent;
                border-color: $aw_button_color;
                color: $negative_button_text;
            }

            &.base-button {
                background-color: $base_dark_button_background;
                border-color: $base_dark_button_border;
                color: $base_dark_button_text;
                fill: $base_dark_button_text;

                &:not(.aw-widgets-staticChip) {

                    &:hover,
                    &:focus {
                        background-color: $base_dark_button_background_hover;
                    }

                    &:active {
                        background-color: $base_dark_button_background_active;
                    }
                }
            }

            // chromeless is not applicable for chip
            &.chromeless {
                background-color: $chromeless_base_button_background;
                border-color: $chromeless_base_button_border;
                color: $chromeless_base_button_text;
                box-shadow: none;

                &:hover,
                &:focus {
                    background-color: $chromeless_base_button_background_hover;
                }

                &:active {
                    background-color: $chromeless_base_button_background_active;
                }
            }

            &.chromeless-disabled {
                pointer-events: none;
                background-color: $chromeless_disabled_base_button_background;
                border-color: $chromeless_disabled_base_button_border;
                color: $chromeless_disabled_base_button_text;
                box-shadow: none;
            }
        }

        &.disabled {
            background-color: rgba($brand_disabled_base_background_color, 0.07);
            border-color: $disabled_base_button_border;
            color: $disabled_base_button_text;
            fill: $disabled_base_button_text;
            opacity: 1;
        }
    }

        // aw-radiobutton
    /* Box */
    .sw-radio {
        >.radio-label::before {
            border-color: $radiobutton_base_color;
        }

        /* Checked, Indeterminate */
        >input {

            &:checked,
            &:indeterminate,
            &:checked+.radio-label::after {
                background-color: $radiobutton_base_accent_color;
            }

            &:checked:disabled+.radio-label::after,
            &:indeterminate:disabled+.radio-label::after {
                background-color: $brand_disabled_base_background_color;
                opacity: 1;
            }

            &:checked+.radio-label::before,
            &:active+.radio-label::before {
                border-color: $radiobutton_base_accent_color;
            }

            &:indeterminate+.radio-label::before,
            &:not(:checked)+.radio-label:hover::before {
                border-color: $brand_base_focus_color;
            }

            &:checked:active+.radio-label::before {
                background-color: rgba($radiobutton_base_accent_color, 0.6);
            }

            &:disabled+.radio-label {
                color: $brand_disabled_base_background_color;
                opacity: 1;
            }

            &:checked:disabled+.radio-label::before,
            &:indeterminate:disabled+.radio-label::before {
                border-color: $disabled_base_button_border;
                background-color: rgba($brand_disabled_base_background_color, 0.07);
                opacity: 1;
            }
        }
    }

    //aw-list: border color
    .aw-widgets-cellListItem {
        border-color: $default_cell_list_base_item_border_color;
        border-bottom-color: $cell_item_base_border_bottom_color;
    }

    //SPLITTER
    .aw-layout-splitter {
        background-color: $splitter_background_color;

        &:hover {
            .aw-layout-splitterLine {
                border-color: $splitter_base_border_color_hover;
            }

            .aw-layout-splitterLineHorizontal {
                border-color: $splitter_base_border_color_hover;
            }
        }

        &:active {
            .aw-layout-splitterLine {
                border-color: $splitter_base_border_color_active;
            }

            .aw-layout-splitterLineHorizontal {
                border-color: $splitter_base_border_color_active;
            }
        }
    }

    .aw-layout-splitterLine {
        border-color: $splitter_base_border_color;
    }

    .aw-layout-splitterLineHorizontal {
        border-color: $splitter_base_border_color;
    }

    .aw-sidenav-resizer {
        .sw-button-icon {
            svg rect {
                fill: $global_navigation_drag_handle_color;
            }
        }

        &:hover {
            .sw-button-icon {
                svg rect {
                    fill: $global_navigation_drag_handle_hover_color;
                }
            }
        }
    }

    .aw-sidenav-leftBackground {
        .aw-sidenav-resizer {
            &:hover {
                border-left-color: $global_navigation_drag_handle_hover_color;
            }
        }
    }

    .aw-sidenav-rightBackground {
        .aw-sidenav-resizer {
            &:hover {
                border-right-color: $global_navigation_drag_handle_hover_color;
            }
        }
    }

    // updated focus styles
    input.sw-property-val:focus+.sw-checkbox-pseudo::before,
    .sw-toggle-val input:focus+.slider,
    label.sw-radio:focus-within,
    .aw-tile-tileContainer:focus,
    .noty_buttons .btn.btn-notify:focus,
    button.sw-button:focus,
    .sw-avatar-generic:focus,
    .sw-avatar-layout:focus {
        .keyboard & {
            outline-color: $brand_base_focus_color;
        }
    }

    .aw-file-uploadFocus {
        border-color: $brand_base_focus_color;
    }

    // scrollbars on base
    ::-webkit-scrollbar-track {
        background-color: $brand_scroll_track_base;
    }

    ::-webkit-scrollbar-thumb {
        background-color: $brand_scroll_thumb_base; //25%
        border-color: transparent;

        &:hover {
            background-color: $brand_scroll_thumb_hover_base; //50%
        }
    }

    //disabled styling
    .disabled .sw-widget-iconContainer .aw-theme-iconOutline {
        fill: $brand_disabled_base_background_color;
        opacity: 1;
    }

    .sw-date-container {
        &.sw-property-val {
            &.disabled {
                .flatpickr-input {
                   background-color: rgba($brand_disabled_base_background_color,0.07);
                }
                color: rgba($brand_disabled_border, 0.57);
                border-color: rgba($brand_disabled_border, 0.57);
                opacity: 1;
                svg path {
                    fill : $brand_disabled_border;
                }
            }
        }
    }

    //For checklist
    .aw-widgets-checkSelect {
        &.disabled {
            opacity: 1;
            ::before {
                color: rgba($brand_disabled_border, 0.57);
            }
            .sw-button-iconContainer.sw-aria-border {
                .aw-icon.sw-button-icon {
                .aw-theme-iconOutline {
                    fill: rgba($brand_disabled_border, 0.57);
                }
            }
            }
        }
    }
}

/**** section 3: apply the mixins ****/
// base, then main for main background classes, then base for base background classes inside of main

// base background is applied at body, so start with that and then override as-needed
// base and main background-classes are defined in afx-theme-settings and can be override per theme
@include base-foreground-styles;

// contrasting main/content backgrounds
#{$main-background-classes} {
    @include main-foreground-styles;

    #{$base-background-classes} {
        // support dark background inside light
        @include base-foreground-styles;
    }
}

/**** section 4: elements that set a their own background color ****/
// i.e., no need for alternate foreground support
// could optimize by applying generic background classes

.aw-ui-treeNode-valueContainer:hover {
    background-color: $cell_list_item_hover;
}

// aw-list has 1 set of selection backgrounds...
// when changing or customizing, need to be carful not to clash them with the container background
.aw-jswidgets-nestingListItemDisplay:hover {
    background-color: $cell_list_item_hover;
}

.aw-widgets-cellListItem {
    &:hover {
        background-color: $cell_list_item_hover;
        color: $brand_primary_content_text;
        border-color: $cell_list_item_hover;
        border-bottom-color: $cell_item_main_border_bottom_color;

        .aw-theme-iconOutline {
            fill: $brand_primary_content_text;
        }

        // list items in popups are commands
        .sw-popup-contentContainer & {
            background-color: $brand_selection_background_hover;
            border-color: $brand_selection_background_hover;
        }
    }

    // special case for toggle cmds in popups
    .aw-popup-command-bar & {
        &.aw-state-selected {
            background-color: unset;

            &:hover {
                background-color: $brand_selection_background_hover;
            }

            .aw-widget-thumbnail {
                background-color: $brand_selection_background_hover;
                outline-color: $brand_selection_border_accent;
            }
        }
    }

    &.aw-widgets-cellListItemSelected:not(.aw-widgets-dropframe) {
        background-color: $brand_selection_background_selected;
        fill: $aw_secondary_text;
        color: $brand_selection_text_selected; //
        border-color: $brand_selection_background_selected;
        border-bottom-color: $cell_item_main_border_bottom_color;

        .aw-theme-iconOutline {
            fill: $brand_selection_text_selected;
        }

        &:hover {
            background-color: $brand_selection_background_selected_hover;
            color: $brand_selection_text_selected_hover;
            border-color: $brand_selection_background_selected_hover;
            border-bottom-color: $cell_item_main_border_bottom_color;
        }

        &.aw-widgets-cellListItemInactivated {
            background-color: $PL_Black_23;
            color: $brand_selection_text_selected;
            border-color: $PL_Black_23;
            border-bottom-color: $cell_item_main_border_bottom_color;
        }

        // checkbox lov also uses list cells but doesn't need selection colors since it has cb
        .aw-checkboxarray-lovParent & {
            background-color: $Siemens_Snow;
            border-color: $Siemens_Snow;

            &:hover {
                background-color: $brand_selection_background_selected_hover;
            }
        }
    }
}

/* jswidget datepicker colors */
.aw-jswidgets-datepicker.ui-datepicker {
    background-color: $date_datepicker_background_color;
    color: $date_datepicker_calender_table_content_color;
    border-color: $date_datepicker_border_color;
    box-shadow: $date_datepicker_box_shadow;
}

.aw-jswidgets-datepicker.ui-datepicker table td a,
.aw-jswidgets-datepicker.ui-datepicker .ui-widget-content {
    color: $date_datepicker_calender_table_content_color;
}

// make only "the first letter" of header (i.e. M, T, W, T, etc) visible, by giving the rest of letters the color same as background
.aw-jswidgets-datepicker.ui-datepicker table th {
    color: $date_datepicker_background_color;

    &::first-letter {
        color: $date_datepicker_calender_table_header_color;
    }
}

.aw-jswidgets-datepicker.ui-datepicker .ui-datepicker-calendar .ui-state-active {
    color: $date_datepicker_calender_selected_date_active_color;
    background-color: $date_datepicker_calender_selected_date_active_background_color;
}

.aw-jswidgets-datepicker.ui-datepicker .ui-state-highlight,
.ui-widget-content .ui-state-highlight,
.ui-widget-header .ui-state-highlight {
    color: $date_datepicker_calender_current_date_highlight_color;
    border: $date_datepicker_calender_current_date_highlight_border;
}

.aw-jswidgets-datepicker.ui-datepicker .ui-state-default.ui-state-hover:not(.ui-state-active) {
    background-color: $date_datepicker_calender_date_hover_background_color;
}

// DateTime Widget using Flatpickr
.flatpickr-day:hover {
    background-color: $date_datepicker_calender_date_hover_background_color;
    border-color: $date_datepicker_calender_date_hover_background_color;
}

.flatpickr-day.selected {
    background-color: $date_datepicker_calender_selected_date_active_background_color;
    outline-offset: 1px;
    outline: 1px solid $Siemens_Yellow_9;
}

.flatpickr-day.selected:hover {
    background-color: $date_datepicker_calender_selected_date_active_background_color;
}

.flatpickr-day.today {
    color: $Siemens_Yellow_9;
    border-color: $Siemens_Yellow_9;
    font-weight: 600;

    &:hover {
        background-color: $date_datepicker_calender_date_hover_background_color;
        color: $Siemens_Yellow_9;
        border-color: $Siemens_Yellow_9;
    }
}

.flatpickr-current-month {

    .flatpickr-monthDropdown-months,
    .numInputWrapper {
        border: solid 1px $brand_primary_border;
    }

    .flatpickr-monthDropdown-months:hover,
    .numInputWrapper:hover {
        background-color: $Siemens_Snow;
    }
}

.flatpickr-calendar {
    border: solid 1px $date_datepicker_border_color;
    box-shadow: $drop_shadow_large
}

// DateTime Widget using Flatpickr -- Ends

// textbox, textarea, and password set their own background
// this could be more generic... could relplace 4 lines with this?
//     .sw-property:not(.sw-readOnly) .sw-property-val,
textarea,
input[type="text"],
input[type="password"],
.sw-array-val {
    background-color: $brand_primary_content_background;
    color: $input_text_color;
    border-color: $input_border_color;

    .aw-theme-iconOutline {
        fill: $main_text_color;
    }

    &:focus {
        border-color: $brand_primary_border_focus;
        caret-color: $input_border_color;
    }

    &.sw-changed {
        background-color: $input_pending_change;
    }

    &.sw-property-val.sw-changed.active {
        border-color: $brand_primary_border_focus;
    }
}

.aw-session-signIn {
    @include linear_gradient(90deg, rgba($PL_Black, 0.75) 250px, rgba($PL_Black, .25) 100%);

    input[type="text"],
    input[type="password"] {
        background-color: transparent;
        color: $base_text_color;
    }
}

// certain inputs don't show dirty state - designated with sw-noDirtyStyle class
// usually placed directly on input
input[type="text"],
input[type="password"] {
    &.sw-noDirtyStyle.sw-changed {
        background-color: revert;
    }
}

// but could be on parent wrapper
.sw-noDirtyStyle {

    input[type="text"],
    input[type="password"] {
        &.sw-changed {
            background-color: revert;
        }
    }
}

// styling for placeholder
::-webkit-input-placeholder {
    color: $placeholder_text_color;
}

:-ms-input-placeholder {
    color: $placeholder_text_color;
}

::-moz-placeholder {
    color: $placeholder_text_color;
}

// validation errors
.sw-errorFlag {
    .sw-property-val {
        background-color: rgba($input_error_color, 0.1);
    }

    textarea,
    input[type="text"],
    input[type="password"],
    input[type="text"].sw-changed,
    input[type="password"].sw-changed {
        background-color: rgba($input_error_color, 0.1);
        border-color: $input_error_color;
        color: $input_error_color;

        &:hover {
            border-color: $input_error_color;
        }

        &:focus {
            border-color: $brand_primary_border_focus;
        }
    }

    // styling for placeholder color in error
    ::-webkit-input-placeholder {
        color: $input_error_color;
    }

    ::-moz-placeholder {
        color: $input_error_color;
    }

    :-ms-input-placeholder {
        color: $input_error_color;
    }

    ::placeholder {
        color: $input_error_color;
    }

    .sw-property-name {
        color: $input_error_color;

        // error flag icon
        &::before {
            color: $input_error_color;
        }
    }

    .sw-errorHint,
    .sw-errorSeparator {
        color: $input_error_color;
    }
}

//Disabled state styling for property widgets
.sw-disabled {
    .sw-property-name {
        //as per new UX input labels to be without alpha, since it adds to color-contrast violation.
        color: $input_disabled_color;
    }

    .sw-property-val {
        background-color: rgba($input_disabled_background_color, 0.1);
        color: rgba($input_disabled_color, 0.57);
        border-color: rgba($input_disabled_background_color, 0.3);
    }
}

aw-popup-panel2,
aw-popup {
    &:not(.aw-popup-defaultStyle) {
        .aw-popup-screenMaskBackground {
            background-color: $PL_Black;
        }

        .aw-popup-contentContainerBackground {
            background-color: $content_background_color;
        }
    }

    button.disabled {
        color: $aw_gray_9;
        background-color: $aw_toolbar;
        border-color: $aw_toolbar;
    }

    .aw-popup-secondaryButton {
        background-color: $content_background_color;
        color: $aw_link_and_clickable;
        border-color: $aw_panel_header_accent;
    }
}

// search-prefilter
aw-search-prefilter {
    input.aw-jswidgets-choice[readonly="readOnly"] {
        color: $search_prefilter_text_color;
        background-color: $search_prefilter_background_color;
        border-color: $search_prefilter_border_color;

        &:active {
            background-color: $search_prefilter_background_color_active;
        }

        &:focus {
            background-color: $search_prefilter_background_color_focus;
        }

        &.aw-search-dirty {
            background-color: $search_prefilter_background_color_dirty;
            border-color: $search_prefilter_border_color_dirty;
        }
    }

    aw-property-image.aw-search-prefilter-icon .aw-theme-iconOutline {
        fill: $search_prefilter_icon_color;
    }
}

// indeterministic progress indicator
.aw-layout-progressBarCylon {
    @include linear_gradient(to right, $progress_indicator_thumb_color 0px, $progress_indicator_thumb_color 0px);
}

.aw-layout-progressBarIE9 {
    background-color: $progress_indicator_thumb_color;
}

.aw-layout-progressBar {
    background-color: $progress_indicator_path_color;
}

.sw-array-val {

    // Array widget - border and box-shadow aren't unique to array: make generic
    .aw-jswidgets-arrayWidgetContainer {
        &.sw-border {
            border-color: $property_array_val_border_color;
        }
    }

    .sw-radio-group,
    .sw-toggle-val-container,
    .sw-checkbox-val {
        border-color: $property_array_val_border_color;
    }
}

.aw-jswidgets-arrayWidgetContainerFocused {
    border-color: $brand_primary_border_focus;
}

.aw-uiwidgets-searchBoxContainer {

    .aw-uiwidgets-searchBoxIcon,
    .aw-uiwidgets-searchResetIcon {
        .aw-theme-iconOutline {
            fill: $main_text_color;
        }
    }
}

aw-search-box,
.aw-in-content-search-box,
aw-filter-category-searchbox {
    .aw-uiwidgets-searchBoxContainer {
        border-color: $search_box_border_color;

        .aw-uiwidgets-searchBoxIcon,
        .aw-uiwidgets-searchResetIcon {
            background-color: $search_box_background_color;

            &:focus {
                .keyboard & {
                    outline-color: $brand_main_focus_color;
                }
            }
        }
    }

    .aw-search-inContentSearchBox .aw-uiwidgets-searchBoxContainer {
        border-color: $search_box_border_color;
    }

    .aw-search-inContentSearchBox .aw-uiwidgets-searchBoxContainer:hover {
        border-color: $search_box_border_color_hover;
    }

    .aw-uiwidgets-searchBoxIcon:hover,
    .aw-uiwidgets-searchResetIcon:hover {
        background-color: $search_box_icon_hover;
    }

    .aw-uiwidgets-searchBoxIcon:active,
    .aw-uiwidgets-searchResetIcon:active {
        background-color: $search_box_icon_active;
    }
}

.aw-search-searchIconViewContainer .aw-uiwidgets-searchBoxIcon,
.aw-search-searchIconViewContainer .aw-uiwidgets-searchResetIcon {
    background-color: transparent;
}

.aw-search-globalSearchPreFilterWrapper .aw-widgets-propertyContainer {
    box-shadow: $search_box_drop_shadow;
}

.aw-search-globalSearchElementsContainer aw-search-prefilter .aw-jswidgets-popUpVisible .aw-jswidgets-nestingListItemDisplay:hover {
    color: $aw_prefilter_text_color;
}

/* NOTIFICATION-CELL or AW-NOTIFICATION-CELL */
.aw-notification-cell-importance-high {
    border-left-color: $aw_notification_cell_imp_color;
}

.aw-notification-cell-importance-medium {
    border-left-color: $aw_notification_cell_med_color;
}

.aw-notification-cell-importance-low {
    border-left-color: $aw_notification_cell_low_color;
}

/* notification cell title color*/
.aw-notification-cell-title-high {
    color: $aw_notification_cell_imp_color;
}

.aw-notification-cell-title-medium {
    color: $aw_notification_cell_med_color;
}

.aw-notification-cell-title-low {
    color: $aw_notification_cell_low_color;
}

.aw-notification-cell-read {
    border-left-color: $aw_notification_cell_read_color;
}

.aw-notification-cell-prop {
    color: $aw_notification_cell_prop_color;
}

.aw-notification-cell:hover {
    box-shadow: $aw_notification_cell_box_shadow_hover;
}

.aw-notification-cell {
    background-color: $aw_notification_cell_read_color;
    box-shadow: $aw_notification_cell_box_shadow;
}

.guidance-container-type-information {
    border-color: $guidance_information_border_color;
    background-color: $guidance_information_background_color;

    .sw-guidanceMsg-guideText {
        color: $brand_status_information;
    }
}

.guidance-container-type-warning {
    border-color: $guidance_warning_border_color;
    background-color: $guidance_warning_background_color;

    .sw-guidanceMsg-guideText {
        color: $Siemens_Yellow_4;
    }

    .sw-button {
        &:not(.disabled) {
            border-color: $solo_button_border;
            background-color: $solo_button_background;

            &:hover,
            &:focus {
                background-color: $solo_button_background_hover;
            }

            &:active {
                background-color: $solo_button_background_active;
            }
        }
    }
}

.guidance-container-type-error {
    border-color: $guidance_error_border_color;
    background-color: $guidance_error_background_color;

    .sw-guidanceMsg-guideText {
        color: $guidance_error_color;
    }

    .sw-button {
        &:not(.disabled) {
            border-color: $error_button_border;
            background-color: $error_button_background;

            &:hover,
            &:focus {
                background-color: $error_button_background_hover;
            }

            &:active {
                background-color: $error_button_background_active;
            }
        }
    }

}

.guidance-container-type-success {
    border-color: $guidance_success_border_color;
    background-color: $guidance_success_background_color;

    .sw-guidanceMsg-guideText {
        color: $guidance_success_color;
    }

    .sw-button {
        &:not(.disabled) {
            border-color: $success_button_border;
            background-color: $success_button_background;

            &:hover,
            &:focus {
                background-color: $success_button_background_hover;
            }

            &:active {
                background-color: $success_button_background_active;
            }
        }
    }
}

.sw-guidanceMessage .sw-guidanceMsg-closeButton {
    svg polygon {
        fill: $guidance_close_button_color;
        stroke: $guidance_close_button_color;
    }

    &:hover,
    &:focus {
        svg polygon {
            fill: $guidance_close_button_color_hover;
            stroke: $guidance_close_button_color_hover;
        }
    }
}

// AW_STEP_PROGRESS
.aw-step-progressChevronContainer {
    li {
        background-color: $aw_step_progress_container_background_color;
        color: $aw_step_progress_text_color;
        border-color: $aw_step_progress_border_color;

        &::after {
            border-left-color: $aw_step_progress_after_left_border_color;
            border-top-color: $aw_step_progress_transparent_border_color;
            border-bottom-color: $aw_step_progress_transparent_border_color;
        }

        &::before {
            border-left-color: $aw_step_progress_before_left_border_color;
            border-top-color: $aw_step_progress_transparent_border_color;
            border-bottom-color: $aw_step_progress_transparent_border_color;
        }

        // Styling for Current or Highlighted Chevron
        &.aw-step-progressCurrentChevron {
            background-color: $aw_step_progress_current_item_accent_color;
            color: $aw_step_progress_current_item_text_color;
            border-color: $aw_step_progress_current_item_accent_color;

            &::after {
                border-left-color: $aw_step_progress_current_item_accent_color;
            }

            &~li {
                color: $aw_step_progress_current_item_child_item_text_color;
            }
        }

        //styling for clickable links overriding previous shade of blue
        a.aw-progress-bar-text,
        .aw-progress-bar-completed {
            color: $aw_step_progress_current_item_accent_color;
            outline: 0;
        }
    }
}

// special-case since the subLocation is breaking the background pattern above...
.aw-gateway-locationPanel {

    .aw-layout-subLocation,
    .aw-layout-infoCommandbar {
        background-color: transparent;

        // scrollbars on gateway
        ::-webkit-scrollbar-track {
            background-color: $brand_scroll_track_base;
        }

        ::-webkit-scrollbar-thumb {
            background-color: $brand_scroll_thumb_base; //25%
            border-color: transparent;

            &:hover {
                background-color: $brand_scroll_thumb_hover_base; //50%
            }
        }
    }

    .aw-tile-tileContainer:focus {
        outline-color: $brand_base_focus_color;
    }
}

@media (max-width: 28.75em) {

    /* Adding an alpha for global navigation panel in narrow mode */
    .global-navigation {
        .aw-sidenav-layoutContainer.aw-sidenav-standard {
            background-color: rgba($brand_quaternary_content_background, 0.92);
        }
    }
}

// Skip to main link
.aw-skip-to-main:focus {
    background-color: $brand_primary_content_background;
}

.aw-skip-to-main:focus .aw-skip-to-main-text,
.aw-apply-focus-to-main {
    border-color: $brand_main_focus_color;
}

a.aw-skip-to-main:focus {
    color: $link_main;
}

.aw-border-focus-chartColor {
    color: $brand_main_focus_color;
}

/**** section 5: widgets with a single implementation... so far ****/
// these widgets are anticipated only to appear in the main or base areas so far, but not both
// parts of these widgets could be moved in to the mixins as-needed

// this array styling should get updated and move up to sect4
.aw-jswidgets-arrayEditValueCellList .aw-jswidgets-arrayValueCellListItem:hover {
    background-color: $brand_selection_background_hover;
    fill: $brand_selection_text_selected;
    color: $brand_selection_text_selected;
}

.changed {
    // still used? replace with sw-changed
    /* !important - https://gitlab.industrysoftware.automation.siemens.com/Apollo/afx/merge_requests/1241 */
    background-color: $input_pending_change !important;
    color: $input_pending_change_text !important;
}

// command decorator
.aw-commands-cellDecorator div {
    background-color: $command_bar_command_decorator_background_color;
    color: $command_bar_command_decorator_color;
}

// Buttons and Chips, they have the same style
.sw-button,
.aw-widgets-chip {
    &:not(.disabled) {
        &:not(.aw-widgets-staticChip) {
            box-shadow: $default_main_button_drop_shadow;

            &:hover,
            &:focus {
                box-shadow: $default_main_button_hover_shadow;
            }
        }

        &.accent-midContrast,
        &.base-button.aw-widgets-chipSelected {
            background-color: $mid_contrast_button_background;
            border-color: $mid_contrast_button_border;
            color: $mid_contrast_button_text;
            fill: $mid_contrast_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $mid_contrast_button_background_hover;
                }

                &:active {
                    background-color: $mid_contrast_button_background_active;
                }
            }
        }

        &.positive {
            background-color: $positive_button_background;
            border-color: $positive_button_border;
            color: $positive_button_text;
            fill: $positive_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $positive_button_background_hover;
                }

                &:active {
                    background-color: $positive_button_background_active;
                }
            }
        }

        &.accent-positive {
            background-color: $accent_positive_button_background;
            border-color: $accent_positive_button_border;
            color: $accent_positive_button_text;
            fill: $accent_positive_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $accent_positive_button_background_hover;
                }

                &:active {
                    background-color: $accent_positive_button_background_active;
                }
            }
        }

        &.caution {
            background-color: $caution_button_background;
            border-color: $caution_button_border;
            color: $caution_button_text;
            fill: $caution_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $caution_button_background_hover;
                }

                &:active {
                    background-color: $caution_button_background_active;
                }
            }
        }

        &.accent-caution {
            background-color: $accent_caution_button_background;
            border-color: $accent_caution_button_border;
            color: $accent_caution_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $accent_caution_button_background_hover;
                }

                &:active {
                    background-color: $accent_caution_button_background_active;
                }
            }
        }

        &.negative {
            background-color: $negative_button_background;
            border-color: $negative_button_border;
            color: $negative_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $negative_button_background_hover;
                }

                &:active {
                    background-color: $negative_button_background_active;
                }
            }
        }

        &.accent-negative {
            background-color: $accent_negative_button_background;
            border-color: $accent_negative_button_border;
            color: $accent_negative_button_text;
            fill: $accent_negative_button_text;

            &:not(.aw-widgets-staticChip) {

                &:hover,
                &:focus {
                    background-color: $accent_negative_button_background_hover;
                }

                &:active {
                    background-color: $accent_negative_button_background_active;
                }
            }
        }
    }
}

// checkbox-list separator after selected and preferred vals
.sw-lov-contentContainer {

    .afx-selected-vals .aw-widgets-cellListItem:last-child,
    .sw-lov-lastMru,
    .aw-widgets-cellListItem.aw-widgets-cellListItemSelected:not(.aw-widgets-dropframe).sw-lov-lastMru {
        //border-bottom-color: green;
        border-bottom-color: $aw_separator_border_color;
    }
}

.checkbox-negated.sw-checkbox-val>input:checked+.sw-checkbox-pseudo:before {
    border-color: $Status_Red_Base;
    background-color: $Status_Red_Base;
}

.sw-component:not(.sw-readOnly):hover {
    .checkbox-negated {
        .sw-checkbox-pseudo {
            &::before {
                border-color: $Status_Red_Base;
            }
        }
    }
}

// DRAG AND DROP CHANGES
.aw-widgets-droppable.aw-widgets-dropframe,
.ui-grid-row.aw-widgets-droparea,
.aw-widgets-droparea,
.aw-widgets-dropframe,
.aw-widgets-dropframe.aw-theme-dropframe {
    border-color: $dragdrop_container_border_color;
    background-color: $dragdrop_container_background_color;
}

// DRAG AND DROP CHANGES
.ui-grid-row.aw-theme-dropframe.aw-widgets-dropframe,
.aw-splm-table .ui-grid-row.aw-theme-dropframe.aw-widgets-dropframe {
    border-color: $dragdrop_container_border_color;
    background-color: $dragdrop_container_background_color;
}

// DRAG AND DROP CHANGES
.ui-grid-cell.aw-theme-dropframe.aw-widgets-dropframe,
.aw-splm-table .ui-grid-cell.aw-theme-dropframe.aw-widgets-dropframe {
    background-color: $dragdrop_container_background_color;
}

/* PLTable Specific start */
.aw-splm-tableHeaderRow,
.aw-splm-tableMenuButton {
    background-color: $table_header_background_color;
}

.aw-splm-tableScrolled .aw-splm-tableHeaderRow {
    box-shadow: $drop_shadow_table_scroll;
}

.aw-jswidgets-grid .aw-splm-tablePinnedContainerLeft .aw-splm-tableHeaderCell:last-child .aw-splm-tableHeaderCellSplitter {
    border-right-color: $drop_shadow_table_scroll_color;
}

.aw-jswidgets-grid .aw-splm-tableScrollContents {
    // probably don't need to set background on each row below...
    background-color: $table_content_background_color;
}

.aw-jswidgets-grid {

    .aw-splm-tablePinnedContainer,
    .aw-splm-tableScrollContainer {
        .ui-grid-row {
            /*
            https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7119159/
            https://stackoverflow.com/questions/32313551/border-bottom-bug-in-microsoft-edge
            */
            background-color: $table_content_background_color;
            border-color: $table_border_color;
            margin-bottom: -1px;
            border-bottom-width: 2px;
        }

        .ui-grid-row:last-child {
            /*
                https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7119159/
                https://stackoverflow.com/questions/32313551/border-bottom-bug-in-microsoft-edge
            */
            margin-bottom: 0;
            border-bottom-width: 1px;
        }
    }
}

.aw-splm-table .aw-splm-tableContainer.aw-splm-tableHeaderSelectionEnabled .aw-splm-tableScrollContainer .ui-grid-row.aw-state-selected,
.aw-splm-table .aw-splm-tableContainer.aw-splm-tableHeaderSelectionEnabled .aw-splm-tableScrollContainer .ui-grid-row.aw-state-selected .ui-grid-cell,
.aw-splm-table .aw-splm-tableHeaderCellSelected .aw-splm-tableHeaderCellSortIcon {
    background: inherit;
    background-color: inherit;
}

.aw-jswidgets-grid .ui-grid-row.ui-grid-row-selected,
.aw-splm-table .aw-splm-tableHeaderRow .aw-splm-tableHeaderCell.aw-splm-tableHeaderCellSelected {
    background-color: $brand_selection_background_selected;
    color: $brand_selection_text_selected;
}

.aw-jswidgets-grid .ui-grid-row.ui-grid-row-selected.ui-grid-row-inactivated,
.aw-splm-table .aw-splm-tableContainer .ui-grid-row .ui-grid-columnSelected.ui-grid-cell-selected.ui-grid-row-inactivated,
.aw-splm-table .aw-splm-tableHeaderRow .aw-splm-tableHeaderCell.aw-splm-tableHeaderCellSelectedInactive {
    background-color: $PL_Black_23;
    color: $brand_selection_text_selected;
}

// extraneous rule atm: applies hover style on hovered element
// complication is that the visual row can have 2 row elements
.aw-jswidgets-grid .ui-grid-row:hover,
// .aw-splm-tableHoverRow is applied to both row siblings
.aw-splm-table .ui-grid-row.aw-splm-tableHoverRow {
    background-color: $cell_list_item_hover;
    color: $brand_primary_content_text;

    &.ui-grid-row-selected {
        background-color: $brand_selection_background_selected_hover;
        color: $brand_selection_text_selected_hover;
    }
}

// fix hover styles for change/old-text styles
.aw-jswidgets-grid .ui-grid-row {

    &.ui-grid-row-selected,
    &.aw-splm-tableHoverRow,
    &.ui-grid-row-selected .aw-splm-tableHoverRow {
        &.aw-jswidgets-change {
            color: $brand_selection_text_selected_changed;

            >.ui-grid-cell,
            >.ui-grid-cell .aw-widgets-propertyNonEditValue {
                color: $brand_selection_text_selected_changed;
            }
        }

        &.aw-jswidgets-oldText {
            color: $brand_selection_text_selected_oldText;

            >.ui-grid-cell,
            >.ui-grid-cell .aw-widgets-propertyNonEditValue {
                color: $brand_selection_text_selected_oldText;
            }
        }
    }
}

.aw-jswidgets-change {
    color: $PL_Green_25;
}

.aw-jswidgets-oldText {
    color: $brand_selection_text_selected_oldText;
}

.aw-splm-tableHeaderCell,
.aw-splm-tableHeaderCellSortIcon {
    background-color: $table_header_background_color;
    color: $table_header_text_color;
}

.aw-splm-tableHeaderCell:hover {
    color: $aw_gray_12;
}

.aw-jswidgets-grid .ui-grid-cell.dragCell,
.aw-jswidgets-grid .dragCell,
.aw-jswidgets-grid .ui-grid-row:last-child .ui-grid-cell.dragCellBottom {
    border-color: $aw_gray_1;
    /* Equivalent to #000000; */
}

.aw-jswidgets-grid .aw-table-scrolled .ui-grid-header {
    box-shadow: $drop_shadow_table_scroll;
}

.aw-splm-tableMenuContainer {
    border-color: $aw_gray_20;
    /* Equivalent to #bebebe */

    .grid-menu-command .aw-layout-popup,
    .aw-layout-popupOverlay,
    aw-popup-command-bar {
        position: static;
    }

    .aw-widgets-cellListItem {
        border: none;
    }
}

.aw-splm-tableMenuPopup {
    .aw-widgets-cellListItem {
        color: $aw_popup_font_color;

        &.aw-widgets-disabledMenuItem {
            color: $PL_Black_18;
            pointer-events: none;
        }
    }

    border-color: $popup_border_color;
    box-shadow: $popup_drop_shadow;
    background-color: $aw_popup_background;
    color: $aw_popup_font_color;

    hr {
        border-color: $aw_separator_border_color;
    }
}

.aw-splm-table .ui-grid-cell .aw-jswidgets-draghandle {
    background-color: $PL_Black_18;
}

/*  Pointer for grid/table menu */
.aw-splm-tableMenuPointer {
    &:before {
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-bottom: 10px solid $popup_border_color;
    }

    &:after {
        border-left: 9px solid transparent;
        border-right: 9px solid transparent;
        border-bottom: 9px solid $aw_popup_background;
    }
}

/* Pointers for column menus */
.aw-splm-tableColumnMenuPointerBeforeLeft {
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-right: 10px solid $popup_border_color;
}

.aw-splm-tableColumnMenuPointerAfterLeft {
    border-top: 9px solid transparent;
    border-bottom: 9px solid transparent;
    border-right: 9px solid $aw_popup_background;
}

.aw-splm-tableColumnMenuPointerBeforeRight {
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-left: 10px solid $popup_border_color;
}

.aw-splm-tableColumnMenuPointerAfterRight {
    border-top: 9px solid transparent;
    border-bottom: 9px solid transparent;
    border-left: 9px solid $aw_popup_background;
}

.aw-splm-tableMenuPointerBack {
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-right: 10px solid $popup_border_color;
}

.aw-splm-tableMenuPointerBack.aw-splm-tableMenuPointerBackLeft {
    border-right: 10px solid $popup_border_color;
    border-left: none;
}

.aw-splm-tableMenuPointerBack.aw-splm-tableMenuPointerBackRight {
    border-left: 10px solid $popup_border_color;
    border-right: none;
}

.aw-splm-tableMenuPointerFront {
    border-top: 9px solid transparent;
    border-bottom: 9px solid transparent;
    border-left: 9px solid $aw_popup_background;
}

.aw-splm-tableMenuPointerFront.aw-splm-tableMenuPointerFrontLeft {
    border-right: 9px solid $aw_popup_background;
    border-left: none;
}

.aw-splm-tableMenuPointerFront.aw-splm-tableMenuPointerFrontRight {
    border-left: 9px solid $aw_popup_background;
    border-right: none;
}

.aw-splm-tableMenuPopup .aw-widgets-cellListItem:hover {
    background-color: $brand_selection_background_hover;
    fill: $brand_selection_background_hover;
}

.aw-splm-tableMenuPopup .facet-filter .aw-widgets-cellListItem:hover {
    background-color: unset;
    fill: unset;
}

.aw-splm-table ::-webkit-scrollbar-track {
    // special-case to avoid table ghosting on scroll...
    // #f5 is not a standard color, but is pl_black on white at 4% opacity
    // using standard 4% here results in ghosting though....
    background-color: #f5f5f5;
}

.aw-splm-tableMenu>.aw-widgets-cellListItem {
    border-bottom: none;
}

.aw-splm-tableMenuButton:hover {
    background-color: $brand_selection_background_hover;
}

.aw-splm-tableMenuItemSelected {
    background-color: $brand_selection_background_selected;
}

a.aw-splm-tablePropertyValueLinksDisabled,
a.aw-splm-tablePropertyValueLinksDisabled:hover {
    color: $main_text_color;
}

/* This style will override the border-color for the line between pinned & scroll containers. */
.aw-splm-tablePinnedContainerDropFrame.aw-widgets-dropframe.aw-theme-dropframe.ui-grid-row {
    border-right-color: $table_border_color;
}

/* This style will override the border-color for the line between pinned & scroll containers. */
.aw-splm-tableScrollContainerDropFrame.aw-widgets-dropframe.aw-theme-dropframe.ui-grid-row {
    border-left-color: $table_border_color;
}

aw-splm-table .aw-splm-table .ui-grid-row .ui-grid-cell:hover {
    border-color: $PL_Black_8_Shade_1;
}

aw-splm-table .aw-splm-table .aw-splm-tableCanvas .ui-grid-row .aw-splm-tableCellSelected {
    border-color: $PL_Black_16;
}

aw-splm-table .aw-splm-table .aw-splm-tableContainer .aw-splm-tableCanvas .ui-grid-row .aw-splm-tableCellSelectedEditable {
    border-color: $Siemens_Blue_9;
}

.keyboard .aw-splm-table {

    .aw-splm-tableHeaderCell,
    .aw-splm-tableMenuButton,
    .ui-grid-tree-base-row-header-buttons,
    .aw-splm-tablePropertyValueLinks {
        &:focus {
            border-color: $brand_main_focus_color;
        }
    }

    .aw-splm-tableContainer {
        .aw-splm-tableRow {
            .ui-grid-cell:not(.aw-splm-tableCellSelected) {
                &:focus {
                    border-color: $brand_main_focus_color;
                }
            }
        }

        &:focus {
            outline-color: $brand_main_focus_color;
        }
    }
}

.aw-splm-tableMenuPopup {
    .aw-widgets-cellListItem {
        &:focus {
            border-color: $brand_main_focus_color;
        }
    }
}

.arrange_submitButton:focus {
    outline-color: $brand_main_focus_color;
}

.aw-splm-tableCellText:empty {
    background-color: rgba($PL_Black, 0.1);
}

/* PLTable Specific end */

// DRAG AND DROP CHANGES
.aw-noeachrow-highlight-dropframe {
    background-color: $dragdrop_container_background_color !important;
}

// file-upload
.aw-file-upload-container {
    .aw-file-upload-fileLabel {
        background-color: $file_upload_button_background_color;
    }

    &:hover {
        .aw-file-upload-fileName {
            box-shadow: $drop_shadow_file_upload_input_active;
            border-color: $file_upload_input_border_color;
        }

        .aw-file-upload-fileLabel {
            background-color: $file_upload_button_hover_background_color;
        }
    }

    &:active {
        .aw-file-upload-fileLabel {
            background-color: $file_upload_button_active_background_color;
        }
    }

    &.aw-file-upload-initial {
        border-color: $file_upload_input_color;
    }
}

.aw-file-upload-fileName {
    box-shadow: $drop_shadow_file_upload_input;
    background-color: $file_upload_input_background_color;
    border-color: $file_upload_file_name_border_color;
    color: $file_upload_input_color;
}

.aw-file-upload-fileLabel {
    border-color: $file_upload_button_border_color;
    background-color: $file_upload_label_background_color;
    color: $file_upload_button_text_color;
}

.file-upload-selected-file {
    color: $file_upload_selected_file_text_color;
}

//multi-file-upload
.aw-upload {
    border-color: $multi_file_upload_border_color;
}

.aw-upload-drop-container {
    &.aw-widgets-dropframe.aw-theme-dropframe {
        .aw-commandIcon.aw-commands-svg {
            svg {
                fill: $multi_file_upload_drop_label_active_color
            }
        }
    }
}

// aw-avatar
.sw-avatar-icon {
    background-color: $avatar_background_color;
}

.sw-avatar-name {
    color: $avatar_text_color;
}

.sw-avatar-normalIcon .aw-theme-iconOutline {
    fill: $avatar_icon_fill;
}

.sw-avatar-layout {
    background-color: $avatar_layout_background_color;
    border-color: $avatar_layout_border_color;
    box-shadow: $avatar_layout_drop_shadow;
    color: $avatar_text_color;
}

// aw-sidenav box-shadow
.aw-sidenav-push.aw-sidenav-leftBackground {
    box-shadow: $drop_shadow_for_right_panel;
}

.aw-sidenav-push.aw-sidenav-rightBackground {
    box-shadow: $drop_shadow_for_left_panel;
}

.aw-sidenav-float.aw-sidenav-leftBackground {
    box-shadow: $left_shadow_2x_large;
}

.aw-sidenav-float.aw-sidenav-rightBackground {
    box-shadow: $right_shadow_2x_large;
}

.aw-sidenav-float {
    &.aw-sidenav-rightBackground {
        box-shadow: $global_navigation_panel_float_outer_shadow, $global_navigation_panel_inner_shadow;
    }
}

.aw-sidenav-push {
    &.aw-sidenav-rightBackground {
        box-shadow: $global_navigation_panel_pushed_outer_shadow, $global_navigation_panel_inner_shadow;
    }
}

.aw-sidenav-float,
.aw-sidenav-push {
    &.aw-sidenav-rightBackground {
        .aw-layout-declarativePanelRoot {
            box-shadow: $global_navigation_panel_inner_shadow;
        }
    }
}

/* aw sidenav with pin (directive) */
.unpinned {
    .sw-button-icon {
        svg path {
            fill: $panel_unpinned_icon_color;
        }
    }
}

.pinned {
    box-shadow: none;

    .sw-button-icon {
        svg path {
            fill: $panel_pinned_icon_color;
        }
    }
}

.aw-sidenav-resizer {
    .sw-button-iconContainer {

        &:hover,
        &:active {
            background-color: transparent;

        }

    }
}

// Global Navigation Panel aw-header-context
.aw-user-settings-anchor {
    .aw-user-settings-anchor-label {
        color: $link_base;
    }

    .aw-base-iconButton[command="anchor.dockUserSettingsIconButton"] {
        .aw-theme-iconOutline {
            fill: $global_navigation_panel_user_settings_dock_icon_color;
        }
    }
}

/* aw separator */
// probably don't need a seperate selector for vertical - should color all separators the same
// and should be based on background class... (section 2)
.aw-vertical-separator {
    color: $aw-vertical-separator-color;
    opacity: 0.45;
}

.aw-theme-separator {
    color: $aw_separator_border_color;
}

.sw-toggle-val {
    .slider {
        background-color: $brand_mid_contrast_button_background_alt;
    }

    .slider:before {
        background-color: $brand_accent_positive_button_text;
    }

    input:checked+.slider {
        background-color: $brand_secondary_background;
    }

    input:disabled+.slider {
        cursor: default;
        background-color: rgba($brand_secondary_background, 0.38);
    }
}

/* AW-CHECKBOX Theming */
.sw-checkbox-val {
    >input {
        background-color: rgba(#006487, 0.6);
    }

    >.sw-checkbox-pseudo::before {
        border-color: #464646;
    }

    >.sw-checkbox-pseudo::after {
        border-color: transparent;
    }

    >input:active {
        transform: scale(0);
        transition: transform 0s, opacity 0s;
    }

    >input:disabled+.sw-checkbox-pseudo {
        cursor: initial;
    }
}

.sw-property,
.sw-checkbox-lov {
    &:not(.sw-readOnly):hover {
        .sw-checkbox-pseudo {
            &::before {
                border-color: #006487;
            }
        }
    }
}

/* Checked, Indeterminate */
.sw-checkbox-val>input:checked,
.sw-checkbox-val>input:indeterminate {
    background-color: #006487;
}

.sw-checkbox-val>input:checked+.sw-checkbox-pseudo::before,
.sw-checkbox-val>input:indeterminate+.sw-checkbox-pseudo::before {
    border-color: #006487;
    background-color: #006487;
}

.sw-checkbox-val>input:checked+.sw-checkbox-pseudo::after,
.sw-checkbox-val>input:indeterminate+.sw-checkbox-pseudo::after {
    border-color: white;
}

.sw-checkbox-val>input:active+.sw-checkbox-pseudo::before {
    border-color: #006487;
}


.sw-checkbox-val>input:checked:active+.sw-checkbox-pseudo::before {
    border-color: transparent;
    background-color: rgba(#006487, 0.6);
}

/* Disabled */
.sw-checkbox-val>input:disabled {
    opacity: 0;
}

.sw-checkbox-val>input:disabled+.sw-checkbox-pseudo {
    color: rgba($brand_disabled_text, 0.57);
    opacity: 1;
}

.sw-checkbox-val>input:disabled+.sw-checkbox-pseudo::before {
     border-color: rgba($brand_disabled_border, 0.57);
     background-color: rgba($brand_disabled_base_background_color, 0.07);
     opacity: 1;
}

.sw-checkbox-val>input:checked:disabled+.sw-checkbox-pseudo::before,
.sw-checkbox-val>input:indeterminate:disabled+.sw-checkbox-pseudo::before {
    border-color: transparent;
    background-color: currentColor;
}

/**** section 6: special-cases ****/
// disabled links
.aw-link {
    &.disabled {
        color: $link_disabled;
        // override default opacity which is too fade
        opacity: 1 !important;

        a,
        .aw-theme-iconOutline {
            color: $link_disabled;
            fill: $link_disabled;
        }
    }
}

.aw-commands-commandIconButton,
.aw-commands-commandToolbarIconButton,
.aw-theme-iconButton,
.aw-base-iconButton,
.sw-button-iconContainer {
    background-color: transparent;
}

// panel-section has 2 color impls, but shadow has 1 for now
// could move drop-shadow out of theme really
.aw-toolbar-layout.aw-toolbar-horizontal,
.aw-advanced-bar-horizontal {
    box-shadow: $drop_shadow_small;
    border-color: $brand_secondary_border;

    // don't show box-shadow on prop commands
    .sw-property &,
    .sw-sectionTitleContainer & {
        box-shadow: none;
        border: none;
    }
    //don't show box-shadow and border on task bar
    &.afx-accent-background {
        box-shadow: none;
        border: none;
    }
}

// vertical toolbar has left border/shadow
.aw-advanced-toolbar-vertical,
.aw-toolbar-layout.aw-toolbar-vertical {
    border-color: $brand_secondary_border;
    box-shadow: $brand_secondary_border -1px 0 2px;
}

// override copied links to match standard link color
a.aw-base-osClipboardHyperlink {
    color: $brand_primary_link
}

.aw-theme-iconLogoColor {
    fill: $aw_logo_color;
}

.aw-layout-infoCommandbar {
    background-color: $aw_gray_25;

    // negative advanced-bar is a special-case... should be re-designed
    .aw-advanced-bar & {
        background-color: unset;
    }
}

// required indicator has 1 color set
.sw-property.sw-required {
    .sw-property-name:before {
        color: $Siemens_Blue_7;
    }

    &.sw-errorFlag {
        .sw-property-name:before {
            color: $Siemens_Status_Red;
        }
    }
}

.aw-session-loginViewPanel {
    .sw-property.sw-required {

        // error flag icon
        .sw-property-name {
            &::before {
                color: $base_text_color;
            }
        }

        &.sw-errorFlag {
            .sw-property-name {
                &::before {
                    color: $Siemens_Status_Red;
                }
            }
        }
    }
}

.aw-layout-breadCrumbs {
    border-bottom-color: $content_background_color;
}

.aw-layout-breadCrumbContainer {
    .sw-column {

        .aw-widgets-crumbLink {
            background-color: $breadcrumb_container_background;
        }
    }
}

.aw-widgets-selectedCrumb {
    background-color: transparent;

    &:focus {
        outline-color: transparent;
    }
}

.aw-widgets-crumbLink {
    color: $breadcrumb_link;
    background-color: $breadcrumb_container_background;

    &:hover {
        color: $breadcrumb_link_hover;
    }
}

.aw-theme-adminLocationsTile {
    background-color: $aw_gateway_adminLocations_background;
    color: $aw_gateway_adminLocations_foreground;
    fill: $aw_gateway_adminLocations_foreground;
}

.aw-theme-pinnedObjectsTile {
    background-color: $aw_gateway_pinnedObjects_background;
    color: $aw_gateway_pinnedObjects_foreground;
    fill: $aw_gateway_pinnedObjects_foreground;
}

.aw-theme-locationsTile {
    background-color: $aw_gateway_locations_background;
    fill: $aw_gateway_locations_foreground;
    color: $aw_gateway_locations_foreground;
}

.aw-theme-commandsActionsTile {
    background-color: $aw_gateway_commandsActions_background;
    fill: $aw_gateway_commandsActions_foreground;
    color: $aw_gateway_commandsActions_foreground;
}

.aw-theme-savedSearchesTile {
    background-color: $aw_gateway_saveSearches_background;
    color: $aw_gateway_saveSearches_foreground;
    fill: $aw_gateway_saveSearches_foreground;
}

.aw-tile-tileCanvasPanel svg .aw-theme-iconHomeOutline,
.aw-tile-group .aw-tile-tileContainer svg .aw-theme-iconHomeOutline,
.aw-tile-tileContainer svg .aw-theme-iconHomeOutline {
    fill: inherit;
}

.aw-tile-tileCanvasPanel .aw-tile-tileEditButton svg .aw-theme-iconHomeOutline {
    fill: $aw_gateway_tool_foreground;
}

// revistMe: Frank - popup needs to be themed
.sw-popup .sw-popup-screenMask {
    background-color: rgba($PL_Black, .75);
}

// theme related
.sw-popup-layout {
    box-shadow: $drop_shadow_2x_large;
    background-color: $popup_background_color;
    border-color: $popup_border_color;

    // popup arrow related styles
    .sw-popup-arrow {
        &::before {
            border-color: $popup_border_color;
        }

        &::after {
            border-color: $popup_background_color;
        }
    }
}

// reset color for these borders
@mixin arrow-border-color($dir1, $dir2, $dir3) {
    .sw-popup-arrow {

        &::before,
        &::after {
            border-#{$dir1}-color: transparent;
            border-#{$dir2}-color: transparent;
            border-#{$dir3}-color: transparent;
        }
    }
}

.sw-popup-layout {
    &[x-placement^="bottom"] {
        @include arrow-border-color(left, right, top);
    }

    &[x-placement^="top"] {
        @include arrow-border-color(left, right, bottom);
    }

    &[x-placement^="right"] {
        @include arrow-border-color(left, top, bottom);
    }

    &[x-placement^="left"] {
        @include arrow-border-color(right, top, bottom);
    }
}

// revisitme: Ulrey/Shaishav/CF2 - borrowing the CSS from _ui-theme.scss
// these seem repetitive and duplicate some of what is above...
.aw-jswidgets-grid {
    border-color: $table_border_color;
}

.aw-jswidgets-grid .ui-grid-row {
    border-color: $table_border_color;
}

.aw-jswidgets-grid .ui-grid-pinned-container.ui-grid-pinned-container-left .ui-grid-cell:last-child,
.aw-splm-tablePinnedRow.ui-grid-row .ui-grid-cell:last-child {
    border-right-color: $table_column_freeze_border_color;
}

.aw-jswidgets-grid .aw-splm-tableHeaderCell .aw-splm-tableHeaderCellSplitter {
    border-color: $drop_shadow_table_scroll_color;
}

/******AwSlider styling********/
.rc-slider-handle,
.rc-slider-track {
    background-color: $slider_handle_main_background_color;
}

.rc-slider-rail {
    background-color: $slider_main_background_color;
}

.sw-slider-decrementButton,
.sw-slider-incrementButton {
    background-color: $slider_button_background_color;
    color: $slider_button_text;
    border-color: $slider_button_border;
}

/********************************/

.sw-warninglabel {
    color: $aw_warning;
}

.aw-popup-close {
    color: $aw_gray_9;
}

.aw-popup-close:hover,
.aw-popup-close:focus {
    color: $aw_gray_1;
}

.aw-ui-showHighlight .aw-widgets-showCellHighlighter {
    color: $aw_highlighted_words_color;
    background-color: $aw_highlighted_background_color;
}

.aw-state-selected,
.dataGridWidget .dataGridSelectedRow,
.dataGridWidget .dataGridKeyboardSelectedRow,
.aw-jswidgets-nestingListItemDisplay.aw-state-selected.aw-state-attention,
.aw-jswidgets-compareContainer .aw-jswidgets-selectedObject,
.aw-jswidgets-compareContainer div.ui-grid-cell-focus.aw-jswidgets-selectedObject {
    background-color: $brand_selection_background_selected;
    fill: $aw_secondary_text;
    color: $brand_selection_text_selected;

    &:hover {
        background-color: $brand_selection_background_selected_hover;
    }
}

/* start chart colors */
.aw-charts-chartColor1 {
    background-color: $aw-charts-chartColor1;
}

.aw-charts-chartColor2 {
    background-color: $aw-charts-chartColor2;
}

.aw-charts-chartColor3 {
    background-color: $aw-charts-chartColor3;
}

.aw-charts-chartColor4 {
    background-color: $aw-charts-chartColor4;
}

.aw-charts-chartColor5 {
    background-color: $aw-charts-chartColor5;
}

.aw-charts-chartColor6 {
    background-color: $aw-charts-chartColor6;
}

.aw-charts-chartColor7 {
    background-color: $aw-charts-chartColor7;
}

.aw-charts-chartColor8 {
    background-color: $aw-charts-chartColor8;
}

.aw-charts-chartColor9 {
    background-color: $aw-charts-chartColor9;
}

.aw-charts-chartColor10 {
    background-color: $aw-charts-chartColor10;
}

.aw-charts-chartTitleColor {
    background-color: $main_text_color;
}

/* end chart colors */

/* start border colors */

.aw-border-chartColor1 {
    border-color: $aw-charts-chartColor1;
}

.aw-border-chartColor2 {
    border-color: $aw-charts-chartColor2;
}

.aw-border-chartColor3 {
    border-color: $aw-charts-chartColor3;
}

.aw-border-chartColor4 {
    border-color: $aw-charts-chartColor4;
}

.aw-border-chartColor5 {
    border-color: $aw-charts-chartColor5;
}

.aw-border-chartColor6 {
    border-color: $aw-charts-chartColor6;
}

.aw-border-chartColor7 {
    border-color: $aw-charts-chartColor7;
}

.aw-border-chartColor8 {
    border-color: $aw-charts-chartColor8;
}

.aw-border-chartColor9 {
    border-color: $aw-charts-chartColor9;
}

/* end border colors*/

/* override highCharts inline colors - copied from aw-widgets-propertyValue */

.highcharts-container .highcharts-stack-labels text {
    color: inherit !important;
    fill: inherit !important;
}

/* override highCharts inline colors - copied from aw-widgets-propertyLabel */

.highcharts-container .highcharts-axis-labels text {
    color: $aw_gray_10 !important;
    fill: $aw_gray_10 !important;
}

/* end chart colors*/


/**override graph colors**/
.aw-graph-container .aw-widgets-cellListItemNode {
    /* svg-specific, as the node could not be transparent, otherwise all child nodes will have the parent node fill color
       when the parent hovered/selected */
    fill: $content_background_color;
}

.aw-graph-labelBackground {
    fill: $content_background_color;
}

.aw-graph-textEditor {
    background-color: $content_background_color;
}

.aw-graph-container {
    .aw-widgets-cellListCellItemType {
        color: $aw_secondary_text;
        fill: $aw_secondary_text;
    }

    .aw-widgets-cellListItem,
    .aw-widgets-cellListCellTitle,
    .aw-widgets-propertyLabel {
        color: $main_text_color;
        fill: $main_text_color;
    }
}

.aw-graph-legendItemMarker:hover {
    border-color: $aw_graph_legendItemMarker_hover;
}

.aw-graph-legendItemMarker {
    border-color: transparent;
}

.sw-errorText {
    color: $brand_error_color;
    fill: $brand_error_color;
}

text {
    fill: $main_text_color;

    &.aw-theme-errorText {
        fill: $brand_status_error;
    }
}

/**end graph colors**/

/** Markup colors **/
.aw-grid-markup-added {

    a,
    * {
        color: $markup_added_color;
    }
}

.aw-grid-markup-deleted {

    a,
    * {
        text-decoration-color: $markup_deleted_color;
    }
}

.sw-primary-workarea .aw-jswidgets-loading {
    background-image:
        linear-gradient(to right, rgba($brand_secondary_content_background, 0), rgba($brand_secondary_content_background, 0.5) 50%, rgba($brand_secondary_content_background, 0) 100%),
        linear-gradient(rgba($PL_Black, 0.1) 48px, transparent 0),
        linear-gradient(rgba($PL_Black, 0.1) 12px, transparent 0),
        linear-gradient(rgba($PL_Black, 0.1) 12px, transparent 0),
        linear-gradient(rgba($PL_Black, 0.1) 12px, transparent 0);
}

.aw-tab-highLightedCloseButton {
    .aw-theme-iconOutline {
        fill: $Siemens_Blue_9;
    }
}

//visual indicator fill
.sw-visual-indicator {
    fill: $brand_selection_text_selected; /* background fill */
}
