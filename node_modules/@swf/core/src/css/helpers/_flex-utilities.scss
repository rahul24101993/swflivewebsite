// stylelint-disable declaration-no-important

/*
    ALIGNMENT UTILITY CLASSES
*/

$justify-options: (left: flex-start,
    top: flex-start,
    flex-start: flex-start, //required for backward compatibility
    center: center,
    right: flex-end,
    flex-end: flex-end, //required for backward compatibility
    bottom: flex-end,
    justified: space-between,
    space-between: space-between,
    space-around: space-around,
    space-evenly: space-evenly);

@mixin layout-justify() {

    @each $option,
    $value in $justify-options {
        .justify-#{$option} {
            justify-content: $value !important;
        }
    }
}

$align-options: (left: flex-start,
    top: flex-start,
    flex-start: flex-start, //required for backward compatibility, top or left should be used in new way
    center: center,
    right: flex-end,
    bottom: flex-end,
    flex-end: flex-end, //required for backward compatibility
    stretch: stretch);

@mixin layout-align() {

    @each $option,
    $value in $align-options {
        .align-#{$option} {
            align-items: $value !important;
        }
    }
}

$align-self-options: (left: flex-start,
    top: flex-start,
    center: center,
    right: flex-end,
    bottom: flex-end,
    stretch: stretch);

@mixin layout-align-self() {

    @each $option,
    $value in $align-self-options {
        .align-self-#{$option} {
            align-self: $value !important;
        }
    }
}

/*
    DIRECTION OF FLEX
    Alignment along the flex axis is done using classes that are applied to flex parents. Left alignment is the default,
    but you can use one of these classes to change this.
*/

@include layout-justify();
/*
    VERTICAL DIRECTION OF FLEX
    Alignment along the perpendicular/cross axis can be applied to a flex parent or child (using align-self- prefix), which will align only that element.
    Stretch alignment is the default.
*/

@include layout-align();
@include layout-align-self();

/*
    FLEX CHILDREN UTILITY CLASSES
    default is flex: initial, shorthand for the default value: flex: 0 1 auto
*/
.flex-auto {
    flex: auto; // equivalent to flex: 1 1 auto
}

.flex-shrink {
    flex: none; // equivalent to flex: 0 0 auto
}

.flex-grow {
    flex: 1 0 auto;
}

/*
    FLEX WRAPPING UTILITY CLASSES
    flex-wrap: nowrap is the default
*/
.flex-wrap {
    flex-wrap: wrap;

    &.sw-row,
    &.sw-column {
        overflow: auto;
    }
}

.flex-wrap-reverse {
    flex-wrap: wrap-reverse; // flex items wrap onto multiple lines from bottom to top
}
