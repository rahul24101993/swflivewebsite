// Copyright (c) 2020 Siemens
/* eslint-env es6 */
/* eslint-disable no-undef */
import AwPromiseService from 'js/awPromiseService';

/**
 * This module provides abstraction for core setTimeout() JS services with additional digestCycle trigger supported by AngularJS.
 *
 * @module js/awTimeoutService
 */

export const instance = ( func, timeout = 0, invokeApply = true ) => {
    if( typeof func !== 'function' ) {
        invokeApply = timeout;
        timeout = func;
        func = null;
    }
    let timeoutId;
    let promise = AwPromiseService.instance( resolve => {
        timeoutId = setTimeout( () => {
            if( func ) {
                var args = [].slice.call( arguments, 3 || 0 );
                resolve( func.apply( null, args ) );
            } else {
                resolve( null );
            }
        }, timeout );
    } );
    promise.timeoutId = timeoutId;
    return promise;
};

instance.cancel = ( promise ) => {
    if( promise && promise.timeoutId ) {
        clearTimeout( promise.timeoutId );
    }
};

var exports = {
    instance
};

export default exports;
