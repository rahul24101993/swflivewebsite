// Copyright (c) 2020 Siemens
/* eslint-env es6 */
/* eslint-disable require-jsdoc */
import _ from 'lodash';
import awDateFilterService from 'js/awDateFilterService';
import awLimitToFilterService from 'js/awLimitToFilterService';
import awNumberAndCurrencyFilterService from 'js/awNumberAndCurrencyFilterService';
import awOrderByFilterService from 'js/awOrderByFilterService';
/**
 * This module provides core angularJS service abstraction over filter service.
 *
 * @module js/awFilterService
 */

let filters = {};

/**
 * filter
 * @param {String} filterName  filtername
 * @returns {Function} filterFunc
 */
let getFilter = ( filterName ) => {
    return filters[ filterName ];
};

let register = ( filterName, filterFunction ) => {
    if( filters[ filterName ] ) {
        throw new Error( `awFilterService, filter ${filterName} is already registered!` );
    }
    filters[ filterName ] = filterFunction;
};

function dateFilter( date, format, timezone ) {
    return awDateFilterService.getFilteredDate( date, format, timezone );
}

function filterFilter( array, expression ) {
    return _.filter( array, expression );
}

function lowerCaseFilter( text ) {
    return text.toLowerCase();
}

function upperCaseFilter( text ) {
    return text.toUpperCase();
}

function filterInFiltersSearch( items, text ) {
    if( text === undefined || !text || text.length === 0 ) {
        return items;
    }
    var _text = text;
    if( _text.indexOf( '*' ) > -1 ) {
        _text = _text.replace( /[*]/gi, ' ' );
    }
    // split search text on space
    var searchTerms = _text.split( ' ' );

    // search for single terms.
    // this reduces the item list step by step
    searchTerms.forEach( function( term ) {
        if( term && term.length ) {
            items = filterFilter( items, {
                displayName: term
            } );
        }
    } );

    return _.orderBy( items, 'displayName' );
}

function limitToFilter( input, limit, begin ) {
    return awLimitToFilterService.limitToFilter( input, limit, begin );
}

function numberFilter( number, fractionSize ) {
    return awNumberAndCurrencyFilterService.numberFilter( number, fractionSize );
}

function currencyFilter( amount, currencySymbol, fractionSize ) {
    return awNumberAndCurrencyFilterService.currencyFilter( amount, currencySymbol, fractionSize );
}

function jsonFilter( object, spacing ) {
    if( typeof object === 'undefined' ) {
        return undefined;
    }
    if( typeof spacing === 'undefined' ) {
        spacing = 2;
    }
    if( typeof spacing !== 'number' ) {
        spacing = spacing ? 2 : null;
    }
    return JSON.stringify( object, ( key, value ) => {
        var val = value;
        if( value && value.window === value ) {
            val = 'WINDOW';
        } else if( value && window.document === value ) {
            val = 'DOCUMENT';
        }
        return val;
    }, spacing );
}

function orderByFilter( array, sortPredicate, reverseOrder, compareFn ) {
    return awOrderByFilterService.getOrderByFilter( array, sortPredicate, reverseOrder, compareFn );
}
register( 'date', dateFilter );
register( 'filter', filterFilter );
register( 'uppercase', upperCaseFilter );
register( 'lowercase', lowerCaseFilter );
register( 'limitTo', limitToFilter );
register( 'json', jsonFilter );
register( 'number', numberFilter );
register( 'currency', currencyFilter );
register( 'orderBy', orderByFilter );
register( 'filterInFiltersSearch', filterInFiltersSearch );

export default {
    instance: getFilter,
    register
};
