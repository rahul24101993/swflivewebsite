// Copyright (c) 2021 Siemens

/**
 * This module provides core angularJS services abstraction.
 * This is autogenerated file. If you hand modify this file, please remove this line.
 *
 * @module js/awIntervalService
 */

export const instance = ( func, timeout, count ) => {
    if( func && timeout ) {
        var intervald;
        // eslint-disable-next-line no-undef
        var args = [].slice.call( arguments, 3 );
        let promise = new Promise( resolve => {
            intervald = setInterval( () => {
                resolve( func.apply( null, args ) );
                if( !isNaN( count ) && count > 0 ) {
                    count--;
                }
                if( !isNaN( count ) && count === 0 ) {
                    clearInterval( intervald );
                }
            }, timeout );
        } );
        promise.id = intervald;
        return promise;
    }
    return undefined;
};

instance.cancel = ( promise ) => {
    clearInterval( promise.id );
};

var exports = {
    instance
};

export default exports;
