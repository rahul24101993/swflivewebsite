// Copyright (c) 2020 Siemens
/* eslint-disable indent */

import sessionMgr from 'js/sessionManager.service';
import routeChangeHandler from 'js/routeChangeHandler';
/**
 * This is the uiJs layer route/state contribution.
 *
 * @module js/ui.states
 */

var contribution = {
    // route to deal with handling checks for authentication.
    checkAuthentication: {
        view: 'Login',
        noAuth: true,
        resolve: [ {
            token: 'authenticator',
            resolveFn: () => {
                return routeChangeHandler.pickAuthenticator().then( ( authenticator ) => {
                    if( authenticator ) {
                        sessionMgr.resetPipeLine();
                        authenticator.authenticate().then( function() {
                            sessionMgr.authenticationSuccessful();
                        } );
                    }
                } );
            }
        } ]
    }
};

/**
 * @param {String} key - The key
 * @param {Promise} deferred - Promise
 * @returns {Object} contribution
 */
export default function( key, deferred ) {
    if( key === 'states' ) {
        if( deferred ) {
            deferred.resolve( contribution );
        } else {
            return contribution;
        }
    } else {
        if( deferred ) {
            deferred.resolve();
        }
    }
}
