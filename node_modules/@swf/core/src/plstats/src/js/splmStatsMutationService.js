// Copyright (c) 2020 Siemens
/* eslint-env es6 */

/**
 * @module js/splmStatsMutationService
 */
let _observer;

let _procs = [];

export const install = function() {
    // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
    // have WebKitMutationObserver but not un-prefixed MutationObserver.
    // Some browser doesn't have both.
    // https://developer.mozilla.org/docs/Web/API/MutationObserver
    const BrowserMutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
    if( BrowserMutationObserver ) {
        _observer = new BrowserMutationObserver( function() {
            _procs.forEach( proc => {
                proc.start();
                proc.done();
            } );
        } );

        const config = { attributes: true, childList: true, subtree: true, characterData: true };
        _observer.observe( document, config );
    }
};

export const uninstall = function() {
    if( _observer ) {
        _observer.disconnect();
    }
};

export const addProc = function( proc ) {
    _procs.push( proc );
};

export const removeProc = function( proc ) {
    _procs = _procs.filter( procObj => proc !== procObj );
};

export default {
    install,
    uninstall,
    addProc,
    removeProc
};
