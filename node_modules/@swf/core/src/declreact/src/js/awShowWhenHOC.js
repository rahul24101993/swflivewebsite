// Copyright (c) 2021 Siemens
/* eslint-disable react/display-name */

/**
 * @module js/awShowWhenHOC
 */
import React from 'react';
import sanitizer from 'js/sanitizer';
import { nonMemoizedComponents } from 'js/hocCollectionConstants';

const displayName = 'AwShowWhen';

const awShowWhenHOC = ( Component ) => {
    let classes = [];
    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components
    let ActualComponent = React.forwardRef( ( { children, ...props }, ref ) => {
        let { showWhen } = props;
        let finalProps = { ...props };
        ref && ( finalProps.ref = ref );
        classes.length = 0;
        classes.push( finalProps.className || '' );
        classes.push( !showWhen ? 'aw-widget-hide' : '' );
        finalProps.className = classes.join( ' ' ).trim();
        if( typeof Component === 'object' ) {
            Component.displayName = displayName;
        }
        if( typeof Component === 'string' ) {
            return (
                <Component {...( sanitizer.sanitizeHTMLTagProps( finalProps, Component ) )}>{children}</Component>
            );
        }
        return (
            <Component {...finalProps}>{children}</Component>
        );
    } );
    if( nonMemoizedComponents.includes( Component.displayName ) ) {
        return ActualComponent;
    }
    return React.memo( ActualComponent );
};

export default awShowWhenHOC;
