// Copyright (c) 2021 Siemens
/* eslint-disable react-hooks/rules-of-hooks */
/* eslint-disable react/display-name */

/**
 * @module js/extendedTooltipHOC
 */
import AwExtendedTooltip from 'viewmodel/AwExtendedTooltipViewModel';
import React from 'react';
import sanitizer from 'js/sanitizer';

const awExtendedTooltipHOC = ( Component ) => {
    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components
    return React.forwardRef( ( { children, ...props }, ref ) => {
        // ensure valid ref to provide tooltip target
        !ref && ( ref = React.useRef( null ) );
        let { extendedTooltip, extendedTooltipContext, extendedTooltipOptions, extTooltipData } = props;
        return (
            <React.Fragment>
                { typeof  Component === 'string' ? <Component {...( sanitizer.sanitizeHTMLTagProps( props, Component ) )} ref={ref} domRef={ref}>{children}</Component> :
                    <Component {...props} ref={ref} domRef={ref}>{children}</Component> }
                <AwExtendedTooltip
                    reference = { ref }
                    extendedTooltip = { extendedTooltip }
                    extendedTooltipContext = { extendedTooltipContext }
                    extendedTooltipOptions = { extendedTooltipOptions }
                    extTooltipData = {extTooltipData}>
                </AwExtendedTooltip>
            </React.Fragment>
        );
    } );
};
export default awExtendedTooltipHOC;
