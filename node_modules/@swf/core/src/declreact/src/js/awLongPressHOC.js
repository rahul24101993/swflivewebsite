// Copyright (c) 2021 Siemens
/* eslint-disable react/display-name */

/**
 * @module js/awLongPressHOC
 */
import React, { useState } from 'react';
import sanitizer from 'js/sanitizer';

const displayName = 'AwLongPress';

const awLongPressHOC = ( Component ) => {
    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components
    return React.forwardRef( ( { children, ...props }, ref ) => {
        let finalProps = { ...props };
        const [ start, setStart ] = useState( false );
        let timerId;

        const handleButtonPress = ( event, awLongPress ) => {
            event.persist();
            timerId = setTimeout( () => {
                event.preventDefault();
                event.stopPropagation();
                setStart( true ); // start long button
                awLongPress( event );
            }, 500 );
        };
        const handleButtonRelease = ( event ) => {
            setStart( false ); // stop long press
            clearTimeout( timerId ); // clear timeout
        };
        finalProps.onMouseDown = ( event ) => handleButtonPress( event, finalProps.awLongPress );
        finalProps.onMouseUp = ( event ) => handleButtonRelease( event );
        if( typeof Component === 'object' ) {
            Component.displayName = displayName;
        }

        if( typeof Component === 'string' ) {
            return (
                <Component {...( sanitizer.sanitizeHTMLTagProps( finalProps, Component ) )}>{children}</Component>
            );
        }
        return (
            <Component {...finalProps}>{children}</Component>
        );
    } );
};

export default awLongPressHOC;
