// Copyright (c) 2021 Siemens
/* eslint-disable react-hooks/rules-of-hooks */
/* eslint-disable react/display-name */

/**
 * @module js/awDependOnHOC
 */
import React, { useEffect } from 'react';

const displayName = 'AwDependOn';

const awDependOnHOC = ( Component ) => {
    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components
    return React.forwardRef( ( { children, ...props }, ref ) => {
        let { dependOn, onChange } = props;
        let finalProps = { ...props };
        !ref && ( ref = React.useRef( null ) );
        useEffect( () => {
            if( dependOn.uiValue && onChange ) {
                // do not call the default onChange, only call custom onChange
                onChange();
            }
        }, [ dependOn.uiValue ] );

        finalProps.dependOn = dependOn;
        finalProps.onChange = onChange;
        if( typeof Component === 'object' ) {
            Component.displayName = displayName;
        }

        return (
            <Component {...finalProps}>{children}</Component>
        );
    } );
};

export default awDependOnHOC;
