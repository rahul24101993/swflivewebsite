// Copyright (c) 2021 Siemens
/* eslint-disable react/display-name */

/**
 * @module js/awClassHOC
 */
import React from 'react';
import sanitizer from 'js/sanitizer';

const displayName = 'AwClass';

const awClassHOC = ( Component ) => {
    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components
    return React.forwardRef( ( { children, ...props }, ref ) => {
        let { awClass, ...finalProps } = props;
        let classArray = [];
        if( Array.isArray( awClass ) ) {
            // Convert array of object (after expression is resolved in aw-class) to array of array
            // If there is not axpression attached then just add the class name to the array as string
            for( let i = 0; i < awClass.length; i++ ) {
                if( typeof awClass[ i ] === 'string' ) {
                    classArray.push( awClass[ i ] );
                } else {
                    let obj = awClass[ i ];
                    for( var k in obj ) {
                        classArray.push( [ k, obj[ k ] ] );
                    }
                }
            }
        } else {
            for( var j in awClass ) {
                classArray.push( [ j, awClass[ j ] ] );
            }
        }
        let classNames = [];
        for( let l = 0; l < classArray.length; l++ ) {
            if( typeof classArray[ l ] === 'string' ) {
                classNames.push( classArray[ l ] );
            } else if( classArray[ l ][ 1 ] ) {
                classNames.push( classArray[ l ][ 0 ] );
            }
        }
        let classNamesToApply = classNames.join( ' ' );
        finalProps.className = finalProps.className ? finalProps.className + ' ' + classNamesToApply : classNamesToApply;
        if( Component && typeof Component === 'object' ) {
            Component.displayName = displayName;
        }
        if( typeof Component === 'string' ) {
            return (
                <Component {...( sanitizer.sanitizeHTMLTagProps( finalProps, Component ) )} ref={ref}>{children}</Component>
            );
        }
        return (
            <Component {...finalProps} ref={ref} >{children}</Component>
        );
    } );
};

export default awClassHOC;
