// Copyright (c) 2021 Siemens
/* eslint-disable react/display-name */

/**
 * @module js/awVisibleWhenHOC
 */
import React from 'react';
import sanitizer from 'js/sanitizer';
import { nonMemoizedComponents } from 'js/hocCollectionConstants';
const displayName = 'AwVisibleWhen';

const awVisibleWhenHOC = ( Component ) => {
    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components
    let ActualComponent = React.forwardRef( ( { children, ...props }, ref ) => {
        let { visibleWhen } = props;
        let finalProps = { ...props };
        ref && ( finalProps.ref = ref );
        if( typeof Component === 'object' ) {
            Component.displayName = displayName;
        }
        if( visibleWhen ) {
            if( typeof Component === 'string' ) {
                return (
                    <Component {...( sanitizer.sanitizeHTMLTagProps( finalProps, Component ) )}>{children}</Component>
                );
            }
            return <Component {...finalProps}>{children}</Component>;
        }
        return null;
    } );
    if( nonMemoizedComponents.includes( Component.displayName ) ) {
        return ActualComponent;
    }
    return React.memo( ActualComponent );
};

export default awVisibleWhenHOC;
