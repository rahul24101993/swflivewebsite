{
    "schemaVersion": "1.0.0",
    "lifecycleHooks": {
        "onMount": "init",
        "onUpdate": [ {
                "action": "updateURL",
                "observers": [ "viewModel.searchState", "props.searchState" ]
            },
            {
                "action": "updateSearchCriteria",
                "observers": [ "props.searchCriteria" ]
            },
            {
                "action": "updateSublocationTabs",
                "observers": [ "viewModel.data.primaryActiveTabId" ]
            },
            {
                "action": "handleSearchStatePWASelectionUpdate",
                "observers": [ "viewModel.searchState.pwaSelection[0].uid", "viewModel.searchState.pwaSelection.length", "props.searchState.pwaSelection[0].uid", "props.searchState.pwaSelection.length" ]
            },
            {
                "action": "getActiveSublocationTab",
                "observers": [ "props.tabsdata.sublocationTabs" ]
            },
            {
                "action": "handleSelectionChange",
                "observers": [ "viewModel.atomicData.selectionData" ]
            }
        ]
    },
    "data": {
        "searchState": {
            "initialValues": {},
            "meta": {
                "categories": [ {
                    "filterValues": [ {
                        "selected": {
                            "field": "true",
                            "type": "BOOLEAN"
                        }
                    } ]
                } ]
            }
        },
        "primaryActiveTabId": {
            "dbValue": "",
            "type": "OBJECT"
        },
        "selectionData": {
            "initialValues": {},
            "meta": {}
        }
    },
    "actions": {
        "updateSelectionQueryParamInURL": {
            "actionType": "JSFunction",
            "method": "updateSelectionQueryParamInURL",
            "inputData": {
                "searchStateProp": "{{props.searchState}}",
                "searchState": "{{data.searchState}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "handleSearchStatePWASelectionUpdate": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "updateChartsDataOnSelectionChange"
                },
                {
                    "action": "updateSelectionQueryParamInURL"
                }
            ]
        },
        "init": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "initializeSearchState"
                },
                {
                    "action": "constructTitles"
                }
            ]
        },
        "constructTitles": {
            "actionType": "JSFunctionAsync",
            "method": "getTitles",
            "deps": "js/awHeaderService",
            "outputData": {
                "browserTitle": "result.browserTitle",
                "browserSubTitle": "result.browserSubTitle",
                "headerTitle": "result.headerTitle"
            }
        },
        "initializeSearchState": {
            "actionType": "JSFunctionAsync",
            "method": "createStateFromUrl",
            "inputData": {
                "provider": "{{props.provider}}",
                "searchStateProp": "{{props.searchState}}",
                "searchState": "{{data.searchState}}",
                "searchStateUpdater": "{{data.updateAtomicData}}",
                "skipURL": "{{props.skipUrl}}",
                "searchCriteria": "{{props.searchCriteria}}",
                "pwaSelectionModel": "{{data.selectionModels.searchPageSelectionModel}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "updateURL": {
            "actionType": "JSFunction",
            "method": "updateURL",
            "inputData": {
                "searchStateProp": "{{props.searchState}}",
                "searchState": "{{data.searchState}}",
                "searchStateUpdater": "{{data.updateAtomicData}}",
                "skipURL": "{{props.skipUrl}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "updateSearchCriteria": {
            "actionType": "JSFunction",
            "method": "updateSearchCriteria",
            "inputData": {
                "searchStateAtomicData": "{{data.atomicDataRef.searchState}}",
                "searchStateUpdater": "{{data.updateAtomicData}}",
                "searchCriteria": "{{props.searchCriteria}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "syncStateFromUrl": {
            "actionType": "JSFunction",
            "method": "syncStateFromUrl",
            "inputData": {
                "searchStateProp": "{{props.searchState}}",
                "searchState": "{{data.searchState}}",
                "searchStateUpdater": "{{data.updateAtomicData}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "searchctxhack": {
            "actionType": "JSFunction",
            "method": "updateSearchContext",
            "inputData": {
                "provider": "{{props.provider}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "postURLChangeProcess": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "searchctxhack"
                },
                {
                    "action": "syncStateFromUrl"
                }
            ]
        },
        "updateSublocationTabs": {
            "actionType": "JSFunction",
            "method": "updateSublocationTabs",
            "inputData": {
                "sublocationsTabs": "{{props.tabsdata.sublocationTabs}}",
                "primarySublocTabState": "{{data.primaryActiveTabId}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "updateChartsDataOnSelectionChange": {
            "actionType": "JSFunction",
            "method": "updateChartsDataOnSelectionChange",
            "inputData": {
                "searchStateProp": "{{props.searchState}}",
                "searchState": "{{data.searchState}}",
                "searchStateUpdater": "{{data.updateAtomicData}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "getActiveSublocationTab": {
            "actionType": "JSFunction",
            "method": "getActiveSublocationTab",
            "inputData": {
                "sublocationsTabs": "{{props.tabsdata.sublocationTabs}}"
            },
            "outputData": {
                "primaryActiveTab": ""
            },
            "deps": "js/awSearchSublocationService"
        },
        "handleSelectionChange": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "updateGlobalSelection"
                },
                {
                    "condition": "!props.selectionData",
                    "action": "updateSearchStateWithSelection"
                }
            ]
        },
        "updateGlobalSelection": {
            "actionType": "JSFunction",
            "method": "updateGlobalSelection",
            "inputData": {
                "localSelectionData": "{{data.selectionData}}",
                "parentSelectionData": "{{props.selectionData}}"
            },
            "deps": "js/awSearchSublocationService"
        },
        "updateSearchStateWithSelection": {
            "actionType": "JSFunction",
            "method": "updateSearchStateWithSelectionData",
            "inputData": {
                    "searchStateProp": "{{props.searchState}}",
                    "searchState": "{{fields.searchState}}",
                    "selectionData": "{{data.selectionData}}"
            },
            "deps": "js/awSearchSublocationService"
        }
    },
    "props": {
        "provider": {
            "type": "object"
        },
        "base-selection": {
            "type": "object"
        },
        "search-box": {
            "type": "object"
        },
        "search-box-action": {
            "type": "action"
        },
        "tabsdata": {
            "type": "object"
        },
        "search-state": {
            "type": "object"
        },
        "skip-url": {
            "type": "object"
        },
        "header-title": {
            "type": "object"
        },
        "search-criteria": {
            "type": "object"
        },
        "showsearchbox": {
            "type": "object"
        },
        "xrt-context": {
            "type": "object"
        },
        "selection-data": {
            "type": "object"
        }
    },
    "onEvent": [ {
        "eventId": "locationChangeSuccess",
        "action": "postURLChangeProcess"
    } ],
    "selectionModels": {
        "searchPageSelectionModel": {
            "selectionMode": "{{prop.provider.selectionMode || 'multiple'}}"
        }
    }
}
