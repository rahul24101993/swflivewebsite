// Copyright (c) 2021 Siemens

/**
 * @module js/AwCheckListService
 */
import AwIcon from 'viewmodel/AwIconViewModel';

export const awCheckListRenderFunction = ( props ) => {
    let prop = props.value[0];
    let { updateHook } = props;

    let isCheckedByDefault = ( prop ) => prop.isChecked === true || prop.isChecked === 'true';

    let performActionOnButtonClick = ( event ) => {
        event.preventDefault();
        if( prop.buttonAction && props.actionDefs && props.actionDefs[ prop.buttonAction ] ) {
            props.actionDefs[ prop.buttonAction ]( event );
        }
    };

    let checkInput = ( event ) => {
        if( prop.checkAction && props.actionDefs && props.actionDefs[ prop.checkAction ] ) {
            props.actionDefs[ prop.checkAction ]();
        }
        let data = { ...updateHook.data };
        data[ props.name ].dbValue[0].isChecked = event.target.checked;
        updateHook.dispatch( { path: 'data', value: data } );
    };

    return (
        <div className='aw-widgets-checkSelect' data-locator={props.label}>
            <label>
                <input type='checkbox' aria-label={prop.tooltip} className={isCheckedByDefault( prop ) ? 'checked' : 'unchecked'} onChange={checkInput} name={prop.tooltip} checked={isCheckedByDefault( prop )}/>
                <span>
                    <button onClick={performActionOnButtonClick} className='sw-button-iconContainer sw-aria-border' title={prop.tooltip}>
                        <AwIcon className='sw-button-icon' iconId={'cmd' + prop.iconName}></AwIcon>
                    </button>
                </span>
                <span className='aw-widgets-checklistText'>{props.label}</span>
            </label>
        </div>
    );
};
