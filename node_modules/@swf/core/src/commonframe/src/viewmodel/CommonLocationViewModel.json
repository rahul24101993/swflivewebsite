{
    "schemaVersion": "1.0.0",
    "data": {
        "locationPanelStyle": "",
        "layoutSummaryOnly": "false",
        "preNarrowTitle": null,
        "primaryActiveTabId": {
            "dbValue": "",
            "type": "OBJECT"
        }
    },
    "actions": {
        "checkNarrowMode": {
            "actionType": "JSFunction",
            "method": "checkNarrowMode",
            "deps": "js/aw.narrowMode.service"
        },
        "constructAndUpdateTitles": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "constructTitles"
                },
                {
                    "action": "setTitlesInCtx"
                },
                {
                    "action": "updateTitles"
                }
            ]
        },
        "handleLocationUnload": {
            "actionType": "JSFunction",
            "method": "handleLocationUnload",
            "inputData": {
                "name": "commonLocation"
            },
            "deps": "js/defaultLocationService"
        },
        "constructTitles": {
            "actionType": "JSFunctionAsync",
            "method": "getTitles",
            "deps": "js/awHeaderService",
            "outputData": {
                "browserTitle": "result.browserTitle",
                "browserSubTitle": "result.browserSubTitle",
                "headerTitle": "result.headerTitle"
            }
        },
        "intitializeLocation": {
            "actionType": "JSFunctionAsync",
            "method": "intializeCommonLocation",
            "deps": "js/CommonLocationService",
            "outputData": {
                "subLocationTabCond": "subLocationTabCond",
                "browserTitle": "browserTitle",
                "browserSubTitle": "browserSubTitle",
                "headerTitle": "headerTitle",
                "subLocationTabs": "subLocationTabs",
                "primaryActiveTab": "activeTab"
            }
        },
        "setTitlesInCtx": {
            "actionType": "JSFunction",
            "method": "updateCtx",
            "deps": "js/appCtxService",
            "inputData": {
                "name": "location.titles",
                "value": {
                    "browserTitle": "{{data.browserTitle}}",
                    "browserSubTitle": "{{data.browserSubTitle}}",
                    "headerTitle": "{{data.headerTitle}}"
                }
            }
        },
        "updateTitles": {
            "actionType": "JSFunction",
            "method": "updateDocumentTitles",
            "deps": "js/awHeaderService"
        },
        "updateTabs": {
            "actionType": "JSFunction",
            "method": "updateTabs",
            "inputData": {
                "subLocationTabCondition": "{{data.subLocationTabCond}}"
            },
            "outputData": {
                "subLocationTabCond": ""
            },
            "deps": "js/defaultLocationService"
        },
        "switchSubLocation": {
            "actionType": "JSFunction",
            "method": "switchSubLocation",
            "inputData": {
                "pageId": "{{data.pageId}}",
                "tabTitle": "{{data.tabTitle}}",
                "subLocationTabs": "{{data.subLocationTabs}}",
                "data": "{{data}}"
            },
            "deps": "js/awHeaderService"
        },
        "activateTabUsingFieldUpdate": {
            "actionType": "JSFunction",
            "method": "switchSubLocation",
            "inputData": {
                "pageId": "{{data.primaryActiveTabId.dbValue.primaryActiveTabId}}",
                "tabTitle": null,
                "subLocationTabs": "{{data.subLocationTabs}}",
                "data": "{{data}}"
            },
            "deps": "js/awHeaderService"
        },
        "narrowModeChangeAction": {
            "actionType": "JSFunction",
            "method": "narrowModeChange",
            "deps": "js/aw.narrowMode.service",
            "inputData": {
                "eventData": "{{data.eventMap['narrowModeChangeEvent']}}",
                "layoutSummaryOnlyStyle": "{{data.layoutSummaryOnlyStyle}}",
                "headerTitle": "{{data.headerTitle}}",
                "preNarrowTitle": "{{data.preNarrowTitle}}"
            },
            "outputData": {
                "layoutSummaryOnlyStyle": "result.layoutSummaryOnlyStyle",
                "headerTitle": "result.headerTitle",
                "preNarrowTitle": "result.preNarrowTitle"
            }
        },
        "narrowSummaryLocationTitleClickAction": {
            "actionType": "JSFunction",
            "method": "narrowSummaryLocationTitleClick",
            "deps": "js/aw.narrowMode.service",
            "inputData": {
                "layoutSummaryOnlyStyle": "{{data.layoutSummaryOnlyStyle}}",
                "headerTitle": "{{data.headerTitle}}",
                "preNarrowTitle": "{{data.preNarrowTitle}}"
            },
            "outputData": {
                "layoutSummaryOnlyStyle": "result.layoutSummaryOnlyStyle",
                "headerTitle": "result.headerTitle",
                "preNarrowTitle": "result.preNarrowTitle"
            }
        }
    },
    "dataProviders": {},
    "functions": {},
    "onEvent": [ {
            "eventId": "aw.windowResize",
            "action": "checkNarrowMode"
        },
        {
            "eventId": "appCtx.update",
            "condition": "name === 'location.titles'",
            "action": "updateTitles"
        },
        {
            "eventId": "appCtx.register",
            "condition": "name === 'state' ",
            "action": "updateTabs"
        },
        {
            "eventId": "appCtx.register",
            "condition": "name === 'state' ",
            "action": "constructAndUpdateTitles"
        },
        {
            "eventId": "narrowModeChangeEvent",
            "cacheEventData": true,
            "action": "narrowModeChangeAction"
        },
        {
            "eventId": "narrowSummaryLocationTitleClickEvent",
            "action": "narrowSummaryLocationTitleClickAction"
        }
    ],
    "i18n": {},
    "messages": {},
    "conditions": {
        "isTaskbarFullScreen": {
            "expression": "ctx.taskbarfullscreen && ctx.taskbarfullscreen === 'true'"
        },
        "showSublocations": {
            "expression": "data.subLocationTabs && data.subLocationTabs.length > 1"
        },
        "isSublocationTabs": {
            "expression": "data.subLocationTabs"
        }
    },
    "ctx": {
        "taskbarfullscreen": {
            "type": "string"
        }
    },
    "lifecycleHooks": {
        "onMount": "intitializeLocation",
        "onUnmount": "handleLocationUnload",
        "onUpdate": [ {
            "action": "activateTabUsingFieldUpdate",
            "observers": [ "viewModel.data.primaryActiveTabId.dbValue.primaryActiveTabId" ]
        } ]
    }
}
