/* eslint-disable complexity */
// Copyright (c) 2020 Siemens

import { interopES6Default } from './utils';
import { registerDynImportEntry } from 'js/moduleLoader';

/**
 * parse return value webpack.require.context to module object array
 * @param {Array} imports module structure return by webpack.require.context API
 * @returns {Object} module object array
 */
const parseImports = imports => imports.reduce( ( res, m ) =>
    res.concat( m.keys().map( path => ( {
        name: path,
        loadFn: async () => interopES6Default( await m( path ) )
    } ) ) ), [] );

/**
 * view model loader for aw-include and other usage
 *
 * @module js/viewModelLoaderService
 *
 * @namespace viewModelLoader
 */
const init = () => {
    // this method will be used by build time injected code
    const registerViewModels = ( imports ) => {
        const modules = parseImports( imports );
        modules.forEach( ( m ) => {
            const moduleName = m.name.replace( /^.*[\\/](viewmodel[\\/][^\\//]*ViewModel)\.json$/, '$1' );
            registerDynImportEntry( moduleName, m.loadFn );
        } );
    };
    // AFX_VIEW_MODEL_REGISTRATION
};

// pre-load view model for dynamic import
init();
