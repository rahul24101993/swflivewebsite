{
    "schemaVersion": "1.0.0",
    "actions": {
        "reveal": {
            "actionType": "batchJob",
            "steps": [ {
                "action": "initializeMenu"
            }, {
                "action": "checkForFilterDisability"
            }, {
                "action": "initializeFacetDataProvider",
                "condition": "data.showFilters.dbValue === true && ctx.columnMenuContext.isFacetLoading === false"
            } ]
        },
        "initializeMenu": {
            "actionType": "JSFunction",
            "method": "initializeMenu",
            "inputData": {
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "columnFilterData": "{{subPanelContext.gridContext.columnDef.filter}}",
                "columnMenuData": "{{subPanelContext.gridContext.columnDef.filter.columnMenuData}}"
            },
            "outputData": {
                "startDate.dbValue": "columnMenuData.startDate.dbValue",
                "startDate.value": "columnMenuData.startDate.dbValue",
                "endDate.dbValue": "columnMenuData.endDate.dbValue",
                "endDate.value": "columnMenuData.endDate.dbValue",
                "showFilters.dbValue": "columnMenuData.showFilterFacets"
            },
            "deps": "js/awColumnFilterService"
        },
        "initializeFacetDataProvider": {
            "actionType": "dataProvider",
            "method": "facetDataProvider"
        },
        "filterAction": {
            "actionType": "JSFunction",
            "method": "doDateFiltering",
            "inputData": {
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModelData": "{{data.data}}",
                "facetDataProvider": "{{data.dataProviders.facetDataProvider}}",
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}"
            },
            "outputData": {
                "newFilters": ""
            },
            "deps": "js/awColumnFilterService"
        },
        "dateFilterInputChangedBatch": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "dateFilterInputChanged"
                },
                {
                    "action": "initializeFacetValuesDebounce",
                    "condition": "data.showFilters.dbValue === true && ctx.columnMenuContext.isFacetLoading === false"
                }
            ]
        },
        "dateFilterInputChanged": {
            "actionType": "JSFunction",
            "method": "dateFilterInputChanged",
            "inputData": {
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}",
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModelData": "{{data.data}}",
                "isBulkEditing": "{{subPanelContext.gridContext.isBulkediting}}",
                "isFilterDisabled": "{{fields.isFilterDisabled}}"
            },
            "deps": "js/awColumnFilterService"
        },
        "initializeFacetValues": {
            "actionType": "JSFunctionAsync",
            "method": "loadFacetValues",
            "inputData": {
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}",
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModel": "{{data}}",
                "subPanelContext": "{{subPanelContext}}",
                "facetDataProvider": "{{data.dataProviders.facetDataProvider}}",
                "reloadValues": true,
                "isFilterDisabled": "{{fields.isFilterDisabled}}"
            },
            "outputData": {
                "searchResults": ""
            },
            "deps": "js/awColumnFilterService"
        },
        "initializeFacetValuesDebounce": {
            "actionType": "JSFunctionAsync",
            "method": "updateFacetValuesDebounce",
            "inputData": {
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}",
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModel": "{{data}}",
                "subPanelContext": "{{subPanelContext}}",
                "facetDataProvider": "{{data.dataProviders.facetDataProvider}}",
                "reloadValues": true,
                "isFilterDisabled": "{{fields.isFilterDisabled}}"
            },
            "deps": "js/awColumnFilterService"
        },
        "loadFacetValues": {
            "actionType": "JSFunctionAsync",
            "method": "loadFacetValues",
            "inputData": {
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}",
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModel": "{{data}}",
                "subPanelContext": "{{subPanelContext}}",
                "facetDataProvider": "{{data.dataProviders.facetDataProvider}}",
                "reloadValues": false,
                "isFilterDisabled": "{{fields.isFilterDisabled}}"
            },
            "outputData": {
                "searchResults": ""
            },
            "deps": "js/awColumnFilterService"
        },
        "showFiltersToggleChangedBatch": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "showFiltersToggleChanged"
                },
                {
                    "action": "initializeFacetDataProvider",
                    "condition": "data.showFilters.dbValue === true && ctx.columnMenuContext.isFacetLoading === false"
                }
            ]
        },
        "showFiltersToggleChanged": {
            "actionType": "JSFunction",
            "method": "showFiltersToggleChanged",
            "inputData": {
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}",
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModelData": "{{data.data}}"
            },
            "deps": "js/awColumnFilterService"
        },
        "filterFacetInputChanged": {
            "actionType": "JSFunction",
            "method": "filterFacetInputChanged",
            "inputData": {
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}",
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModelData": "{{data.data}}",
                "facetDataProvider": "{{data.dataProviders.facetDataProvider}}",
                "facetParameters": "{{parameters}}",
                "isBulkEditing": "{{subPanelContext.gridContext.isBulkediting}}",
                "isFilterDisabled": "{{fields.isFilterDisabled}}"
            },
            "outputData": {
                "facetValue": ""
            },
            "deps": "js/awColumnFilterService"
        },
        "clearFilter": {
            "actionType": "JSFunction",
            "method": "clearFilterFromMenu",
            "inputData": {
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "gridContextDispatcher": "{{subPanelContext.gridContextDispatcher}}"
            },
            "outputData": {
                "newFilters": ""
            },
            "deps": "js/awColumnFilterService"
        },
        "checkForFilterDisability": {
            "actionType": "JSFunction",
            "method": "checkForFilterDisability",
            "inputData": {
                "column": "{{subPanelContext.gridContext.columnDef}}",
                "viewModelData": "{{data.data}}",
                "hasFilterFacetAction": "{{subPanelContext.hasFilterFacetAction}}",
                "facetDataProvider": "{{data.dataProviders.facetDataProvider}}",
                "isBulkEditing": "{{subPanelContext.gridContext.isBulkediting}}",
                "isFilterDisabled": "{{fields.isFilterDisabled}}"
            },
            "deps": "js/awColumnFilterService"
        }
    },
    "data": {
        "startDate": {
            "displayName": "",
            "type": "DATE",
            "isRequired": "false",
            "isEditable": "true",
            "dbValue": "",
            "dispValue": ""
        },
        "endDate": {
            "displayName": "",
            "type": "DATE",
            "isRequired": "false",
            "isEditable": "true",
            "dbValue": "",
            "dispValue": ""
        },
        "title": {
            "displayName": "{{i18n.dateFilterTitle}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false"
        },
        "_itemOptions_facetCheckbox": {
            "applySelection": false
        },
        "showFilters": {
            "displayName": "{{i18n.toggleFacetTitle}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "value": "",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "noMatchesFound": {
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "dbValue": "{{i18n.noMatchesFound}}",
            "displayValue": "{{i18n.noMatchesFound}}"
        },
        "isFilterDisabled": {
            "initialValues": {
                "value": true
            },
            "meta": {}
        }
    },
    "dataProviders": {
        "facetDataProvider": {
            "action": "initializeFacetValues",
            "nextAction": "loadFacetValues",
            "response": "{{data.searchResults.results}}",
            "totalFound": "{{data.searchResults.totalFound}}",
            "selectionModelMode": "none"
        },
        "operationsDataProvider": {
            "response": [ {
                    "propDisplayValue": "{{i18n.containsOperation}}",
                    "propInternalValue": "contains",
                    "selected": false
                },
                {
                    "propDisplayValue": "{{i18n.notContainsOperation}}",
                    "propInternalValue": "notContains",
                    "selected": false
                },
                {
                    "propDisplayValue": "{{i18n.startsWithOperation}}",
                    "propInternalValue": "startsWith",
                    "selected": false
                },
                {
                    "propDisplayValue": "{{i18n.endsWithOperation}}",
                    "propInternalValue": "endsWith",
                    "selected": false
                },
                {
                    "propDisplayValue": "{{i18n.equalsOperation}}",
                    "propInternalValue": "equals",
                    "selected": false
                },
                {
                    "propDisplayValue": "{{i18n.notEqualsOperation}}",
                    "propInternalValue": "notEquals",
                    "selected": false
                }
            ],
            "totalFound": 6
        }
    },
    "functions": {
        "getActiveWorkspaceXrtContext": {
            "functionName": "getActiveWorkspaceXrtContext",
            "parameters": [
                "{{ctx.ActiveWorkspace:xrtContext}}"
            ]
        }
    },
    "onEvent": [],
    "i18n": {
        "clearButtonTitle": [
            "UIMessages"
        ],
        "dateFilterTitle": [
            "UIMessages"
        ],
        "invalidDate": [
            "UIMessages"
        ],
        "FILTER_TEXT": [
            "BaseMessages"
        ],
        "toggleFacetTitle": [
            "UIMessages"
        ],
        "noMatchesFound": [
            "UIMessages"
        ],
        "selectAll": [
            "UIMessages"
        ]
    },
    "messages": {},
    "conditions": {
        "isShowFiltersSelected": {
            "expression": "data.showFilters.dbValue === true"
        },
        "filteringEnabled": {
            "expression": "subPanelContext.gridContext.columnDef.filter.view && subPanelContext.gridContext.columnDef.isFilteringEnabled !== false && subPanelContext.gridOptions.isFilteringEnabled"
        },
        "noFacetResults": {
            "expression": "dataProviders.facetDataProvider.viewModelCollection.totalFound === 0 && ctx.columnMenuContext.isFacetLoading === false"
        }
    },
    "lifecycleHooks": {
        "onMount": "reveal",
        "onUpdate": [{
            "action": "dateFilterInputChangedBatch",
            "observers": [ "viewModel.data.startDate.dbValue", "viewModel.data.endDate.dbValue" ]
        },{
            "action": "checkForFilterDisability",
            "observers": [ "viewModel.data.showFilters.dbValue" ]
        }]
    }
}
