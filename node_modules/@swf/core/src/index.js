import 'css/main.scss';
import 'css/sw-lightTheme.scss';
// revisitme - skip IE support for now
// import 'react-app-polyfill/ie11';
// import 'react-app-polyfill/stable';
import 'js/typeIconRegistry';
import { registerSVGIcons } from 'js/imageRegistry';
import 'js/aw_polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import { UIRouter as Router, hashLocationPlugin } from '@uirouter/react';
import UIView from 'viewmodel/UiViewViewModel';
import { buildAndGetAllStates } from 'js/states';
import config from 'js/routerConfig';
import cfgSvc from 'js/configurationService';
import { AppCtxComponent } from 'js/reactAppCtx';
import awConfiguration from 'js/awConfiguration';
import contributionService from 'js/contribution.service';
import bootstrap from 'js/bootstrap';
import 'js/routeChangeHandler';
import 'js/viewModelLoaderService';
import 'js/propertyPolicyLoaderService';
import 'js/keyboardListenerService';
import { find } from 'lodash';
import AwGlobalPopup from 'viewmodel/AwGlobalPopupViewModel';
import AwThemeSwitch from 'viewmodel/AwThemeSwitchViewModel';


// test enable routing - put it here for now for further debug purpose
/*
RESOLVE = 0,
TRANSITION = 1,
HOOK = 2,
UIVIEW = 3,
VIEWCONFIG = 4,
trace.enable( 'UIVIEW' );
*/
registerSVGIcons();

//Setup Default workspace
const setupDefaultWorkspace = () => {
    const solutionDef = cfgSvc.getCfgCached( 'solutionDef' );
    const defaultWorkspace = solutionDef.defaultWorkspace;
    const workspaces = cfgSvc.getCfgCached( 'workspace' );
    const workspace = find( workspaces, ( workspace ) => workspace.workspaceId === defaultWorkspace );
    awConfiguration.set( 'defaultRoutePath', workspace.defaultPage );
};
setupDefaultWorkspace();

contributionService.requireBeforeAppInitialize( 'states', function( contributionStates ) {
    const states = buildAndGetAllStates( contributionStates );

    // revisitme - it is a bit different with afx init pipeline
    // we might need to refactor it to afx practice if we see side effect
    bootstrap();

    ReactDOM.render(
        <AppCtxComponent>
            <Router plugins={[ hashLocationPlugin ]} config={config} states={states}>
                <UIView />
            </Router>
            {/* global popup that any application can access */}
            <AwGlobalPopup />
            <AwThemeSwitch />
        </AppCtxComponent>, document.getElementById( 'main-view' ) );
} );
