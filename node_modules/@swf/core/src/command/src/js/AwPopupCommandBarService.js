// Copyright (c) 2021 Siemens

/**
 * @module js/AwPopupCommandBarService
 */
import AwPopupCommandList from 'viewmodel/AwPopupCommandListViewModel';

/**
 * Loading indicator styling
 *
 * @returns {JSX.Element} Loading indicator
 */
const getLoadingIndicator = () => {
    return <div className='aw-widgets-noResultsLabel aw-popup-command-bar'>
        <div className='aw-layout-flexRow'></div>
        <div className='aw-jswidgets-loading'></div>
        <div className='aw-layout-flexRow'></div>
    </div>;
};

/**
 * Wrapper component to handle initialization of AwPopupCommandBar
 *
 * @param {Object} param0 Declarative render context
 * @returns {JSX.Element} React component
 */
export const awPopupCommandBarRenderFunction = ( { alignment, viewModel: { data: { commandList = null, visibleServerCommands } }, childCommandClickCallback, visibilityLoader, context, anchor } ) => {
    //Shows loading indicator while waiting on commands
    //TODO: Should be 1s delay before loading indicator is actually displayed
    return commandList && ( visibilityLoader ? visibleServerCommands : true ) ?
        <AwPopupCommandList commandList={ commandList } alignment={ alignment }
            childCommandClickCallback={ childCommandClickCallback } visibleServerCommands={ visibleServerCommands }
            commandContext={ context } visibilityLoader={ visibilityLoader } anchor={ anchor }>
        </AwPopupCommandList> :
        getLoadingIndicator();
};
