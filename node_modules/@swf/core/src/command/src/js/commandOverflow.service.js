// Copyright (c) 2020 Siemens

/**
 * Defines {@link commandOverflowService} which manages command panels.
 *
 * @module js/commandOverflow.service
 */

/**
 * Command service to manage commands.
 */
let exports = {};

/**
 * Checks if overflow occurred on the specified command on the command bar.
 *
 * The closure function arguments:
 * @param {Element} cmdBarElem the command bar element
 * @param {Element} toolBarElem the tool bar element
 * @param {String} cmdBarAlignment the command bar alignment
 * @param {Element} cmdElem the command element to check overflow.
 *                  Optional, if not specified, will check the last command element in command container.
 * @returns {Boolean} A boolean telling whether overflow occurred or not.
 */
export const hasOverflow = ( cmdBarElem, toolBarElem, cmdBarAlignment, cmdElem ) => {
    let propName = cmdBarAlignment === 'HORIZONTAL' ? 'offsetLeft' : 'offsetTop';
    let commandElem = cmdElem || cmdBarElem.querySelector( '.aw-commands-wrapper:not(.aw-commands-overflow)' ).lastElementChild;

    //We just check the element's offsetTop against the container's offset top to determine if there's an overflow
    //Same for the vertical bar
    if( !cmdBarElem || !commandElem ) {
        if( !toolBarElem || !commandElem ) {
            return false;
        }
        return commandElem[ propName ] > toolBarElem[ propName ];
    }

    return commandElem[ propName ] > cmdBarElem[ propName ];
};

//TODO: Finish WCAG support
export const updateTabIndexOnOverflow = function( cmdBarElem, cmdBarAlignment ) {
    let commandElems = cmdBarElem.querySelectorAll( '.aw-commands-wrapper:not(.aw-commands-overflow)>.aw-command' );
    for( var i = commandElems.length - 1; i >= 0; i-- ) {
        var commandElementButton = commandElems[ i ].querySelector( 'button:not(.disabled)' );
        if( commandElementButton ) {
            if( hasOverflow( cmdBarElem, cmdBarAlignment, commandElems[ i ] ) ) {
                commandElementButton.setAttribute( 'tabindex', -1 );
            } else {
                commandElementButton.setAttribute( 'tabindex', 0 );
            }
        }
    }
};

exports = {
    hasOverflow,
    updateTabIndexOnOverflow
};
export default exports;
