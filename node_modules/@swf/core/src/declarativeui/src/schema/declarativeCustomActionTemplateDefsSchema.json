{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "description": "",
    "definitions": {
        "actionDef": {
            "oneOf": [
                {
                    "if": {
                        "properties": {
                            "actionType": {
                                "const": "activateCommandPanel"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/definitions/activateCommandPanel"
                    },
                    "else": false
                },
                {
                    "if": {
                        "properties": {
                            "actionType": {
                                "const": "showInfoMessage"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/definitions/showInfoMessage"
                    },
                    "else": false
                },
                {
                    "if": {
                        "properties": {
                            "actionType": {
                                "const": "showWarningMessage"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/definitions/showWarningMessage"
                    },
                    "else": false
                },
                {
                    "if": {
                        "properties": {
                            "actionType": {
                                "const": "showErrorMessage"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/definitions/showErrorMessage"
                    },
                    "else": false
                },
                {
                    "if": {
                        "properties": {
                            "actionType": {
                                "const": "modifyCtx"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/definitions/modifyCtx"
                    },
                    "else": false
                },
                {
                    "if": {
                        "properties": {
                            "actionType": {
                                "const": "updateFormData"
                            }
                        }
                    },
                    "then": {
                        "$ref": "#/definitions/updateFormData"
                    },
                    "else": false
                }
            ]
        },
        "activateCommandPanel": {
            "type": "object",
            "description": "",
            "additionalProperties": false,
            "required": [
                "actionType"
            ],
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "",
                    "const": "activateCommandPanel"
                },
                "inputData": {
                    "type": "object",
                    "description": "JSON data for the action input. For ex. 'request' header can be the inputData in case of 'RESTService' actionType with method 'Get'.",
                    "properties": {
                        "commandId": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "context": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "push": {
                            "type": "boolean"
                        },
                        "closeWhenCommandHidden": {
                            "type": "boolean"
                        },
                        "config": {
                            "type": "object"
                        }
                    }
                },
                "deps":{
                    "type":"string",
                    "description": "Dependent files required for the action."
                },
                "outputData": {
                    "type": "object",
                    "description": "JSON data for the action output. As part of this, the result of the action is mapped to view model data."
                },
                "events": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "Events can be fired and listened/handled in declarative View Models. They are a means of a View Model communicating with other View Models or UI elements. 'Actions' can fire events."
                },
                "actionMessages": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "User messages. It can be made condition based"
                }
            }
        },
        "showInfoMessage": {
            "type": "object",
            "description": "",
            "additionalProperties": false,
            "required": [
                "actionType"
            ],
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "",
                    "const": "showInfoMessage"
                },
                "inputData": {
                    "type": "object",
                    "description": "JSON data for the action input. For ex. 'request' header can be the inputData in case of 'RESTService' actionType with method 'Get'.",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "params": {
                            "type": "string"
                        }
                    }
                },
                "outputData": {
                    "type": "object",
                    "description": "JSON data for the action output. As part of this, the result of the action is mapped to view model data."
                },
                "events": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "Events can be fired and listened/handled in declarative View Models. They are a means of a View Model communicating with other View Models or UI elements. 'Actions' can fire events."
                },
                "actionMessages": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "User messages. It can be made condition based"
                }
            }
        },
        "showWarningMessage": {
            "type": "object",
            "description": "",
            "additionalProperties": false,
            "required": [
                "actionType"
            ],
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "",
                    "const": "showWarningMessage"
                },
                "inputData": {
                    "type": "object",
                    "description": "JSON data for the action input. For ex. 'request' header can be the inputData in case of 'RESTService' actionType with method 'Get'.",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "params": {
                            "type": "string"
                        }
                    }
                },
                "outputData": {
                    "type": "object",
                    "description": "JSON data for the action output. As part of this, the result of the action is mapped to view model data."
                },
                "events": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "Events can be fired and listened/handled in declarative View Models. They are a means of a View Model communicating with other View Models or UI elements. 'Actions' can fire events."
                },
                "actionMessages": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "User messages. It can be made condition based"
                }
            }
        },
        "showErrorMessage": {
            "type": "object",
            "description": "",
            "additionalProperties": false,
            "required": [
                "actionType"
            ],
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "",
                    "const": "showErrorMessage"
                },
                "inputData": {
                    "type": "object",
                    "description": "JSON data for the action input. For ex. 'request' header can be the inputData in case of 'RESTService' actionType with method 'Get'.",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "params": {
                            "type": "string"
                        }
                    }
                },
                "outputData": {
                    "type": "object",
                    "description": "JSON data for the action output. As part of this, the result of the action is mapped to view model data."
                },
                "events": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "Events can be fired and listened/handled in declarative View Models. They are a means of a View Model communicating with other View Models or UI elements. 'Actions' can fire events."
                },
                "actionMessages": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "User messages. It can be made condition based"
                }
            }
        },
        "modifyCtx": {
            "type": "object",
            "description": "",
            "additionalProperties": false,
            "required": [
                "actionType"
            ],
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "",
                    "const": "modifyCtx"
                },
                "inputData": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "JSON data for the action input. For ex. 'request' header can be the inputData in case of 'RESTService' actionType with method 'Get'.",
                    "properties": {
                        "methodType": {
                            "type": "string"
                        },
                        "name": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "value": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "array"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "path": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        }
                    }
                },
                "outputData": {
                    "type": "object",
                    "description": "JSON data for the action output. As part of this, the result of the action is mapped to view model data."
                },
                "events": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "Events can be fired and listened/handled in declarative View Models. They are a means of a View Model communicating with other View Models or UI elements. 'Actions' can fire events."
                },
                "actionMessages": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "User messages. It can be made condition based"
                }
            }
        },
        "updateFormData": {
            "type": "object",
            "description": "",
            "additionalProperties": false,
            "required": [
                "actionType"
            ],
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "",
                    "const": "updateFormData"
                },
                "inputData": {
                    "type": "object",
                    "description": "JSON data for the action input. For ex. 'request' header can be the inputData in case of 'RESTService' actionType with method 'Get'.",
                    "additionalProperties": false,
                    "properties": {
                        "fileData": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "object"
                                }
                            ]
                        },
                        "data": {
                            "type": "string"
                        }
                    }
                },
                "outputData": {
                    "type": "object",
                    "description": "JSON data for the action output. As part of this, the result of the action is mapped to view model data."
                },
                "events": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "Events can be fired and listened/handled in declarative View Models. They are a means of a View Model communicating with other View Models or UI elements. 'Actions' can fire events."
                },
                "actionMessages": {
                    "$ref": "#/definitions/actionMessagesDef",
                    "description": "User messages. It can be made condition based"
                }
            }
        }
    }
}
