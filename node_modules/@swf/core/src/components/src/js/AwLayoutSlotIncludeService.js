import _ from 'lodash';
import { includeComponent } from 'js/moduleLoader';
import { findActiveSlot, getLayoutState } from 'js/layoutSlotService';
import { DerivedStateResult } from 'js/derivedContextService';

export const awLayoutSlotIncludeRenderFunction = ( props ) => {
    const { ctxMin } = props;
    const { activeSlot } = ctxMin;
    if( activeSlot && activeSlot.view ) {
        return includeComponent( activeSlot.view, { subPanelContext: props.context } );
    }
};

export const getApplicableActiveSlots = ( vmDef, props ) => {
    const { allSlotsJson, context } = props;
    var slots = _.filter( allSlotsJson.slots, {
        name: props.name
    } );
    const { ctxParameters, additionalParameters } = getLayoutState( slots, allSlotsJson, context );
    const getActiveSlot = ( { ctx } ) => {
        return findActiveSlot( slots, allSlotsJson, { ctx: ctx, context: context } );
    };
    return new DerivedStateResult( {
        ctxParameters,
        additionalParameters,
        compute: getActiveSlot
    } );
};
