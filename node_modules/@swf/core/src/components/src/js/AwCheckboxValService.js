// Copyright (c) 2021 Siemens
import sanitizer from 'js/sanitizer';
import { getValClass } from 'js/componentUtils';

export const awCheckboxValRenderFunction = ( props ) => {
    let filteredAttrs = sanitizer.sanitizeHTMLTagProps( props, 'input' );
    const inputClass = getValClass( props );
    const isNegatedClass = props.isNegated ? 'checkbox-negated' : '';
    // call the onChange handler
    // and the action handler if it is set
    const callAction = ( ev ) => {
        props.onChange && props.onChange( ev );
        return props.action ? props.action( ev ) : '';
    };

    const onKeyPress = ( event, prop ) => {
        if( prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.length > 0 ) {
            for( let index = 0; index < prop.fielddata.displayValsModel.length; index++ ) {
                if( prop.fielddata.displayValsModel[ index ].isInEditMode ) {
                    event.updateArray = true;
                    event.index = index;
                    break;
                }
            }
        }
        if( event.key === 'Enter' ) {
            event.preventDefault();
            prop.onChange( event );
            event.target.checked = false;
        }
    };

    if( props.typex === 'BOOLEANARRAY' ) {
        return (
            <label>
                <span className='hidden'>{props.fielddata.propertyDisplayName}</span>
                <span className='sw-checkbox-val'>
                    <input type='checkbox' className={inputClass}
                        data-locator={props.label}
                        aria-checked={props.value} onKeyPress={( event ) => onKeyPress( event, props )}></input>
                    <span className='sw-checkbox-pseudo'></span>
                </span>
            </label>
        );
    }

    return (
        <label className='sw-checkbox-valWrapper'>
            <span className='hidden'>{props.fielddata.propertyDisplayName}</span>
            <span className= {isNegatedClass + ' sw-checkbox-val'}>
                <input {...filteredAttrs} type='checkbox' className={inputClass} onChange={callAction}></input>
                <span className='sw-checkbox-pseudo'></span>
            </span>
        </label>
    );
};
