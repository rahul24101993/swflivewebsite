// Copyright (c) 2021 Siemens
import AwIcon from 'viewmodel/AwIconViewModel';
import wcagSvc from 'js/wcagService';
import { getCompClass } from 'js/componentUtils';
import sanitizer from 'js/sanitizer';
import _ from 'lodash';

export const awSearchBoxServiceRenderFunction = ( props ) => {
    const { prop, onKeyDown, closeAction, resetAction, i18n, ...allOtherProps } = props;
    const hasInput = prop && prop.value && prop.value.length > 0 || props.value && props.value.length > 0;
    let keyDownHandler = onKeyDown;
    if( !keyDownHandler ) {
        keyDownHandler = ( event ) => {
            if( allOtherProps.changeAction ) {
                if(  event.key !== 'Enter' ) {
                    _.defer( function() {
                        allOtherProps.changeAction();
                    }
                    );
                } else {
                    event.preventDefault();
                }
            } else if( allOtherProps.action && event.key === 'Enter' ) {
                event.preventDefault();
                allOtherProps.action();
            }
        };
    }
    const doSearch = ( event ) => {
        event.preventDefault();
        if( allOtherProps.changeAction ) {
            _.defer( function() {
                allOtherProps.changeAction();
            }
            );
        } else if( allOtherProps.action ) {
            allOtherProps.action();
        }
        if( closeAction ) {
            closeAction();
        }
    };

    const doSearchKeyPress = ( event ) => {
        if( wcagSvc.isValidKeyPress( event ) ) {
            doSearch( event );
        }
    };

    const reset = ( event ) => {
        const inputProp = prop ? prop : props;
        if( inputProp ) {
            inputProp.value = '';
            event.preventDefault();
            let evt = {
                target: {
                    value: inputProp.value
                }
            };
            inputProp.onChange( evt );
            if( resetAction ) {
                resetAction();
            }
        }
    };

    const clearContentKeyPress = ( event ) => {
        if( wcagSvc.isValidKeyPress( event ) ) {
            reset( event );
        }
    };
    const inputProps = { ...prop, ...allOtherProps };
    let sanitizedProps = sanitizer.sanitizeHTMLTagProps( inputProps, 'input' );
    if( sanitizedProps && sanitizedProps.value === null ) {
        delete sanitizedProps.value;
    }
    return (
        <div className='aw-in-content-search-box'>
            <div className={getCompClass( 'aw-uiwidgets-searchBoxContainer', props )}>
                <input autoComplete='off'
                    className='aw-uiwidgets-searchBox'
                    type='text'
                    {...sanitizedProps}
                    onKeyDown = {keyDownHandler}
                >
                </input>
                {/* We'll change the AwIcon to AwIconButton later as it is a breaking change that will affects showcase and cucumbers */}
                <div className='sw-search-iconContainer'>
                    {hasInput &&
                        <span role='button' tabIndex ='0' onClick={( event )=>reset( event )} onKeyDown={( event )=>clearContentKeyPress( event )}  className='aw-uiwidgets-searchResetIcon' aria-label={i18n.RESET_SEARCH} >
                            <AwIcon iconId='cmdClearText'></AwIcon>
                        </span>
                    }
                    <span role='button' tabIndex ='0' aria-label={i18n.SEARCH_LABEL} onClick={( event )=>doSearch( event )} onKeyDown={( event )=>doSearchKeyPress( event )}  className='aw-uiwidgets-searchBoxIcon'>
                        <AwIcon iconId='cmdSearch'></AwIcon>
                    </span>
                </div>
            </div>
        </div>
    );
};
