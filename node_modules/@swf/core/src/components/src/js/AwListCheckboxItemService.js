/* eslint-disable jsx-a11y/click-events-have-key-events */
/* eslint-disable jsx-a11y/no-static-element-interactions */
import _ from 'lodash';
import uwPropertySvc from 'js/uwPropertyService';

export const awListCheckboxItemRenderFunction = ( props ) => {
    let {
        viewModel,
        actions,
        item,
        vmo,
        index,
        tabIndex,
        isSelected,
        children
    } = props;

    if( !item ) { item = vmo; }

    const { data, dispatch } = viewModel;

    let options = props.options || {};
    let checked = data._state || false;
    if ( item && ( item.newValue === false || item.newValue === true ) ) {
        checked = item.newValue;
    }
    // case dataProvider takes control
    if( options.applySelection !== false ) {
        checked = isSelected;
    }

    let getLabel = () => {
        return item.cellHeader1 || item.propertyDisplayName || item.Title || _.uniqueId( 'Checkbox ' );
    };

    let value = children ? children : item.propertyDisplayName;
    const callAction = ( event ) => {
        // case dataProvider takes control,
        // the check box is just as a indicator, we don't process any
        if( options.applySelection !== false ) { return; }

        // other cases
        // toggle state
        let newState = !checked;
        uwPropertySvc.setValue( props.item, newState );
        dispatch( { path: 'data._state', value: newState } );

        // execute action - standard decl action
        return props.action ? props.action( { checked: newState, item, index } ) : '';
    };

    return (
        <div className='sw-property sw-component sw-row' onClick={callAction}>
            <span className='sw-checkbox-val'>
                <input type='checkbox'
                    checked={checked}
                    aria-checked={checked}
                    index={index}
                    tabIndex={tabIndex || 0}
                    aria-label={getLabel()}
                    value={checked}
                ></input>
                <span className='sw-checkbox-pseudo'></span>
            </span>
            {value}
        </div>
    );
};
