import { includeComponent } from 'js/moduleLoader';
import { mapChildren } from 'js/reactHelper';
import _ from 'lodash';

const isEqual = ( previousValue, currentValue, props ) => {
    var isObjectEqual = true;
    if( !previousValue ) {
        return false;
    }
    _.forEach( props, function( key ) {
        if( _.get( previousValue, key ) !== _.get( currentValue, key ) ) {
            isObjectEqual = false;
            return false;
        }
    } );
    return isObjectEqual;
};

export const awDefaultGroupCellRenderFunction = ( props ) => {
    const {
        item,
        groupBy,
        // used to judge group or cell
        previousItem,
        // used as slot
        // parent used to mount the headerView
        // headerView,
        // cellView,
        children,
        parent
    } = props;

    const groupByProps = groupBy.split( ',' );
    let cellHasHeader = true;
    if( isEqual( previousItem, item, groupByProps ) ) { cellHasHeader = false; }

    const getHeader = ( props )=>mapChildren( children[0], props );
    const getCell = ( props )=>mapChildren( children[1], props );

    const childProps = { item, parent };
    return (
        <div className='sw-row flex-auto'>
            {cellHasHeader && getHeader( childProps ) }
            { getCell( childProps )}
        </div>
    );
};
