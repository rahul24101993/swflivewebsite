// Copyright (c) 2021 Siemens
import AwPropertyLabel from 'viewmodel/AwPropertyLabelViewModel';
import AwWidgetVal from 'viewmodel/AwWidgetValViewModel';
import uwPropSvc from 'js/uwPropertyService';
import uwSupportSvc from 'js/uwSupportService';

// --------------------------------
// widgets
// --------------------------------
/**
 * render function for AwWidget
 * @param {*} props context for render function
 * @returns {JSX.Element} react component
 */
export const awWidgetRenderFunction = ( props ) => {
    const {
        viewModel,
        ctxMin,
        actions,
        i18n,
        fields,
        grids,
        formProp,
        messages,
        ...prop
    } = props;

    const hint = prop.hint || prop.renderingHint;

    if( hint ) {
        prop.fielddata.renderingHint = hint;
        if( prop.vmo ) {
            uwPropSvc.setRenderingHint( prop.vmo.props[ prop.name ], hint );
        }
    }

    if( prop && prop.modifiable && prop.modifiable !== 'false' ) {
        uwPropSvc.setIsPropertyModifiable( prop, prop.modifiable );
    }

    if( prop && prop.labeldisplay ) {
        const labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay( prop.labeldisplay );
        uwPropSvc.setPropertyLabelDisplay( prop, labelDisplay );

        if( labelDisplay === 'NO_PROPERTY_LABEL' ) {
            return <AwWidgetVal {...prop}></AwWidgetVal>;
        }
    }

    // in future, do we want a className='sw-property-valWrapper' on the AwWidgetVal?
    // would need to do similar from all prop widget wrappers
    return (
        <AwPropertyLabel {...prop}>
            <AwWidgetVal {...prop} className=''></AwWidgetVal>
        </AwPropertyLabel>
    );
};
