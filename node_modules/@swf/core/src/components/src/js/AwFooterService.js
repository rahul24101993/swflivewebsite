import AwCommandBar from 'viewmodel/AwCommandBarViewModel';
import AwAvatar from 'viewmodel/AwAvatarViewModel';
import appCtxService from 'js/appCtxService';
import eventBus from 'js/eventBus';
import _ from 'lodash';

export const awFooterRenderFunction = ( { ctx } ) => {
    let hasThumbnail = _.get( ctx, 'user.hasThumbnail' );
    let typeIconURL = _.get( ctx, 'user.typeIconURL' );
    let thumbnailURL = _.get( ctx, 'user.thumbnailURL' );

    const toggleAvatarPanel = () => {
        var avatarPanelConfig = appCtxService.ctx.awSidenavConfig && appCtxService.ctx.awSidenavConfig.avatarPanel;
        // Publish event for opening and closing the sidenav
        eventBus.publish( 'awsidenav.openClose', {
            id: 'globalNavigationSideNav',
            includeView: 'AwGlobalAvatar',
            commandId: 'globalNavigationSideNavCommand',
            keepOthersOpen: true,
            config: {
                width: avatarPanelConfig && avatarPanelConfig.width || 'STANDARD',
                height: avatarPanelConfig && avatarPanelConfig.height || 'FULL'
            }
        } );
    };

    return (
        <div className='aw-commands-narrowCommands sw-row'>
            <div className='aw-commands-commandBarHorizontalCenter sw-column w-2 sw-avatar-footerCol'>
                { hasThumbnail ? <AwAvatar size='xsmall' source={thumbnailURL} action={toggleAvatarPanel}></AwAvatar> :
                    <AwAvatar size='xsmall' source={typeIconURL} action={toggleAvatarPanel}></AwAvatar> }
            </div>
            <div className='sw-column w-8 sw-commands-footer'>
                <AwCommandBar anchor='aw_footer' alignment='HORIZONTAL' overflow={true}></AwCommandBar>
            </div>
        </div>
    );
};
