{
    "schemaVersion": "1.0.0",
    "actions": {
        "render": {
            "method": "awTabContainerRenderFn",
            "deps": "js/AwTabContainerService",
            "options": {
                "elementRefList": [
                    "tabset"
                ]
            }
        },
        "tabSetOverflowPopup": {
            "actionType": "popup",
            "options": {
                "placement": "bottom-start",
                "toggleMode": true,
                "whenParentScrolls": "close",
                "clickOutsideToClose": true,
                "resizeToClose": true
            }
        },
        "unRegisterTabSet": {
            "actionType": "JSFunction",
            "method": "unRegisterTabSet",
            "inputData": {
                "tabSetId": "{{data.tabSetId}}"
            },
            "deps": "js/AwTabContainerService"
        },
        "onMount": {
            "actionType": "JSFunction",
            "method": "onMount",
            "inputData": {
                "elementRefList": "{{parameters.elementRefList}}",
                "props": "{{props}}",
                "data": "{{data}}"
            },
            "deps": "js/AwTabContainerService"
        },
        "onSelectionDataChange": {
            "actionType": "JSFunction",
            "method": "onSelectionDataChange",
            "inputData": {
                "subPanelContext": "{{props.subPanelContext}}",
                "data": "{{data}}"
            },
            "deps": "js/AwTabContainerService"
        }
    },
    "data": {
        "overflowConfig": {
            "overflownTabs": [],
            "hideMore": true,
            "currentTabIndex": "",
            "replacedTabIndex": ""
        },
        "tabsModel": [],
        "currentSelectedTabId": "",
        "manualTabSelection": false,
        "previousSelectedTabId": ""
    },
    "conditions": {},
    "onEvent": [],
    "lifecycleHooks": {
        "render": "render",
        "onMount": "onMount",
        "onUnmount": "unRegisterTabSet",
        "onUpdate":  {
            "action": "onSelectionDataChange",
            "observers": [ "props.subPanelContext.pselected", "props.subPanelContext.selected" ]
        }
    },
    "props": {
        "tab-container-model": {
            "type": "object"
        },
        "callback": {
            "type": "object"
        },
        "tab-set-id": {
            "type": "string"
        },
        "sub-panel-context": {
            "type": "object"
        },
        "on-tab-close": {
            "type": "object"
        }
    }
}
