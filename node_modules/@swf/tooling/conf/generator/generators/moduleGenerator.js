/* eslint-disable require-jsdoc */
/* eslint-disable no-multi-assign */
/* eslint-disable no-implicit-globals */

const generatorUtils = require( '../../../js/generator' );
const logger = require( '../../../js/logger' );

const messages = {
    description: `Generates a module.
A module is a build configuration that determines which code to include and how to process it.`,
    nameInputMsg: '\n' + logger.infoColor( 'Give the module a name. This is a unique identifier used by the build system.\n\n' ) + 'Module name: '
};

module.exports.name = 'module';
module.exports.description = messages.description;
module.exports.execute = function() {
    return generatorUtils.getUserInput( '-n', messages.nameInputMsg ).then( function( moduleName ) {
        let __dir = `${generatorUtils.config.rootDir}/src/${moduleName}`;
        let moduleJson = {
            name: moduleName,
            description: `This is the ${moduleName} module`,
            __src: `${__dir}/module.json`
        };
        return generatorUtils.writeBuildJson( moduleJson ).then( function() {
            logger.info( `Created module ${logger.nameColor( moduleName )} in ${__dir}` );
            return generatorUtils.getKit().then( function( kitJson ) {
                kitJson.modules.push( moduleName );
                kitJson.modules.sort();
                return generatorUtils.writeBuildJson( kitJson ).then( function() {
                    logger.info( `Added module ${logger.nameColor( moduleName )} to kit ${logger.nameColor( kitJson.name )}` );
                } );
            } );
        } );
    } );
};
