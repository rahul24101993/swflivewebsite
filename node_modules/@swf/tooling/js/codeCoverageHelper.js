const fs = require( 'fs' );
const { join, isAbsolute } = require( 'path' );
const { normalizePath } = require( './util' );
const logger = require( './logger' );
const MSG_PREFIX = 'code-coverage/';
const { map } = require( 'lodash' );

const updateSourcePath = ( covFolderName = 'coverage' ) => {
    const workingDir = process.cwd();
    logger.debug( workingDir, MSG_PREFIX );
    const coverageFolderPath = normalizePath( join( workingDir, covFolderName ) );
    logger.debug( `Coverage directory path is ${coverageFolderPath}`, MSG_PREFIX );
    if( fs.existsSync( coverageFolderPath ) ) {
        const contents = fs.readFileSync( `${coverageFolderPath}/lcov.info`, 'utf-8' );
        const lines = contents.split( '\n' );
        const modifiedLines = map( lines, line => {
            if( line.startsWith( 'SF:' ) ) {
                const path = line.replace( 'SF:', '' ).trim();
                // logger.info( path );
                const newPath = isAbsolute( path ) ? path : normalizePath( join( workingDir, path ) );
                logger.debug( newPath, MSG_PREFIX );
                return `SF:${newPath}`;
            }
            return line;
        } );
        fs.writeFileSync( `${coverageFolderPath}/lcov.info`, modifiedLines.join( '\n' ) );
    } else {
        logger.warn( `Coverage directory ${coverageFolderPath} not found`, coverageFolderPath );
    }
};

module.exports = {
    updateSourcePath
};
