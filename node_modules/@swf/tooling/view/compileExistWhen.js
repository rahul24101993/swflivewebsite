/* eslint-disable complexity */
/* eslint-disable sonarjs/cognitive-complexity */
// Copyright (c) 2020 Siemens
/* eslint-env node */

/**
 * exist-when Node Compiler
 */
const {
    Node
} = require( './utils' );

const utils = require( '../rewired/utils' );
const _ = require( 'lodash' );

const Attr = 'exist-when';

/**
 * Evaluate condition for current compiler
 * @param {Node} node input DOM Node
 * @param {context} context input context
 * @returns {boolean} true if condition matches
 */
const when = ( node ) => {
    return node.nodeType === Node.ELEMENT_NODE &&
        node.hasAttribute( Attr );
};

/**
 * Compile view input to target framework format
 * @param {Node} node input DOM Node
 * @param {context} context input context
 * @returns {Array} compile output as string array
 */
const compile = ( node, context ) => {
    // indent in text node will add noise
    let exprExitWhen = node.getAttribute( Attr );
    if( exprExitWhen ) {
        exprExitWhen = exprExitWhen.replace( /(\r\n|\n|\r)/gm, '' ).trim();
        node.removeAttribute( Attr );
        node.setAttribute( Attr + '-hoc', `{{${exprExitWhen}}}` );
    }
    return context.compileFn( node, context );
};

module.exports = {
    when,
    compile
};
