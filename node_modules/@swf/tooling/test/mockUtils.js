/* eslint-disable complexity */
/* eslint-env es6, jest */
import utils from '../rewired/utils';
import { parseView } from '../view/utils';
import { default as viewCompile } from '../view/compiler';

export const mockGetViewDeps = () => {
    jest.spyOn( utils, 'getViewDep' ).mockImplementation( elemName => {
        if( elemName === 'AwButton' ) {
            return {
                import: 'import AwButton from \'viewmodel/AwButtonViewModel\'',
                props: {
                    action: {
                        type: 'action'
                    },
                    'button-type': {
                        type: 'string'
                    },
                    default: {
                        type: 'string'
                    },
                    size: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwTextbox' ) {
            return {
                import: 'import AwTextbox from \'viewmodel/AwTextboxViewModel\'',
                props: {
                    prop: {
                        type: 'field'
                    }
                }
            };
        } else if( elemName === 'AwTree' ) {
            return {
                import: 'import AwTree from \'viewmodel/AwTreeViewModel\'',
                props: {
                    tree: {
                        type: 'object'
                    },
                    name: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwTabSet' ) {
            return {
                import: 'import AwTabSet from \'viewmodel/AwTabSetViewModel\'',
                props: {
                    tabs: {
                        type: 'object'
                    },
                    'update-hook': {
                        type: 'object'
                    },
                    'tab-set-id': {
                        type: 'string'
                    },
                    action: {
                        type: 'action'
                    }
                }
            };
        } else if( elemName === 'AwCheckList' ) {
            return {
                import: 'import AwCheckList from \'viewmodel/AwCheckListViewModel\'',
                props: {
                    prop: {
                        type: 'field'
                    }
                }
            };
        } else if( elemName === 'AwCheckbox' ) {
            return {
                import: 'import AwCheckbox from \'viewmodel/AwCheckboxViewModel\'',
                props: {
                    prop: {
                        type: 'field'
                    },
                    action: {
                        type: 'action'
                    }
                }
            };
        } else if( elemName === 'AwSplmTable' ) {
            return {
                import: 'import AwSplmTable from \'viewmodel/AwSplmTableViewModel\'',
                props: {
                    gridid: {
                        type: 'grid'
                    },
                    'use-tree': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwDefaultCell' ) {
            return {
                import: 'import AwDefaultCell from \'viewmodel/AwDefaultCellViewModel\'',
                props: {
                    item: {
                        type: 'viewModelObject'
                    },
                    vmo: {
                        type: 'viewModelObject'
                    }
                }
            };
        } else if( elemName === 'AwGuidanceMessage' ) {
            return {
                import: 'import AwGuidanceMessage from \'viewmodel/AwGuidanceMessageViewModel\'',
                props: {
                    message: {
                        type: 'message'
                    }
                }
            };
        } else if( elemName === 'AwPopup' ) {
            return {
                import: 'import AwPopup from \'viewmodel/AwPopupViewModel\'',
                props: {
                    options: {
                        type: 'popup'
                    },
                    caption: {
                        type: 'string'
                    },
                    context: {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwChip' ) {
            return {
                import: 'import AwChip from \'viewmodel/AwChip\'',
                props: {
                    chip: {
                        type: 'object'
                    },
                    testfieldtype: {
                        type: 'field'
                    },
                    testgridtype: {
                        type: 'grid'
                    },
                    teststringtype: {
                        type: 'string'
                    },
                    testvmotype: {
                        type: 'viewModelObject'
                    },
                    testpopuptype: {
                        type: 'popup'
                    },
                    testmessagetype: {
                        type: 'message'
                    },
                    testactiontype: {
                        type: 'action'
                    },
                    testobjecttype: {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwCommandSubPanel' ) {
            return {
                import: 'import AwCommandSubPanel from \'viewmodel/AwCommandSubPanelViewModel\'',
                props: {
                    'panel-id': {
                        type: 'string'
                    },
                    'sub-panel-context': {
                        type: 'object'
                    },
                    'update-activeView': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwChart' ) {
            return {
                import: 'import AwChart from \'viewmodel/AwChartViewModel\'',
                props: {
                    'chart-provider': {
                        type: 'Object'
                    },
                    'chart-points': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwChipList' ) {
            return {
                import: 'import AwChipList from \'viewmodel/AwChipListViewModel\'',
                props: {
                    dataprovider: {
                        type: 'object'
                    },
                    prop: {
                        type: 'object'
                    },
                    chip: {
                        type: 'object'
                    },
                    'button-type': {
                        type: 'string'
                    },
                    action: {
                        type: 'action'
                    },
                    'ui-icon-action': {
                        type: 'action'
                    }
                }
            };
        } else if( elemName === 'AwI18n' ) {
            return {
                import: 'import AwI18n from \'viewmodel/AwI18nViewModel\'',
                props: {}
            };
        } else if( elemName === 'AwImage' ) {
            return {
                import: 'import AwImage from \'viewmodel/AwImageViewModel\'',
                props: {
                    source: {
                        type: 'object'
                    },
                    'is-icon': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwCommandPanel' ) {
            return {
                import: 'import AwCommandPanel from \'viewmodel/AwCommandPanelViewModel\'',
                props: {
                    'update-hook': {
                        type: 'object'
                    },
                    caption: {
                        type: 'string'
                    },
                    'hide-title': {
                        type: 'object'
                    },
                    anchor: {
                        type: 'object'
                    },
                    context: {
                        type: 'object'
                    },
                    'submit-action': {
                        type: 'action'
                    },
                    'sub-panel-context': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwCommandPanelSection' ) {
            return {
                import: 'import AwCommandPanelSection from \'viewmodel/AwCommandPanelSectionViewModel\'',
                props: {
                    caption: {
                        type: 'string'
                    },
                    name: {
                        type: 'string'
                    },
                    anchor: {
                        type: 'object'
                    },
                    commands: {
                        type: 'object'
                    },
                    context: {
                        type: 'object'
                    },
                    collapsed: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'aw-chart' ) {
            return {
                import: 'import aw-chart from \'viewmodel/aw-chartViewModel\'',
                props: {
                    caption: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwForm' ) {
            return {
                import: 'import AwForm from \'viewmodel/AwFormViewModel\'',
                props: {
                    caption: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'Form' ) {
            return {
                import: 'import Form from \'viewmodel/FormViewModel\'',
                props: {
                    caption: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwLink' ) {
            return {
                import: 'import AwLink from \'viewmodel/AwLinkViewModel\'',
                props: {
                    prop: {
                        type: 'field'
                    },
                    dataprovider: {
                        type: 'object'
                    },
                    action: {
                        type: 'action'
                    },
                    'link-options': {
                        type: 'object'
                    },
                    selectedprop: {
                        type: 'object'
                    },
                    'command-id': {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwFileUpload' ) {
            return {
                import: 'import AwFileUpload from \'viewmodel/AwFileUploadViewModel\'',
                props: {
                    prop: {
                        type: 'field'
                    },
                    'type-filter': {
                        type: 'string'
                    },
                    'form-data': {
                        type: 'object'
                    },
                    'file-change-action': {
                        type: 'action'
                    },
                    'is-required': {
                        type: 'object'
                    },
                    multiple: {
                        type: 'boolean'
                    },
                    'remove-tooltip': {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwWidget' ) {
            return {
                import: 'import AwWidget from \'viewmodel/AwWidgetViewModel\'',
                props: {
                    prop: {
                        type: 'field'
                    },
                    action: {
                        type: 'action'
                    },
                    modifiable: {
                        type: 'object'
                    },
                    hint: {
                        type: 'string'
                    },
                    'parameter-map': {
                        type: 'object'
                    },
                    labeldisplay: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwInclude' ) {
            return {
                import: 'import AwInclude from \'viewmodel/AwIncludeViewModel\'',
                props: {
                    name: {
                        type: 'string'
                    },
                    'view-id': {
                        type: 'string'
                    },
                    'view-path': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwSlider' ) {
            return {
                import: 'import AwSlider from \'viewmodel/AwSliderViewModel\'',
                props: {
                    'action-defs': {
                        type: 'object'
                    },
                    prop: {
                        type: 'field'
                    }
                }
            };
        } else if( elemName === 'AwSidenav' ) {
            return {
                import: 'import AwSidenav from \'viewmodel/AwSidenavViewModel\'',
                props: {
                    config: {
                        type: 'object'
                    },
                    id: {
                        type: 'string'
                    },
                    'sub-panel-context': {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwFlexRow' ) {
            return {
                import: 'import AwFlexRow from \'viewmodel/AwFlexRowViewModel\'',
                props: {}
            };
        } else if( elemName === 'AwFlexColumn' ) {
            return {
                import: 'import AwFlexColumn from \'viewmodel/AwFlexColumnViewModel\'',
                props: {}
            };
        } else if( elemName === 'AwDefaultGroupCell' ) {
            return {
                import: 'import AwDefaultGroupCell from \'viewmodel/AwDefaultGroupCellViewModel\'',
                props: {
                    item: {
                        type: 'viewModelObject'
                    },
                    vmo: {
                        type: 'viewModelObject'
                    },
                    hideoverlay: {
                        type: 'string'
                    }
                }
            };
        } else if( elemName === 'AwPanel' ) {
            return {
                import: 'import AwPanel from \'viewmodel/AwPanelViewModel\'',
                props: {
                    caption: {
                        type: 'string'
                    },
                    attributes: {
                        type: 'object'
                    },
                    'on-submit': {
                        type: 'action'
                    },
                    'submit-action': {
                        type: 'action'
                    },
                    'reveal-action': {
                        type: 'action'
                    }
                }
            };
        } else if( elemName === 'MfeCell' ) {
            return {
                import: 'import AwFlexColumn from \'viewmodel/MfeCellViewModel\'',
                props: {
                    vmo: {
                        type: 'object'
                    }
                }
            };
        } else if( elemName === 'AwList' ) {
            return {
                import: 'import AwList from \'viewmodel/AwListViewModel\'',
                props: {
                    props: {
                        dataprovider: {
                            type: 'object'
                        },
                        'show-check-box': {
                            type: 'string'
                        },
                        'item-options': {
                            type: 'object'
                        },
                        'show-context-menu': {
                            type: 'string'
                        },
                        'fixed-cell-height': {
                            type: 'string'
                        },
                        'use-virtual': {
                            type: 'boolean'
                        },
                        'show-drop-area': {
                            type: 'boolean'
                        },
                        'is-group-list': {
                            type: 'boolean'
                        },
                        'has-floating-cell-commands': {
                            type: 'boolean'
                        },
                        'show-decorators': {
                            type: 'boolean'
                        },
                        'command-context': {
                            type: 'object'
                        }
                    }
                }
            };
        } else if( elemName === 'AwListFilter' ) {
            return {
                import: 'import AwListFilter from \'viewmodel/AwListFilterViewModel\'',
                props: {
                    props: {
                        dataprovider: {
                            type: 'object'
                        },
                        'show-check-box': {
                            type: 'string'
                        },
                        'item-options': {
                            type: 'object'
                        },
                        'show-context-menu': {
                            type: 'string'
                        },
                        'fixed-cell-height': {
                            type: 'string'
                        },
                        'use-virtual': {
                            type: 'boolean'
                        },
                        'show-drop-area': {
                            type: 'boolean'
                        },
                        'is-group-list': {
                            type: 'boolean'
                        },
                        'has-floating-cell-commands': {
                            type: 'boolean'
                        },
                        'show-decorators': {
                            type: 'boolean'
                        },
                        'command-context': {
                            type: 'object'
                        }
                    }
                }
            };
        } else if( elemName === 'AwListCheckboxItem' ) {
            return { //aw-list-checkbox-item
                import: 'import AwListCheckboxItem from \'viewmodel/AwListCheckboxItemViewModel\'',
                props: {
                    props: {
                        prop: {
                            type: 'field'
                        },
                        action: {
                            type: 'action'
                        }
                    }
                }
            };
        } else if( elemName === 'AwHeaderCell' ) {
            return {
                import: 'import AwHeaderCell from \'viewmodel/AwHeaderCellViewModel\'',
                props: {
                    props: {
                        vmo: {
                            type: 'object'
                        },
                        title: {
                            type: 'string'
                        }
                    }
                }
            };
        } else if( elemName === 'AwCountryCell' ) {
            return {
                import: 'import AwCountryCell from \'viewmodel/AwCountryCellViewModel\'',
                props: {
                    props: {
                        vmo: {
                            type: 'object'
                        },
                        title: {
                            type: 'string'
                        }
                    }
                }
            };
        }
        return null;
    } );
};
export const customEvaluationContext = 'props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports';
export const evaluationContext = '{ ' + customEvaluationContext + ' }';

export const compile = ( source ) => {
    const parsedView = parseView( source );
    return viewCompile( parsedView );
};
