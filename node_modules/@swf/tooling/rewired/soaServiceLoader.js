// Copyright (c) 2022 Siemens

const { getSiteCache, getKitCache } = require( './utils' );
const { Stopwatch } = require( './perfUtils' );

const getSiteKitNames = ( siteKits ) => {
    let kits = [];
    for( const kit in siteKits ) {
        const kitDef = siteKits[ kit ];
        if( kitDef.content && kitDef.content.kits ) {
            kits = [ ...kits, ...kitDef.content.kits ];
        }
    }
    return kits;
};

module.exports = function populateSoaUnloadFlag( source ) {
    const stopwatch = new Stopwatch( 'soaServiceLoader' );
    let soaCacheUnloadFlag = null;
    let siteKits = getSiteCache();
    let siteKitNames = getSiteKitNames( siteKits );
    let kits = getKitCache();
    for( const kitName of siteKitNames ) {
        const kitDef = kits[ kitName ];
        if( kitDef && kitDef.content && kitDef.content.soaCacheUnloadFlag !== undefined ) {
            if( soaCacheUnloadFlag !== null && soaCacheUnloadFlag !== kitDef.content.soaCacheUnloadFlag ) {
                throw new Error( `soaCacheUnloadFlag field is defined twice with different value in ${kitDef.content.name}` );
            }
            soaCacheUnloadFlag = kitDef.content.soaCacheUnloadFlag;
        }
    }
    const output = source.replace( /['"]{{soaCacheUnloadFlag}}['"]/, soaCacheUnloadFlag ? soaCacheUnloadFlag : true );
    stopwatch.end();
    return output;
};
