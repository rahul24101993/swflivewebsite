// Copyright (c) 2022 Siemens

const _ = require( 'lodash' );
const { getEffectiveBootstrapCache } = require( './utils' );
const { Stopwatch } = require( './perfUtils' );

/**
 * main function of decl loader
 * @param {string} source input file content
 * @returns {string} modified source as return value
 */
module.exports = function loader( source ) {
    const stopwatch = new Stopwatch( 'bootstrapLoader' );

    // get all JSONs which needs to be stitch
    // revisitme - if we want to do better later, we can add those kit.json to the watch dependency of this loader
    const bootStrapCache = getEffectiveBootstrapCache();
    let res = [];
    res.push( '// postInitInsertHere' );
    // res.push( '/*' );
    _.forEach( bootStrapCache.postInit, line => {
        res.push( `    ${line}` );
    } );
    // res.push( '*/' );

    const output = source.replace( '// postInitInsertHere', res.join( '\n' ) );
    stopwatch.end();
    return output;
};
