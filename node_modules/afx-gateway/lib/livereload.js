const argv = require( 'yargs' ).argv;

const trace = require( 'debug' )( 'expressServer:livereload' );

/**
 * @param {Object} app - express application
 * @param { Object } logger - logger
 * @param {Object} exportsIn - exports input
 * @param {String} siteDir - path to site directory
 * @param {Number} options - options
 */
module.exports = function( app, logger, exportsIn, siteDir, {
    port = 0
} ) {
    trace( 'port', port );
    trace( 'argv.livereload', argv.livereload );

    port = argv.livereload || port;

    if( !port ) { return; }

    const path = require( 'path' );

    const livereload = require( 'connect-livereload' );
    app.use( livereload( { port: port } ) );

    const lrserver = require( 'tiny-lr' )();
    lrserver.listen( port, () => {
        trace( 'listening', port );
        logger.info( `+ Autoreload listening on port ${port}` );
    } );

    /**
     * Notify Live Reload.
     *
     * @param {String[]} eventPaths - event
     */
    exportsIn.notifyLiveReload = function( eventPaths ) {
        trace( 'eventPaths', eventPaths );
        const files = [];
        for( let eventPath of eventPaths ) {
            if( /\.css$/.test( eventPath ) &&
                !/(overlay|Theme)\.css$/.test( eventPath ) ) {
                files.push( normalizePath( `${siteDir}/assets/main.css` ) );
            } else {
                const name = eventPath.replace( path.dirname( path.dirname( eventPath ) ), '' );
                files.push( normalizePath( `${siteDir}/assets${name}` ) );
            }
        }
        trace( 'notifyLiveReload', files );
        lrserver.changed( { body: { files: files } } );
        logger.verbose( `Changed files:\n\t${files.join( '\n\t' )}` );
    };
};

/**
 * Normalize the path by using forward slashes instead of back slashes.
 *
 * @param {String} inputPath - input file path
 * @return {String} normalized file path
 */
function normalizePath( inputPath ) {
    return inputPath.replace( /\\/g, '/' );
}
