{"code":"(this.webpackJsonpcreatingjsxcomponent=this.webpackJsonpcreatingjsxcomponent||[]).push([[47],{3112:function(e,t,r){\"use strict\";r.r(t),r.d(t,\"updateSearchContext\",(function(){return f})),r.d(t,\"createStateFromUrl\",(function(){return F})),r.d(t,\"createSearchFilterMapFromUrl\",(function(){return v})),r.d(t,\"getSearchFilterStringFromActiveFilterMap\",(function(){return C})),r.d(t,\"getActiveFilters\",(function(){return b})),r.d(t,\"lazyUpdate\",(function(){return m})),r.d(t,\"updateURL\",(function(){return y})),r.d(t,\"updateSearchCriteria\",(function(){return A})),r.d(t,\"syncStateFromUrl\",(function(){return M})),r.d(t,\"getSelectedFiltersMap\",(function(){return x})),r.d(t,\"updateSearchPWASelectionModel\",(function(){return U})),r.d(t,\"getActiveSublocationTab\",(function(){return O})),r.d(t,\"updateChartsDataOnSelectionChange\",(function(){return T})),r.d(t,\"updateSublocationTabs\",(function(){return _})),r.d(t,\"updateGlobalSelection\",(function(){return V})),r.d(t,\"updateSelectionQueryParamInURL\",(function(){return k})),r.d(t,\"updateSearchStateWithSelectionData\",(function(){return I}));var a=r(1),i=r.n(a),l=r(2968),n=r(2996),c=r(12),o=r(43),s=r(15);const u={constructBaseSearchCriteria:(e,t)=>{const r=c.default.getCtx(\"preferences\"),a=r.AWC_ColorFiltering[0];e.colorToggle=e.showChartColorBars?a:\"false\",e.forceChart=u.getForceChartParameterValue(e),e.bulkFiltering=!1!==e.bulkFiltering,e.showAutoUpdateFilteringOption=u.getValueForShowAutoUpdateFilteringOption(),e.bulkFilteringPreference=\"AWC_Search_Auto_Update_Filters\",e.autoApplyFilters=!e.bulkFiltering||u.getAutoUpdateFilteringPreferenceValue(),e.bulkFiltersApplied=!1;const i=c.default.getCtx(\"searchPreFilters\"),l=i?i.ownPrefilters:void 0,n=i?i.catPrefilters:void 0;if(\"Awp0FullTextSearchProvider\"===e.provider)e.criteria=e.criteria?e.criteria:{},e.criteria.limitedFilterCategoriesEnabled=e.criteria&&e.criteria.limitedFilterCategoriesEnabled?e.criteria.limitedFilterCategoriesEnabled:r.AWC_Limited_Filter_Categories_Enabled[0],e.criteria.listOfExpandedCategories=\"\",n&&n.selectedCategory&&n.selectedCategory.length>0||l&&l.selectedCategory&&l.selectedCategory.length>0?e.criteria.forceThreshold=\"true\":t&&t.hasOwnProperty(\"filter\")&&t.filter&&t.filter.length>0&&(e.criteria.forceThreshold=\"false\"),t&&t.hasOwnProperty(\"savedSearchUid\")&&(e.criteria.savedSearchUid=t.savedSearchUid);return e},getForceChartParameterValue:e=>{let t=!0;if(e&&e.selectFirstObjectPreference){let r=c.default.getCtx(\"preferences.\"+e.selectFirstObjectPreference);r=r&&r[0]?r[0].toLowerCase():void 0,t=\"true\"!==r}return t},getCriteriaForNewSearch:(e,t)=>{let r=e.criteria;if(r&&(r.searchString=t,\"Awp0FullTextSearchProvider\"===e.provider))r.forceThreshold=\"true\",r.listOfExpandedCategories=\"\";return r},getCriteriaAfterFilterSelection:e=>{let t=e.criteria;if(\"Awp0FullTextSearchProvider\"===e.provider)t.forceThreshold=\"false\",e.additionalSearchString&&e.additionalSearchString.length>0&&(t.searchString=e.additionalSearchString);return t},getAutoUpdateFilteringPreferenceValue:()=>{let e=!0,t=c.default.getCtx(\"preferences.AWC_Search_Auto_Update_Filters\");return t=t&&t[0]?t[0].toLowerCase():void 0,e=\"false\"!==t,e},getValueForShowAutoUpdateFilteringOption:()=>{let e=!0,t=c.default.getCtx(\"preferences.AWC_Search_Show_Auto_Update_Filters\");return t=t&&t[0]?t[0].toLowerCase():void 0,e=\"false\"!==t,e}};var d=u,p=r(3100),g=r(2993),h=r(39);const S=new(r.n(h).a)(\"selection\"),f=e=>{var t=c.default.getCtx(e.clientScopeURI+\".sortCriteria\");void 0===t||\"\"===t?(c.default.updatePartialCtx(e.clientScopeURI+\".sortCriteria\",[]),c.default.updatePartialCtx(\"sublocation.sortCriteria\",[])):c.default.updatePartialCtx(\"sublocation.sortCriteria\",t)},F=(e,t,r,a,i,n,c)=>{if(i)return;const[u,p]=w(t,r,a),g=o.a.instance,h=g.params,S=e.context&&e.context.search?e.context.search:{},f=e.selectionQueryParamKey?e.selectionQueryParamKey:\"s_uid\";let F,C,b=\"\",m=\"\";h.hasOwnProperty(\"searchCriteria\")&&(b=h.searchCriteria?h.searchCriteria:b),h.hasOwnProperty(\"filter\")&&(m=h.filter?h.filter:m),h.hasOwnProperty(f)&&(F=h[f],C=f);const P=g.current.data&&g.current.data.label?g.current.data.label:\"\";const y={...d.constructBaseSearchCriteria(S,h)},A=S.chartTitle;let M=A?s.default.getLocalizedText(A.source,A.key):new Promise((e=>e())),x=y.criteria&&y.criteria.hasOwnProperty(\"searchString\")&&y.criteria.searchString.length>0?y.criteria.searchString:b;return M.then((t=>{const{activeFilterMap:r}=v(e),a=l.a.getFilters();y.criteria=Object.assign({},y.criteria,n),y.criteria.searchString=x;let i={searchStringPrimary:x,searchStringSecondary:\"\",label:P,filterString:m,totalFound:S.showLoadingText?void 0:0,loadDataAction:S.loadDataAction,provider:S.provider,sortType:S.sortType,chartTitle:t,objectsGroupedByProperty:null,activeFilters:a,activeFilterMap:r,searchInProgress:x&&x.length>0||m&&m.length>0,searchFilterMap:{},selectionQueryParam:{key:C,value:F}};Object.assign(y,i),p?p(y):u.update(y),U(c,i.selectionQueryParam)}))},v=e=>({activeFilterMap:l.a.buildSearchFilters(e.context).activeFilterMap}),C=e=>{let t={};if(e&&e.length>0)for(let r=0;r<e.length;r++){let a=e[r];t[a.name]=a.values}return l.a.buildFilterString(t)},b=e=>{const t=e.map((e=>e&&e.filterValues&&e.filterValues.length>0?e.filterValues.filter((e=>e.selected.value)):[]));return i.a.flatten(t)},m=(e,t)=>{if(e&&e.activeFilters){let r=o.a.instance.params.searchCriteria;const a=l.a.buildFilterString(e.activeFilters);if(e.filterString!==a&&(e.autoApplyFilters||e.bulkFiltersApplied)){const r=l.a.buildSearchFiltersFromSearchState(e.activeFilters);let i=d.getCriteriaAfterFilterSelection(e),n=d.getForceChartParameterValue(e);if(l.a.doSearch(null,i?i.searchString:null,e.activeFilters),t)t({...e,criteria:i,forceChart:n,filterString:a,activeFilterMap:r.activeFilterMap,searchInProgress:!0,categories:void 0,additionalSearchString:void 0});else{let t={...e.value};t.criteria=i,t.forceChart=n,t.filterString=a,t.activeFilterMap=r.activeFilterMap,t.searchInProgress=!0,t.categories=void 0,t.additionalSearchString=void 0,e.update(t)}}else if(a===e.selectedFiltersString||e.autoApplyFilters||e.bulkFiltersApplied){if(r&&e.criteria&&e.criteria.searchString!==r)if(l.a.doSearch(null,e.criteria.searchString,e.activeFilters),t)t({...e,categories:void 0});else{let t={...e.value};t.categories=void 0,e.update(t)}}else{e.selectedFiltersString=a;const r=l.a.getPendingFiltersMap(e.activeFilters,e.activeFilterMap),i=l.a.buildSearchFiltersFromSearchState(r.positivePendingFilterMap),n=l.a.buildSearchFiltersFromSearchState(r.negativePendingFilterMap);if(t)t({...e,positivePendingFilters:i.activeFilters,negativePendingFilters:n.activeFilters,positivePendingFilterMap:i.activeFilterMap,negativePendingFilterMap:n.activeFilterMap});else{let t={...e.value};t.positivePendingFilters=i.activeFilters,t.negativePendingFilters=n.activeFilters,t.positivePendingFilterMap=i.activeFilterMap,t.negativePendingFilterMap=n.activeFilterMap,e.update(t)}}}else if(o.a.instance.params.filter&&e.filterString!==o.a.instance.params.filter)if(t)t({...e,filterString:o.a.instance.params.filter});else{let t={...e.value};t.filterString=o.a.instance.params.filter,e.update(t)}};let P=i.a.debounce(((e,t)=>{m(e,t)}),800);const y=(e,t,r,a)=>{if(a)return;const[i,l]=w(e,t,r);P(i,l)},A=(e,t,r)=>{let a=e.getAtomicData();const i=Object.assign({},a.criteria,r);t.searchState({...a,criteria:i})},w=(e,t,r)=>{const a=e||t;return e&&e.update?[a,void 0]:[a,r.searchState]},M=(e,t,r)=>{const[a,i]=w(e,t,r),n=o.a.instance.params;let c=null,s=\"\";if(n.hasOwnProperty(\"searchCriteria\")&&(c=n.searchCriteria),n.hasOwnProperty(\"filter\")&&(s=n.filter?n.filter:s),c&&a&&a.criteria&&a.criteria.searchString!==c||s!==a.filterString){const e=l.a.getFilterMapWithPrefilters(),t=l.a.buildSearchFiltersFromSearchState(e);let r={criteria:d.getCriteriaForNewSearch(a,c),searchStringPrimary:c,searchStringSecondary:\"\",activeFilters:e,activeFilterMap:t.activeFilterMap,categories:[],filterString:s,searchFilterCategories:[],categoriesExpandCollapseMap:void 0,allCategoriesVisible:void 0,searchInProgress:!0,totalFound:a.showLoadingText?void 0:0,forceChart:d.getForceChartParameterValue(a)};if(r.criteriaJSONString=JSON.stringify(r.criteria),i)i({...a,...r});else{let e={...a.value};Object.assign(e,r),a.update(e)}}},x=e=>{var t={};for(const[r,a]of Object.entries(e))if(a){let e=[];a.filterValues&&a.filterValues.length>0&&a.filterValues.forEach((r=>{if(r.selected.dbValue)switch(a.type){case\"NumericFilter\":{let t=n.a.INTERNAL_NUMERIC_FILTER+r.internalName;e.push(t);break}case\"DateFilter\":{let e=t[r.categoryName]?t[r.categoryName]:[];e.push(r.internalName),t[r.categoryName]=e;break}default:e.push(r.internalName)}})),a.numericRangeString&&e.push(a.numericRangeString),a.dateRangeString&&e.push(a.dateRangeString),e.length&&(t[a.internalName]=e)}return l.a.removeDependentDateFilters(t)},U=(e,t)=>{!e.getSelection().length&&t&&t.value&&e.setSelection([t.value])},O=e=>{let t=\"\";if(e&&e.length>0){let r=e.filter((e=>e.selectedTab))[0];t=r.id||r.tabKey||r.name}return t},T=(e,t,r)=>{const[a,i]=w(e,t,r);if(a&&a.pwaSelection){const e=a.pwaSelection,t=!e||0===e.length,r=t?\"true\":\"false\";if(i)i({...a,forceChart:t,recreateChartProvider:r});else{let e={...a.value};e.forceChart=t,e.recreateChartProvider=r,a.update(e)}}},_=(e,t)=>{e&&t.dbValue&&t.dbValue.primaryActiveTabId&&\"\"!==t.dbValue.primaryActiveTabId&&Object(p.tabCallbackApi)(void 0,t.dbValue.primaryActiveTabId,e)},V=(e,t)=>{i.a.isEmpty(e)||(t?t.update(e):g.a.updateSelection(e.selected,e.pselected,e.relationInfo),S(\"AwSearchSublocationService selectionData: \",e))},k=(e,t)=>{const r=e||t;if(r.selectionQueryParam&&r.selectionQueryParam.key){let e=r.pwaSelection&&1===r.pwaSelection.length?r.pwaSelection[0].uid:null;o.a.instance.go(\".\",{[r.selectionQueryParam.key]:e})}},I=(e,t,r)=>{const a=e||t;if(!i.a.isEmpty(r)){let e=a?{...a.value}:void 0;e&&(\"primary\"===r.source?e.pwaSelection=r.selected?r.selected:[]:\"base\"!==r.source&&void 0!==r.source||(e.pwaSelection=[]),a.update(e))}},N={updateSearchContext:f,createStateFromUrl:F,createSearchFilterMapFromUrl:v,getSearchFilterStringFromActiveFilterMap:C,getActiveFilters:b,lazyUpdate:m,updateURL:y,updateSearchCriteria:A,syncStateFromUrl:M,getSelectedFiltersMap:x,updateSearchPWASelectionModel:U,getActiveSublocationTab:O,updateChartsDataOnSelectionChange:T,updateSublocationTabs:_,updateGlobalSelection:V,updateSearchStateWithSelectionData:I,updateSelectionQueryParamInURL:k};t.default=N}}]);","name":"static/js/47.960c26fc.chunk.js","input":"(this[\"webpackJsonpcreatingjsxcomponent\"] = this[\"webpackJsonpcreatingjsxcomponent\"] || []).push([[47],{\n\n/***/ 3112:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"updateSearchContext\", function() { return /* binding */ updateSearchContext; });\n__webpack_require__.d(__webpack_exports__, \"createStateFromUrl\", function() { return /* binding */ createStateFromUrl; });\n__webpack_require__.d(__webpack_exports__, \"createSearchFilterMapFromUrl\", function() { return /* binding */ createSearchFilterMapFromUrl; });\n__webpack_require__.d(__webpack_exports__, \"getSearchFilterStringFromActiveFilterMap\", function() { return /* binding */ getSearchFilterStringFromActiveFilterMap; });\n__webpack_require__.d(__webpack_exports__, \"getActiveFilters\", function() { return /* binding */ getActiveFilters; });\n__webpack_require__.d(__webpack_exports__, \"lazyUpdate\", function() { return /* binding */ lazyUpdate; });\n__webpack_require__.d(__webpack_exports__, \"updateURL\", function() { return /* binding */ updateURL; });\n__webpack_require__.d(__webpack_exports__, \"updateSearchCriteria\", function() { return /* binding */ updateSearchCriteria; });\n__webpack_require__.d(__webpack_exports__, \"syncStateFromUrl\", function() { return /* binding */ syncStateFromUrl; });\n__webpack_require__.d(__webpack_exports__, \"getSelectedFiltersMap\", function() { return /* binding */ getSelectedFiltersMap; });\n__webpack_require__.d(__webpack_exports__, \"updateSearchPWASelectionModel\", function() { return /* binding */ updateSearchPWASelectionModel; });\n__webpack_require__.d(__webpack_exports__, \"getActiveSublocationTab\", function() { return /* binding */ getActiveSublocationTab; });\n__webpack_require__.d(__webpack_exports__, \"updateChartsDataOnSelectionChange\", function() { return /* binding */ updateChartsDataOnSelectionChange; });\n__webpack_require__.d(__webpack_exports__, \"updateSublocationTabs\", function() { return /* binding */ updateSublocationTabs; });\n__webpack_require__.d(__webpack_exports__, \"updateGlobalSelection\", function() { return /* binding */ updateGlobalSelection; });\n__webpack_require__.d(__webpack_exports__, \"updateSelectionQueryParamInURL\", function() { return /* binding */ updateSelectionQueryParamInURL; });\n__webpack_require__.d(__webpack_exports__, \"updateSearchStateWithSelectionData\", function() { return /* binding */ updateSearchStateWithSelectionData; });\n\n// EXTERNAL MODULE: ./node_modules/lodash/lodash.js\nvar lodash = __webpack_require__(1);\nvar lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);\n\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/searchcore/src/js/aw.searchFilter.service.js\nvar aw_searchFilter_service = __webpack_require__(2968);\n\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/searchcore/src/js/filterPanelUtils.js\nvar filterPanelUtils = __webpack_require__(2996);\n\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/declarativeui/src/js/appCtxService.js\nvar appCtxService = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/services/src/js/awStateService.js\nvar awStateService = __webpack_require__(43);\n\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/kernel/src/js/localeService.js + 1 modules\nvar localeService = __webpack_require__(15);\n\n// CONCATENATED MODULE: ./node_modules/@swf/core/src/searchcore/src/js/searchStateHelperService.js\n//@<COPYRIGHT>@\n//==================================================\n//Copyright 2022.\n//Siemens Product Lifecycle Management Software Inc.\n//All Rights Reserved.\n//==================================================\n//@<COPYRIGHT>@\n/*global\n */ /**\n * @module js/searchStateHelperService\n */const getForceChartParameterValue=searchState=>{let forceChart=true;if(searchState&&searchState.selectFirstObjectPreference){let firstObjectSelectionPref=appCtxService[\"default\"].getCtx('preferences.'+searchState.selectFirstObjectPreference);firstObjectSelectionPref=firstObjectSelectionPref&&firstObjectSelectionPref[0]?firstObjectSelectionPref[0].toLowerCase():undefined;forceChart=firstObjectSelectionPref!=='true';}return forceChart;};const getAutoUpdateFilteringPreferenceValue=()=>{let autoApplyFilters=true;let autoApplyFiltersPreference=appCtxService[\"default\"].getCtx('preferences.AWC_Search_Auto_Update_Filters');autoApplyFiltersPreference=autoApplyFiltersPreference&&autoApplyFiltersPreference[0]?autoApplyFiltersPreference[0].toLowerCase():undefined;autoApplyFilters=autoApplyFiltersPreference!=='false';return autoApplyFilters;};const getValueForShowAutoUpdateFilteringOption=()=>{let showAutoUpdateFilteringOption=true;let showAutoUpdateFiltersPreferenceValue=appCtxService[\"default\"].getCtx('preferences.AWC_Search_Show_Auto_Update_Filters');showAutoUpdateFiltersPreferenceValue=showAutoUpdateFiltersPreferenceValue&&showAutoUpdateFiltersPreferenceValue[0]?showAutoUpdateFiltersPreferenceValue[0].toLowerCase():undefined;showAutoUpdateFilteringOption=showAutoUpdateFiltersPreferenceValue!=='false';return showAutoUpdateFilteringOption;};const constructBaseSearchCriteria=(searchContext,stateParams)=>{const preferences=appCtxService[\"default\"].getCtx('preferences');const colorFilteringValue=preferences.AWC_ColorFiltering[0];searchContext.colorToggle=searchContext.showChartColorBars?colorFilteringValue:'false';searchContext.forceChart=searchStateHelperService.getForceChartParameterValue(searchContext);searchContext.bulkFiltering=searchContext.bulkFiltering!==false;searchContext.showAutoUpdateFilteringOption=searchStateHelperService.getValueForShowAutoUpdateFilteringOption();searchContext.bulkFilteringPreference='AWC_Search_Auto_Update_Filters';searchContext.autoApplyFilters=searchContext.bulkFiltering?searchStateHelperService.getAutoUpdateFilteringPreferenceValue():true;searchContext.bulkFiltersApplied=false;const searchPreFilters=appCtxService[\"default\"].getCtx('searchPreFilters');const ownerPreFilters=searchPreFilters?searchPreFilters.ownPrefilters:undefined;const categoryPreFilters=searchPreFilters?searchPreFilters.catPrefilters:undefined;switch(searchContext.provider){case'Awp0FullTextSearchProvider':{searchContext.criteria=searchContext.criteria?searchContext.criteria:{};searchContext.criteria.limitedFilterCategoriesEnabled=searchContext.criteria&&searchContext.criteria.limitedFilterCategoriesEnabled?searchContext.criteria.limitedFilterCategoriesEnabled:preferences.AWC_Limited_Filter_Categories_Enabled[0];searchContext.criteria.listOfExpandedCategories='';if(categoryPreFilters&&categoryPreFilters.selectedCategory&&categoryPreFilters.selectedCategory.length>0||ownerPreFilters&&ownerPreFilters.selectedCategory&&ownerPreFilters.selectedCategory.length>0){searchContext.criteria.forceThreshold='true';}else if(stateParams&&stateParams.hasOwnProperty('filter')&&stateParams.filter&&stateParams.filter.length>0){searchContext.criteria.forceThreshold='false';}if(stateParams&&stateParams.hasOwnProperty('savedSearchUid')){searchContext.criteria.savedSearchUid=stateParams.savedSearchUid;}}}return searchContext;};const getCriteriaForNewSearch=(searchState,urlSearchString)=>{let criteria=searchState.criteria;if(criteria){criteria.searchString=urlSearchString;switch(searchState.provider){case'Awp0FullTextSearchProvider':{criteria.forceThreshold='true';criteria.listOfExpandedCategories='';}}}return criteria;};const getCriteriaAfterFilterSelection=searchState=>{let criteria=searchState.criteria;switch(searchState.provider){case'Awp0FullTextSearchProvider':{criteria.forceThreshold='false';if(searchState.additionalSearchString&&searchState.additionalSearchString.length>0){criteria.searchString=searchState.additionalSearchString;}}}return criteria;};const searchStateHelperService={constructBaseSearchCriteria,getForceChartParameterValue,getCriteriaForNewSearch,getCriteriaAfterFilterSelection,getAutoUpdateFilteringPreferenceValue,getValueForShowAutoUpdateFilteringOption};/* harmony default export */ var js_searchStateHelperService = (searchStateHelperService);\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/searchcore/src/js/awSearchLocationService.js\nvar awSearchLocationService = __webpack_require__(3100);\n\n// EXTERNAL MODULE: ./node_modules/@swf/core/src/ui/src/js/selection.service.js\nvar selection_service = __webpack_require__(2993);\n\n// EXTERNAL MODULE: ./node_modules/debug/src/browser.js\nvar browser = __webpack_require__(39);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// CONCATENATED MODULE: ./node_modules/@swf/core/src/searchcore/src/js/awSearchSublocationService.js\n// Copyright (c) 2021 Siemens\n/**\n * @module js/awSearchSublocationService\n */const trace=new browser_default.a('selection');const updateSearchContext=provider=>{// Set the sort criteria for sublocation if its not already populated in ctx.ClientScopeURI.sortCriteria\n// This sort criteria will be shared across all views in a sublocation in a given session.\nvar sortCriteria=appCtxService[\"default\"].getCtx(provider.clientScopeURI+'.sortCriteria');if(sortCriteria===undefined||sortCriteria===''){appCtxService[\"default\"].updatePartialCtx(provider.clientScopeURI+'.sortCriteria',[]);appCtxService[\"default\"].updatePartialCtx('sublocation.sortCriteria',[]);}else{appCtxService[\"default\"].updatePartialCtx('sublocation.sortCriteria',sortCriteria);}};/**\n * This API would re-create the VMO's from the URL on Mount of subLocation.\n * @param {*} searchString\n * @param {*} totalFound\n * @param {*} provider\n */const createStateFromUrl=(provider,searchStateProp,searchState,searchStateUpdater,skipURL,searchCriteria,pwaSelectionModel)=>{if(skipURL){return;}const[defaultSearchStateData,updateAtomicData]=getSearchState(searchStateProp,searchState,searchStateUpdater);const stateProvider=awStateService[\"a\" /* default */].instance;const changedParams=stateProvider.params;const searchContext=provider.context&&provider.context.search?provider.context.search:{};const providerSelectionQueryParamKey=provider.selectionQueryParamKey?provider.selectionQueryParamKey:'s_uid';let selectionQueryParamValue;let selectionQueryParamKey;let searchString='';let filterStringFromUrl='';if(changedParams.hasOwnProperty('searchCriteria')){searchString=changedParams.searchCriteria?changedParams.searchCriteria:searchString;}if(changedParams.hasOwnProperty('filter')){filterStringFromUrl=changedParams.filter?changedParams.filter:filterStringFromUrl;}if(changedParams.hasOwnProperty(providerSelectionQueryParamKey)){selectionQueryParamValue=changedParams[providerSelectionQueryParamKey];selectionQueryParamKey=providerSelectionQueryParamKey;}const bcLabel=stateProvider.current.data&&stateProvider.current.data.label?stateProvider.current.data.label:'';let updatedSearchContext=js_searchStateHelperService.constructBaseSearchCriteria(searchContext,changedParams);const searchStateData={...updatedSearchContext};const chartTitle=searchContext.chartTitle;// Need to evaluate from props.chartTitle i18n\nlet promise=chartTitle?localeService[\"default\"].getLocalizedText(chartTitle.source,chartTitle.key):new Promise(resolve=>resolve());let searchStr=searchStateData.criteria&&searchStateData.criteria.hasOwnProperty('searchString')&&searchStateData.criteria.searchString.length>0?searchStateData.criteria.searchString:searchString;return promise.then(chartTitleValue=>{const{activeFilterMap}=createSearchFilterMapFromUrl(provider);const activeFilters=aw_searchFilter_service[\"a\" /* default */].getFilters();searchStateData.criteria=Object.assign({},searchStateData.criteria,searchCriteria);searchStateData.criteria.searchString=searchStr;let resolvedData={searchStringPrimary:searchStr,searchStringSecondary:'',label:bcLabel,filterString:filterStringFromUrl,totalFound:searchContext.showLoadingText?undefined:0,loadDataAction:searchContext.loadDataAction,provider:searchContext.provider,sortType:searchContext.sortType,chartTitle:chartTitleValue,objectsGroupedByProperty:null,activeFilters:activeFilters,activeFilterMap:activeFilterMap,searchInProgress:searchStr&&searchStr.length>0||filterStringFromUrl&&filterStringFromUrl.length>0,searchFilterMap:{},selectionQueryParam:{key:selectionQueryParamKey,value:selectionQueryParamValue}};Object.assign(searchStateData,resolvedData);if(updateAtomicData){updateAtomicData(searchStateData);}else{defaultSearchStateData.update(searchStateData);}updateSearchPWASelectionModel(pwaSelectionModel,resolvedData.selectionQueryParam);});};const createSearchFilterMapFromUrl=provider=>{let searchContext=aw_searchFilter_service[\"a\" /* default */].buildSearchFilters(provider.context);return{activeFilterMap:searchContext.activeFilterMap};};const getSearchFilterStringFromActiveFilterMap=activeFilters=>{let searchFilterMap={};if(activeFilters&&activeFilters.length>0){for(let index=0;index<activeFilters.length;index++){let eachActiveFilterCategory=activeFilters[index];searchFilterMap[eachActiveFilterCategory.name]=eachActiveFilterCategory.values;}}return aw_searchFilter_service[\"a\" /* default */].buildFilterString(searchFilterMap);};const getActiveFilters=searchFilterCategories=>{const allSelectedFilters=searchFilterCategories.map(category=>{if(category&&category.filterValues&&category.filterValues.length>0){return category.filterValues.filter(filterObject=>{return filterObject.selected.value;});}return[];});return lodash_default.a.flatten(allSelectedFilters);};const lazyUpdate=(searchState,updateAtomicData)=>{// update URL if there are selection in filter panel\nif(searchState&&searchState.activeFilters){let searchCriteria=awStateService[\"a\" /* default */].instance.params.searchCriteria;const filterString=aw_searchFilter_service[\"a\" /* default */].buildFilterString(searchState.activeFilters);if(searchState.filterString!==filterString&&(searchState.autoApplyFilters||searchState.bulkFiltersApplied)){const selectedFiltersInfo=aw_searchFilter_service[\"a\" /* default */].buildSearchFiltersFromSearchState(searchState.activeFilters);let updatedCriteria=js_searchStateHelperService.getCriteriaAfterFilterSelection(searchState);let forceChart=js_searchStateHelperService.getForceChartParameterValue(searchState);aw_searchFilter_service[\"a\" /* default */].doSearch(null,updatedCriteria?updatedCriteria.searchString:null,searchState.activeFilters);if(updateAtomicData){updateAtomicData({...searchState,criteria:updatedCriteria,forceChart:forceChart,filterString:filterString,activeFilterMap:selectedFiltersInfo.activeFilterMap,searchInProgress:true,categories:undefined,additionalSearchString:undefined});}else{let newSearchState={...searchState.value};newSearchState.criteria=updatedCriteria;newSearchState.forceChart=forceChart;newSearchState.filterString=filterString;newSearchState.activeFilterMap=selectedFiltersInfo.activeFilterMap;newSearchState.searchInProgress=true;newSearchState.categories=undefined;newSearchState.additionalSearchString=undefined;searchState.update(newSearchState);}}else if(filterString!==searchState.selectedFiltersString&&!searchState.autoApplyFilters&&!searchState.bulkFiltersApplied){searchState.selectedFiltersString=filterString;const pendingFilterMapInfo=aw_searchFilter_service[\"a\" /* default */].getPendingFiltersMap(searchState.activeFilters,searchState.activeFilterMap);const positivePendingFiltersInfo=aw_searchFilter_service[\"a\" /* default */].buildSearchFiltersFromSearchState(pendingFilterMapInfo.positivePendingFilterMap);const negativePendingFiltersInfo=aw_searchFilter_service[\"a\" /* default */].buildSearchFiltersFromSearchState(pendingFilterMapInfo.negativePendingFilterMap);if(updateAtomicData){updateAtomicData({...searchState,positivePendingFilters:positivePendingFiltersInfo.activeFilters,negativePendingFilters:negativePendingFiltersInfo.activeFilters,positivePendingFilterMap:positivePendingFiltersInfo.activeFilterMap,negativePendingFilterMap:negativePendingFiltersInfo.activeFilterMap});}else{let newSearchState={...searchState.value};newSearchState.positivePendingFilters=positivePendingFiltersInfo.activeFilters;newSearchState.negativePendingFilters=negativePendingFiltersInfo.activeFilters;newSearchState.positivePendingFilterMap=positivePendingFiltersInfo.activeFilterMap;newSearchState.negativePendingFilterMap=negativePendingFiltersInfo.activeFilterMap;searchState.update(newSearchState);}}else if(searchCriteria&&searchState.criteria&&searchState.criteria.searchString!==searchCriteria){aw_searchFilter_service[\"a\" /* default */].doSearch(null,searchState.criteria.searchString,searchState.activeFilters);if(updateAtomicData){updateAtomicData({...searchState,categories:undefined});}else{let newSearchState={...searchState.value};newSearchState.categories=undefined;searchState.update(newSearchState);}}}else if(awStateService[\"a\" /* default */].instance.params.filter){//Or no change in filter panel but prefilter is changed\nif(searchState.filterString!==awStateService[\"a\" /* default */].instance.params.filter){if(updateAtomicData){updateAtomicData({...searchState,filterString:awStateService[\"a\" /* default */].instance.params.filter});}else{let newSearchState={...searchState.value};newSearchState.filterString=awStateService[\"a\" /* default */].instance.params.filter;searchState.update(newSearchState);}}}};let debounceUpdateURL=lodash_default.a.debounce((searchState,updateAtomicData)=>{lazyUpdate(searchState,updateAtomicData);},800);const updateURL=(searchStateProp,searchState,searchStateUpdater,skipURL)=>{if(skipURL){return;}const[searchStateData,updateAtomicData]=getSearchState(searchStateProp,searchState,searchStateUpdater);debounceUpdateURL(searchStateData,updateAtomicData);};const updateSearchCriteria=(searchStateAtomicDataRef,searchStateUpdater,searchCriteria)=>{let searchState=searchStateAtomicDataRef.getAtomicData();const criteria=Object.assign({},searchState.criteria,searchCriteria);searchStateUpdater.searchState({...searchState,criteria});};const getSearchState=(searchStateProp,searchState,searchStateUpdater)=>{const searchStateData=searchStateProp?searchStateProp:searchState;if(searchStateProp&&searchStateProp.update){return[searchStateData,undefined];}return[searchStateData,searchStateUpdater.searchState];};const syncStateFromUrl=(searchStateProp,searchStateData,searchStateUpdater)=>{const[searchState,updateAtomicData]=getSearchState(searchStateProp,searchStateData,searchStateUpdater);const stateProvider=awStateService[\"a\" /* default */].instance;const changedParams=stateProvider.params;let urlSearchString=null;let urlFilterString='';if(changedParams.hasOwnProperty('searchCriteria')){urlSearchString=changedParams.searchCriteria;}if(changedParams.hasOwnProperty('filter')){urlFilterString=changedParams.filter?changedParams.filter:urlFilterString;}if(urlSearchString&&searchState&&searchState.criteria&&searchState.criteria.searchString!==urlSearchString||urlFilterString!==searchState.filterString){const prefilterMap=aw_searchFilter_service[\"a\" /* default */].getFilterMapWithPrefilters();const activeFiltersInfo=aw_searchFilter_service[\"a\" /* default */].buildSearchFiltersFromSearchState(prefilterMap);let newSearchCriteria={criteria:js_searchStateHelperService.getCriteriaForNewSearch(searchState,urlSearchString),searchStringPrimary:urlSearchString,searchStringSecondary:'',activeFilters:prefilterMap,activeFilterMap:activeFiltersInfo.activeFilterMap,categories:[],filterString:urlFilterString,searchFilterCategories:[],categoriesExpandCollapseMap:undefined,allCategoriesVisible:undefined,searchInProgress:true,totalFound:searchState.showLoadingText?undefined:0,forceChart:js_searchStateHelperService.getForceChartParameterValue(searchState)};newSearchCriteria.criteriaJSONString=JSON.stringify(newSearchCriteria.criteria);if(updateAtomicData){updateAtomicData({...searchState,...newSearchCriteria});}else{let newSearchState={...searchState.value};Object.assign(newSearchState,newSearchCriteria);searchState.update(newSearchState);}}};const getSelectedFiltersMap=categories=>{var searchFilterMap={};for(const[key,value]of Object.entries(categories)){if(value){let filtersForCurrentCategory=[];if(value.filterValues&&value.filterValues.length>0){value.filterValues.forEach(val=>{if(val.selected.dbValue){switch(value.type){case'NumericFilter':{let numericValue=filterPanelUtils[\"a\" /* default */].INTERNAL_NUMERIC_FILTER+val.internalName;filtersForCurrentCategory.push(numericValue);break;}case'DateFilter':{let selectedDateFilters=searchFilterMap[val.categoryName]?searchFilterMap[val.categoryName]:[];selectedDateFilters.push(val.internalName);searchFilterMap[val.categoryName]=selectedDateFilters;break;}default:filtersForCurrentCategory.push(val.internalName);break;}}});}if(value.numericRangeString){filtersForCurrentCategory.push(value.numericRangeString);}if(value.dateRangeString){filtersForCurrentCategory.push(value.dateRangeString);}if(filtersForCurrentCategory.length){searchFilterMap[value.internalName]=filtersForCurrentCategory;}}}return aw_searchFilter_service[\"a\" /* default */].removeDependentDateFilters(searchFilterMap);};/**\n * update pwa selection model with selection query param value\n * @param {*} selectionModel selection model\n * @param {*} selectionQueryParam selection query param object with key, value\n */const updateSearchPWASelectionModel=(selectionModel,selectionQueryParam)=>{const pwaSelection=selectionModel.getSelection();if(!pwaSelection.length&&selectionQueryParam&&selectionQueryParam.value){selectionModel.setSelection([selectionQueryParam.value]);}};const getActiveSublocationTab=sublocationsTabs=>{let activeSublocTab='';if(sublocationsTabs&&sublocationsTabs.length>0){let activeSublocTabObj=sublocationsTabs.filter(tab=>{return tab.selectedTab;})[0];activeSublocTab=activeSublocTabObj.id||activeSublocTabObj.tabKey||activeSublocTabObj.name;}return activeSublocTab;};/**\n    * update charts data on selection change\n    * @param {*} searchStateProp search state from parent\n    * @param {*} searchState search state from view model data\n    * @param {*} searchStateUpdater search state updater\n*/const updateChartsDataOnSelectionChange=(searchStateProp,searchState,searchStateUpdater)=>{const[searchStateData,updateSearchState]=getSearchState(searchStateProp,searchState,searchStateUpdater);if(searchStateData&&searchStateData.pwaSelection){const selectedObjects=searchStateData.pwaSelection;const forceChart=!selectedObjects||selectedObjects.length===0;const recreateChartProvider=forceChart?'true':'false';if(updateSearchState){updateSearchState({...searchStateData,forceChart,recreateChartProvider});}else{let newSearchStateData={...searchStateData.value};newSearchStateData.forceChart=forceChart;newSearchStateData.recreateChartProvider=recreateChartProvider;searchStateData.update(newSearchStateData);}}};const updateSublocationTabs=(sublocationsTabs,primarySublocTabState)=>{if(sublocationsTabs&&primarySublocTabState.dbValue&&primarySublocTabState.dbValue.primaryActiveTabId&&primarySublocTabState.dbValue.primaryActiveTabId!==''){Object(awSearchLocationService[\"tabCallbackApi\"])(undefined,primarySublocTabState.dbValue.primaryActiveTabId,sublocationsTabs);}};const updateGlobalSelection=(localSelectionData,parentSelectionData)=>{if(!lodash_default.a.isEmpty(localSelectionData)){parentSelectionData?parentSelectionData.update(localSelectionData):selection_service[\"a\" /* default */].updateSelection(localSelectionData.selected,localSelectionData.pselected,localSelectionData.relationInfo);trace('AwSearchSublocationService selectionData: ',localSelectionData);}};const updateSelectionQueryParamInURL=(searchStateProp,searchState)=>{const searchStateData=searchStateProp?searchStateProp:searchState;// update URL if selectionQueryParam applicable\nif(searchStateData.selectionQueryParam&&searchStateData.selectionQueryParam.key){let uid=searchStateData.pwaSelection&&searchStateData.pwaSelection.length===1?searchStateData.pwaSelection[0].uid:null;awStateService[\"a\" /* default */].instance.go('.',{[searchStateData.selectionQueryParam.key]:uid});}};const updateSearchStateWithSelectionData=(searchStateProp,searchState,selectionData)=>{const searchStateData=searchStateProp?searchStateProp:searchState;if(!lodash_default.a.isEmpty(selectionData)){let newSearchState=searchStateData?{...searchStateData.value}:undefined;if(newSearchState){if(selectionData.source==='primary'){newSearchState.pwaSelection=selectionData.selected?selectionData.selected:[];}else if(selectionData.source==='base'||selectionData.source===undefined){newSearchState.pwaSelection=[];}searchStateData.update(newSearchState);}}};const awSearchSublocationService={updateSearchContext,createStateFromUrl,createSearchFilterMapFromUrl,getSearchFilterStringFromActiveFilterMap,getActiveFilters,lazyUpdate,updateURL,updateSearchCriteria,syncStateFromUrl,getSelectedFiltersMap,updateSearchPWASelectionModel,getActiveSublocationTab,updateChartsDataOnSelectionChange,updateSublocationTabs,updateGlobalSelection,updateSearchStateWithSelectionData,updateSelectionQueryParamInURL};/* harmony default export */ var js_awSearchSublocationService = __webpack_exports__[\"default\"] = (awSearchSublocationService);\n\n/***/ })\n\n}]);","inputSourceMap":null}