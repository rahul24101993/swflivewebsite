{"code":"(this.webpackJsonpcreatingjsxcomponent=this.webpackJsonpcreatingjsxcomponent||[]).push([[126],{2835:function(t,o,n){\"use strict\";n.r(o),n.d(o,\"show\",(function(){return p})),n.d(o,\"createModalFor\",(function(){return y})),n.d(o,\"setIconService\",(function(){return d})),n.d(o,\"close\",(function(){return h})),n.d(o,\"init\",(function(){return m})),n.d(o,\"render\",(function(){return f})),n.d(o,\"getModalCount\",(function(){return b})),n.d(o,\"setModalCount\",(function(){return C})),n.d(o,\"getLayoutCountFor\",(function(){return g})),n.d(o,\"setLayoutCountFor\",(function(){return w}));var e=n(54),s=n.n(e),i=(n(3114),n(27)),a=n(15),r=n(963),l=n(965);s.a.noty.pinnedMessage=[];var c=function(t){var o=t;o.key=(new Date).getTime(),o.options.buttons&&o.$bar.find(\".noty_message\").addClass(\"message_with_buttons\"),o.options.custom?o.options.custom.find(o.options.layout.container.selector).append(o.$bar):s()(o.options.layout.container.selector).append(o.$bar),o.options.theme&&o.options.theme.style&&o.options.theme.style.apply(o),\"function\"===s.a.type(o.options.layout.css)?t.options.layout.css.apply(o.$bar):o.$bar.css(t.options.layout.css||{}),o.$bar.addClass(o.options.layout.addClass),o.options.custom||(o.$closeButton.empty(),o.$closeButton.hide(),s.a.inArray(\"X\",o.options.closeWith)>-1?o.$closeButton.append(l.svgString):o.$closeButton.append(r.svgString),function(t){let o=t.$closeButton;o.attr(\"tabindex\",\"0\"),o.attr(\"role\",\"button\"),a.default.getLocalizedText(\"NotyMessages\",\"closeNotification\").then((function(t){o.attr(\"aria-label\",t),o.attr(\"data-locator\",t)})).catch((()=>{})),o.keydown((function(o){i.default.isValidKeyPress(o)&&(t.stopPropagation(o),t.close())}))}(o)),o.options.layout.container.style.apply(s()(o.options.layout.container.selector)),o.showing=!0,o.options.theme&&o.options.theme.style&&o.options.theme.callback.onShow.apply(t),s.a.inArray(\"click\",o.options.closeWith)>-1&&o.$bar.css(\"cursor\",\"pointer\").one(\"click\",(function(t){o.stopPropagation(t),o.options.callback.onCloseClick&&o.options.callback.onCloseClick.apply(o),o.close()})),s.a.inArray(\"hover\",o.options.closeWith)>-1&&o.$bar.one(\"mouseenter\",(function(){o.close()})),(s.a.inArray(\"button\",o.options.closeWith)>-1||s.a.inArray(\"X\",o.options.closeWith)>-1)&&o.$closeButton.one(\"click\",(function(t){o.stopPropagation(t),o.close()})),s.a.inArray(\"stayOnClick\",o.options.closeWith)>-1&&o.$bar.one(\"click keydown\",(function(t){(function(t){return t.type&&\"click\"===t.type||\"keydown\"===t.type&&i.default.isValidKeyPress(t)})(t)&&(s.a.noty.pinnedMessage.push(o.key),o.stopPropagation(t),clearTimeout(o.$timeout),o.isTimeoutActive=!1,o.$closeButton.one(\"click\",(function(t){o.stopPropagation(t),o.close();var n=s.a.noty.pinnedMessage.indexOf(o.key);n>-1&&s.a.noty.pinnedMessage.splice(n,1)})))})),-1===s.a.inArray(\"button\",o.options.closeWith)&&-1===s.a.inArray(\"X\",o.options.closeWith)&&-1===s.a.inArray(\"stayOnClick\",o.options.closeWith)&&o.$closeButton.remove(),o.options.callback.onShow&&o.options.callback.onShow.apply(o),o.$bar.animate(o.options.animation.open,o.options.animation.speed,o.options.animation.easing,(function(){o.options.custom||o.$closeButton.show(),o.options.callback.afterShow&&o.options.callback.afterShow.apply(o),o.showing=!1,o.shown=!0})),o.options.timeout&&(o.$timeout=setTimeout((function(){o.close()}),o.options.timeout),o.isTimeoutActive=!0);let n=o.$bar.find(\".noty_bar\");return n.attr(\"role\",\"alert\"),n.attr(\"tabindex\",\"0\"),o.$bar.attr(\"aria-live\",\"assertive\"),n.addClass(\"noty_msg\"),o.$bar[0].parentElement.setAttribute(\"data-locator\",\"noty_bottom_layout_container\"),t},u=function(t){let o=[],n=document.activeElement.parentElement;t.options.callback.afterClose=function(){if(function(t){let o=t.$bar&&t.$bar.parent(),n=o&&o.find(document.activeElement);return n&&0!==n.length}(t)){let t=i.default.getParentOfGroupCmds();t&&(n=t,i.default.setParentOfGroupCmds(null)),document.body.classList.contains(\"keyboard\")&&i.default.skipToFirstFocusableElement(n)}o.forEach((t=>{t()}))};let e=t.$bar.parent();i.default.skipToFirstFocusableElement(e[0]);let s={panelEl:a=e[0],options:{reference:a},id:a.id};var a;let r=i.default.configureAutoFocus(e[0],s);o.push(...r.removeHandlers)};let p=function(t){t.options.modal&&(s.a.notyRenderer.createModalFor(t),s.a.notyRenderer.setModalCount(1)),t.options.custom?0===t.options.custom.find(t.options.layout.container.selector).length?t.options.custom.append(s()(t.options.layout.container.object).addClass(\"layoutContainer\")):t.options.custom.find(t.options.layout.container.selector).removeClass(\"layoutContainer\"):0===s()(t.options.layout.container.selector).length?s()(\"body\").append(s()(t.options.layout.container.object).addClass(\"layoutContainer\")):s()(t.options.layout.container.selector).removeClass(\"layoutContainer\"),s.a.notyRenderer.setLayoutCountFor(t,1),c(t),u(t),function(t){t&&t.options&&t.options.messageData&&t.options.messageData.isCustomElem}(t)};s.a.notyRenderer.show=p;let y=function(t){if(0===s()(\".noty_modal\").length){var o=s()(\"<div></div>\").addClass(\"noty_modal\").addClass(t.options.theme).data(\"noty_modal_count\",0);t.options.theme.modal&&t.options.theme.modal.css&&o.css(t.options.theme.modal.css),o.prependTo(s()(\"body\")).fadeIn(\"fast\")}};s.a.notyRenderer.createModalFor=y;let d=function(t){t};s.a.notyRenderer.setIconService=d;let h=function(){s.a.noty.clearQueue(),s.a.each(s.a.noty.store,(function(t,o){s.a.noty.pinnedMessage.indexOf(o.key)<=-1&&o.close()}))};s.a.notyRenderer.close=h,s.a.noty.layouts.bottom={name:\"bottom\",options:{},container:{object:'<ul id=\"noty_bottom_layout_container\" ></ul>',selector:\"ul#noty_bottom_layout_container\",style:function(){s()(this).css({})}},parent:{object:\"<li ></li>\",selector:\"li\",css:{}},css:{display:\"none\"},addClass:\"\"};let m=s.a.notyRenderer.init,f=s.a.notyRenderer.render,b=s.a.notyRenderer.getModalCount,C=s.a.notyRenderer.setModalCount,g=s.a.notyRenderer.getLayoutCountFor,w=s.a.notyRenderer.setLayoutCountFor;o.default=s.a.notyRenderer},3114:function(t,o){\"function\"!==typeof Object.create&&(Object.create=function(t){function o(){}return o.prototype=t,new o}),function(t){var o={init:function(o){return this.options=t.extend({},t.noty.defaults,o),this.options.layout=this.options.custom?t.noty.layouts.inline:t.noty.layouts[this.options.layout],t.noty.themes[this.options.theme]?this.options.theme=t.noty.themes[this.options.theme]:o.themeClassName=this.options.theme,delete o.layout,delete o.theme,this.options=t.extend({},this.options,this.options.layout.options),this.options.id=\"noty_\"+(new Date).getTime()*Math.floor(1e6*Math.random()),this.options=t.extend({},this.options,o),this._build(),this},_build:function(){var o=t('<div class=\"noty_bar noty_type_'+this.options.type+'\"></div>').attr(\"id\",this.options.id);if(o.append(this.options.template).find(\".noty_text\").html(this.options.text),this.$bar=null!==this.options.layout.parent.object?t(this.options.layout.parent.object).css(this.options.layout.parent.css).append(o):o,this.options.themeClassName&&this.$bar.addClass(this.options.themeClassName).addClass(\"noty_container_type_\"+this.options.type),this.options.buttons){this.options.closeWith=[],this.options.timeout=!1;var n=t(\"<div/>\").addClass(\"noty_buttons\");null!==this.options.layout.parent.object?this.$bar.find(\".noty_bar\").append(n):this.$bar.append(n);var e=this;t.each(this.options.buttons,(function(o,n){var s=t(\"<button/>\").addClass(n.addClass?n.addClass:\"gray\").html(n.text).attr(\"id\",n.id?n.id:\"button-\"+o).appendTo(e.$bar.find(\".noty_buttons\")).bind(\"click\",(function(){t.isFunction(n.onClick)&&n.onClick.call(s,e)}))}))}this.$message=this.$bar.find(\".noty_message\"),this.$closeButton=this.$bar.find(\".noty_close\"),this.$buttons=this.$bar.find(\".noty_buttons\"),t.noty.store[this.options.id]=this},show:function(){var o=this;return o.options.custom?o.options.custom.find(o.options.layout.container.selector).append(o.$bar):t(o.options.layout.container.selector).append(o.$bar),o.options.theme&&o.options.theme.style&&o.options.theme.style.apply(o),\"function\"===t.type(o.options.layout.css)?this.options.layout.css.apply(o.$bar):o.$bar.css(this.options.layout.css||{}),o.$bar.addClass(o.options.layout.addClass),o.options.layout.container.style.apply(t(o.options.layout.container.selector)),o.showing=!0,o.options.theme&&o.options.theme.style&&o.options.theme.callback.onShow.apply(this),t.inArray(\"click\",o.options.closeWith)>-1&&o.$bar.css(\"cursor\",\"pointer\").one(\"click\",(function(t){o.stopPropagation(t),o.options.callback.onCloseClick&&o.options.callback.onCloseClick.apply(o),o.close()})),t.inArray(\"hover\",o.options.closeWith)>-1&&o.$bar.one(\"mouseenter\",(function(){o.close()})),t.inArray(\"button\",o.options.closeWith)>-1&&o.$closeButton.one(\"click\",(function(t){o.stopPropagation(t),o.close()})),-1==t.inArray(\"button\",o.options.closeWith)&&o.$closeButton.remove(),o.options.callback.onShow&&o.options.callback.onShow.apply(o),o.$bar.animate(o.options.animation.open,o.options.animation.speed,o.options.animation.easing,(function(){o.options.callback.afterShow&&o.options.callback.afterShow.apply(o),o.showing=!1,o.shown=!0})),o.options.timeout&&o.$bar.delay(o.options.timeout).promise().done((function(){o.close()})),this},close:function(){if(!this.closed&&(!this.$bar||!this.$bar.hasClass(\"i-am-closing-now\"))){var o=this;if(this.showing)o.$bar.queue((function(){o.close.apply(o)}));else{if(!this.shown&&!this.showing){var n=[];return t.each(t.noty.queue,(function(t,e){e.options.id!=o.options.id&&n.push(e)})),void(t.noty.queue=n)}o.$bar.addClass(\"i-am-closing-now\"),o.options.callback.onClose&&o.options.callback.onClose.apply(o),o.$bar.clearQueue().stop().animate(o.options.animation.close,o.options.animation.speed,o.options.animation.easing,(function(){o.options.callback.afterClose&&o.options.callback.afterClose.apply(o)})).promise().done((function(){o.options.modal&&(t.notyRenderer.setModalCount(-1),0==t.notyRenderer.getModalCount()&&t(\".noty_modal\").fadeOut(\"fast\",(function(){t(this).remove()}))),t.notyRenderer.setLayoutCountFor(o,-1),0==t.notyRenderer.getLayoutCountFor(o)&&t(o.options.layout.container.selector).remove(),\"undefined\"!==typeof o.$bar&&null!==o.$bar&&(o.$bar.remove(),o.$bar=null,o.closed=!0),delete t.noty.store[o.options.id],o.options.theme.callback&&o.options.theme.callback.onClose&&o.options.theme.callback.onClose.apply(o),o.options.dismissQueue||(t.noty.ontap=!0,t.notyRenderer.render()),o.options.maxVisible>0&&o.options.dismissQueue&&t.notyRenderer.render()}))}}},setText:function(t){return this.closed||(this.options.text=t,this.$bar.find(\".noty_text\").html(t)),this},setType:function(t){return this.closed||(this.options.type=t,this.options.theme.style.apply(this),this.options.theme.callback.onShow.apply(this)),this},setTimeout:function(t){if(!this.closed){var o=this;this.options.timeout=t,o.$bar.delay(o.options.timeout).promise().done((function(){o.close()}))}return this},stopPropagation:function(t){\"undefined\"!==typeof(t=t||window.event).stopPropagation?t.stopPropagation():t.cancelBubble=!0},closed:!1,showing:!1,shown:!1};t.notyRenderer={},t.notyRenderer.init=function(n){var e=Object.create(o).init(n);return e.options.killer&&t.noty.closeAll(),e.options.force?t.noty.queue.unshift(e):t.noty.queue.push(e),t.notyRenderer.render(),\"object\"==t.noty.returns?e:e.options.id},t.notyRenderer.render=function(){var o=t.noty.queue[0];\"object\"===t.type(o)?o.options.dismissQueue?o.options.maxVisible>0?t(o.options.layout.container.selector+\" li\").length<o.options.maxVisible&&t.notyRenderer.show(t.noty.queue.shift()):t.notyRenderer.show(t.noty.queue.shift()):t.noty.ontap&&(t.notyRenderer.show(t.noty.queue.shift()),t.noty.ontap=!1):t.noty.ontap=!0},t.notyRenderer.show=function(o){o.options.modal&&(t.notyRenderer.createModalFor(o),t.notyRenderer.setModalCount(1)),o.options.custom?0==o.options.custom.find(o.options.layout.container.selector).length?o.options.custom.append(t(o.options.layout.container.object).addClass(\"i-am-new\")):o.options.custom.find(o.options.layout.container.selector).removeClass(\"i-am-new\"):0==t(o.options.layout.container.selector).length?t(\"body\").append(t(o.options.layout.container.object).addClass(\"i-am-new\")):t(o.options.layout.container.selector).removeClass(\"i-am-new\"),t.notyRenderer.setLayoutCountFor(o,1),o.show()},t.notyRenderer.createModalFor=function(o){0==t(\".noty_modal\").length&&t(\"<div/>\").addClass(\"noty_modal\").data(\"noty_modal_count\",0).css(o.options.theme.modal.css).prependTo(t(\"body\")).fadeIn(\"fast\")},t.notyRenderer.getLayoutCountFor=function(o){return t(o.options.layout.container.selector).data(\"noty_layout_count\")||0},t.notyRenderer.setLayoutCountFor=function(o,n){return t(o.options.layout.container.selector).data(\"noty_layout_count\",t.notyRenderer.getLayoutCountFor(o)+n)},t.notyRenderer.getModalCount=function(){return t(\".noty_modal\").data(\"noty_modal_count\")||0},t.notyRenderer.setModalCount=function(o){return t(\".noty_modal\").data(\"noty_modal_count\",t.notyRenderer.getModalCount()+o)},t.fn.noty=function(o){return o.custom=t(this),t.notyRenderer.init(o)},t.noty={},t.noty.queue=[],t.noty.ontap=!0,t.noty.layouts={},t.noty.themes={},t.noty.returns=\"object\",t.noty.store={},t.noty.get=function(o){return!!t.noty.store.hasOwnProperty(o)&&t.noty.store[o]},t.noty.close=function(o){return!!t.noty.get(o)&&t.noty.get(o).close()},t.noty.setText=function(o,n){return!!t.noty.get(o)&&t.noty.get(o).setText(n)},t.noty.setType=function(o,n){return!!t.noty.get(o)&&t.noty.get(o).setType(n)},t.noty.clearQueue=function(){t.noty.queue=[]},t.noty.closeAll=function(){t.noty.clearQueue(),t.each(t.noty.store,(function(t,o){o.close()}))};var n=window.alert;t.noty.consumeAlert=function(o){window.alert=function(n){o?o.text=n:o={text:n},t.notyRenderer.init(o)}},t.noty.stopConsumeAlert=function(){window.alert=n},t.noty.defaults={layout:\"top\",theme:\"defaultTheme\",type:\"alert\",text:\"\",dismissQueue:!0,template:'<div class=\"noty_message\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div>',animation:{open:{height:\"toggle\"},close:{height:\"toggle\"},easing:\"swing\",speed:500},timeout:!1,force:!1,modal:!1,maxVisible:5,killer:!1,closeWith:[\"click\"],callback:{onShow:function(){},afterShow:function(){},onClose:function(){},afterClose:function(){},onCloseClick:function(){}},buttons:!1},t(window).resize((function(){t.each(t.noty.layouts,(function(o,n){n.container.style.apply(t(n.container.selector))}))}))}(jQuery),window.noty=function(t){return jQuery.notyRenderer.init(t)}}}]);","name":"static/js/126.435cffde.chunk.js","input":"(this[\"webpackJsonpcreatingjsxcomponent\"] = this[\"webpackJsonpcreatingjsxcomponent\"] || []).push([[126],{\n\n/***/ 2835:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"show\", function() { return show; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createModalFor\", function() { return createModalFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setIconService\", function() { return setIconService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"close\", function() { return close; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getModalCount\", function() { return getModalCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setModalCount\", function() { return setModalCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayoutCountFor\", function() { return getLayoutCountFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLayoutCountFor\", function() { return setLayoutCountFor; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var noty_jquery_noty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3114);\n/* harmony import */ var noty_jquery_noty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(noty_jquery_noty__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var js_wcagService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27);\n/* harmony import */ var js_localeService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15);\n/* harmony import */ var image_cmdPin24_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(963);\n/* harmony import */ var image_uiClose12_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(965);\n// Copyright (c) 2021 Siemens\n/**\n * Customizing and overriding functions from (jquery.noty.js)\n *\n * @module js/jquery.noty.customized\n */jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.pinnedMessage=[];var _iconSvc;/**\n * Brings focus on the element after tab press form keyboard\n * related to WCAG work\n * @param {popup} notification message popup\n */var makeCloseButtonKeyboardAccessible=function(popup){let closeButton=popup.$closeButton;closeButton.attr('tabindex','0');closeButton.attr('role','button');js_localeService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getLocalizedText('NotyMessages','closeNotification').then(function(localizedVal){closeButton.attr('aria-label',localizedVal);closeButton.attr('data-locator',localizedVal);}).catch(()=>{});closeButton.keydown(function(evt){if(js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidKeyPress(evt)){popup.stopPropagation(evt);popup.close();}});};/**\n * Has user pressed click or enter key on noty message\n *\n * @param {event}\n */var hasUserClickedOrPressesEnter=function(evt){return evt.type&&evt.type==='click'||evt.type==='keydown'&&js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidKeyPress(evt);};/**\n * @param {Object} notification - notification\n * @returns {Object} notification\n */var customizedShow=function(notification){var self=notification;// eslint-disable-line consistent-this\nself.key=new Date().getTime();// adding new css class if buttons are present\nif(self.options.buttons){self.$bar.find('.noty_message').addClass('message_with_buttons');}self.options.custom?self.options.custom.find(self.options.layout.container.selector).append(self.$bar):jquery__WEBPACK_IMPORTED_MODULE_0___default()(self.options.layout.container.selector).append(self.$bar);if(self.options.theme&&self.options.theme.style){self.options.theme.style.apply(self);}jquery__WEBPACK_IMPORTED_MODULE_0___default.a.type(self.options.layout.css)==='function'?notification.options.layout.css.apply(self.$bar):self.$bar.css(notification.options.layout.css||{});self.$bar.addClass(self.options.layout.addClass);if(!self.options.custom){// Add the image to pin icon and hide the icon in the beginning\nself.$closeButton.empty();self.$closeButton.hide();if(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('X',self.options.closeWith)>-1){self.$closeButton.append(image_uiClose12_svg__WEBPACK_IMPORTED_MODULE_5__[\"svgString\"]);}else{self.$closeButton.append(image_cmdPin24_svg__WEBPACK_IMPORTED_MODULE_4__[\"svgString\"]);}// following WCAG\nmakeCloseButtonKeyboardAccessible(self);}self.options.layout.container.style.apply(jquery__WEBPACK_IMPORTED_MODULE_0___default()(self.options.layout.container.selector));self.showing=true;if(self.options.theme&&self.options.theme.style){self.options.theme.callback.onShow.apply(notification);}if(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('click',self.options.closeWith)>-1){self.$bar.css('cursor','pointer').one('click',function(evt){self.stopPropagation(evt);if(self.options.callback.onCloseClick){self.options.callback.onCloseClick.apply(self);}self.close();});}if(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('hover',self.options.closeWith)>-1){self.$bar.one('mouseenter',function(){self.close();});}if(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('button',self.options.closeWith)>-1||jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('X',self.options.closeWith)>-1){self.$closeButton.one('click',function(evt){self.stopPropagation(evt);self.close();});}// feature which makes the popup to stay when user clicks on it\nif(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('stayOnClick',self.options.closeWith)>-1){self.$bar.one('click keydown',function(evt){// If there is previously pinned message, clear it first\n/* if( $.noty.pinnedMessage !== undefined ) {\n                $.noty.pinnedMessage.close();\n                $.noty.pinnedMessage = undefined;\n            }*/if(hasUserClickedOrPressesEnter(evt)){jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.pinnedMessage.push(self.key);self.stopPropagation(evt);// clear the auto-dismissal of the notifications.\nclearTimeout(self.$timeout);self.isTimeoutActive=false;self.$closeButton.one('click',function(evt){self.stopPropagation(evt);self.close();var position=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.pinnedMessage.indexOf(self.key);// remove from pinned array\nif(position>-1){jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.pinnedMessage.splice(position,1);}});}});}// We want $closeButton to still be available because we are using 'stayOnClick' for closeWith option.\n// When notifications are pinned, the only way to close them would be using the $closeButton click.\n// Note that $closeButton is jQuery reference to div element with class '.noty_close' defined in the default template.\n// See $.noty.defaults.template in jquery.noty.js; Override this behavior from default.\nif(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('button',self.options.closeWith)===-1&&jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('X',self.options.closeWith)===-1&&jquery__WEBPACK_IMPORTED_MODULE_0___default.a.inArray('stayOnClick',self.options.closeWith)===-1){self.$closeButton.remove();}if(self.options.callback.onShow){self.options.callback.onShow.apply(self);}self.$bar.animate(self.options.animation.open,self.options.animation.speed,self.options.animation.easing,function(){if(!self.options.custom){self.$closeButton.show();}if(self.options.callback.afterShow){self.options.callback.afterShow.apply(self);}self.showing=false;self.shown=true;});// If noty is have a timeout option\nif(self.options.timeout){self.$timeout=setTimeout(function(){self.close();},self.options.timeout);self.isTimeoutActive=true;}//wcag region violation fix. role='alert' for notifications\nlet notyBar=self.$bar.find('.noty_bar');notyBar.attr('role','alert');notyBar.attr('tabindex','0');self.$bar.attr('aria-live','assertive');notyBar.addClass('noty_msg');let notyContainer=self.$bar[0].parentElement;notyContainer.setAttribute('data-locator','noty_bottom_layout_container');return notification;};/**\n * Create a new child scope based on the document's scope.\n * <P>\n * Note: We do not want to use the 'root' scope for inserting new elements into since it has been shown to not be\n * the one the API is eventually added to (it will be a child of it anyway).\n * <P>\n * Insert and compile directives into notification pop-up\n *\n * @param {Object} notification - notification\n */var insertCustomElement=function(notification){if(!notification||!notification.options||!notification.options.messageData||!notification.options.messageData.isCustomElem){return;}/* revisitme - pengw\n    if( notification && notification.$bar && notification.options.text ) {\n        var docNgElement = ngModule.element( document.body );\n        var docScope = docNgElement.scope();\n\n        var parentScope = docScope.$new();\n\n        $( 'ul#noty_bottom_layout_container' ).data( '$scope', parentScope );\n\n        var parentElement = $( notification.$bar[ 0 ] ).find( 'span.noty_text' );\n\n        // Create an 'outer' <DIV> (to hold the given 'inner' HTML) and create the angular controller on it.\n        // <P>\n        // Remove any existing 'children' of the given 'parent'\n        // <P>\n        // Add this new element as a 'child' of the given 'parent'\n        var ctrlElement = ngModule.element( '<div class=\"aw-jswidgets-notyContainer\" ></div>' );\n\n        ctrlElement.html( notification.options.text );\n\n        if( parentElement ) {\n            $( parentElement ).empty();\n            $( parentElement ).append( ctrlElement );\n        }\n\n        parentScope.subPanelContext = notification.options.messageData;\n\n        ngUtils.include( parentElement, ctrlElement );\n    }\n    */};/**\n * Prepare an object like one for aw-popup-panel-2. This is consumed by wcag service to set focus on noty message just like the\n * popup for group commands\n * @param {*} notification\n * @param {parentElement} noty message's first focussable container\n */var mimicPopupToMakeARefObject=function(parentElement){return{panelEl:parentElement,options:{reference:parentElement},id:parentElement.id};};/**\n * Determine if focus is inside the noty msg\n *\n * @param {notification} notification\n */var isFocusInsideNotyMsg=function(notification){let msgHTMLcontent=notification.$bar&&notification.$bar.parent();let focusedElementsInsideNoty=msgHTMLcontent&&msgHTMLcontent.find(document.activeElement);return focusedElementsInsideNoty&&focusedElementsInsideNoty.length!==0;};/**\n * check if the interaction is happening via keyboard or mouse\n */var isKeyboardAccessingDOM=function(){return document.body.classList.contains('keyboard');};/**\n * As soon as noty msg opens up, it should get the focus\n *\n * @param {notification} notification\n */var grabFocusOnNotyMsg=function(notification){let removeListeners=[];let elementTriggeringNotyMsg=document.activeElement.parentElement;var giveFocusBackToSourceElement=function(){if(isFocusInsideNotyMsg(notification)){// If a child command trigerrs noty msg then elementTriggeringNotyMsg points to the child command\n// But on popup closure the parent command gets the focus and hence should be used as elementTriggeringNotyMsg\nlet parentCommand=js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getParentOfGroupCmds();if(parentCommand){elementTriggeringNotyMsg=parentCommand;js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setParentOfGroupCmds(null);}if(isKeyboardAccessingDOM()){js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].skipToFirstFocusableElement(elementTriggeringNotyMsg);}}removeListeners.forEach(listener=>{listener();});};notification.options.callback.afterClose=giveFocusBackToSourceElement;let notyParentElement=notification.$bar.parent();js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].skipToFirstFocusableElement(notyParentElement[0]);let popupRef=mimicPopupToMakeARefObject(notyParentElement[0]);let handlers=js_wcagService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].configureAutoFocus(notyParentElement[0],popupRef);removeListeners.push(...handlers.removeHandlers);};/**\n * overriding show method of '$.notyRenderer'\n *\n * @param {Object} notification - notification\n */let show=function(notification){if(notification.options.modal){jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.createModalFor(notification);jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.setModalCount(+1);}// Where is the container?\nif(notification.options.custom){if(notification.options.custom.find(notification.options.layout.container.selector).length===0){notification.options.custom.append(jquery__WEBPACK_IMPORTED_MODULE_0___default()(notification.options.layout.container.object).addClass('layoutContainer'));}else{notification.options.custom.find(notification.options.layout.container.selector).removeClass('layoutContainer');}}else{if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(notification.options.layout.container.selector).length===0){jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').append(jquery__WEBPACK_IMPORTED_MODULE_0___default()(notification.options.layout.container.object).addClass('layoutContainer'));}else{jquery__WEBPACK_IMPORTED_MODULE_0___default()(notification.options.layout.container.selector).removeClass('layoutContainer');}}jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.setLayoutCountFor(notification,+1);// customized show method\ncustomizedShow(notification);grabFocusOnNotyMsg(notification);insertCustomElement(notification);};jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.show=show;/**\n * Fix for 'modal option with custom css theme', which is fixed in release 2.2.2.<br>\n * Remove this once upgraded to Noty 2.2.2\n *\n * @param {Object} notification - notification\n */let createModalFor=function(notification){if(jquery__WEBPACK_IMPORTED_MODULE_0___default()('.noty_modal').length===0){var modal=jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div></div>').addClass('noty_modal').addClass(notification.options.theme).data('noty_modal_count',0);if(notification.options.theme.modal&&notification.options.theme.modal.css){modal.css(notification.options.theme.modal.css);}modal.prependTo(jquery__WEBPACK_IMPORTED_MODULE_0___default()('body')).fadeIn('fast');}};jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.createModalFor=createModalFor;/**\n * Sets the svg content for the icons - pin and unpin+\n *\n * @param {Object} iconSvc - icon service\n */let setIconService=function(iconSvc){_iconSvc=iconSvc;};jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.setIconService=setIconService;/**\n * Passthrough method for close.\n *\n */let close=function(){jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.clearQueue();jquery__WEBPACK_IMPORTED_MODULE_0___default.a.each(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.store,function(id,noty){if(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.pinnedMessage.indexOf(noty.key)<=-1){noty.close();}});};jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.close=close;/** **************************************************************************** */ /** Customizing JavaScript for noty bottom layout (bottom.js) * */ /** **************************************************************************** */jquery__WEBPACK_IMPORTED_MODULE_0___default.a.noty.layouts.bottom={name:'bottom',options:{},container:{object:'<ul id=\"noty_bottom_layout_container\" ></ul>',selector:'ul#noty_bottom_layout_container',style:function(){jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).css({//\n});}},parent:{object:'<li ></li>',selector:'li',css:{}},css:{display:'none'},addClass:''};let init=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.init;let render=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.render;let getModalCount=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.getModalCount;let setModalCount=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.setModalCount;let getLayoutCountFor=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.getLayoutCountFor;let setLayoutCountFor=jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer.setLayoutCountFor;/* harmony default export */ __webpack_exports__[\"default\"] = (jquery__WEBPACK_IMPORTED_MODULE_0___default.a.notyRenderer);\n\n/***/ }),\n\n/***/ 3114:\n/***/ (function(module, exports) {\n\n/**\n * noty - jQuery Notification Plugin v2.2.0\n * Contributors: https://github.com/needim/noty/graphs/contributors\n *\n * Examples and Documentation - http://needim.github.com/noty/\n *\n * Licensed under the MIT licenses:\n * http://www.opensource.org/licenses/mit-license.php\n *\n **/\n\nif (typeof Object.create !== 'function') {\n    Object.create = function (o) {\n        function F() {\n        }\n\n        F.prototype = o;\n        return new F();\n    };\n}\n\n(function ($) {\n\n    var NotyObject = {\n\n        init:function (options) {\n\n            // Mix in the passed in options with the default options\n            this.options = $.extend({}, $.noty.defaults, options);\n\n            this.options.layout = (this.options.custom) ? $.noty.layouts['inline'] : $.noty.layouts[this.options.layout];\n\n\t\t\tif ($.noty.themes[this.options.theme])\n            \tthis.options.theme = $.noty.themes[this.options.theme];\n\t\t\telse\n\t\t\t\toptions.themeClassName = this.options.theme;\n\n            delete options.layout;\n            delete options.theme;\n\n            this.options = $.extend({}, this.options, this.options.layout.options);\n            this.options.id = 'noty_' + (new Date().getTime() * Math.floor(Math.random() * 1000000));\n\n            this.options = $.extend({}, this.options, options);\n\n            // Build the noty dom initial structure\n            this._build();\n\n            // return this so we can chain/use the bridge with less code.\n            return this;\n        }, // end init\n\n        _build:function () {\n\n            // Generating noty bar\n            var $bar = $('<div class=\"noty_bar noty_type_' + this.options.type + '\"></div>').attr('id', this.options.id);\n            $bar.append(this.options.template).find('.noty_text').html(this.options.text);\n\n            this.$bar = (this.options.layout.parent.object !== null) ? $(this.options.layout.parent.object).css(this.options.layout.parent.css).append($bar) : $bar;\n\n\t\t\tif (this.options.themeClassName)\n\t\t\t\tthis.$bar.addClass(this.options.themeClassName).addClass('noty_container_type_' + this.options.type);\n\n            // Set buttons if available\n            if (this.options.buttons) {\n\n                // If we have button disable closeWith & timeout options\n                this.options.closeWith = [];\n                this.options.timeout = false;\n\n                var $buttons = $('<div/>').addClass('noty_buttons');\n\n                (this.options.layout.parent.object !== null) ? this.$bar.find('.noty_bar').append($buttons) : this.$bar.append($buttons);\n\n                var self = this;\n\n                $.each(this.options.buttons, function (i, button) {\n                    var $button = $('<button/>').addClass((button.addClass) ? button.addClass : 'gray').html(button.text).attr('id', button.id ? button.id : 'button-' + i)\n                        .appendTo(self.$bar.find('.noty_buttons'))\n                        .bind('click', function () {\n                            if ($.isFunction(button.onClick)) {\n                                button.onClick.call($button, self);\n                            }\n                        });\n                });\n            }\n\n            // For easy access\n            this.$message = this.$bar.find('.noty_message');\n            this.$closeButton = this.$bar.find('.noty_close');\n            this.$buttons = this.$bar.find('.noty_buttons');\n\n            $.noty.store[this.options.id] = this; // store noty for api\n\n        }, // end _build\n\n        show:function () {\n\n            var self = this;\n\n\t\t\t(self.options.custom) ? self.options.custom.find(self.options.layout.container.selector).append(self.$bar) : $(self.options.layout.container.selector).append(self.$bar);\n\n\t\t\tif (self.options.theme && self.options.theme.style)\n            \tself.options.theme.style.apply(self);\n\n            ($.type(self.options.layout.css) === 'function') ? this.options.layout.css.apply(self.$bar) : self.$bar.css(this.options.layout.css || {});\n\n            self.$bar.addClass(self.options.layout.addClass);\n\n            self.options.layout.container.style.apply($(self.options.layout.container.selector));\n\n            self.showing = true;\n\n\t\t\tif (self.options.theme && self.options.theme.style)\n            \tself.options.theme.callback.onShow.apply(this);\n\n            if ($.inArray('click', self.options.closeWith) > -1)\n                self.$bar.css('cursor', 'pointer').one('click', function (evt) {\n                    self.stopPropagation(evt);\n                    if (self.options.callback.onCloseClick) {\n                        self.options.callback.onCloseClick.apply(self);\n                    }\n                    self.close();\n                });\n\n            if ($.inArray('hover', self.options.closeWith) > -1)\n                self.$bar.one('mouseenter', function () {\n                    self.close();\n                });\n\n            if ($.inArray('button', self.options.closeWith) > -1)\n                self.$closeButton.one('click', function (evt) {\n                    self.stopPropagation(evt);\n                    self.close();\n                });\n\n            if ($.inArray('button', self.options.closeWith) == -1)\n                self.$closeButton.remove();\n\n            if (self.options.callback.onShow)\n                self.options.callback.onShow.apply(self);\n\n            self.$bar.animate(\n                self.options.animation.open,\n                self.options.animation.speed,\n                self.options.animation.easing,\n                function () {\n                    if (self.options.callback.afterShow) self.options.callback.afterShow.apply(self);\n                    self.showing = false;\n                    self.shown = true;\n                });\n\n            // If noty is have a timeout option\n            if (self.options.timeout)\n                self.$bar.delay(self.options.timeout).promise().done(function () {\n                    self.close();\n                });\n\n            return this;\n\n        }, // end show\n\n        close:function () {\n\n            if (this.closed) return;\n            if (this.$bar && this.$bar.hasClass('i-am-closing-now')) return;\n\n            var self = this;\n\n            if (this.showing) {\n              self.$bar.queue(\n                function () {\n                  self.close.apply(self);\n                }\n              )\n              return;\n            }\n\n            if (!this.shown && !this.showing) { // If we are still waiting in the queue just delete from queue\n                var queue = [];\n                $.each($.noty.queue, function (i, n) {\n                    if (n.options.id != self.options.id) {\n                        queue.push(n);\n                    }\n                });\n                $.noty.queue = queue;\n                return;\n            }\n\n            self.$bar.addClass('i-am-closing-now');\n\n            if (self.options.callback.onClose) {\n                self.options.callback.onClose.apply(self);\n            }\n\n            self.$bar.clearQueue().stop().animate(\n                self.options.animation.close,\n                self.options.animation.speed,\n                self.options.animation.easing,\n                function () {\n                    if (self.options.callback.afterClose) self.options.callback.afterClose.apply(self);\n                })\n                .promise().done(function () {\n\n                    // Modal Cleaning\n                    if (self.options.modal) {\n                        $.notyRenderer.setModalCount(-1);\n                        if ($.notyRenderer.getModalCount() == 0) $('.noty_modal').fadeOut('fast', function () {\n                            $(this).remove();\n                        });\n                    }\n\n                    // Layout Cleaning\n                    $.notyRenderer.setLayoutCountFor(self, -1);\n                    if ($.notyRenderer.getLayoutCountFor(self) == 0) $(self.options.layout.container.selector).remove();\n\n                    // Make sure self.$bar has not been removed before attempting to remove it\n                    if (typeof self.$bar !== 'undefined' && self.$bar !== null ) {\n                        self.$bar.remove();\n                        self.$bar = null;\n                        self.closed = true;\n                    }\n\n                    delete $.noty.store[self.options.id]; // deleting noty from store\n\n                    if(self.options.theme.callback && self.options.theme.callback.onClose) {\n                        self.options.theme.callback.onClose.apply(self);\n                    }\n\n                    if (!self.options.dismissQueue) {\n                        // Queue render\n                        $.noty.ontap = true;\n\n                        $.notyRenderer.render();\n                    }\n\n\t\t\t\t\tif (self.options.maxVisible > 0 && self.options.dismissQueue) {\n\t\t\t\t\t\t$.notyRenderer.render();\n\t\t\t\t\t}\n                })\n\n        }, // end close\n\n        setText:function (text) {\n            if (!this.closed) {\n                this.options.text = text;\n                this.$bar.find('.noty_text').html(text);\n            }\n            return this;\n        },\n\n        setType:function (type) {\n            if (!this.closed) {\n                this.options.type = type;\n                this.options.theme.style.apply(this);\n                this.options.theme.callback.onShow.apply(this);\n            }\n            return this;\n        },\n\n        setTimeout:function (time) {\n            if (!this.closed) {\n                var self = this;\n                this.options.timeout = time;\n                self.$bar.delay(self.options.timeout).promise().done(function () {\n                    self.close();\n                });\n            }\n            return this;\n        },\n\n        stopPropagation:function (evt) {\n            evt = evt || window.event;\n            if (typeof evt.stopPropagation !== \"undefined\") {\n                evt.stopPropagation();\n            } else {\n                evt.cancelBubble = true;\n            }\n        },\n\n        closed:false,\n        showing:false,\n        shown:false\n\n    }; // end NotyObject\n\n    $.notyRenderer = {};\n\n    $.notyRenderer.init = function (options) {\n\n        // Renderer creates a new noty\n        var notification = Object.create(NotyObject).init(options);\n\n\t\tif (notification.options.killer)\n\t\t\t$.noty.closeAll();\n\n        (notification.options.force) ? $.noty.queue.unshift(notification) : $.noty.queue.push(notification);\n\n        $.notyRenderer.render();\n\n        return ($.noty.returns == 'object') ? notification : notification.options.id;\n    };\n\n    $.notyRenderer.render = function () {\n\n        var instance = $.noty.queue[0];\n\n        if ($.type(instance) === 'object') {\n            if (instance.options.dismissQueue) {\n\t\t\t\tif (instance.options.maxVisible > 0) {\n\t\t\t\t\tif ($(instance.options.layout.container.selector + ' li').length < instance.options.maxVisible) {\n\t\t\t\t\t\t$.notyRenderer.show($.noty.queue.shift());\n\t\t\t\t\t} else {\n\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$.notyRenderer.show($.noty.queue.shift());\n\t\t\t\t}\n            } else {\n                if ($.noty.ontap) {\n                    $.notyRenderer.show($.noty.queue.shift());\n                    $.noty.ontap = false;\n                }\n            }\n        } else {\n            $.noty.ontap = true; // Queue is over\n        }\n\n    };\n\n    $.notyRenderer.show = function (notification) {\n\n        if (notification.options.modal) {\n            $.notyRenderer.createModalFor(notification);\n            $.notyRenderer.setModalCount(+1);\n        }\n\n        // Where is the container?\n\t\tif (notification.options.custom) {\n\t\t\tif (notification.options.custom.find(notification.options.layout.container.selector).length == 0) {\n\t\t\t\tnotification.options.custom.append($(notification.options.layout.container.object).addClass('i-am-new'));\n\t\t\t} else {\n\t\t\t\tnotification.options.custom.find(notification.options.layout.container.selector).removeClass('i-am-new');\n\t\t\t}\n\t\t} else {\n\t\t\tif ($(notification.options.layout.container.selector).length == 0) {\n\t\t\t\t$('body').append($(notification.options.layout.container.object).addClass('i-am-new'));\n\t\t\t} else {\n\t\t\t\t$(notification.options.layout.container.selector).removeClass('i-am-new');\n\t\t\t}\n\t\t}\n\n        $.notyRenderer.setLayoutCountFor(notification, +1);\n\n        notification.show();\n    };\n\n    $.notyRenderer.createModalFor = function (notification) {\n        if ($('.noty_modal').length == 0)\n            $('<div/>').addClass('noty_modal').data('noty_modal_count', 0).css(notification.options.theme.modal.css).prependTo($('body')).fadeIn('fast');\n    };\n\n    $.notyRenderer.getLayoutCountFor = function (notification) {\n        return $(notification.options.layout.container.selector).data('noty_layout_count') || 0;\n    };\n\n    $.notyRenderer.setLayoutCountFor = function (notification, arg) {\n        return $(notification.options.layout.container.selector).data('noty_layout_count', $.notyRenderer.getLayoutCountFor(notification) + arg);\n    };\n\n    $.notyRenderer.getModalCount = function () {\n        return $('.noty_modal').data('noty_modal_count') || 0;\n    };\n\n    $.notyRenderer.setModalCount = function (arg) {\n        return $('.noty_modal').data('noty_modal_count', $.notyRenderer.getModalCount() + arg);\n    };\n\n    // This is for custom container\n    $.fn.noty = function (options) {\n        options.custom = $(this);\n        return $.notyRenderer.init(options);\n    };\n\n    $.noty = {};\n    $.noty.queue = [];\n    $.noty.ontap = true;\n    $.noty.layouts = {};\n    $.noty.themes = {};\n    $.noty.returns = 'object';\n    $.noty.store = {};\n\n    $.noty.get = function (id) {\n        return $.noty.store.hasOwnProperty(id) ? $.noty.store[id] : false;\n    };\n\n    $.noty.close = function (id) {\n        return $.noty.get(id) ? $.noty.get(id).close() : false;\n    };\n\n    $.noty.setText = function (id, text) {\n        return $.noty.get(id) ? $.noty.get(id).setText(text) : false;\n    };\n\n    $.noty.setType = function (id, type) {\n        return $.noty.get(id) ? $.noty.get(id).setType(type) : false;\n    };\n\n    $.noty.clearQueue = function () {\n        $.noty.queue = [];\n    };\n\n    $.noty.closeAll = function () {\n        $.noty.clearQueue();\n        $.each($.noty.store, function (id, noty) {\n            noty.close();\n        });\n    };\n\n    var windowAlert = window.alert;\n\n    $.noty.consumeAlert = function (options) {\n        window.alert = function (text) {\n            if (options)\n                options.text = text;\n            else\n                options = {text:text};\n\n            $.notyRenderer.init(options);\n        };\n    };\n\n    $.noty.stopConsumeAlert = function () {\n        window.alert = windowAlert;\n    };\n\n    $.noty.defaults = {\n        layout:'top',\n        theme:'defaultTheme',\n        type:'alert',\n        text:'',\n        dismissQueue:true,\n        template:'<div class=\"noty_message\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div>',\n        animation:{\n            open:{height:'toggle'},\n            close:{height:'toggle'},\n            easing:'swing',\n            speed:500\n        },\n        timeout:false,\n        force:false,\n        modal:false,\n        maxVisible:5,\n\t\tkiller: false,\n        closeWith:['click'],\n        callback:{\n            onShow:function () {\n            },\n            afterShow:function () {\n            },\n            onClose:function () {\n            },\n            afterClose:function () {\n            },\n            onCloseClick:function () {\n            }\n        },\n        buttons:false\n    };\n\n    $(window).resize(function () {\n        $.each($.noty.layouts, function (index, layout) {\n            layout.container.style.apply($(layout.container.selector));\n        });\n    });\n\n})(jQuery);\n\n// Helpers\nwindow.noty = function noty(options) {\n    return jQuery.notyRenderer.init(options);\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":null}