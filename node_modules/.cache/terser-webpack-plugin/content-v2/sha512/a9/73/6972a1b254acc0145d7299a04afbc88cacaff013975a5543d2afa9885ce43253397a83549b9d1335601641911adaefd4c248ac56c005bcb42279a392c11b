{"code":"(this.webpackJsonpcreatingjsxcomponent=this.webpackJsonpcreatingjsxcomponent||[]).push([[1816],{594:function(e,t,r){\"use strict\";var a,l=r(54),i=r.n(l),n=r(1),o=r.n(n),s=r(26),d=r(6),u=\"aw-tile-tileMain\",c=\"aw-tile-draggable\",p=\"aw-tile-tileGroup\",f=\"aw-tile-placeHolderGroupSep\",g=\"aw-tile-dragTile\";let m,v;var w=function(e,t){var r={inPlace:!1};let a=e.currentTarget;if(t){var l=i()(\".aw-tile-mainContainer\").find(\".aw-tile-placeHolderGroupSep\");for(r.element=l.prev(\".aw-tile-tileGroup\");r.element.hasClass(\"aw-tile-emptyTileGroup\");)r.element=r.element.prev(\".aw-tile-tileGroup\");return 0===r.element.length&&(r.element=r.element.prevObject),r.element=r.element[0],r}if(r.element=i()(\".aw-tile-mainContainer .aw-tile-placeHolderTile\"),0===r.element.length)if(i()(a).hasClass(c))r.element=a;else{var n=i()(a).closest(\".aw-tile-draggable\");0===n.length&&(n=i()(a).find(\".aw-tile-draggable\")),n&&n.length>0&&(r.element=n[0])}else\"0\"===r.element[0].style.order&&0!==r.element.next().length?(r.element=r.element.next(),r.inPlace=!0):r.element=r.element.prev();return r},h=function(){i()(\".aw-tile-placeHolderTile.aw-tile-tileMain\").remove(),i()(\".aw-tile-tileGroup.aw-tile-placeHolderGroupSep\").remove()},T=function(e){return(a=i()('<div class=\"aw-tile-placeHolderTile\"></div>')).addClass(u),i()(e).hasClass(\"aw-tile-doubleSize\")?a.addClass(\"aw-tile-doubleSize\"):i()(e).hasClass(\"aw-tile-tripleSize\")?a.addClass(\"aw-tile-tripleSize\"):i()(e).hasClass(\"aw-tile-quadroSize\")&&a.addClass(\"aw-tile-quadroSize\"),i()(e).hasClass(\"aw-tile-doubleVerticalSize\")?a.addClass(\"aw-tile-doubleVerticalSize\"):i()(e).hasClass(\"aw-tile-tripleVerticalSize\")?a.addClass(\"aw-tile-tripleVerticalSize\"):i()(e).hasClass(\"aw-tile-quadroVerticalSize\")&&a.addClass(\"aw-tile-quadroVerticalSize\"),a},G=function(e,t){if(h(),e)e.removeAttribute(\"id\");else{let e=document.querySelector(\"#draggedTile\");e.classList.remove(g),e.removeAttribute(\"id\")}a=null},b=function(e,t,r){if(e.preventDefault(),a&&t&&r){if(i()(t).hasClass(u)&&i()(t).hasClass(c)){h();var l,n=t.style.order,s=parseInt(n,10),d=i()(t)[0];l=e.clientX>d.offsetWidth/2+d.offsetLeft?\"right\":\"left\",0===s&&\"left\"===l?(a.insertBefore(t),i()(a).css(\"order\",0)):(a.insertAfter(t),i()(a).css(\"order\",s++)),o.a.forEach(i()(a).nextAll(),(function(e){e&&(e.style.order=s++)}))}else if(i()(t).hasClass(p)){h();var g=i()(t);(function(){var e=i()('<div class=\"aw-tile-tileGroup\"></div>');return e.addClass(f),e})().insertBefore(g[0])}v={targetTile:r[0].tile,targetTileGroup:r[0].tileGroup,viewModel:r.viewModel}}};function C(e){return e?e-e%100:0}function D(e,t){e.dataTransfer&&t&&e.dataTransfer.setData(\"text\",JSON.stringify({sourceTile:t.sourceTile,sourceGroupName:t.sourceTileGroup.groupName})),m=t}function S(e,t){!s.default.isIE&&e.dataTransfer&&e.dataTransfer.setDragImage(t,0,0)}function y(e,t,r){let l=e.target,i=r[0].tile,n=r[0].tileGroup,o=l.parentElement.parentElement;if(i){0,t.data(\"dragging\",!0);var s=t.data(\"containerId\");s||(s=Date.now(),t.data(\"containerId\",s));let r=0;for(let e=0;e<3&&e<n.tiles.length;e++)r+=n.tiles[e].tileSize+1;let d=155*r+\"px\";o.parentElement.style.minWidth=d,o.setAttribute(\"id\",\"draggedTile\"),o.classList.add(g),e.dataTransfer&&(e.dataTransfer.effectAllowed=\"move\"),S(e,o),D(e,{sourceTile:i,sourceTileGroup:n}),a=T(l)}else t.data(\"dragging\",!1),e.preventDefault()}function E(e){e.dataTransfer&&(e.dataTransfer.effectAllowed=\"move\")}function N(e,t,r){{let a=r[0].tile,l=r[0].tileGroup;if(a){if(!a.tiles&&(!l||!l.groupName))return;e.dataTransfer&&(e.dataTransfer.effectAllowed=\"move\"),o.a.debounce(b,100)(e,t,r)}}}function O(e){e.preventDefault(),e.dataTransfer&&(e.dataTransfer.effectAllowed=\"move\")}function x(e,t,r){e.preventDefault();let a=e.target.parentElement.parentElement;i()(a).removeClass(g),i()(a).removeAttr(\"id\");e.target}function M(e,t,r,a,l){const n=l;e.stopPropagation(),e.preventDefault();let s=document.querySelector(\"#draggedTile\");var d=!1;s.classList.remove(g),s.parentElement.style.minWidth=\"\";s.firstElementChild.firstElementChild;if(i()(\".aw-tile-placeHolderTile.aw-tile-tileMain\").length>0){var u=i()(\".aw-tile-placeHolderTile.aw-tile-tileMain\").prevAll(),c=i()(\".aw-tile-placeHolderTile.aw-tile-tileMain\").nextAll(),p=0;o.a.forEachRight(u,(function(e){\"draggedTile\"!==e.id&&(e.style.order=p,p++)})),s&&(s.style.order=p,p++),o.a.forEach(c,(function(e){\"draggedTile\"!==e.id&&(e.style.order=p,p++)}))}else i()(\".aw-tile-tileGroup.aw-tile-placeHolderGroupSep\").length>0&&(d=!0);let f=w(e,d);if(!f.element)return void G(s);let m=e.dataTransfer.getData(\"text\");if(m){var h=JSON.parse(m),T=v.targetTile;let e=v.targetTileGroup,t=v.viewModel;if(!d&&z&&T!==h.sourceTile)z(t,h.sourceTile,h.sourceGroupName,T,e,f.inPlace,n);else if(d&&P){var b,C=a[0].tile;C&&(b=C.tileGroup),P(h.sourceTile,h.sourceGroupName,b,n)}0}G(s)}const P=function(e,t,r,a){var l=self.getTileGroup(r),i=I(e.tileGroups,l),n=I(e.tileGroups,a),s=V(t,i),d=e.tileGroups[i].tiles.indexOf(s),u=0;a&&a.tiles.length>0&&(u=C(a.tiles[0].orderNumber));var c=e.tileGroups[i];c.tiles.splice(d,1);var p=!1;0===c.tiles.length&&(p=!0);var f={};f.groupName=\"group\"+(new Date).getTime(),f.tiles=[],f.tiles.push(s),f.tiles.forEach((function(e,t){e.orderNumber=u+100+t,e.isDirty=!0})),i===n&&p?e.tileGroups.splice(n,0,f):e.tileGroups.splice(n+1,0,f);var g=I(e.tileGroups,f);o.a.forEach(e.tileGroups,(function(e,t){if(t>g&&e.tiles.length>0){var r=C(e.tiles[0].orderNumber);e.tiles.map((function(e,t){return e.orderNumber=r+100+t,e.isDirty=!0,e}))}}))},z=function(e,t,r,a,l,i,n){if(a){var o=a.orderNumber,s=A(e,l.groupName),d=A(e,r),u=I(e.tileGroups,d),c=I(e.tileGroups,s),p=V(e,t,u),f=e.tileGroups[u].tiles.indexOf(p),g=l.tiles.indexOf(a),m=C(o);u===c?q(p,f,a,l,m,i):H(e,p,f,u,g,c,m,i,n)}},A=function(e,t){var r;return o.a.forEach(e.tileGroups,(function(e){return e.groupName!==t||(r=e,!1)})),r},V=function(e,t,r){var a;return e.tileGroups[r]&&!o.a.isEmpty(e.tileGroups[r].tiles)&&o.a.forEach(e.tileGroups[r].tiles,(function(e){return!o.a.isEqual(e.displayName,t.displayName)||(a=e,!1)})),a},q=function(e,t,r,a,l,i){if(a){a.tiles.splice(t,1);var n=a.tiles.indexOf(r);i?a.tiles.splice(n,0,e):a.tiles.splice(n+1,0,e),o.a.forEach(a.tiles,(function(e,t){e&&(e.orderNumber=l+t,e.isDirty=!0)}))}},H=function(e,t,r,a,l,i,n,o,s){const{dispatch:d}=e,u=s;let c={...e.getData()}.tileGroups;var p=C(t.orderNumber),f=c[a],g=c[i];f.tiles.splice(r,1),o?g.tiles.splice(l,0,t):g.tiles.splice(l+1,0,t),f.tiles.map((function(e,t){return e.orderNumber=p+t,e.isDirty=!0,e})),c[a]=f,g.tiles.map((function(e,t){return e.orderNumber=n+t,e.isDirty=!0,e})),c[i]=g,d({path:u?\"data.\"+u:\"data.tileGroups\",value:[...c]})},j=e=>{d.a.info(e)},I=(e,t)=>e?e.indexOf(t):-1,L=(e,t)=>{let r={...e};return r.viewModel=t,r};t.a={getBaseOrder:C,addDragDataToDragEvent:D,updateDragImage:S,processDragStart:y,processDragOver:E,processDragEnter:N,processDragLeave:O,processDragEnd:x,processDrop:M,dragStartFn:e=>{let t,{event:r,targetObjects:a,declViewModel:l}=e;r.stopPropagation();let n=document.children[0].querySelector(\".aw-tile-tileCanvasPanel.aw-layout-flexColumn \");var o=i()(n);\"#text\"===r.target.nodeName?(o.data(\"dragging\",!1),r.preventDefault()):(t=L(a,l),y(r,o,t,{}))},dragEndFn:e=>{let t,{event:r,targetObjects:a,declViewModel:l}=e,n=document.children[0].querySelector(\".aw-tile-tileCanvasPanel.aw-layout-flexColumn \");var o=i()(n);if(r.stopPropagation(),r){if(o.data(\"dragging\",!1),!w(r))return;t=L(a,l),x(r)}},dragOverFn:e=>{let{event:t,targetObjects:r,declViewModel:a}=e;(t.stopPropagation(),t.preventDefault(),t)&&(t.dataTransfer&&!s.default.isQt&&(t.dataTransfer.dropEffect=\"move\"),t.stopPropagation(),t.preventDefault(),o.a.debounce(E,100)(t))},dragEnterFn:e=>{let t,{event:r,targetObjects:a,declViewModel:l}=e;if(r.stopPropagation(),r){0;var n=function(e){var t;let r=e.target,a=i()(r).closest(\".aw-tile-draggable\");return a&&a.length>0?t=a[0]:i()(r).hasClass(p)&&(t=i()(r)),t}(r);if(!n)return;t=L(a,l),a.viewModel=l,N(r,n,t)}},dragLeaveFn:e=>{let{event:t,targetObjects:r,declViewModel:a}=e;(t.stopPropagation(),t)&&o.a.debounce(O,100)(t)},dropFn:(e,t)=>{let r,{event:a,targetObjects:l,declViewModel:n}=t,o=document.children[0].querySelector(\".aw-tile-tileCanvasPanel.aw-layout-flexColumn \");var s=i()(o);a.stopPropagation(),a&&(s.data(\"dragging\",!1),r=L(l,n),M(a,0,0,r,e))},updateOrder:z,createNewGroup:P,reOrderInSameGroup:q,reOrderInDifferentGroup:H,retrieveTileInTileGroup:V,getTileGroup:A,postLog:j}}}]);","name":"static/js/1816.1d62c569.chunk.js","input":"(this[\"webpackJsonpcreatingjsxcomponent\"] = this[\"webpackJsonpcreatingjsxcomponent\"] || []).push([[1816],{\n\n/***/ 594:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export dragStartFn */\n/* unused harmony export dragEndFn */\n/* unused harmony export dragOverFn */\n/* unused harmony export dragEnterFn */\n/* unused harmony export createNewGroup */\n/* unused harmony export updateOrder */\n/* unused harmony export getTileGroup */\n/* unused harmony export retrieveTileInTileGroup */\n/* unused harmony export reOrderInSameGroup */\n/* unused harmony export reOrderInDifferentGroup */\n/* unused harmony export dragLeaveFn */\n/* unused harmony export dropFn */\n/* unused harmony export postLog */\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var js_browserUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);\n/* harmony import */ var js_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);\n// Copyright (c) 2021 Siemens\n/**\n * This service manages tiles drag and reorder functionality.\n *\n * @module js/tileDragService\n *//**\n   * Static Strings referencing css classes\n   */var TILEMAIN_CSS_CLASS='aw-tile-tileMain';var TILE_CONT_CSS_CLASS='sw-column.aw-tile-tileContainer';var TILE_DRAGGABLE_CSS_CLASS='aw-tile-draggable';var TILEGROUP_CSS_CLASS='aw-tile-tileGroup';var PLACEHOLDER_GROUP_CSS_CLASS='aw-tile-placeHolderGroupSep';var PLACEHOLDER_TILE_CSS_CLASS='aw-tile-placeHolderTile';var DRAGTILE_CSS_CLASS='aw-tile-dragTile';var TILE_GROUP_TAGNAME='aw-tile-group';var TILE_MAIN_CONTAINER_CSS_CLASS='aw-tile-mainContainer';/**\n   * <pre>\n   * Greater Than 0 If some basic event activity should be logged.\n   * Greater Than 1 If some more fine-grained event activity should be logged.\n   * </pre>\n   */var _debug_logEventActivity=0;var placeHolderTile;let draggedTileInfo;let droppedTileInfo;/**\n   * Check if <b>everything</b> in the 'dataTransfer' is valid to drop on the 'target'.\n   *\n   * @param {DragEvent} event - The event containing the details of the 'dataTransfer' and 'target' element to\n   *            test.\n   * @return {Boolean} TRUE if something in the 'dataTransfer' is valid to drop on the 'target'.\n   */var _isValidToDrop=function(event){return true;};/**\n   * Starting with the 'target' of the given DragEvent and walking up the DOM, looking for tileGroup separator element that\n   * represents to create a new group OR placeHolder tile element to find out the reorder position\n   *\n   * @param {DragEvent} event - The event to start the search at.\n   * @param {Boolean} isNewGroup - If a new tile group is to be created\n   *\n   * @return {Element} The Element where we need to reorder and insert dragged tile after this.\n   */var _findDropTargetElement=function(event,isNewGroup){var dropTarget={};dropTarget.inPlace=false;let eventSrc=event.currentTarget;if(isNewGroup){var placeholderGroup=jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+TILE_MAIN_CONTAINER_CSS_CLASS).find('.'+PLACEHOLDER_GROUP_CSS_CLASS);dropTarget.element=placeholderGroup.prev('.'+TILEGROUP_CSS_CLASS);// For the use case of the previous element not being an actual tile group\nwhile(dropTarget.element.hasClass('aw-tile-emptyTileGroup')){dropTarget.element=dropTarget.element.prev('.'+TILEGROUP_CSS_CLASS);}// If the new group is in the 1st tile group location\nif(dropTarget.element.length===0){dropTarget.element=dropTarget.element.prevObject;}dropTarget.element=dropTarget.element[0];return dropTarget;}dropTarget.element=jquery__WEBPACK_IMPORTED_MODULE_0___default()('.aw-tile-mainContainer .aw-tile-placeHolderTile');if(dropTarget.element.length===0){if(!jquery__WEBPACK_IMPORTED_MODULE_0___default()(eventSrc).hasClass(TILE_DRAGGABLE_CSS_CLASS)){// find the closest\nvar parentTileElem=jquery__WEBPACK_IMPORTED_MODULE_0___default()(eventSrc).closest('.'+TILE_DRAGGABLE_CSS_CLASS);// if its not on the parent level, then try to find it in the children\nif(parentTileElem.length===0){parentTileElem=jquery__WEBPACK_IMPORTED_MODULE_0___default()(eventSrc).find('.'+TILE_DRAGGABLE_CSS_CLASS);}if(parentTileElem&&parentTileElem.length>0){dropTarget.element=parentTileElem[0];}}else{dropTarget.element=eventSrc;}}else{//  If we are the first tile && the next tile is a valid tile, use the next tile and drop the tile 'inPlace'\nif(dropTarget.element[0].style.order==='0'&&dropTarget.element.next().length!==0){dropTarget.element=dropTarget.element.next();dropTarget.inPlace=true;}else{dropTarget.element=dropTarget.element.prev();}}return dropTarget;};/**\n   * Starting with the 'target' of the given DragEvent and walking up the DOM, looking for tileGroup separator element that\n   * represents to create a new group OR placeHolder tile element to find out the reorder position\n   *\n   * @param {DragEvent} event - The event to start the search at.\n   *\n   * @return {Element} The Element where we need to insert placeHolders by showing indication about new order\n   * of dragged tile.\n   */var _findDragEnterElement=function(event){var dragEnterElement;let eventSrc=event.target;// find the closest\nlet parentTileElem=jquery__WEBPACK_IMPORTED_MODULE_0___default()(eventSrc).closest('.'+TILE_DRAGGABLE_CSS_CLASS);if(parentTileElem&&parentTileElem.length>0){dragEnterElement=parentTileElem[0];}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(eventSrc).hasClass(TILEGROUP_CSS_CLASS)){dragEnterElement=jquery__WEBPACK_IMPORTED_MODULE_0___default()(eventSrc);}return dragEnterElement;};/**\n   * Remove place holder elements from DOM.\n   */var _removePlaceHolders=function(){jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+PLACEHOLDER_TILE_CSS_CLASS+'.'+TILEMAIN_CSS_CLASS).remove();jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+TILEGROUP_CSS_CLASS+'.'+PLACEHOLDER_GROUP_CSS_CLASS).remove();};/**\n   * Create dummy placeHolder TileGroup element to represent the position in the UI before dropping\n   *\n   * @return {Element} The Element which represents dummy placeHolder tileGroup\n   */var _createPlaceHolderTileGroup=function(){// hidden tile to place it where dragging tile will dropped\nvar newTileGroup=jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"'+TILEGROUP_CSS_CLASS+'\"></div>');newTileGroup.addClass(PLACEHOLDER_GROUP_CSS_CLASS);return newTileGroup;};/**\n   * Create dummy placeHolder Tile element to represent the position in the UI before dropping\n   *\n   * @param {Object} sourceTile - based on source Tile size we need to create the placeHolder element\n   *\n   * @return {Element} The Element which represents dummy placeHolder tile\n   */var _createPlaceHolderTile=function(sourceTile){// hidden tile to place it where dragging tile will dropped\nplaceHolderTile=jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"'+PLACEHOLDER_TILE_CSS_CLASS+'\"></div>');placeHolderTile.addClass(TILEMAIN_CSS_CLASS);if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(sourceTile).hasClass('aw-tile-doubleSize')){placeHolderTile.addClass('aw-tile-doubleSize');}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(sourceTile).hasClass('aw-tile-tripleSize')){placeHolderTile.addClass('aw-tile-tripleSize');}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(sourceTile).hasClass('aw-tile-quadroSize')){placeHolderTile.addClass('aw-tile-quadroSize');}if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(sourceTile).hasClass('aw-tile-doubleVerticalSize')){placeHolderTile.addClass('aw-tile-doubleVerticalSize');}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(sourceTile).hasClass('aw-tile-tripleVerticalSize')){placeHolderTile.addClass('aw-tile-tripleVerticalSize');}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(sourceTile).hasClass('aw-tile-quadroVerticalSize')){placeHolderTile.addClass('aw-tile-quadroVerticalSize');}return placeHolderTile;};/**\n   * Cleanup CSS classes and attributes added as part of drag events and remove the placeHolder elements\n   *\n   * @param {Element} dragTileIn - The DOM element for dragging tile\n   * @param {Element} element - container element for dragging tile\n   */var _cleanUp=function(dragTileIn,element){_removePlaceHolders();if(dragTileIn){dragTileIn.removeAttribute('id');}else{let dragTile=document.querySelector('#draggedTile');dragTile.classList.remove(DRAGTILE_CSS_CLASS);dragTile.removeAttribute('id');let tileContElem=dragTile;}placeHolderTile=null;if(_debug_logEventActivity>=1){postLog('Cleaning up');}};/**\n   * Handle caching of DnD mapping data on the 'target' element's 'drop container' the 1st time we encounter the\n   * 'target'.\n   *\n   * @param {DragEvent} event - The drag event with the 'target' to process.\n   * @param {Element} targetElement - The target element associate with dragEnter event\n   */var _processDragEnterInternal=function(event,targetElement,targetObjects){event.preventDefault();// place phantom tile instead dragging one\nif(placeHolderTile&&targetElement&&targetObjects){// reordering in existing tiles\nif(jquery__WEBPACK_IMPORTED_MODULE_0___default()(targetElement).hasClass(TILEMAIN_CSS_CLASS)&&jquery__WEBPACK_IMPORTED_MODULE_0___default()(targetElement).hasClass(TILE_DRAGGABLE_CSS_CLASS)){_removePlaceHolders();var targetCssOrder=targetElement.style.order;var order=parseInt(targetCssOrder,10);var side;var element=jquery__WEBPACK_IMPORTED_MODULE_0___default()(targetElement)[0];var mouseX=event.clientX;var elementWidth=element.offsetWidth;var halfElementWidth=elementWidth/2;if(mouseX>halfElementWidth+element.offsetLeft){side='right';}else{side='left';}// If mouse is on left side of first gateway tile, place placeHolderTile before 1st tile. Else, put it after\nif(order===0&&side==='left'){placeHolderTile.insertBefore(targetElement);jquery__WEBPACK_IMPORTED_MODULE_0___default()(placeHolderTile).css('order',0);}else{placeHolderTile.insertAfter(targetElement);jquery__WEBPACK_IMPORTED_MODULE_0___default()(placeHolderTile).css('order',order++);}lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(jquery__WEBPACK_IMPORTED_MODULE_0___default()(placeHolderTile).nextAll(),function(nextSib){if(nextSib){nextSib.style.order=order++;}});if(_debug_logEventActivity>=1){var tgtTile=targetObjects[0].tile;postLog('processDragEnter - PlaceHolder Tile Inserted: '+tgtTile.displayName);}}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()(targetElement).hasClass(TILEGROUP_CSS_CLASS)){// vertically or horizontally creating new group\n_removePlaceHolders();var targetGroupElem=jquery__WEBPACK_IMPORTED_MODULE_0___default()(targetElement);var placeHolderTileGroup=_createPlaceHolderTileGroup();placeHolderTileGroup.insertBefore(targetGroupElem[0]);if(_debug_logEventActivity>=1){postLog('processDragEnter - Insert vertical or horizontal placeHolder Group');}}droppedTileInfo={targetTile:targetObjects[0].tile,targetTileGroup:targetObjects[0].tileGroup,viewModel:targetObjects.viewModel};}};/**\n   * Get base order value from the input parameter's order number\n   * <p>\n   * ex: 212 -> returns 200; 399 -> returns 300\n   *\n   * @param {Number} orderNumber - order number\n   * @returns {Number} base order number if orderNumber is defined, otherwise 0\n   */function getBaseOrder(orderNumber){if(!orderNumber){return 0;}var tensAndOnesDigits=orderNumber%100;return orderNumber-tensAndOnesDigits;}/**\n   * Add the given map of 'dragData' name/value pairs to the 'dataTransfer' property of the given DragEvent.\n   *\n   * @param {DragEvent} event - The DragEvent to set the DragData on.\n   * @param {Object} dragDataMap - Map of name/value pairs to add.\n   */function addDragDataToDragEvent(event,dragDataMap){if(event.dataTransfer&&dragDataMap){event.dataTransfer.setData('text',JSON.stringify({sourceTile:dragDataMap.sourceTile,sourceGroupName:dragDataMap.sourceTileGroup.groupName}));}draggedTileInfo=dragDataMap;}/**\n   * Update the drag image for the DragEvent based on draggable element.\n   *\n   * @param {DragEvent} event - The DragEvent to set the image on.\n   * @param {DOMElement} draggableElem - element being dragged.\n   */function updateDragImage(event,draggableElem){/**\n       * Internet Explorer doesn't support setDragImage at all.\n       * <P>\n       * See: http://mereskin.github.io/dnd/\n       */if(!js_browserUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isIE&&event.dataTransfer){/**\n           * The NX web browser (QT?) currently has a problem with child elements containing float elements. This\n           * should be resolved after moving the list view to a flex display.\n           */event.dataTransfer.setDragImage(draggableElem,0,0);}}/**\n   * Processes drag start event\n   *\n   * @param {DragEvent} event - The event to extract the 'source' element from.\n   * @param {Element} element - The DOM element considered the 'source' of the given drag event.\n   * @param {Object} callBackAPIs - Callback functions used for various interaction reasons.\n   */function processDragStart(event,element,targetObjects){let callBackAPIs=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};let srcElement=event.target;let sourceTile=targetObjects[0].tile;let sourceTileGroup=targetObjects[0].tileGroup;let tileContElem=srcElement.parentElement.parentElement;if(sourceTile){if(_debug_logEventActivity>=2){postLog('processDragStart - Source Tile name: '+sourceTile.displayName+' && Source Tile Group name: '+sourceTileGroup.groupName);}element.data('dragging',true);var containerId=element.data('containerId');if(!containerId){containerId=Date.now();element.data('containerId',containerId);}let width=0;for(let index=0;index<3;index++){if(index<sourceTileGroup.tiles.length){width+=sourceTileGroup.tiles[index].tileSize+1;}else{break;}}// // Default width for the single width tile\nlet parentTileMinWidth=155*width+'px';tileContElem.parentElement.style.minWidth=parentTileMinWidth;tileContElem.setAttribute('id','draggedTile');tileContElem.classList.add(DRAGTILE_CSS_CLASS);if(event.dataTransfer){event.dataTransfer.effectAllowed='move';// only allow moves\n}updateDragImage(event,tileContElem);addDragDataToDragEvent(event,{sourceTile:sourceTile,sourceTileGroup:sourceTileGroup});placeHolderTile=_createPlaceHolderTile(srcElement);}else{if(_debug_logEventActivity>=2){postLog('processDragStart - no tile Info, Set element data \"dragging\" to false');}// No data so there is no reason to let the object be dragged.\nelement.data('dragging',false);event.preventDefault();}}/**\n   * Processes drag over event\n   *\n   * @param {DragEvent} event - The event to extract the 'source' element from.\n   */function processDragOver(event){if(event.dataTransfer){event.dataTransfer.effectAllowed='move';// only allow moves\n}}/**\n   * Processes drag enter event\n   *\n   * @param {DragEvent} event - The event to extract the 'target' element from.\n   * @param {Element} targetElement - The DOM element considered the 'target' of the given drag event.\n   */function processDragEnter(event,targetElement,targetObjects){if(_isValidToDrop(event)){let targetData=targetObjects[0].tile;let targetTileGroup=targetObjects[0].tileGroup;if(targetData){if(_debug_logEventActivity>=2){if(targetData.tiles){postLog('processDragEnter - Target tileGroup: '+targetData.groupName);}else if(targetTileGroup&&targetData.displayName){postLog('processDragEnter - Target tile: '+targetData.displayName+' && Target Item tileGroup: '+targetTileGroup.groupName);}else if(targetTileGroup&&!targetData.displayName){postLog('processDragEnter - Target Item tileGroup: '+targetTileGroup.groupName);}}if(!targetData.tiles&&(!targetTileGroup||!targetTileGroup.groupName)){return;}if(event.dataTransfer){event.dataTransfer.effectAllowed='move';// only allow moves\n}let debounceProcessDragEnter=lodash__WEBPACK_IMPORTED_MODULE_1___default.a.debounce(_processDragEnterInternal,100);debounceProcessDragEnter(event,targetElement,targetObjects);}}}/**\n   * Processes drag leave event\n   *\n   * @param {DragEvent} event - The event to extract the 'target' element from.\n   */function processDragLeave(event){event.preventDefault();if(event.dataTransfer){event.dataTransfer.effectAllowed='move';// only allow moves\n}}/**\n   * Processes drag end event\n   *\n   * @param {DragEvent} event - The event to extract the 'target' element from.\n   * @param {Element} element - The DOM element considered the 'target' of the given drag event.\n   */function processDragEnd(event,element,targetObjects){event.preventDefault();if(_debug_logEventActivity>=1){postLog('processDragEnd - Processing drag end');}let evtElement=event.target.parentElement.parentElement;jquery__WEBPACK_IMPORTED_MODULE_0___default()(evtElement).removeClass(DRAGTILE_CSS_CLASS);jquery__WEBPACK_IMPORTED_MODULE_0___default()(evtElement).removeAttr('id');let tileContElem=event.target;}/**\n   * @param {DragEvent} event - The drag event with the 'target' to process.\n   * @param {Object} callBackAPIs - Callback functions used for various interaction reasons.\n   * @param {Element} element - The DOM element considered the 'target' of the given drag event.\n   * @param {Object}  targetObjects\n   */function processDrop(event,callBackAPIs,element,targetObjects,props){const propertyToUpdate=props;event.stopPropagation();event.preventDefault();if(_debug_logEventActivity>=1){postLog('processDrop - Processing drop');}let dragTile=document.querySelector('#draggedTile');var isNewGroup=false;dragTile.classList.remove(DRAGTILE_CSS_CLASS);dragTile.parentElement.style.minWidth='';let tileContElem=dragTile.firstElementChild.firstElementChild;if(jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+PLACEHOLDER_TILE_CSS_CLASS+'.'+TILEMAIN_CSS_CLASS).length>0){var prevSiblings=jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+PLACEHOLDER_TILE_CSS_CLASS+'.'+TILEMAIN_CSS_CLASS).prevAll();var nextSiblings=jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+PLACEHOLDER_TILE_CSS_CLASS+'.'+TILEMAIN_CSS_CLASS).nextAll();var index=0;lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEachRight(prevSiblings,function(sibling){if(sibling.id!=='draggedTile'){sibling.style.order=index;index++;}});if(dragTile){dragTile.style.order=index;index++;if(_debug_logEventActivity>=1){postLog('processDrop - Set new order style for dragged tile');}}lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(nextSiblings,function(sibling){if(sibling.id!=='draggedTile'){sibling.style.order=index;index++;}});}else if(jquery__WEBPACK_IMPORTED_MODULE_0___default()('.'+TILEGROUP_CSS_CLASS+'.'+PLACEHOLDER_GROUP_CSS_CLASS).length>0){isNewGroup=true;}let targetElement=_findDropTargetElement(event,isNewGroup);if(!targetElement.element){_cleanUp(dragTile);return;}let draggingData=event.dataTransfer.getData('text');if(_debug_logEventActivity>=1){postLog('processDrop - Retrieving drag data');}if(draggingData){var dragDataTile=JSON.parse(draggingData);var targetTile=droppedTileInfo.targetTile;let targetTileGroup=droppedTileInfo.targetTileGroup;let canvasViewModel=droppedTileInfo.viewModel;if(!isNewGroup&&updateOrder&&targetTile!==dragDataTile.sourceTile){updateOrder(canvasViewModel,dragDataTile.sourceTile,dragDataTile.sourceGroupName,targetTile,targetTileGroup,targetElement.inPlace,propertyToUpdate);}else if(isNewGroup&&createNewGroup){var tileGroupElemData=targetObjects[0].tile;var tileGroupData;if(tileGroupElemData){tileGroupData=tileGroupElemData.tileGroup;}createNewGroup(dragDataTile.sourceTile,dragDataTile.sourceGroupName,tileGroupData,propertyToUpdate);}if(_debug_logEventActivity>=1){postLog('processDrop - Dropping data: '+draggingData);}}_cleanUp(dragTile);}const dragStartFn=_ref=>{let{event,targetObjects,declViewModel}=_ref;let targetObjectsDragStart;event.stopPropagation();let panelElement=document.children[0].querySelector('.aw-tile-tileCanvasPanel.aw-layout-flexColumn ');var jqElement=jquery__WEBPACK_IMPORTED_MODULE_0___default()(panelElement);if(event.target.nodeName==='#text'){jqElement.data('dragging',false);event.preventDefault();}else{if(_debug_logEventActivity>=2){postLog('dragstart: '+event);}targetObjectsDragStart=assignViewModelToObject(targetObjects,declViewModel);processDragStart(event,jqElement,targetObjectsDragStart,{});}};const dragEndFn=_ref2=>{let{event,targetObjects,declViewModel}=_ref2;let targetObjectsDragEnd;let panelElement=document.children[0].querySelector('.aw-tile-tileCanvasPanel.aw-layout-flexColumn ');var jqElement=jquery__WEBPACK_IMPORTED_MODULE_0___default()(panelElement);event.stopPropagation();if(event){if(_debug_logEventActivity>=2){postLog('dragend: '+event);}jqElement.data('dragging',false);var target=_findDropTargetElement(event);if(!target){return;}targetObjectsDragEnd=assignViewModelToObject(targetObjects,declViewModel);processDragEnd(event,jqElement,targetObjectsDragEnd);}};const dragOverFn=_ref3=>{let{event,targetObjects,declViewModel}=_ref3;event.stopPropagation();event.preventDefault();if(event){if(_debug_logEventActivity>=2){postLog('dragover: '+event);}if(_isValidToDrop(event)){if(event.dataTransfer&&!js_browserUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isQt){event.dataTransfer.dropEffect='move';// only allow moves\n}event.stopPropagation();event.preventDefault();var debounceProcessDragOver=lodash__WEBPACK_IMPORTED_MODULE_1___default.a.debounce(processDragOver,100);debounceProcessDragOver(event);}}};const dragEnterFn=_ref4=>{let{event,targetObjects,declViewModel}=_ref4;let targetObjectsDragEnter;event.stopPropagation();if(event){if(_debug_logEventActivity>=2){postLog('dragenter: '+event);}var target=_findDragEnterElement(event);if(!target){return;}targetObjectsDragEnter=assignViewModelToObject(targetObjects,declViewModel);targetObjects.viewModel=declViewModel;processDragEnter(event,target,targetObjectsDragEnter);}};const createNewGroup=function(viewModel,sourceTile,sourceGroupName,targetTileGroup){var sourceGroup=self.getTileGroup(sourceGroupName);var sourceGroupIndx=retrieveTileGroupIndex(viewModel.tileGroups,sourceGroup);var targetGroupIndx=retrieveTileGroupIndex(viewModel.tileGroups,targetTileGroup);var sourceTileIn=retrieveTileInTileGroup(sourceTile,sourceGroupIndx);var sourceTileIndx=viewModel.tileGroups[sourceGroupIndx].tiles.indexOf(sourceTileIn);var baseOrder=0;var newGroupIncrement=100;if(targetTileGroup&&targetTileGroup.tiles.length>0){baseOrder=getBaseOrder(targetTileGroup.tiles[0].orderNumber);}// remove tile from source group\nvar srcGroup=viewModel.tileGroups[sourceGroupIndx];srcGroup.tiles.splice(sourceTileIndx,1);var srcGroupNull=false;// If we removed the last tile in the group\nif(srcGroup.tiles.length===0){srcGroupNull=true;}// create new group using current time\nvar newGroup={};newGroup.groupName='group'+new Date().getTime();// add sourceTile to newly created group\nnewGroup.tiles=[];newGroup.tiles.push(sourceTileIn);newGroup.tiles.forEach(function(tile,indx){tile.orderNumber=baseOrder+newGroupIncrement+indx;tile.isDirty=true;});// update tileGroups array\nif(sourceGroupIndx===targetGroupIndx&&srcGroupNull){viewModel.tileGroups.splice(targetGroupIndx,0,newGroup);}else{viewModel.tileGroups.splice(targetGroupIndx+1,0,newGroup);}var newGroupIndx=retrieveTileGroupIndex(viewModel.tileGroups,newGroup);// update order number for all tiles in each and every tile group\nlodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(viewModel.tileGroups,function(tileGroup,index){if(index>newGroupIndx&&tileGroup.tiles.length>0){var grpBaseOrder=getBaseOrder(tileGroup.tiles[0].orderNumber);tileGroup.tiles.map(function(tile,indx){tile.orderNumber=grpBaseOrder+newGroupIncrement+indx;tile.isDirty=true;return tile;});}});};const updateOrder=function(viewModel,sourceTile,sourceGroupName,targetTile,targetTileGroup,inPlace,propertyToUpdate){if(targetTile){var targetTileOrder=targetTile.orderNumber;var targetGroup=getTileGroup(viewModel,targetTileGroup.groupName);var sourceGroup=getTileGroup(viewModel,sourceGroupName);var sourceGroupIndx=retrieveTileGroupIndex(viewModel.tileGroups,sourceGroup);var targetGroupIndx=retrieveTileGroupIndex(viewModel.tileGroups,targetGroup);var sourceTileIn=retrieveTileInTileGroup(viewModel,sourceTile,sourceGroupIndx);var sourceTileIndx=viewModel.tileGroups[sourceGroupIndx].tiles.indexOf(sourceTileIn);var targetTileIndx=targetTileGroup.tiles.indexOf(targetTile);var targetBaseOrder=getBaseOrder(targetTileOrder);if(sourceGroupIndx===targetGroupIndx){// same group rearrange\nreOrderInSameGroup(sourceTileIn,sourceTileIndx,targetTile,targetTileGroup,targetBaseOrder,inPlace);}else{// different group rearrange\nreOrderInDifferentGroup(viewModel,sourceTileIn,sourceTileIndx,sourceGroupIndx,targetTileIndx,targetGroupIndx,targetBaseOrder,inPlace,propertyToUpdate);}}};const getTileGroup=function(viewModel,groupName){var tileGroupIn;lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(viewModel.tileGroups,function(tileGroup){if(tileGroup.groupName===groupName){tileGroupIn=tileGroup;return false;}return true;});return tileGroupIn;};const retrieveTileInTileGroup=function(viewModel,tile,groupIndex){var retrievedTile;if(viewModel.tileGroups[groupIndex]&&!lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEmpty(viewModel.tileGroups[groupIndex].tiles)){lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(viewModel.tileGroups[groupIndex].tiles,function(tileObj){if(lodash__WEBPACK_IMPORTED_MODULE_1___default.a.isEqual(tileObj.displayName,tile.displayName)){retrievedTile=tileObj;return false;}return true;});}return retrievedTile;};const reOrderInSameGroup=function(sourceTile,sourceTileIndx,targetTile,targetTileGroup,targetBaseOrder,inPlace){if(targetTileGroup){targetTileGroup.tiles.splice(sourceTileIndx,1);var targetTileIndx=targetTileGroup.tiles.indexOf(targetTile);if(inPlace){targetTileGroup.tiles.splice(targetTileIndx,0,sourceTile);}else{targetTileGroup.tiles.splice(targetTileIndx+1,0,sourceTile);}lodash__WEBPACK_IMPORTED_MODULE_1___default.a.forEach(targetTileGroup.tiles,function reorderTiles(tile,index){if(tile){tile.orderNumber=targetBaseOrder+index;tile.isDirty=true;}});}};const reOrderInDifferentGroup=function(viewModel,sourceTile,sourceTileIndex,sourceGroupIndex,targetTileIndex,targetGroupIndex,targetBaseOrder,inPlace,propertyToUpdate){const{dispatch}=viewModel;const propertyName=propertyToUpdate;let updatedTileGroups={...viewModel.getData()}.tileGroups;var sourceBaseOrder=getBaseOrder(sourceTile.orderNumber);var srcGroup=updatedTileGroups[sourceGroupIndex];var targetGroupDifferent=updatedTileGroups[targetGroupIndex];// remove tile from source group\nsrcGroup.tiles.splice(sourceTileIndex,1);// add tile to target group\nif(inPlace){targetGroupDifferent.tiles.splice(targetTileIndex,0,sourceTile);}else{targetGroupDifferent.tiles.splice(targetTileIndex+1,0,sourceTile);}// modify order in source group\nsrcGroup.tiles.map(function(tile,idx){tile.orderNumber=sourceBaseOrder+idx;tile.isDirty=true;return tile;});updatedTileGroups[sourceGroupIndex]=srcGroup;// modify order in target group\ntargetGroupDifferent.tiles.map(function(tile,idx){tile.orderNumber=targetBaseOrder+idx;tile.isDirty=true;return tile;});updatedTileGroups[targetGroupIndex]=targetGroupDifferent;let propertyPath=propertyName?'data.'+propertyName:'data.tileGroups';dispatch({path:propertyPath,value:[...updatedTileGroups]});};const dragLeaveFn=_ref5=>{let{event,targetObjects,declViewModel}=_ref5;event.stopPropagation();if(event){if(_debug_logEventActivity>=2){postLog('dragleave: '+event);}var debounceProcessDragLeave=lodash__WEBPACK_IMPORTED_MODULE_1___default.a.debounce(processDragLeave,100);debounceProcessDragLeave(event);}};const dropFn=(props,_ref6)=>{let{event,targetObjects,declViewModel}=_ref6;let targetObjectsDrop;let panelElement=document.children[0].querySelector('.aw-tile-tileCanvasPanel.aw-layout-flexColumn ');var jqElement=jquery__WEBPACK_IMPORTED_MODULE_0___default()(panelElement);event.stopPropagation();if(event){if(_debug_logEventActivity>=2){postLog('drop: '+event);}jqElement.data('dragging',false);targetObjectsDrop=assignViewModelToObject(targetObjects,declViewModel);processDrop(event,{},jqElement,targetObjectsDrop,props);}};const postLog=message=>{js_logger__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].info(message);};const retrieveTileGroupIndex=(tileGroups,group)=>{if(tileGroups){return tileGroups.indexOf(group);}return-1;};const assignViewModelToObject=(targetObjects,declViewModel)=>{let targetObjectsUpdated={...targetObjects};targetObjectsUpdated.viewModel=declViewModel;return targetObjectsUpdated;};/* harmony default export */ __webpack_exports__[\"a\"] = ({getBaseOrder,addDragDataToDragEvent,updateDragImage,processDragStart,processDragOver,processDragEnter,processDragLeave,processDragEnd,processDrop,dragStartFn,dragEndFn,dragOverFn,dragEnterFn,dragLeaveFn,dropFn,updateOrder,createNewGroup,reOrderInSameGroup,reOrderInDifferentGroup,retrieveTileInTileGroup,getTileGroup,postLog});\n\n/***/ })\n\n}]);","inputSourceMap":null}