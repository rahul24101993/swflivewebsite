{"code":"(this.webpackJsonpcreatingjsxcomponent=this.webpackJsonpcreatingjsxcomponent||[]).push([[52],{213:function(t,n,e){\"use strict\";e.r(n),e.d(n,\"setAuthStatus\",(function(){return L})),e.d(n,\"getAuthStatus\",(function(){return M})),e.d(n,\"isAuthenticationInProgress\",(function(){return b})),e.d(n,\"setAuthenticationInProgress\",(function(){return O})),e.d(n,\"pickAuthenticator\",(function(){return I})),e.d(n,\"terminateSession\",(function(){return N})),e.d(n,\"setLocationToDefault\",(function(){return T})),e.d(n,\"locationReplace\",(function(){return R})),e.d(n,\"postSignOut\",(function(){return w})),e.d(n,\"checkSessionValid\",(function(){return y})),e.d(n,\"authenticationSuccessful\",(function(){return x})),e.d(n,\"resetPipeLine\",(function(){return C})),e.d(n,\"runPostAuthInit\",(function(){return B})),e.d(n,\"runPostLoginBlocking\",(function(){return E})),e.d(n,\"runNavToState\",(function(){return J})),e.d(n,\"initLocalStorage\",(function(){return U})),e.d(n,\"reset\",(function(){return j}));var i,o,a=e(19),u=e(581),r=e(582),s=e(7),c=e(26),f=e(98),l=e(32),h=e(6),g=e(82),p=e(0),S=e(159),d=e(11),v=e(43),A=e(499),P=void 0!==c.default.getUrlAttributes().logAuthActivity,k=!1,m={};let L=function(t){f.a.setAuthStatus(t)},M=function(){return f.a.getIsAuthenticated()},b=function(){return f.a.isAuthenticationInProgress()},O=function(t){f.a.setAuthenticationInProgress(t)},I=function(){return o?d.a.instance.resolve(o):a.default.getCfg(\"solutionDef\").then((function(n){return t=n.authenticator,a.default.getCfg(\"authenticator\")})).then((function(n){return P&&h.a.info(\"SM: pickAuthenticator: \"+t),p.b.loadDependentModule(n[t].dep)})).then((function(t){if(!t)throw new Error(\"No authenticator provided!\");return t.getAuthenticator()})).then((function(t){return o=t}));var t};let N=function(){return sessionStorage.clear(),m.pickAuthenticator().then((function(){return function(){if(o)return o.signOut().then((function(){m.postSignOut()})).catch((function(){h.a.error(\"SM: authenticator signOut() err\"),m.postSignOut()}));h.a.error(\"SM:ERROR - processing signOut, but no Authenticator is available\")}()}))},T=function(){var t=location.origin+location.pathname+location.search;o&&o.getPostSignOutURL&&(t=o.getPostSignOutURL(),k=!0),P&&h.a.info(\"SM: setLocationToDefault - target URL: \"+t),m.locationReplace(t)},R=function(t){k=!0,location.replace(t)},w=function(){m.setAuthStatus(!1),m.setAuthenticationInProgress(!1),l.default.publish(\"signingOut\",\"true\"),m.setLocationToDefault()};l.default.subscribe(\"signingOut\",(()=>{T()}));let y=function(t){i=t,P&&h.a.info(\"SM: checkSessionValid: navigationTarget=\"+t),l.default.removeItem(\"signingOut\");var n=d.a.instance.defer();return m.pickAuthenticator().then((function(t){P&&h.a.info(\"SM: authenticator chosen\"),t.checkIfSessionAuthenticated().then((function(){P&&h.a.info(\"SM: auth check Good! already authenticated\"),m.setAuthStatus(!0),r.a.checkPostLoginAuthenticatedStages()?(m.runNavToState(),s.a.publish(\"authentication.complete\",{status:\"OK\"})):m.runPostLoginBlocking().then((function(){m.runNavToState(),s.a.publish(\"authentication.complete\",{status:\"OK\"})}),(function(){P&&h.a.info(\"SM: end runPostLoginBlocking Stage - but ERROR\"),m.runNavToState(),s.a.publish(\"authentication.complete\",{status:\"OK\"})})),n.resolve()})).catch((function(t){P&&h.a.info(\"SM: auth check exception: \\n\"+JSON.stringify(t,null,2)+'\\n SM: Go to \"checkAuthentication\" state'),t&&t.cause&&500===t.cause.status&&(h.a.error(t),window.location.replace(c.default.getBaseURL()+\"serverError.html\")),m.setAuthenticationInProgress(!0),v.a.instance.go(\"checkAuthentication\"),s.a.publish(\"authentication.complete\",{status:\"Failed\"}),n.resolve()}))}),(function(t){h.a.error(\"SM: Unable to pick an authenticator - serious configuration error!\"),s.a.publish(\"authentication.complete\",{status:\"Failed\"}),n.reject(t)})),n.promise},x=function(){return m.setAuthStatus(!0),m.setAuthenticationInProgress(!1),P&&h.a.info('SM: authSuccessful, fire \"session.signIn\" event'),s.a.publish(\"session.signIn\",{}),m.runPostAuthInit().then((function(){return P&&h.a.info(\"SM: runPostAuthInit Stage complete - continue to next Auth step\"),m.runPostLoginBlocking()})).then((function(){return m.runNavToState()}))},C=function(){P&&h.a.info(\"SM: resetPipeLine\"),r.a.resetPostLoginStages()},B=function(){return m.pickAuthenticator().then((function(){return P&&h.a.info(\"SM: runPostAuthInit\"),g.a.authenticationSuccessful(),o?o.postAuthInitialization():d.a.instance.resolve()}))};var D=function(t,n,e,i){P&&h.a.info(\"SM: running on steps for idx: \"+n+\" name: \"+t.name),t.active||(P&&h.a.info(\"SM: not active, skipping step: \"+t.name),e(n));var o=d.a.instance.defer();if(o.promise.then((function(){P&&h.a.info(\"SM: done with pipeline Step continue. \"+t.name),e(n)}),(function(){P&&h.a.info(\"SM: done with pipeline Step - REJECT \"+t.name),i(n)})),t.routeName&&t.routeName.length>0){var a=t.routeName,u=v.a.instance.get(a);u&&(u.data?u.data.nextContinuation=o:u.data={nextContinuation:o}),v.a.instance.go(a,{},{notify:!0,location:!1})}else t.workFunction?t.workFunction(t,o):(P&&h.a.info(\"SM: No work function, assume fOK path\"),e(n))};let E=function(){var t=d.a.instance.defer();return u.a.loadContributions(\"postLoginPipeline\").then((function(n){if(n&&n.length>0){var e=r.a.sortPostLoginPipeline(n);if(e&&e.length>0){var i=null,o=null;i=function(n){e[n].status=!0,l.default.publish(\"postLoginStagesKey\",JSON.stringify(e));var a=n+1;a>=e.length?(P&&h.a.info(\"SM: done with last step, continue post promise\"),t.resolve()):D(e[a],a,i,o)},o=function(n){e[n].status=!1,l.default.publish(\"postLoginStagesKey\",JSON.stringify(e)),P&&h.a.info(\"SM: one of the steps had an error: \"+n),t.reject()};for(var a=null,u=0;u<e.length;u++)if(!e[u].status){a=e[u];break}a?D(a,u,i,o):t.resolve()}else t.resolve()}else t.resolve()}),(function(){h.a.error(\"SM: contribution service error for postLoginPipeline\"),t.resolve()})),t.promise},J=function(){i?(P&&h.a.info(\"SM: runNavToState Stage - redirect to original target: \"+i.toState),v.a.instance.go(i.toState,i.toParams,i.options)):h.a.error(\"SM: post auth, runNavToState - NO saved Nav Target!!\")};function K(){k||location.reload(!1)}let U=function(){l.default.subscribe(\"awSession\",K)},j=function(){o=null};m={setAuthStatus:L,getAuthStatus:M,isAuthenticationInProgress:b,setAuthenticationInProgress:O,pickAuthenticator:I,terminateSession:N,setLocationToDefault:T,locationReplace:R,postSignOut:w,checkSessionValid:y,authenticationSuccessful:x,resetPipeLine:C,runPostAuthInit:B,runPostLoginBlocking:E,runNavToState:J,initLocalStorage:U,reset:j},n.default=m,U(),A.default.initProfiler(),S.a.initClickListener()}}]);","name":"static/js/52.c07a15f7.chunk.js","input":"(this[\"webpackJsonpcreatingjsxcomponent\"] = this[\"webpackJsonpcreatingjsxcomponent\"] || []).push([[52],{\n\n/***/ 213:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAuthStatus\", function() { return setAuthStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAuthStatus\", function() { return getAuthStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAuthenticationInProgress\", function() { return isAuthenticationInProgress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAuthenticationInProgress\", function() { return setAuthenticationInProgress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pickAuthenticator\", function() { return pickAuthenticator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"terminateSession\", function() { return terminateSession; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLocationToDefault\", function() { return setLocationToDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"locationReplace\", function() { return locationReplace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"postSignOut\", function() { return postSignOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkSessionValid\", function() { return checkSessionValid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"authenticationSuccessful\", function() { return authenticationSuccessful; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetPipeLine\", function() { return resetPipeLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runPostAuthInit\", function() { return runPostAuthInit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runPostLoginBlocking\", function() { return runPostLoginBlocking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runNavToState\", function() { return runNavToState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initLocalStorage\", function() { return initLocalStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reset\", function() { return reset; });\n/* harmony import */ var js_configurationService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);\n/* harmony import */ var js_contribution_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(581);\n/* harmony import */ var js_postLoginPipeline_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(582);\n/* harmony import */ var js_eventBus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7);\n/* harmony import */ var js_browserUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26);\n/* harmony import */ var js_sessionState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(98);\n/* harmony import */ var js_localStorage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(32);\n/* harmony import */ var js_logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6);\n/* harmony import */ var js_analyticsService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82);\n/* harmony import */ var js_moduleLoader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(0);\n/* harmony import */ var js_centralAggregationService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(159);\n/* harmony import */ var js_awPromiseService__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(11);\n/* harmony import */ var js_awStateService__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(43);\n/* harmony import */ var js_splmStatsService__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(499);\n// Copyright (c) 2021 Siemens\n/**\n * The native session manager service. This is the coordination/orchestration component which manages the\n * authentication state and authentication processing for signIn and signOut session behavior. The chosen\n * Authenticator performs the actual mechanics of any authentication.\n *\n * This represents the session tracking and authentication detection.\n * @module js/sessionManager.service\n */// Service\n// revisitme: uncomment following imports once available\n// import analyticsSvc from 'js/analyticsService';\nvar _debug_logAuthActivity=js_browserUtils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getUrlAttributes().logAuthActivity!==undefined;// service and module references\n// members\nvar _savedNavTarget;var _targetAuthenticator;// flag to suppress location reload during logoff; required for SSO support (ie11 + IIS)\nvar _suppressReload=false;// prop set/get functions\nvar exports={};/**\n * property setter - defer to the state module.\n *\n * @param {Boolean} isAuth - Whether or not session is currently authenticated.\n */let setAuthStatus=function(isAuth){js_sessionState__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"].setAuthStatus(isAuth);};/**\n * property getter - defer to the state module.\n *\n * @return {Boolean} is session currently authenticated\n */let getAuthStatus=function(){return js_sessionState__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"].getIsAuthenticated();};/**\n * property getter - defer to the state module.\n *\n * @return {Boolean} is authentication in progress\n */let isAuthenticationInProgress=function(){return js_sessionState__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"].isAuthenticationInProgress();};/**\n * property setter - defer to the state module.\n *\n * @param {Boolean} inProg - is authentication currently in progress.\n */let setAuthenticationInProgress=function(inProg){js_sessionState__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"].setAuthenticationInProgress(inProg);};/**\n * responsible for choosing the appropriate authenticator logic to be used. resolve the promise with the\n * appropriate authenticator. This needs more work to account for the various authenticators....\n *\n * how do we get the list of authenticators? logic to pick which one?\n *\n * @return {Promise} returns a promise to be resolved once the correct authenticator is chosen.\n */let pickAuthenticator=function(){// determine how to \"contribute\" the different authenticators,\nif(_targetAuthenticator){// if an authenticator is already set, just use it.\nreturn js_awPromiseService__WEBPACK_IMPORTED_MODULE_11__[/* default */ \"a\"].instance.resolve(_targetAuthenticator);}var name;return js_configurationService__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCfg('solutionDef').then(function(solution){name=solution.authenticator;return js_configurationService__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCfg('authenticator');}).then(function(authenticators){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: pickAuthenticator: '+name);}return js_moduleLoader__WEBPACK_IMPORTED_MODULE_9__[/* default */ \"b\"].loadDependentModule(authenticators[name].dep);}).then(function(module){if(!module){throw new Error('No authenticator provided!');}return module.getAuthenticator();}).then(function(authenticator){_targetAuthenticator=authenticator;return _targetAuthenticator;});};// Sign out related functions/behavior\n/**\n * logic to invoke the authenticator signOut functionality.\n *\n * @return {Promise} promise\n */var callAuthSignOut=function(){if(_targetAuthenticator){return _targetAuthenticator.signOut().then(function(){exports.postSignOut();}).catch(function(){// signOut error, but just continue the path\njs_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].error('SM: authenticator signOut() err');exports.postSignOut();});}js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].error('SM:ERROR - processing signOut, but no Authenticator is available');};/**\n * method to begin the session termination flow. Starts the signOut process.\n *\n * @return {Promise} promise\n */let terminateSession=function(){sessionStorage.clear();// clearing the sessionStorage once session is terminated\nreturn exports.pickAuthenticator().then(function(){return callAuthSignOut();});};/**\n * Wrapper function around the window location reset method to allow for unit test execution.\n *\n * Having a distinct method allows test logic to mock out the actual call.\n */let setLocationToDefault=function(){// need to reload the whole location, not just the $state() to refresh content.\n// Force a refresh of the page to clear memory.\n// This adds in security & memory leaks.\n// should go back to the default or startup page.  Use the base URL\nvar base=location.origin+location.pathname+location.search;if(_targetAuthenticator&&_targetAuthenticator.getPostSignOutURL){base=_targetAuthenticator.getPostSignOutURL();_suppressReload=true;}if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: setLocationToDefault - target URL: '+base);}exports.locationReplace(base);};/**\n * To support unit test, we need a wrapper function which can be mocked to support Jasmine unit tests.\n *\n * @param {String} url - URL to set.\n */let locationReplace=function(url){// eslint-disable-next-line no-debugger\ndebugger;_suppressReload=true;location.replace(url);};/**\n * This is the post authenticator signOut stage. At this point there is no longer a valid session. Update state\n * and trigger refresh navigation.\n */let postSignOut=function(){exports.setAuthStatus(false);exports.setAuthenticationInProgress(false);js_localStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"].publish('signingOut','true');exports.setLocationToDefault();};js_localStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"].subscribe('signingOut',()=>{setLocationToDefault();});/**\n * this resolves the in-doubt state of the session, calls detection soa to see if there is a valid session or\n * not. If there is, continue navigation to target and mark session as authenticated. If no active session,\n * start the authentication processing.\n *\n * NOTE - this runs DURING initialization as part of the first state change, and the angular is not yet\n * initialized.\n *\n * @param {Object} navigationTarget - structure with data for the ui-router request.\n * @return {Promise} promise\n */let checkSessionValid=function(navigationTarget){_savedNavTarget=navigationTarget;// save for post auth.\nif(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: checkSessionValid: '+'navigationTarget='+navigationTarget);}js_localStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"].removeItem('signingOut');// 1) get the correct authenticator, then defer to the authenticator.\n//    SSO & userPW will share some of the getSessionInfo3 path for updating session details.\n// the pick authenticator will determine which of the authenticators to use.\n// the way pickAuthenticator is called from route resolve, we have to pass it the promise\nvar deferred=js_awPromiseService__WEBPACK_IMPORTED_MODULE_11__[/* default */ \"a\"].instance.defer();exports.pickAuthenticator().then(function(authenticator){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: authenticator chosen');}authenticator.checkIfSessionAuthenticated().then(function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: auth check Good! already authenticated');}exports.setAuthStatus(true);var allStagesAuthenticated=js_postLoginPipeline_service__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"].checkPostLoginAuthenticatedStages();if(allStagesAuthenticated){exports.runNavToState();js_eventBus__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].publish('authentication.complete',{status:'OK'});}else{exports.runPostLoginBlocking().then(function(){exports.runNavToState();js_eventBus__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].publish('authentication.complete',{status:'OK'});},function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: end runPostLoginBlocking Stage - but ERROR');}exports.runNavToState();js_eventBus__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].publish('authentication.complete',{status:'OK'});});}deferred.resolve();}).catch(function(err){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: auth check exception: '+'\\n'+JSON.stringify(err,null,2)+'\\n'+' SM: Go to \"checkAuthentication\" state');}if(err&&err.cause&&err.cause.status===500){// \"Internal Server Error\" which typically means that this API isn't available on the server\njs_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].error(err);window.location.replace(js_browserUtils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getBaseURL()+'serverError.html');}exports.setAuthenticationInProgress(true);// indicator that in-process of authenticating\njs_awStateService__WEBPACK_IMPORTED_MODULE_12__[/* default */ \"a\"].instance.go('checkAuthentication');js_eventBus__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].publish('authentication.complete',{status:'Failed'});deferred.resolve();});},function(err){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].error('SM: Unable to pick an authenticator - serious configuration error!');js_eventBus__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].publish('authentication.complete',{status:'Failed'});deferred.reject(err);});return deferred.promise;};/**\n * Stage 2 of the authentication flow. Owned by the session manager.\n *\n * fires the session.signIn event\n *\n * used as the post authentication common flow. Mark the authentication state complete, continue with the login\n * flow/pipeline.\n *\n * @return {Promise} promise\n */let authenticationSuccessful=function(){exports.setAuthStatus(true);exports.setAuthenticationInProgress(false);if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: authSuccessful, fire \"session.signIn\" event');}// Used to fire this event ONLY for User/PW SOA call, fire it here for ALL authenticators\n// this is the point in the session state flow that the authentication is known to be OK.\njs_eventBus__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"].publish('session.signIn',{});// initial authentication is complete.  Let the authenticator do any initialization,\n// then see if there is postLogin pipeline content to be executed...\nreturn exports.runPostAuthInit().then(function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: runPostAuthInit Stage complete - continue to next Auth step');}return exports.runPostLoginBlocking();}).then(function(){return exports.runNavToState();});};/**\n * Reset PipeLine while signing in\n */let resetPipeLine=function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: resetPipeLine');}js_postLoginPipeline_service__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"].resetPostLoginStages();};/**\n * next stage of the authentication path. This is a spot for the authenticator to run any specific logic. At\n * this point we've successfully authenticated and any specific initialization can be done.\n *\n * @return {Promise} a promise which is resolved when the authenticator initialization is complete.\n */let runPostAuthInit=function(){return exports.pickAuthenticator().then(function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: runPostAuthInit');}js_analyticsService__WEBPACK_IMPORTED_MODULE_8__[/* default */ \"a\"].authenticationSuccessful();return _targetAuthenticator?_targetAuthenticator.postAuthInitialization():js_awPromiseService__WEBPACK_IMPORTED_MODULE_11__[/* default */ \"a\"].instance.resolve();});};/**\n * This function is responsible for invoking a single pipeline step definition.\n *\n * A step definition can either identify a route to run OR provide a work function. If the \"routeName\" is\n * provided, that takes precedence and that route will be called.\n *\n * The continuation promise is passed along to the route as part of the custom data structure with a member name\n * of \"nextContinuation\". for the work function, the promise is passed as a function argument.\n *\n * In either case, the route OR the work function MUST either resolve or reject the promise. Resolve path\n * continues pipeline execution, reject will immediately exit the pipeline and not invoke any of the remaining\n * tasks.\n *\n * @param {Object} stepDefn - a step definition for running a single contributed \"step\"\n * @param {Object} curIdx - index of the current step definition in the list\n * @param {Function} fOK - success function to invoke\n * @param {Function} fErr - error function to invoke\n */var runOneStep=function(stepDefn,curIdx,fOK,fErr){// TODO - assert the inputs, non-null stepDefn, fOk & fErr are functions.\nif(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: running on steps for idx: '+curIdx+' name: '+stepDefn.name);}// if not active, skip it altogether\nif(!stepDefn.active){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: not active, skipping step: '+stepDefn.name);}fOK(curIdx);}// the stepPromise represents the continuation for the pipeline step.\nvar stepPromise=js_awPromiseService__WEBPACK_IMPORTED_MODULE_11__[/* default */ \"a\"].instance.defer();stepPromise.promise.then(function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: done with pipeline Step continue. '+stepDefn.name);}fOK(curIdx);},function(){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: done with pipeline Step - REJECT '+stepDefn.name);}fErr(curIdx);});// branch to either routeName for a route, or call the workFunction\nif(stepDefn.routeName&&stepDefn.routeName.length>0){// invoke the route\nvar stName=stepDefn.routeName;var options={notify:true,// notify must be true..\nlocation:false};var myState=js_awStateService__WEBPACK_IMPORTED_MODULE_12__[/* default */ \"a\"].instance.get(stName);// pass the continuation promise as custom data.\nif(myState){if(myState.data){myState.data.nextContinuation=stepPromise;}else{myState.data={nextContinuation:stepPromise};}}js_awStateService__WEBPACK_IMPORTED_MODULE_12__[/* default */ \"a\"].instance.go(stName,{},options);}else{// call the work function\nif(stepDefn.workFunction){stepDefn.workFunction(stepDefn,stepPromise);}else{if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: No work function, assume fOK path');}fOK(curIdx);}}};/**\n * This is the pipeline execution stage - the session manager blocks on any post logic processes. This is a\n * configuration point to execute any contributed post authentication logic.\n *\n * The \"postLoginPipeline\" named contributions are used to obtain pipeline \"step\" definitions which identify the\n * logic or route to be run.\n *\n * @return {Promise} promise\n */let runPostLoginBlocking=function(){var postLogInPiplinePromise=js_awPromiseService__WEBPACK_IMPORTED_MODULE_11__[/* default */ \"a\"].instance.defer();// 1) get the list of contributors (0..n)\n// 2) get the stepDefinitions from each\n// 3) sort the stepDefinitions by priority value\n// 4) invoke each in order.  If one rejects then break the chain. ??? or NOT\n// 5) when all have run, then continue with the next stage step.\njs_contribution_service__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"].loadContributions('postLoginPipeline').then(function(contributors){if(contributors&&contributors.length>0){var pipeLineSteps=js_postLoginPipeline_service__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"].sortPostLoginPipeline(contributors);// iterate and call each step,\n// upon last one, continue the postLogInPiplinePromise\nif(pipeLineSteps&&pipeLineSteps.length>0){var fNext=null;var fErr=null;fNext=function(compStepIdx){pipeLineSteps[compStepIdx].status=true;js_localStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"].publish('postLoginStagesKey',JSON.stringify(pipeLineSteps));var nextIdx=compStepIdx+1;if(nextIdx>=pipeLineSteps.length){// done with the last one,\nif(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: done with last step, continue post promise');}postLogInPiplinePromise.resolve();}else{// run next one\nrunOneStep(pipeLineSteps[nextIdx],nextIdx,fNext,fErr);}};fErr=function(compStepIdx){// step failure, do we fail the pipeline, or continue with the other steps?\n// could log the issue and fall into the fNext() ...\npipeLineSteps[compStepIdx].status=false;js_localStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"].publish('postLoginStagesKey',JSON.stringify(pipeLineSteps));if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: one of the steps had an error: '+compStepIdx);}postLogInPiplinePromise.reject();};var pipeLineStepToExecute=null;var stepIndex=0;for(;stepIndex<pipeLineSteps.length;stepIndex++){// find the step that has status false\nif(!pipeLineSteps[stepIndex].status){pipeLineStepToExecute=pipeLineSteps[stepIndex];break;}}// start running the steps if step to execute is not null\nif(pipeLineStepToExecute){runOneStep(pipeLineStepToExecute,stepIndex,fNext,fErr);}else{// this means all steps have been successfully executed. resolve the promise\npostLogInPiplinePromise.resolve();}}else{// no pipeLine steps, continue on.\npostLogInPiplinePromise.resolve();}}else{// no contributors\npostLogInPiplinePromise.resolve();}},function(){// some reject on the contribution service - continue on.\njs_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].error('SM: contribution service error for postLoginPipeline');postLogInPiplinePromise.resolve();});// the full pipeline promise - when all step definition handlers have completed.\nreturn postLogInPiplinePromise.promise;};/**\n * This is the final authentication stage. At this point all handlers have run, the authenticator has done it's\n * initialization, we can now navigate to the desired target state.\n */let runNavToState=function(){if(_savedNavTarget){if(_debug_logAuthActivity){js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].info('SM: runNavToState Stage - redirect to original target: '+_savedNavTarget.toState);}js_awStateService__WEBPACK_IMPORTED_MODULE_12__[/* default */ \"a\"].instance.go(_savedNavTarget.toState,_savedNavTarget.toParams,_savedNavTarget.options);}else{js_logger__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"].error('SM: post auth, runNavToState - NO saved Nav Target!!');// what to do in this situation?  what is the \"default\" state?\n}};/**\n * location reload\n */function reload(){if(!_suppressReload){location.reload(false);}}/**\n * init set up for localStorage\n */let initLocalStorage=function(){/**\n     * Setup to listed to changes in any associated browser's session state.\n     */js_localStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"].subscribe('awSession',reload);};let reset=function(){_targetAuthenticator=null;};// No dependency on appCtxService, but need the service initialized for event registration\n/**\n * Since this module can be loaded GWT-side by the ModuleLoader class we need to return an object indicating\n * which service should be injected to provide the API for this module.\n */exports={setAuthStatus,getAuthStatus,isAuthenticationInProgress,setAuthenticationInProgress,pickAuthenticator,terminateSession,setLocationToDefault,locationReplace,postSignOut,checkSessionValid,authenticationSuccessful,resetPipeLine,runPostAuthInit,runPostLoginBlocking,runNavToState,initLocalStorage,reset};/* harmony default export */ __webpack_exports__[\"default\"] = (exports);initLocalStorage();// setup analytics profiler.\njs_splmStatsService__WEBPACK_IMPORTED_MODULE_13__[\"default\"].initProfiler();// setup global click listener.\njs_centralAggregationService__WEBPACK_IMPORTED_MODULE_10__[/* default */ \"a\"].initClickListener();\n\n/***/ })\n\n}]);","inputSourceMap":null}