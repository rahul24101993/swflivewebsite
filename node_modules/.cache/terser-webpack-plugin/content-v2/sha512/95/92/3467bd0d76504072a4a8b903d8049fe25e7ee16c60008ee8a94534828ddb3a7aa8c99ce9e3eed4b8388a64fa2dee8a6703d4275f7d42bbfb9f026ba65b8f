{"code":"(this.webpackJsonpcreatingjsxcomponent=this.webpackJsonpcreatingjsxcomponent||[]).push([[3],{175:function(e,t,n){\"use strict\";n.d(t,\"b\",(function(){return o}));let l={};const i=(e,t,n,l,i)=>{var o=e>t?e:t,c=e>t?t:e,s=i.slice(c,o+1);!0===n?l.isMultiSelectionEnabled()||s.length>1?l.addToSelection(s):l.setSelection(s):!1===n?l.removeFromSelection(s):l.toggleSelection(s)};let o=function(e,t,n,i){if(n=n||{},\"multiple\"===t.getMode())if(n.shiftKey&&t.getCurrentSelectedCount()>0)l.handleListShiftMultiSelect(e[0],t,i);else if(n.ctrlKey||n.metaKey&&-1!==window.navigator.platform.toUpperCase().indexOf(\"MAC\")||n.srcElement&&\"pointerdown\"===n.type&&1===n.which||t.isMultiSelectionEnabled()&&3===n.which||n.shiftKey)t.toggleSelection(e[0]);else if(t.isMultiSelectionEnabled())t.isSelected(e[0])?t.removeFromSelection(e[0]):t.addToSelection(e[0]);else{let n=t.isSelected(e[0]),l=t.getCurrentSelectedCount();!n||l>1?t.setSelection(e[0]):t.setSelection([])}else l.handleSingleSelect(e[0],t)};l={handleSingleSelect:function(e,t){e.selected?t.setSelection([]):t.setSelection(e)},handleMultiSelect:function(e,t){t.toggleSelection(e)},handleListShiftMultiSelect:function(e,t,n){if(t.isSelected(e))t.removeFromSelection(e);else{var l=e.alternateID?e.alternateID:e.uid,o=n.getLoadedViewModelObjects(),c=o.indexOf(o.filter((function(e){return e.alternateID?e.alternateID===l:e.uid===l}))[0]),s=o.indexOf(o.filter((function(e){return t.getSelectedIndex(e)===t.getCurrentSelectedCount()-1}))[0]);-1!==c&&-1!==s&&i(c,s,!0,t,o)}},handleSelectionEvent:o,handleSelectAllOrSelectNone:function(e,t,n){e.selectAll?t.setSelection(n[0]):t.setSelection([])}},t.a=l}}]);","name":"static/js/3.d6eca81b.chunk.js","input":"(this[\"webpackJsonpcreatingjsxcomponent\"] = this[\"webpackJsonpcreatingjsxcomponent\"] || []).push([[3],{\n\n/***/ 175:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export handleSingleSelect */\n/* unused harmony export handleMultiSelect */\n/* unused harmony export handleListShiftMultiSelect */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return handleSelectionEvent; });\n/* unused harmony export handleSelectAllOrSelectNone */\n// Copyright (c) 2020 Siemens\n/**\n * Selection helper service which handles single and multi selections for table.\n *\n * @module js/selectionHelper\n */let exports={};/**\n * Handles table single selection\n *\n * @param {Object} selectedObject - selected object\n * @param {Object} selectionModel - the selection model\n */let handleSingleSelect=function(selectedObject,selectionModel){if(!selectedObject.selected){selectionModel.setSelection(selectedObject);}else{selectionModel.setSelection([]);}};/**\n * Handles table multi-selection\n *\n * @param {Object} selectedObject - selected object\n * @param {Object} selectionModel - the selection model\n */let handleMultiSelect=function(selectedObject,selectionModel){selectionModel.toggleSelection(selectedObject);};/**\n * Handles multi-selection with the shift key down for cell list\n *\n * @param {ModelObject[]} selectedObject - selected object\n * @param {Object} selectionModel - the selection model\n * @param {Object} loadedVMObjects - Loaded VMObjects\n */let handleListShiftMultiSelect=function(selectedObject,selectionModel,loadedVMObjects){// If object is already selected ignore shift and just deselect\nif(selectionModel.isSelected(selectedObject)){selectionModel.removeFromSelection(selectedObject);}else{var uid=selectedObject.alternateID?selectedObject.alternateID:selectedObject.uid;var allLoadedObjects=loadedVMObjects.getLoadedViewModelObjects();// Get the index of the object that matches uid\nvar start=allLoadedObjects.indexOf(allLoadedObjects.filter(function(vmo){return vmo.alternateID?vmo.alternateID===uid:vmo.uid===uid;})[0]);// Get the index of the object that matches last selected uid\nvar end=allLoadedObjects.indexOf(allLoadedObjects.filter(function(vmo){return selectionModel.getSelectedIndex(vmo)===selectionModel.getCurrentSelectedCount()-1;})[0]);// Select everything in between\nif(start!==-1&&end!==-1){changeObjectsSelection(start,end,true,selectionModel,allLoadedObjects);}}};/**\n * Change the selection range\n *\n * @param {Number} start - String index in collection to add/remove/toggle.\n * @param {Number} end -  Ending index in collection to add/remove/toggle.\n * @param {Boolean} select - (Optional) TRUE, 'select'...FALSE, 'unselect'...UNDEFINED, 'toggle'.\n * @param {Object} selectionModel - The Selection Model instance\n * @param {Object} loadedVMOs - LoadedVMOs\n */const changeObjectsSelection=(start,end,select,selectionModel,loadedVMOs)=>{var e=start>end?start:end;var s=start>end?end:start;var objects=loadedVMOs.slice(s,e+1);if(select===true){if(selectionModel.isMultiSelectionEnabled()||objects.length>1){selectionModel.addToSelection(objects);}else{selectionModel.setSelection(objects);}}else if(select===false){selectionModel.removeFromSelection(objects);}else{selectionModel.toggleSelection(objects);}};/**\n * Handle a event that should trigger a selection change\n *\n * @param {ModelObject[]} selectedObjects - selected objects\n * @param {Object} selectionModel - the selection model\n * @param {Object} event - The event\n * @param {Object} loadedVMObjects - The currently loaded viewModelObjects\n */let handleSelectionEvent=function(selectedObjects,selectionModel,event,loadedVMObjects){// Event is optional so default\nevent=event?event:{};// If the model supports multiple selection\nif(selectionModel.getMode()==='multiple'){// If shift key and something is selected do range selection\nif(event.shiftKey&&selectionModel.getCurrentSelectedCount()>0){/**\n             * Note: This handling is specific to list as ui-grid has handling for shift select built in - see\n             * rowSelectionChangedBatch.\n             */exports.handleListShiftMultiSelect(selectedObjects[0],selectionModel,loadedVMObjects);}else{// If right click or ctrl click (also implies single object clicked)\n// event.which =1 is for long press on touch devices & event.which=3 is for right click on desktop devices\n//right click should setSelect instead of  toggleSelection\nif(event.ctrlKey||event.metaKey&&window.navigator.platform.toUpperCase().indexOf('MAC')!==-1||event.srcElement&&event.type==='pointerdown'&&event.which===1||selectionModel.isMultiSelectionEnabled()&&event.which===3||event.shiftKey){// If object is already selected\nselectionModel.toggleSelection(selectedObjects[0]);}else if(selectionModel.isMultiSelectionEnabled()){if(!selectionModel.isSelected(selectedObjects[0])){selectionModel.addToSelection(selectedObjects[0]);}else{selectionModel.removeFromSelection(selectedObjects[0]);}}else{let isSelected=selectionModel.isSelected(selectedObjects[0]);let currentSelectedCount=selectionModel.getCurrentSelectedCount();if(!isSelected||currentSelectedCount>1){selectionModel.setSelection(selectedObjects[0]);}else{selectionModel.setSelection([]);}}}}else{exports.handleSingleSelect(selectedObjects[0],selectionModel);}};let handleSelectAllOrSelectNone=function(eventData,selectionModel,selectedObjects){if(eventData.selectAll){selectionModel.setSelection(selectedObjects[0]);}else{selectionModel.setSelection([]);}};exports={handleSingleSelect,handleMultiSelect,handleListShiftMultiSelect,handleSelectionEvent,handleSelectAllOrSelectNone};/* harmony default export */ __webpack_exports__[\"a\"] = (exports);\n\n/***/ })\n\n}]);","inputSourceMap":null}