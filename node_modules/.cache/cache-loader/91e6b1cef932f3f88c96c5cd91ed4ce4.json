{"remainingRequest":"C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\@swf\\tooling\\rewired\\declLoader.js!C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\@swf\\core\\src\\commonframe\\src\\viewmodel\\CommonHeaderTitleViewModel.json","dependencies":[{"path":"C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\@swf\\core\\src\\commonframe\\src\\viewmodel\\CommonHeaderTitleViewModel.json","mtime":1655724739772},{"path":"C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\@swf\\core\\src\\commonframe\\src\\html\\CommonHeaderTitleView.html","mtime":1655724706695},{"path":"C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\babel-loader\\lib\\index.js","mtime":1655724676058},{"path":"C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655724666708},{"path":"C:\\Users\\rahukl57\\Desktop\\SWF\\CreatingOwnComponentUsingJsx\\node_modules\\@swf\\tooling\\rewired\\declLoader.js","mtime":1655724716819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQ29tcGlsZXIgcmVzdWx0IHRvIEpTT04gZmlsZQppbXBvcnQgeyBjcmVhdGVDb21wb25lbnQgfSBmcm9tICdqcy9kZWNsVmlld01vZGVsU2VydmljZSc7CmltcG9ydCB7IHJlZ2lzdGVyRHluSW1wb3J0RW50cnkgfSBmcm9tICdqcy9tb2R1bGVMb2FkZXInOwppbXBvcnQgQXdQYXJzZVNlcnZpY2UgZnJvbSAnanMvYXdQYXJzZVNlcnZpY2UnOwppbXBvcnQgQXdGaWx0ZXJTZXJ2aWNlIGZyb20gJ2pzL2F3RmlsdGVyU2VydmljZSc7CmltcG9ydCB7IGdldEZpZWxkIH0gZnJvbSAnanMvdXRpbHMnOwppbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JzsKbGV0IGZpbHRlclNlciA9IEF3RmlsdGVyU2VydmljZS5pbnN0YW5jZTsKaW1wb3J0IEF3SGVhZGVyVGl0bGUgZnJvbSAndmlld21vZGVsL0F3SGVhZGVyVGl0bGVWaWV3TW9kZWwnOwppbXBvcnQgQXdXb3JrYXJlYVRpdGxlIGZyb20gJ3ZpZXdtb2RlbC9Bd1dvcmthcmVhVGl0bGVWaWV3TW9kZWwnOwppbXBvcnQgeyBFeGlzdFdoZW4gfSBmcm9tICdqcy9ob2NDb2xsZWN0aW9uJzsKY29uc3QgRGl2RXhpc3RXaGVuID0gRXhpc3RXaGVuKCdkaXYnKTsKY29uc3QgQXdXb3JrYXJlYVRpdGxlRXhpc3RXaGVuID0gRXhpc3RXaGVuKEF3V29ya2FyZWFUaXRsZSk7CgoKCi8qCmN0eCBpbXBvcnRzCiovCgpjb25zdCBjdHhJbXBvcnRPYmogPSB7ICB9OwoKCi8qCmR5bmFtaWMgaW1wb3J0CiAqLwpyZWdpc3RlckR5bkltcG9ydEVudHJ5KCdqcy9hd0hlYWRlclNlcnZpY2UnLCAoKSA9PiBpbXBvcnQoJ2pzL2F3SGVhZGVyU2VydmljZScpKTs7CgovKgp2aWV3IG1vZGVsCiAqLwpjb25zdCBkZWNsVmlld01vZGVsSnNvbiA9IHsKICAgICJzY2hlbWFWZXJzaW9uIjogIjEuMC4wIiwKICAgICJhY3Rpb25zIjogewogICAgICAgICJ1cGRhdGVCcmVhZGNydW1iQWN0aW9uIjogewogICAgICAgICAgICAiYWN0aW9uVHlwZSI6ICJKU0Z1bmN0aW9uIiwKICAgICAgICAgICAgIm1ldGhvZCI6ICJ1cGRhdGVCcmVhZENydW1iIiwKICAgICAgICAgICAgImRlcHMiOiAianMvYXdIZWFkZXJTZXJ2aWNlIiwKICAgICAgICAgICAgImlucHV0RGF0YSI6IHsKICAgICAgICAgICAgICAgICJldmVudERhdGEiOiAie3tkYXRhLmV2ZW50TWFwWydyZWZyZXNoQnJlYWRDcnVtYiddfX0iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJvdXRwdXREYXRhIjogewogICAgICAgICAgICAgICAgImJyZWFkQ3J1bWJQcm92aWRlciI6ICJyZXN1bHQuYnJlYWRDcnVtYlByb3ZpZGVyIiwKICAgICAgICAgICAgICAgICJicmVhZGNydW1iQ29uZmlnIjogInJlc3VsdC5icmVhZGNydW1iQ29uZmlnIiwKICAgICAgICAgICAgICAgICJvYmpGb3VuZCI6ICJyZXN1bHQub2JqRm91bmQiCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJyZXNldEJyZWFkY3J1bWJBY3Rpb24iOiB7CiAgICAgICAgICAgICJhY3Rpb25UeXBlIjogIkpTRnVuY3Rpb24iLAogICAgICAgICAgICAibWV0aG9kIjogInJlc2V0QnJlYWRDcnVtYiIsCiAgICAgICAgICAgICJkZXBzIjogImpzL2F3SGVhZGVyU2VydmljZSIsCiAgICAgICAgICAgICJvdXRwdXREYXRhIjogewogICAgICAgICAgICAgICAgImJyZWFkQ3J1bWJQcm92aWRlciI6ICJyZXN1bHQuYnJlYWRDcnVtYlByb3ZpZGVyIgogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiZ2V0QnJlYWRjcnVtYkNvbmZpZyI6IHsKICAgICAgICAgICAgImFjdGlvblR5cGUiOiAiSlNGdW5jdGlvbiIsCiAgICAgICAgICAgICJtZXRob2QiOiAiZ2V0QnJlYWRjcnVtYkNvbmZpZyIsCiAgICAgICAgICAgICJkZXBzIjogImpzL2F3SGVhZGVyU2VydmljZSIsCiAgICAgICAgICAgICJpbnB1dERhdGEiOiB7fSwKICAgICAgICAgICAgIm91dHB1dERhdGEiOiB7CiAgICAgICAgICAgICAgICAiYnJlYWRjcnVtYkNvbmZpZyI6ICIiCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgIm9uRXZlbnQiOiBbCiAgICAgICAgewogICAgICAgICAgICAiZXZlbnRJZCI6ICJyZWZyZXNoQnJlYWRDcnVtYiIsCiAgICAgICAgICAgICJjYWNoZUV2ZW50RGF0YSI6IHRydWUsCiAgICAgICAgICAgICJhY3Rpb24iOiAidXBkYXRlQnJlYWRjcnVtYkFjdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImV2ZW50SWQiOiAicmVzZXRCcmVhZENydW1iIiwKICAgICAgICAgICAgImFjdGlvbiI6ICJyZXNldEJyZWFkY3J1bWJBY3Rpb24iCiAgICAgICAgfQogICAgXSwKICAgICJjdHgiOiB7CiAgICAgICAgImxvY2F0aW9uLnRpdGxlcy5oZWFkZXJUaXRsZSI6IG51bGwKICAgIH0sCiAgICAibGlmZWN5Y2xlSG9va3MiOiB7CiAgICAgICAgIm9uTW91bnQiOiAiZ2V0QnJlYWRjcnVtYkNvbmZpZyIsCiAgICAgICAgIm9uVW5tb3VudCI6ICJyZXNldEJyZWFkY3J1bWJBY3Rpb24iCiAgICB9LAogICAgIl92aWV3TW9kZWxJZCI6ICJDb21tb25IZWFkZXJUaXRsZSIsCiAgICAiX3VuaXF1ZVZpZXdNb2RlbElkIjogIkNvbW1vbkhlYWRlclRpdGxlIgp9OwoKLyoKPGRpdiBjbGFzcz0nYXdIZWFkZXIgc3ctY29sdW1uJz4KICAgIDxkaXYgY2xhc3MgPSdzdy1yb3cgYXctbGF5b3V0LWhlYWRlclRpdGxlQ29udGFpbmVyJz4KICAgICAgICA8YXctaGVhZGVyLXRpdGxlIGhlYWRlcnRpdGxlPSJjdHgubG9jYXRpb24udGl0bGVzLmhlYWRlclRpdGxlIiBoZWFkZXJ2bW89InByb3BzLnN1YlBhbmVsQ29udGV4dC5oZWFkZXJWaWV3TW9kZWwiIGhlYWRlcnByb3BlcnRpZXM9InN1YlBhbmVsQ29udGV4dC5oZWFkZXJQcm9wZXJ0aWVzIj48L2F3LWhlYWRlci10aXRsZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0nc3ctcm93ICc+CiAgICAgICAgPGRpdiBleGlzdC13aGVuPSJjdHguc3VibG9jYXRpb25UaXRsZUVycm9yTWVzc2FnZSIgY2xhc3M9J2F3LWxheW91dC12YWxpZGF0aW9uRXJyb3JNZXNzYWdlJz57Y3R4LnN1YmxvY2F0aW9uVGl0bGVFcnJvck1lc3NhZ2V9PC9kaXY+CiAgICAgICAgPGF3LXdvcmthcmVhLXRpdGxlIGV4aXN0LXdoZW49IiFjdHguc3VibG9jYXRpb25UaXRsZUVycm9yTWVzc2FnZSIgcHJvdmlkZXI9ImRhdGEuYnJlYWRDcnVtYlByb3ZpZGVyIiBicmVhZGNydW1iLWNvbmZpZz0iZGF0YS5icmVhZGNydW1iQ29uZmlnIj48L2F3LXdvcmthcmVhLXRpdGxlPgogICAgPC9kaXY+CjwvZGl2PgoqLwpjb25zdCByZW5kZXJGbiA9KHByb3BzKT0+IHsKICAgIGxldCBzdWJQYW5lbENvbnRleHQgPSBwcm9wcy5zdWJQYW5lbENvbnRleHQgOwogICAgbGV0IHsgdmlld01vZGVsOiB7IGRhdGEsIGRhdGFQcm92aWRlcnMsIGRpc3BhdGNoLCBjb25kaXRpb25zLCBzZWxlY3Rpb25Nb2RlbHMsIGVkaXRIYW5kbGVycywgY2hhcnRQcm92aWRlcnMsIHBvcnRzICB9LCBncmlkcywgY3R4LCBhY3Rpb25zLCBmaWVsZHMsIG1lc3NhZ2VzLCBpMThuLCBmb3JtUHJvcCwgdmlld1BhdGggIH0gPSBwcm9wczsKICAgIGRhdGEgPSB7Li4uZGF0YSwgZGF0YVByb3ZpZGVyc307CiAgICBpZiggc3ViUGFuZWxDb250ZXh0ICYmIHN1YlBhbmVsQ29udGV4dC5maWVsZHMgKXsKICAgICAgICBmaWVsZHMgPSB7IC4uLmZpZWxkcywgLi4uc3ViUGFuZWxDb250ZXh0LmZpZWxkcyB9OwogICAgfQogICAgbGV0ICRpbmRleCA9IG51bGw7CiAgICByZXR1cm4gKAogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iYXdIZWFkZXIgc3ctY29sdW1uIj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ic3ctcm93IGF3LWxheW91dC1oZWFkZXJUaXRsZUNvbnRhaW5lciI+CiAgICAgICAgICAgIDxBd0hlYWRlclRpdGxlIGhlYWRlcnRpdGxlPXtBd1BhcnNlU2VydmljZS5pbnN0YW5jZSggImN0eC5sb2NhdGlvbi50aXRsZXMuaGVhZGVyVGl0bGUiICkoIHsgcHJvcHMsIGRhdGEsIGZpZWxkcywgZGF0YVByb3ZpZGVycywgY3R4LCBpMThuLCBhY3Rpb25zLCBzdWJQYW5lbENvbnRleHQsIHZpZXdQYXRoLCBjb25kaXRpb25zLCBmb3JtUHJvcCwgZGlzcGF0Y2gsIHNlbGVjdGlvbk1vZGVscywgZWRpdEhhbmRsZXJzLCBjaGFydFByb3ZpZGVycywgcG9ydHMgfSApfSBoZWFkZXJ2bW89e0F3UGFyc2VTZXJ2aWNlLmluc3RhbmNlKCAicHJvcHMuc3ViUGFuZWxDb250ZXh0LmhlYWRlclZpZXdNb2RlbCIgKSggeyBwcm9wcywgZGF0YSwgZmllbGRzLCBkYXRhUHJvdmlkZXJzLCBjdHgsIGkxOG4sIGFjdGlvbnMsIHN1YlBhbmVsQ29udGV4dCwgdmlld1BhdGgsIGNvbmRpdGlvbnMsIGZvcm1Qcm9wLCBkaXNwYXRjaCwgc2VsZWN0aW9uTW9kZWxzLCBlZGl0SGFuZGxlcnMsIGNoYXJ0UHJvdmlkZXJzLCBwb3J0cyB9ICl9IGhlYWRlcnByb3BlcnRpZXM9e0F3UGFyc2VTZXJ2aWNlLmluc3RhbmNlKCAic3ViUGFuZWxDb250ZXh0LmhlYWRlclByb3BlcnRpZXMiICkoIHsgcHJvcHMsIGRhdGEsIGZpZWxkcywgZGF0YVByb3ZpZGVycywgY3R4LCBpMThuLCBhY3Rpb25zLCBzdWJQYW5lbENvbnRleHQsIHZpZXdQYXRoLCBjb25kaXRpb25zLCBmb3JtUHJvcCwgZGlzcGF0Y2gsIHNlbGVjdGlvbk1vZGVscywgZWRpdEhhbmRsZXJzLCBjaGFydFByb3ZpZGVycywgcG9ydHMgfSApfT4KICAgICAgICAgICAgPC9Bd0hlYWRlclRpdGxlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzdy1yb3cgIj4KICAgICAgICAgICAgPERpdkV4aXN0V2hlbiBjbGFzc05hbWU9ImF3LWxheW91dC12YWxpZGF0aW9uRXJyb3JNZXNzYWdlIiBleGlzdFdoZW49e0F3UGFyc2VTZXJ2aWNlLmluc3RhbmNlKCAiY3R4LnN1YmxvY2F0aW9uVGl0bGVFcnJvck1lc3NhZ2UiICkoIHsgcHJvcHMsIGRhdGEsIGZpZWxkcywgZGF0YVByb3ZpZGVycywgY3R4LCBpMThuLCBhY3Rpb25zLCBzdWJQYW5lbENvbnRleHQsIHZpZXdQYXRoLCBjb25kaXRpb25zLCBmb3JtUHJvcCwgZGlzcGF0Y2gsIHNlbGVjdGlvbk1vZGVscywgZWRpdEhhbmRsZXJzLCBjaGFydFByb3ZpZGVycywgcG9ydHMgfSApfT4KICAgICAgICAgICAgICAgIHtjdHguc3VibG9jYXRpb25UaXRsZUVycm9yTWVzc2FnZX0KICAgICAgICAgICAgPC9EaXZFeGlzdFdoZW4+CiAgICAgICAgICAgIDxBd1dvcmthcmVhVGl0bGVFeGlzdFdoZW4gcHJvdmlkZXI9e0F3UGFyc2VTZXJ2aWNlLmluc3RhbmNlKCAiZGF0YS5icmVhZENydW1iUHJvdmlkZXIiICkoIHsgcHJvcHMsIGRhdGEsIGZpZWxkcywgZGF0YVByb3ZpZGVycywgY3R4LCBpMThuLCBhY3Rpb25zLCBzdWJQYW5lbENvbnRleHQsIHZpZXdQYXRoLCBjb25kaXRpb25zLCBmb3JtUHJvcCwgZGlzcGF0Y2gsIHNlbGVjdGlvbk1vZGVscywgZWRpdEhhbmRsZXJzLCBjaGFydFByb3ZpZGVycywgcG9ydHMgfSApfSBicmVhZGNydW1iQ29uZmlnPXtBd1BhcnNlU2VydmljZS5pbnN0YW5jZSggImRhdGEuYnJlYWRjcnVtYkNvbmZpZyIgKSggeyBwcm9wcywgZGF0YSwgZmllbGRzLCBkYXRhUHJvdmlkZXJzLCBjdHgsIGkxOG4sIGFjdGlvbnMsIHN1YlBhbmVsQ29udGV4dCwgdmlld1BhdGgsIGNvbmRpdGlvbnMsIGZvcm1Qcm9wLCBkaXNwYXRjaCwgc2VsZWN0aW9uTW9kZWxzLCBlZGl0SGFuZGxlcnMsIGNoYXJ0UHJvdmlkZXJzLCBwb3J0cyB9ICl9IGV4aXN0V2hlbj17QXdQYXJzZVNlcnZpY2UuaW5zdGFuY2UoICIhY3R4LnN1YmxvY2F0aW9uVGl0bGVFcnJvck1lc3NhZ2UiICkoIHsgcHJvcHMsIGRhdGEsIGZpZWxkcywgZGF0YVByb3ZpZGVycywgY3R4LCBpMThuLCBhY3Rpb25zLCBzdWJQYW5lbENvbnRleHQsIHZpZXdQYXRoLCBjb25kaXRpb25zLCBmb3JtUHJvcCwgZGlzcGF0Y2gsIHNlbGVjdGlvbk1vZGVscywgZWRpdEhhbmRsZXJzLCBjaGFydFByb3ZpZGVycywgcG9ydHMgfSApfT4KICAgICAgICAgICAgPC9Bd1dvcmthcmVhVGl0bGVFeGlzdFdoZW4+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICkKfTsKCgovKgpkZWZpbmUgY29tcG9uZW50CiovCmNvbnN0IENvbXBvbmVudCA9IGNyZWF0ZUNvbXBvbmVudCggZGVjbFZpZXdNb2RlbEpzb24sIHJlbmRlckZuLCB1bmRlZmluZWQsIGN0eEltcG9ydE9iaiApOwoKZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50Ow=="}]}