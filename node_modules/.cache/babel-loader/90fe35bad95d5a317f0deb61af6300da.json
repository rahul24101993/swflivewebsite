{"ast":null,"code":"import AwButton from'viewmodel/AwButtonViewModel';import AwLabel from'viewmodel/AwLabelViewModel';import Slider from'js/rcSliderWrapper';import _ from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const{Range}=Slider;const RAIL_STYLE={height:4,position:'absolute',width:'100%',borderRadius:6};const SLIDER_HANDLE_STYLE={height:16,width:16,border:0,position:'absolute',cursor:'pointer',marginTop:'-5px',borderRadius:'50%'};const RANGE_TRACK_STYLE={position:'absolute',height:4};const getSliderValue=sliderOption=>{if(_.isUndefined(sliderOption.values)){return sliderOption.value;}return sliderOption.values;};const _setSliderLabelDisplayValue=(prop,sliderValue)=>{let sliderLabelDisplayValue='';let labelValuePrefix=prop.labelValuePrefix||'';let labelValueSuffix=prop.labelValueSuffix||'';let displayValueLabelMap=prop.displayValueLabelMap;let sliderOption=prop.sliderOption;if(sliderOption.range===true){sliderLabelDisplayValue=labelValuePrefix+sliderOption.values[0]+labelValueSuffix+' - '+labelValuePrefix+sliderOption.values[1]+labelValueSuffix;}else{sliderLabelDisplayValue=sliderOption.value;if(displayValueLabelMap){displayValueLabelMap.some(displayValueKeyValue=>{if(Array.isArray(displayValueKeyValue.key)){if(sliderValue>=displayValueKeyValue.key[0]&&sliderValue<=displayValueKeyValue.key[1]){sliderLabelDisplayValue=displayValueKeyValue.value;return true;}}else if(sliderValue===displayValueKeyValue.key){sliderLabelDisplayValue=displayValueKeyValue.value;return true;}return false;});}sliderLabelDisplayValue=labelValuePrefix+sliderLabelDisplayValue+labelValueSuffix;}return sliderLabelDisplayValue;};export const handleCreate=props=>{const{actionDefs}=props;const sliderDef=props.value&&props.value[0];const sliderCreateAction=sliderDef.sliderCreateEventAction&&actionDefs?actionDefs[sliderDef.sliderCreateEventAction]:()=>{};sliderCreateAction();};export const awSliderRenderFunction=props=>{const{viewModel,actionDefs}=props;const{i18n}=props;const sliderDef=props.value&&props.value[0];const{sliderOption}=sliderDef;const{data}=viewModel;const sliderHandleStyle=[];const rangeTrackStyle=[];// eslint-disable-next-line no-empty-function\nconst sliderStopAction=sliderDef.sliderStopEventAction&&actionDefs?actionDefs[sliderDef.sliderStopEventAction]:()=>{};const sliderChangeAction=sliderDef.sliderChangeEventAction&&actionDefs?actionDefs[sliderDef.sliderChangeEventAction]:()=>{};const showIncrementButtons=sliderDef&&sliderDef.showIncrementButtons;const handleSliderChange=newValue=>{if(typeof newValue==='object'){if(newValue!==sliderOption.values){_.defer(function(){sliderChangeAction();});}sliderOption.values=newValue;}else{if(newValue!==sliderOption.value){_.defer(function(){sliderChangeAction();});}sliderOption.value=newValue;}viewModel.dispatch({path:'data',value:{...data}});};const sliderDisplayValue=_setSliderLabelDisplayValue(sliderDef,getSliderValue(sliderOption));const moveSliderBackward=()=>{const newValue=getSliderValue(sliderOption)-sliderOption.step;if(newValue>=sliderOption.min){handleSliderChange(newValue);}};const moveSliderForward=()=>{const newValue=getSliderValue(sliderOption)+sliderOption.step;if(newValue<=sliderOption.max){handleSliderChange(newValue);}};const labelInfo={fielddata:{uiValue:sliderDisplayValue,labelPlacement:'none'}};if(sliderOption.value||sliderOption.value===0){sliderHandleStyle.push(SLIDER_HANDLE_STYLE);}if(sliderOption.values){sliderOption.values.forEach(()=>{sliderHandleStyle.push(SLIDER_HANDLE_STYLE);rangeTrackStyle.push(RANGE_TRACK_STYLE);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"sw-slider-mainContainer\",children:[/*#__PURE__*/_jsx(AwLabel,{...labelInfo}),/*#__PURE__*/_jsxs(\"div\",{className:\"sw-row align-center demo-h-2f\",children:[showIncrementButtons&&!sliderOption.values?/*#__PURE__*/_jsx(AwButton,{className:\"sw-slider-decrementButton\",iconId:\"miscDecrease_uxRefresh\",action:moveSliderBackward,\"aria-label\":i18n.DecreaseLabel}):'',!sliderOption.values?/*#__PURE__*/_jsx(Slider,{className:\"sw-slider\",min:sliderOption.min,step:sliderOption.step,max:sliderOption.max,value:sliderOption.value,orientation:sliderOption.orientation,disabled:sliderOption.disabled,onAfterChange:sliderStopAction,onChange:handleSliderChange,railStyle:RAIL_STYLE,handleStyle:sliderHandleStyle,ariaLabelForHandle:i18n.SliderLabel,trackStyle:{background:'none'}}):/*#__PURE__*/_jsx(Range,{className:\"sw-slider\",defaultValue:[0,0],value:sliderOption.values,min:sliderOption.min,max:sliderOption.max,onChange:handleSliderChange,railStyle:RAIL_STYLE,handleStyle:sliderHandleStyle,orientation:sliderOption.orientation,disabled:sliderOption.disabled,step:sliderOption.step,onAfterChange:sliderStopAction,trackStyle:rangeTrackStyle,ariaLabelGroupForHandles:[i18n.LeftSliderLabel,i18n.RightSliderLabel]}),showIncrementButtons&&!sliderOption.values?/*#__PURE__*/_jsx(AwButton,{className:\"sw-slider-incrementButton\",iconId:\"miscIncrease_uxRefresh\",action:moveSliderForward,\"aria-label\":i18n.IncreaseLabel}):'']})]});};","map":null,"metadata":{},"sourceType":"module"}