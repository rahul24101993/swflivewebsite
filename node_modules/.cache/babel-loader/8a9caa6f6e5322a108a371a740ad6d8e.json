{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwWidgetValService.js\";\nimport AwTextBoxVal from 'viewmodel/AwTextBoxValViewModel';\nimport AwIntegerVal from 'viewmodel/AwIntegerValViewModel';\nimport AwCheckboxVal from 'viewmodel/AwCheckboxValViewModel';\nimport AwDateVal from 'viewmodel/AwDateValViewModel';\nimport AwDoubleVal from 'viewmodel/AwDoubleValViewModel';\nimport AwTimeVal from 'viewmodel/AwTimeValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwRadiobuttonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwTextareaVal from 'viewmodel/AwTextareaValViewModel';\nimport AwPropertyArrayVal from 'viewmodel/AwPropertyArrayValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport AwPropertyTriStateVal from 'viewmodel/AwPropertyTriStateValViewModel';\nimport AwPropertyObjectVal from 'viewmodel/AwPropertyObjectValViewModel';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyArrayNonEditVal from 'viewmodel/AwPropertyArrayNonEditValViewModel';\nimport AwPropertyRichTextAreaVal from 'viewmodel/AwPropertyRichTextAreaValViewModel';\nimport AwPropertyNonEditOverflowArrayVal from 'viewmodel/AwPropertyNonEditOverflowArrayValViewModel';\nimport AwLovEditVal from 'viewmodel/AwLovEditViewModel';\nimport { includeComponent } from 'js/moduleLoader';\nimport { isComponentRegistered } from 'js/componentRegistry';\n/**\n * render function for AwWidget\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awWidgetValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    modifiable,\n    ...prop\n  } = props;\n  const {\n    renderingHint,\n    ...propData\n  } = prop;\n  const hint = propData.fielddata.renderingHint || renderingHint;\n  const renderingHints = ['textarea', 'checkboxoptionlov', 'textbox', 'label', 'triState', 'textfield', 'radiobutton', 'togglebutton', 'checkbox', 'static', 'wrap', 'longtext', 'date', 'editLov', 'overflow', 'password', 'objectlink', 'commandbutton'];\n  var isHintKeyword = renderingHints.includes(hint);\n\n  if (hint !== undefined && hint !== '' && !isHintKeyword && /^[A-Z][A-Za-z]*$/.test(hint) && isComponentRegistered(hint)) {\n    return includeComponent(hint, propData);\n  }\n\n  const isRichText = propData.fielddata.isRichText;\n  const {\n    maxLength\n  } = propData; // use simple non-edit val if not editing\n\n  if (!propData.fielddata.isEditable || hint === 'label' || modifiable === false) {\n    if (propData.fielddata.isArray) {\n      if (hint === 'overflow') {\n        return /*#__PURE__*/_jsxDEV(AwPropertyNonEditOverflowArrayVal, { ...propData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      } else if (hint === 'checkboxoptionlov' && propData.typex === 'CHECKBOXARRAY') {\n        return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...propData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(AwPropertyArrayNonEditVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...propData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n  switch (propData.typex) {\n    case 'CHECKBOXARRAY':\n    case 'DOUBLEARRAY':\n    case 'DATEARRAY':\n    case 'INTEGERARRAY':\n    case 'STRINGARRAY':\n    case 'BOOLEANARRAY':\n    case 'OBJECTARRAY':\n      {\n        switch (hint) {\n          case 'checkboxoptionlov':\n            return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...prop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 28\n            }, this);\n\n          default:\n            return /*#__PURE__*/_jsxDEV(AwPropertyArrayVal, { ...propData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 28\n            }, this);\n        }\n      }\n\n    case 'INTEGER':\n      return /*#__PURE__*/_jsxDEV(AwIntegerVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this);\n\n    case 'DOUBLE':\n      return /*#__PURE__*/_jsxDEV(AwDoubleVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this);\n\n    case 'BOOLEAN':\n      switch (hint) {\n        case 'radiobutton':\n          return /*#__PURE__*/_jsxDEV(AwRadiobuttonVal, {\n            prop: propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 28\n          }, this);\n\n        case 'togglebutton':\n          return /*#__PURE__*/_jsxDEV(AwToggleButtonVal, { ...propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 28\n          }, this);\n\n        case 'triState':\n          return /*#__PURE__*/_jsxDEV(AwPropertyTriStateVal, { ...propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 28\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(AwCheckboxVal, { ...propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 28\n          }, this);\n      }\n\n    case 'DATE':\n      return /*#__PURE__*/_jsxDEV(AwDateVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this);\n\n    case 'DATETIME':\n      return /*#__PURE__*/_jsxDEV(AwDateTimeVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n\n    case 'OBJECT':\n      return /*#__PURE__*/_jsxDEV(AwPropertyObjectVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this);\n\n    case 'CHAR':\n    case 'STRING':\n      if (propData.type === 'password') {\n        return /*#__PURE__*/_jsxDEV(AwTextBoxVal, { ...propData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 24\n        }, this);\n      } else if (hint && hint === 'editLov') {\n        return /*#__PURE__*/_jsxDEV(AwLovEditVal, { ...propData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 24\n        }, this);\n      } else if (prop.fielddata.hasLov) {\n        return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...propData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 24\n        }, this);\n      } else if (!prop.fielddata.hasLov && (hint || hint !== '')) {\n        const {\n          inTableCell\n        } = propData;\n\n        if (hint === 'textfield' || hint === 'textbox' || maxLength && maxLength < 60 && !isRichText) {\n          return /*#__PURE__*/_jsxDEV(AwTextBoxVal, { ...propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this);\n        } else if (isRichText) {\n          if (inTableCell) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup\",\n              children: /*#__PURE__*/_jsxDEV(AwPropertyRichTextAreaVal, { ...propData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(AwPropertyRichTextAreaVal, { ...propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 28\n          }, this);\n        } else if ((!maxLength || maxLength >= 60) && !isRichText && (hint === 'textarea' || hint === 'longtext')) {\n          if (inTableCell) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup\",\n              children: /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...propData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...propData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 28\n          }, this);\n        }\n      } // default\n\n\n      return /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(AwTextBoxVal, { ...propData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 20\n      }, this);\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwWidgetValService.js"],"names":["awWidgetValRenderFunction","props","prop","propData","hint","renderingHints","isHintKeyword","isComponentRegistered","includeComponent","isRichText","maxLength","modifiable","inTableCell"],"mappings":"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","sourcesContent":["import AwTextBoxVal from 'viewmodel/AwTextBoxValViewModel';\nimport AwIntegerVal from 'viewmodel/AwIntegerValViewModel';\nimport AwCheckboxVal from 'viewmodel/AwCheckboxValViewModel';\nimport AwDateVal from 'viewmodel/AwDateValViewModel';\nimport AwDoubleVal from 'viewmodel/AwDoubleValViewModel';\nimport AwTimeVal from 'viewmodel/AwTimeValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwRadiobuttonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwTextareaVal from 'viewmodel/AwTextareaValViewModel';\nimport AwPropertyArrayVal from 'viewmodel/AwPropertyArrayValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport AwPropertyTriStateVal from 'viewmodel/AwPropertyTriStateValViewModel';\nimport AwPropertyObjectVal from 'viewmodel/AwPropertyObjectValViewModel';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyArrayNonEditVal from 'viewmodel/AwPropertyArrayNonEditValViewModel';\nimport AwPropertyRichTextAreaVal from 'viewmodel/AwPropertyRichTextAreaValViewModel';\nimport AwPropertyNonEditOverflowArrayVal from 'viewmodel/AwPropertyNonEditOverflowArrayValViewModel';\nimport AwLovEditVal from 'viewmodel/AwLovEditViewModel';\nimport { includeComponent } from 'js/moduleLoader';\nimport { isComponentRegistered } from 'js/componentRegistry';\n/**\n * render function for AwWidget\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awWidgetValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        modifiable,\n        ...prop\n    } = props;\n    const { renderingHint, ...propData } = prop;\n    const hint = propData.fielddata.renderingHint || renderingHint;\n\n    const renderingHints = [ 'textarea', 'checkboxoptionlov', 'textbox', 'label', 'triState', 'textfield', 'radiobutton', 'togglebutton', 'checkbox', 'static', 'wrap',\n        'longtext', 'date', 'editLov', 'overflow', 'password', 'objectlink', 'commandbutton'\n    ];\n    var isHintKeyword = renderingHints.includes( hint );\n    if( hint !== undefined && hint !== '' && !isHintKeyword && /^[A-Z][A-Za-z]*$/.test( hint ) && isComponentRegistered( hint ) ) {\n        return includeComponent( hint, propData );\n    }\n    const isRichText = propData.fielddata.isRichText;\n\n    const { maxLength } = propData;\n\n    // use simple non-edit val if not editing\n    if( !propData.fielddata.isEditable || hint === 'label' || modifiable === false ) {\n        if( propData.fielddata.isArray ) {\n            if( hint === 'overflow' ) {\n                return (\n                    <AwPropertyNonEditOverflowArrayVal {...propData}></AwPropertyNonEditOverflowArrayVal>\n                );\n            } else if( hint === 'checkboxoptionlov' && propData.typex === 'CHECKBOXARRAY' ) {\n                return (\n                    <AwPropertyNonEditVal {...propData}></AwPropertyNonEditVal>\n                );\n            }\n            return (\n                <AwPropertyArrayNonEditVal {...propData}></AwPropertyArrayNonEditVal>\n            );\n        }\n        return (\n            <AwPropertyNonEditVal {...propData}></AwPropertyNonEditVal>\n        );\n    }\n    switch ( propData.typex ) {\n        case 'CHECKBOXARRAY':\n        case 'DOUBLEARRAY':\n        case 'DATEARRAY':\n        case 'INTEGERARRAY':\n        case 'STRINGARRAY':\n        case 'BOOLEANARRAY':\n        case 'OBJECTARRAY': {\n            switch ( hint ) {\n                case 'checkboxoptionlov':\n                    return <AwPropertyLovVal {...prop}></AwPropertyLovVal>;\n                default:\n                    return <AwPropertyArrayVal {...propData}></AwPropertyArrayVal>;\n            }\n        }\n        case 'INTEGER':\n            return <AwIntegerVal {...propData}></AwIntegerVal>;\n\n        case 'DOUBLE':\n            return <AwDoubleVal {...propData}></AwDoubleVal>;\n\n        case 'BOOLEAN':\n            switch ( hint ) {\n                case 'radiobutton':\n                    return <AwRadiobuttonVal prop={propData}></AwRadiobuttonVal>;\n\n                case 'togglebutton':\n                    return <AwToggleButtonVal {...propData}></AwToggleButtonVal>;\n\n                case 'triState':\n                    return <AwPropertyTriStateVal {...propData}></AwPropertyTriStateVal>;\n                default:\n                    return <AwCheckboxVal {...propData}></AwCheckboxVal>;\n            }\n\n        case 'DATE':\n            return <AwDateVal {...propData}></AwDateVal>;\n        case 'DATETIME':\n            return <AwDateTimeVal {...propData}></AwDateTimeVal>;\n\n        case 'OBJECT':\n            return <AwPropertyObjectVal {...propData}></AwPropertyObjectVal>;\n\n        case 'CHAR':\n        case 'STRING':\n            if( propData.type === 'password' ) {\n                return <AwTextBoxVal {...propData} ></AwTextBoxVal>;\n            } else if( hint && hint === 'editLov' ) {\n                return <AwLovEditVal {...propData} ></AwLovEditVal>;\n            } else if( prop.fielddata.hasLov ) {\n                return <AwPropertyLovVal {...propData} ></AwPropertyLovVal>;\n            } else if( !prop.fielddata.hasLov && ( hint || hint !== '' ) ) {\n                const { inTableCell } = propData;\n                if( hint === 'textfield' || hint === 'textbox' || maxLength && maxLength < 60 && !isRichText ) {\n                    return (\n                        <AwTextBoxVal {...propData} ></AwTextBoxVal>\n                    );\n                } else if( isRichText ) {\n                    if( inTableCell ) {\n                        return (\n                            <div className='aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup'>\n                                <AwPropertyRichTextAreaVal {...propData} ></AwPropertyRichTextAreaVal>\n                            </div>\n                        );\n                    }\n                    return <AwPropertyRichTextAreaVal {...propData} ></AwPropertyRichTextAreaVal>;\n                } else if( ( !maxLength || maxLength >= 60 ) && !isRichText && ( hint === 'textarea' || hint === 'longtext' ) ) {\n                    if( inTableCell ) {\n                        return (\n                            <div className='aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup'>\n                                <AwTextareaVal {...propData}></AwTextareaVal>\n                            </div>\n\n                        );\n                    }\n                    return <AwTextareaVal {...propData}></AwTextareaVal>;\n                }\n            }\n            // default\n            return <AwTextareaVal {...propData}></AwTextareaVal>;\n\n        default:\n            return <AwTextBoxVal {...propData}></AwTextBoxVal>;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}