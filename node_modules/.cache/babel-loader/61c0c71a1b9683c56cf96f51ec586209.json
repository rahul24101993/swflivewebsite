{"ast":null,"code":"// Copyright (c) 2022 Siemens\n\n/**\n * Defines the {@link NgServices.narrowModeService}\n *\n * @module js/aw.narrowMode.service\n */\nimport eventBus from 'js/eventBus';\nlet exports;\n/**\n * The narrow mode breakpoint in px\n *\n * @private\n * @member narrowModeBreakPoint\n */\n\nlet narrowModeBreakPoint = 460;\n/**\n * Whether currently in narrow mode\n *\n * @private\n * @member isCurrentlyNarrowMode\n */\n\nlet isCurrentlyNarrowMode = false;\n/**\n * Returns if the user is in narrow mode or not.\n *\n * @function isNarrowMode\n * @return {Boolean} Whether currently in narrow mode\n */\n\nexport let isNarrowMode = function () {\n  return isCurrentlyNarrowMode;\n};\n/**\n * Checks to see if the current width matches the criteria for being in narrow mode\n *\n * @function checkNarrowMode\n * @param {number} windowWidth - Current Browser Window width\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\n\nexport let checkNarrowMode = function () {\n  return setNarrowMode(window.innerWidth <= narrowModeBreakPoint);\n};\n/**\n * Updates the internal cached narrow mode state if different and fires narrowModeChangeEvent.\n *\n * @function setNarrowMode\n * @param {boolean} narrowModeState - true if the criteria has been satisfied for narrow mode; false otherwise\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\n\nvar setNarrowMode = function (narrowModeState) {\n  // Only fire events if mode is different than it was prior\n  if (isCurrentlyNarrowMode !== narrowModeState) {\n    isCurrentlyNarrowMode = narrowModeState;\n    eventBus.publish('narrowModeChangeEvent', {\n      isEnterNarrowMode: isCurrentlyNarrowMode\n    });\n  }\n\n  var narrowModeStyle = '';\n\n  if (isCurrentlyNarrowMode) {\n    narrowModeStyle = 'awRootNarrowMode';\n  }\n\n  return narrowModeStyle;\n};\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowModeChangeEvent\n *\n * @function narrowModeChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\n\n\nexport let narrowModeChange = function (eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle) {\n  var output = {\n    layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n    headerTitle: headerTitle,\n    preNarrowTitle: preNarrowTitle\n  };\n\n  if (!eventData.isEnterNarrowMode) {\n    output.layoutSummaryOnlyStyle = '';\n\n    if (preNarrowTitle) {\n      output.headerTitle = preNarrowTitle;\n      output.preNarrowTitle = null;\n    }\n  }\n\n  return output;\n};\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"gwt.subLocationContentSelectionChangeEvent\"\n *\n * @function subLocationContentSelectionChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @param {object} subLocationTabs - subLocation tabs information\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\n\nexport let subLocationContentSelectionChange = function (eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle, subLocationTabs) {\n  var output = {\n    layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n    headerTitle: headerTitle,\n    preNarrowTitle: preNarrowTitle\n  };\n\n  if (eventData.isPrimaryWorkArea && eventData.haveObjectsSelected && window.innerWidth < 460) {\n    output.layoutSummaryOnlyStyle = 'aw-layout-summaryOnly';\n    var activeTab = subLocationTabs.filter(function (tab) {\n      return tab.selectedTab;\n    })[0];\n\n    if (!activeTab) {\n      activeTab = {\n        name: 'null'\n      };\n    }\n\n    if (preNarrowTitle) {\n      output.headerTitle = preNarrowTitle + ' (' + activeTab.name + ')';\n    } else {\n      output.preNarrowTitle = headerTitle;\n      output.headerTitle = headerTitle + ' (' + activeTab.name + ')';\n    }\n  }\n\n  return output;\n};\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowSummaryLocationTitleClickEvent\"\n *\n * @function narrowSummaryLocationTitleClick\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\n\nexport let narrowSummaryLocationTitleClick = function (layoutSummaryOnlyStyle, headerTitle, preNarrowTitle) {\n  var output = {\n    layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n    headerTitle: headerTitle,\n    preNarrowTitle: preNarrowTitle\n  };\n  output.layoutSummaryOnly = '';\n\n  if (preNarrowTitle) {\n    output.headerTitle = preNarrowTitle;\n    output.preNarrowTitle = null;\n  }\n\n  return output;\n};\n/**\n * Since this module can be loaded as a dependent DUI module we need to return an object indicating which\n * service should be injected to provide the API for this module.\n */\n\nexports = {\n  isNarrowMode,\n  checkNarrowMode,\n  narrowModeChange,\n  subLocationContentSelectionChange,\n  narrowSummaryLocationTitleClick\n};\nexport default exports;","map":{"version":3,"names":["eventBus","exports","narrowModeBreakPoint","isCurrentlyNarrowMode","isNarrowMode","checkNarrowMode","setNarrowMode","window","innerWidth","narrowModeState","publish","isEnterNarrowMode","narrowModeStyle","narrowModeChange","eventData","layoutSummaryOnlyStyle","headerTitle","preNarrowTitle","output","subLocationContentSelectionChange","subLocationTabs","isPrimaryWorkArea","haveObjectsSelected","activeTab","filter","tab","selectedTab","name","narrowSummaryLocationTitleClick","layoutSummaryOnly"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/aw.narrowMode.service.js"],"sourcesContent":["// Copyright (c) 2022 Siemens\n\n/**\n * Defines the {@link NgServices.narrowModeService}\n *\n * @module js/aw.narrowMode.service\n */\nimport eventBus from 'js/eventBus';\n\nlet exports;\n\n/**\n * The narrow mode breakpoint in px\n *\n * @private\n * @member narrowModeBreakPoint\n */\nlet narrowModeBreakPoint = 460;\n\n/**\n * Whether currently in narrow mode\n *\n * @private\n * @member isCurrentlyNarrowMode\n */\nlet isCurrentlyNarrowMode = false;\n\n/**\n * Returns if the user is in narrow mode or not.\n *\n * @function isNarrowMode\n * @return {Boolean} Whether currently in narrow mode\n */\nexport let isNarrowMode = function() {\n    return isCurrentlyNarrowMode;\n};\n\n/**\n * Checks to see if the current width matches the criteria for being in narrow mode\n *\n * @function checkNarrowMode\n * @param {number} windowWidth - Current Browser Window width\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\nexport let checkNarrowMode = function() {\n    return setNarrowMode( window.innerWidth <= narrowModeBreakPoint );\n};\n\n/**\n * Updates the internal cached narrow mode state if different and fires narrowModeChangeEvent.\n *\n * @function setNarrowMode\n * @param {boolean} narrowModeState - true if the criteria has been satisfied for narrow mode; false otherwise\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\nvar setNarrowMode = function( narrowModeState ) {\n    // Only fire events if mode is different than it was prior\n    if( isCurrentlyNarrowMode !== narrowModeState ) {\n        isCurrentlyNarrowMode = narrowModeState;\n        eventBus.publish( 'narrowModeChangeEvent', {\n            isEnterNarrowMode: isCurrentlyNarrowMode\n        } );\n    }\n\n    var narrowModeStyle = '';\n    if( isCurrentlyNarrowMode ) {\n        narrowModeStyle = 'awRootNarrowMode';\n    }\n\n    return narrowModeStyle;\n};\n\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowModeChangeEvent\n *\n * @function narrowModeChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\nexport let narrowModeChange = function( eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle ) {\n    var output = {\n        layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n        headerTitle: headerTitle,\n        preNarrowTitle: preNarrowTitle\n    };\n    if( !eventData.isEnterNarrowMode ) {\n        output.layoutSummaryOnlyStyle = '';\n        if( preNarrowTitle ) {\n            output.headerTitle = preNarrowTitle;\n            output.preNarrowTitle = null;\n        }\n    }\n    return output;\n};\n\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"gwt.subLocationContentSelectionChangeEvent\"\n *\n * @function subLocationContentSelectionChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @param {object} subLocationTabs - subLocation tabs information\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\nexport let subLocationContentSelectionChange = function( eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle, subLocationTabs ) {\n    var output = {\n        layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n        headerTitle: headerTitle,\n        preNarrowTitle: preNarrowTitle\n    };\n    if( eventData.isPrimaryWorkArea && eventData.haveObjectsSelected && window.innerWidth < 460 ) {\n        output.layoutSummaryOnlyStyle = 'aw-layout-summaryOnly';\n\n        var activeTab = subLocationTabs.filter( function( tab ) {\n            return tab.selectedTab;\n        } )[ 0 ];\n\n        if( !activeTab ) {\n            activeTab = {\n                name: 'null'\n            };\n        }\n\n        if( preNarrowTitle ) {\n            output.headerTitle = preNarrowTitle + ' (' + activeTab.name + ')';\n        } else {\n            output.preNarrowTitle = headerTitle;\n            output.headerTitle = headerTitle + ' (' + activeTab.name + ')';\n        }\n    }\n    return output;\n};\n\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowSummaryLocationTitleClickEvent\"\n *\n * @function narrowSummaryLocationTitleClick\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\nexport let narrowSummaryLocationTitleClick = function( layoutSummaryOnlyStyle, headerTitle, preNarrowTitle ) {\n    var output = {\n        layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n        headerTitle: headerTitle,\n        preNarrowTitle: preNarrowTitle\n    };\n    output.layoutSummaryOnly = '';\n    if( preNarrowTitle ) {\n        output.headerTitle = preNarrowTitle;\n        output.preNarrowTitle = null;\n    }\n    return output;\n};\n\n/**\n * Since this module can be loaded as a dependent DUI module we need to return an object indicating which\n * service should be injected to provide the API for this module.\n */\n\nexports = {\n    isNarrowMode,\n    checkNarrowMode,\n    narrowModeChange,\n    subLocationContentSelectionChange,\n    narrowSummaryLocationTitleClick\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}