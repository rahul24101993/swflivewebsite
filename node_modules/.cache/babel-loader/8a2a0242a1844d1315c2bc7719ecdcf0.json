{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/**\n * @module js/bootstrap\n */ /**\n * Load the main application JS file and 'bootstrap' the system on this page's document.\n *\n * NOTE: it is different with the afx one for now.\n */ // revisitme - we might need'Debug:debug' alias later when we have many of this use case\nimport Debug from'debug';import ClipboardService from'js/clipboardService';const trace=new Debug('bootstrap');/**\n * bootstrap function\n * NOTE: since the init pipeline is different between afx and @swf/core,\n */const init=()=>{trace('postInitInsertHere:pre');// postInitInsertHere\nimport('js/localeService').then(function(localeSvc){localeSvc.getTextPromise();});import('js/dateTimeService').then(function(dateTimeSvc){dateTimeSvc.init();});import('js/theme.service').then(function(themeService){themeService.init();});import('js/aw.narrowMode.service').then(function(narrowModeService){narrowModeService.checkNarrowMode();});import('js/splmStatsService').then(function(splmStatsService){splmStatsService.install();splmStatsService.installAnalyticsConfig();});import('js/autoSaveContextService').then(function(autoSaveContextService){autoSaveContextService.initializeAutoSaveContext();});import('js/tcCommandVisibilityService2').then(cvs=>cvs.addServerVisibilityLoaderToCtx());trace('postInitInsertHere:post');ClipboardService.instance;};export default init;","map":null,"metadata":{},"sourceType":"module"}