{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\pltable\\\\src\\\\js\\\\awSPLMTableCellRendererFactory.js\";\n\n/* eslint-disable max-lines */\n\n/* eslint-disable @swf/swf/no-react-usage */\n// Copyright (c) 2020 Siemens\n\n/**\n * This module defines the primary classes used to manage the 'aw-table' directive (used by decl grid).\n *\n * DOM Structure:\n * - Cell Command\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_CELL_TOP|aw-splm-tableCellTop\n *         ( Content in CLASS_TABLE_CELL_TOP for all case above )\n *         CLASS_AW_CELL_COMMANDS|aw-jswidgets-gridCellCommands --> Custom command cell if exist\n *         CLASS_NATIVE_CELL_COMMANDS|aw-splm-tableGridCellCommands --> OOTB command cell, check mark\n *\n *\n * - Object/Object List:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_NON_EDIT_CELL_LIST|aw-jswidgets-arrayNonEditValueCellList  --> ( <ul>, CLASS_TABLE_CELL_TOP )\n *         CLASS_TOOLTIP_POPUP|aw-splm-tableTooltipPopup\n *         CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM|aw-jswidgets-arrayValueCellListItem --> ( <li> )\n *           CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS|aw-splm-tablePropertyValueLinks --> ( <a>, innerHTML from addHighlights )\n *           CLASS_AW_OLD_TEXT|aw-jswidgets-oldText --> ( <div>, innerHTML from addHighlights )\n *\n *\n * - Rich Text/Rich Text List:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_NON_EDIT_CELL_LIST|aw-jswidgets-arrayNonEditValueCellList  --> ( <ul>, CLASS_TABLE_CELL_TOP )\n *         CLASS_TOOLTIP_POPUP|aw-splm-tableTooltipPopup\n *         CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM|aw-jswidgets-arrayValueCellListItem  --> ( <li> )\n *           CLASS_TABLE_RTF_CELL_ITEM|aw-splm-tableRTFCellItem ( <div>, innerHTML from addHighlights )\n *           CLASS_AW_OLD_TEXT|aw-jswidgets-oldText --> ( <div>, innerHTML from addHighlights )\n *\n *\n * - Changed Text/Text List:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_NON_EDIT_CELL_LIST|aw-jswidgets-arrayNonEditValueCellList  --> ( <ul>, CLASS_TABLE_CELL_TOP )\n *         CLASS_TOOLTIP_POPUP|aw-splm-tableTooltipPopup\n *         CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM|aw-jswidgets-arrayValueCellListItem --> ( <li> )\n *           CLASS_WIDGET_TABLE_CELL_TEXT|aw-splm-tableCellText --> ( <div>, innerHTML from addHighlights )\n *           CLASS_AW_OLD_TEXT|aw-jswidgets-oldText --> ( <div>, innerHTML from addHighlights )\n *\n * - Text:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_CELL_TOP|aw-splm-tableCellTop --> ( <div> )\n *         CLASS_WIDGET_TABLE_CELL_TEXT|aw-splm-tableCellText --> ( <div>, innerHTML from addHighlights )\n *\n *\n * @module js/awSPLMTableCellRendererFactory\n */\nimport sanitizer from 'js/sanitizer';\nimport appCtxService from 'js/appCtxService';\nimport commandService from 'js/command.service';\nimport clickableTitleService from 'js/clickableTitleService';\nimport cdm from 'soa/kernel/clientDataModel';\nimport AwHttpService from 'js/awHttpService';\nimport AwPromiseService from 'js/awPromiseService';\nimport AwCacheFactoryService from 'js/awCacheFactoryService';\nimport navigationTokenService from 'js/navigationTokenService';\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport cfgSvc from 'js/configurationService';\nimport { includeComponent, getDependentModule, loadDependentModule } from 'js/moduleLoader';\nimport awConfiguration from 'js/awConfiguration';\nimport { renderComponent } from 'js/declReactUtils';\nimport { AppCtxComponent } from 'js/reactAppCtx';\nimport { svgString as miscInProcessIndicator } from \"image/miscInProcessIndicator16.svg\";\nimport { svgString as miscExpandedTree } from \"image/miscExpandedTree12.svg\";\nimport { svgString as miscCollapsedTree } from \"image/miscCollapsedTree12.svg\";\nimport util from 'js/splmTableUtils';\nimport Const from 'js/splmTableConstants';\nimport Cell from 'js/splmTableCellRenderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar exports = {};\n\nvar _propVsRenderingTemplate;\n\nvar _defaultRenderingTemplates = {};\nlet highlighter;\n/**\n * Method to render rows\n *\n * @param {Number} startIndex Start render index\n * @param {Number} endIndex End render Index\n */\n\nfunction generatePropRendererTemplateMap() {\n  _propVsRenderingTemplate = {};\n\n  var _contributedTemplates = cfgSvc.getCfgCached('propertyRendererTemplates');\n\n  _.forEach(_contributedTemplates, function (contributedTemplate) {\n    if (!_.isEmpty(contributedTemplate.headerTemplate) || !_.isEmpty(contributedTemplate.headerTemplateUrl) || !_.isEmpty(contributedTemplate.headerRenderFunction) || !_.isEmpty(contributedTemplate.headerComponent)) {\n      contributedTemplate.isHeaderTemplate = true;\n    }\n\n    if (!_.isEmpty(contributedTemplate.template) || !_.isEmpty(contributedTemplate.templateUrl) || !_.isEmpty(contributedTemplate.renderFunction)) {\n      contributedTemplate.isCellTemplate = true;\n    }\n\n    var isDefaultTemplate = false;\n\n    if (_.isEmpty(contributedTemplate.grids)) {\n      // default rendering template for property\n      isDefaultTemplate = true;\n    } // Get ModelTypes for this Indicator Json\n\n\n    if (_.isEmpty(contributedTemplate.columns)) {\n      _.forEach(contributedTemplate.grids, function (gridid) {\n        _defaultRenderingTemplates[gridid] = contributedTemplate;\n      });\n    }\n\n    _.forEach(contributedTemplate.columns, function (column) {\n      if (!_propVsRenderingTemplate[column]) {\n        _.set(_propVsRenderingTemplate, [column], {\n          specificRenderingTemplates: [],\n          defaultPropRenderingTemplate: {}\n        });\n      }\n\n      var renderingTemplatesForProp = _propVsRenderingTemplate[column];\n\n      if (isDefaultTemplate) {\n        _.set(renderingTemplatesForProp, 'defaultPropRenderingTemplate', contributedTemplate);\n      } else {\n        renderingTemplatesForProp.specificRenderingTemplates.push(contributedTemplate);\n      }\n    });\n  });\n}\n\nvar applyCommandCellScope = function (cellCmdElem, column, vmo, extraDigest) {\n  // The below getElementScope method is commented out and the usages are commented too by assigning empty object to scope.\n  //var scope = util.getElementScope( cellCmdElem );\n  var scope = {};\n  scope.anchor = column.commandsAnchor;\n  scope.commandContext = {\n    vmo: vmo\n  };\n\n  if (vmo.props !== undefined) {\n    scope.prop = vmo.props[column.field];\n  }\n\n  if (extraDigest) {\n    scope.$evalAsync();\n  }\n};\n\nconst getTreeIconCellInfo = function (vmo) {\n  if (vmo.loadingStatus) {\n    return {\n      id: 'miscInProcessIndicator',\n      icon: miscInProcessIndicator\n    };\n  } else if (vmo.isLeaf) {\n    // we made the decision to stop rendering 'typeBlankIcon' because (1) there is no visual difference, (2) we want\n    // to decrease the number of DOM elements and (3) we don't know the history of why it was there.\n    return {};\n  } else if (vmo.isExpanded) {\n    return {\n      id: 'miscExpandedTree',\n      icon: miscExpandedTree\n    };\n  }\n\n  return {\n    id: 'miscCollapsedTree',\n    icon: miscCollapsedTree\n  };\n};\n/**\n * Creates the Icon cell for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n *\n * @returns {DOMElement} icon element\n */\n\n\nconst createIconElement = function (tableElem, vmo) {\n  let treeCellButtonHeaderCell = util.createElement('div', Const.CLASS_TREE_ROW_HEADER_BUTTONS, Const.CLASS_TREE_BASE_HEADER);\n\n  if (!vmo.isLeaf) {\n    treeCellButtonHeaderCell.classList.add(Const.CLASS_WIDGET_TREE_NODE_TOGGLE_CMD);\n    treeCellButtonHeaderCell.tabIndex = -1;\n\n    tableElem._tableInstance.keyboardService.setOnFocusAndBlur(treeCellButtonHeaderCell);\n  }\n\n  const treeIndent = 16;\n  treeCellButtonHeaderCell.style.marginLeft = treeIndent * vmo.levelNdx + 'px';\n  treeCellButtonHeaderCell.title = vmo._twistieTitle;\n  const iconCellInfo = getTreeIconCellInfo(vmo); // this if check is for the vmo.isLeaf use case where there is no need to render an icon\n\n  if (iconCellInfo && iconCellInfo.id) {\n    let iconElem = document.createElement('span');\n    iconElem.classList.add('aw-icon', 'aw-base-icon');\n    let attr = document.createAttribute('iconid');\n    attr.value = iconCellInfo.id;\n    let attrLegacy = document.createAttribute('icon-id');\n    attrLegacy.value = iconCellInfo.id;\n    iconElem.setAttributeNode(attr);\n    iconElem.setAttributeNode(attrLegacy);\n    iconElem.innerHTML = iconCellInfo.icon;\n    treeCellButtonHeaderCell.appendChild(iconElem);\n  }\n\n  return treeCellButtonHeaderCell;\n};\n/**\n * Creates the cell decorator element for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n *\n * @returns {DOMElement} cell decorator element\n */\n\n\nvar createCellDecoratorElement = function (tableElem, vmo) {\n  var cellColorContainerElement = util.createElement('div', Const.CLASS_GRID_CELL_COLOR_CONTAINER, Const.CLASS_TREE_COLOR_CONTAINER);\n  var cellColorElement = util.createColorIndicatorElement(vmo);\n  cellColorContainerElement.appendChild(cellColorElement);\n  return cellColorContainerElement;\n};\n/**\n * Get the img element tag alt text for WCAG accessibility compliance\n * @param {Object} vmo - View model object\n * @returns {String} Returns alt text\n */\n\n\nvar getImageAltText = function (vmo) {\n  if (vmo.hasThumbnail) {\n    return vmo.cellHeader1;\n  } else if (vmo.props && vmo.props.object_type && vmo.props.object_type.uiValue) {\n    return vmo.props.object_type.uiValue;\n  }\n\n  return vmo.modelType && vmo.modelType.displayName ? vmo.modelType.displayName : '';\n};\n/**\n * Creates the cell image element for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n *\n * @returns {DOMElement} cell image element\n */\n\n\nvar createCellImageElement = function (tableElem, vmo) {\n  let imgURL = util.getImgURL(vmo);\n  let svgString = vmo.svgString;\n\n  if (imgURL === '' && !svgString) {\n    return null;\n  }\n\n  let cellImageContainerElement = util.createElement('div', Const.CLASS_GRID_CELL_IMAGE);\n  let cellImageElement = null;\n\n  if (imgURL && imgURL !== '') {\n    cellImageElement = util.createElement('img', Const.CLASS_ICON_BASE);\n    cellImageElement.src = imgURL;\n  } else if (svgString) {\n    cellImageElement = util.createElement('span', Const.CLASS_ICON_BASE);\n    cellImageElement.innerHTML = svgString;\n  }\n\n  if (cellImageElement) {\n    cellImageElement.alt = getImageAltText(vmo);\n    cellImageContainerElement.appendChild(cellImageElement);\n  }\n\n  return cellImageContainerElement;\n};\n\nvar toggleTreeCellAction = function (vmo, tableElem, treeCellElement) {\n  if (vmo.isExpanded || vmo.isInExpandBelowMode) {\n    // collapse\n    delete vmo.isExpanded;\n    vmo.isInExpandBelowMode = false;\n  } else {\n    vmo.isExpanded = true; // Set icon cell to loading icon\n\n    var iconContainerElement = treeCellElement.getElementsByClassName(Const.CLASS_ICON_BASE)[0];\n\n    if (iconContainerElement !== undefined) {\n      iconContainerElement.innerHTML = miscInProcessIndicator;\n    }\n  } // Prevent the selected row from being scrolled to if it goes out of view\n\n\n  tableElem._tableInstance.tableInstanceCallbacks.unsetScrollToRowIndex();\n\n  if (tableElem._tableInstance.tableInstanceCallbacks.toggleTreeNode) {\n    tableElem._tableInstance.tableInstanceCallbacks.toggleTreeNode(vmo);\n  } else {\n    eventBus.publish(tableElem.id + '.plTable.toggleTreeNode', vmo);\n  }\n};\n\nvar populateHrefContentPerPropValue = function (objectElement, scope, uidToBeEvaluated, vmo) {\n  var deferred = AwPromiseService.instance.defer();\n\n  if (objectElement && scope && uidToBeEvaluated) {\n    navigationTokenService.getNavigationContent(scope, uidToBeEvaluated, vmo).then(function (urlDetails) {\n      var hrefDetails = urlDetails;\n\n      if (hrefDetails) {\n        deferred.resolve({\n          objectElement: objectElement,\n          url: hrefDetails\n        });\n      }\n    });\n  }\n\n  return deferred.promise;\n};\n\nvar addHrefToAnchorLink = function (objectElement, scope, uidToBeEvaluated, vmo) {\n  objectElement.addEventListener('mouseenter', function () {\n    populateHrefContentPerPropValue(objectElement, scope, uidToBeEvaluated, vmo).then(function (response) {\n      if (!_.isUndefined(response)) {\n        objectElement = util.addAttributeToDOMElement(response.objectElement, 'href', response.url.urlContent);\n        objectElement = util.addAttributeToDOMElement(objectElement, 'target', response.url.target);\n      }\n    });\n  });\n  return objectElement;\n};\n\nvar addClickableCellTitle = function (element, vmo, value, tableElem) {\n  // make cell text clickable\n  var clickableTextDiv = util.createElement('div');\n  var clickableText = util.createElement('a', 'aw-uiwidgets-clickableTitle');\n  const scope = {\n    data: tableElem._tableInstance.declViewModel,\n    ctx: tableElem._tableInstance.ctx,\n    tableContext: tableElem._tableInstance\n  };\n\n  clickableText.onclick = function (event) {\n    scope.vmo = vmo;\n    clickableTitleService.doIt(event, scope, tableElem._tableInstance.runActionWithViewModel);\n  };\n\n  clickableText.innerHTML = exports.addHighlights(value);\n  clickableTextDiv.appendChild(clickableText);\n  element.appendChild(clickableTextDiv);\n};\n/**\n * Creates the title and command container element for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n * @param {Object} column the column associated with the cell\n * @returns {DOMElement} title/command container element\n */\n\n\nlet createTitleElement = function (tableElem, vmo, column) {\n  let tableNonEditContainerElement = util.createElement('div', Const.CLASS_WIDGET_TABLE_NON_EDIT_CONTAINER, Const.CLASS_LAYOUT_ROW_CONTAINER);\n  let displayName = vmo.displayName;\n  tableNonEditContainerElement.title = displayName;\n  let parsedValue = sanitizer.htmlEscapeAllowEntities(displayName, true, true);\n  let gridCellText = util.createElement('div', Const.CLASS_WIDGET_TABLE_CELL_TEXT);\n\n  if ((column.isTableCommand || column.isTreeNavigation) && clickableTitleService.hasClickableCellTitleActions()) {\n    addClickableCellTitle(gridCellText, vmo, parsedValue, tableElem);\n  } else {\n    gridCellText.innerHTML = exports.addHighlights(parsedValue);\n  }\n\n  const dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n\n  if (dynamicRowHeightEnabled) {\n    tableNonEditContainerElement.classList.add(Const.CLASS_TABLE_CELL_TOP_DYNAMIC);\n    gridCellText.classList.add(Const.CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC);\n  } // Skeletons fix - if no cell content, remove table cell text class\n\n\n  if (gridCellText.innerHTML === '') {\n    gridCellText.classList.remove(Const.CLASS_WIDGET_TABLE_CELL_TEXT);\n  }\n\n  tableNonEditContainerElement.appendChild(gridCellText);\n  return tableNonEditContainerElement;\n};\n/**\n * Show or hide the element based on 'isSelected'.\n *\n * @param {DOMElement} element DOM element to show/hide\n * @param {Boolean} isSelected used to either show or hide element\n */\n\n\nvar toggleCellCommandVisibility = function (element, isSelected) {\n  if (isSelected) {\n    util.showHideElement(element, false);\n  } else {\n    util.showHideElement(element, true);\n  }\n};\n/**\n * Add events to the tree command cell elements.\n *\n * @param {DOMElement} treeCellElement tree cell container element\n * @param {Object} vmo the vmo for the cell\n * @param {DOMElement} tableElem table element\n */\n\n\nvar addTreeCommandCellEvents = function (treeCellElement, vmo, tableElem) {\n  var tableInstance = util.getTableInstance(tableElem);\n  var dataProviderName = tableInstance.dataProvider.name;\n  var treeCellButtonElement = treeCellElement.getElementsByClassName(Const.CLASS_TREE_ROW_HEADER_BUTTONS)[0];\n\n  if (treeCellButtonElement) {\n    const treeCommandCellClickListener = function () {\n      if (!vmo.isLeaf && util.isExpandAllowed(tableElem)) {\n        toggleTreeCellAction(vmo, tableElem, treeCellElement);\n      }\n    };\n\n    treeCellButtonElement.addEventListener('click', treeCommandCellClickListener);\n    treeCellButtonElement.addEventListener('keydown', function (event) {\n      if (event.code === 'Enter' || event.code === 'Space') {\n        treeCommandCellClickListener();\n      }\n    });\n  }\n\n  var treeCellImageElement = treeCellElement.getElementsByClassName(Const.CLASS_GRID_CELL_IMAGE)[0];\n\n  if (treeCellImageElement) {\n    treeCellImageElement.addEventListener('click', function () {\n      eventBus.publish('plTable.imageButtonClick', vmo);\n    });\n  }\n\n  var cellCommandBarElement = treeCellElement.getElementsByClassName('cellCommandBarContainer')[0];\n\n  if (cellCommandBarElement) {\n    var isSelected = tableInstance.dataProvider.selectionModel.multiSelectEnabled && vmo.selected;\n    toggleCellCommandVisibility(cellCommandBarElement, isSelected);\n    eventBus.subscribe(dataProviderName + '.selectionChangeEvent', function () {\n      isSelected = tableInstance.dataProvider.selectionModel.multiSelectEnabled && vmo.selected;\n      toggleCellCommandVisibility(cellCommandBarElement, isSelected);\n    });\n  }\n};\n/**\n * @memberOf js/awSPLMTableCellRendererFactory\n *\n * This method is used for creating cell commands for PL Table in AW usecase.\n *\n * @param {Object} column - column Definition\n * @param {Object} vmo - View model object\n * @param {Boolean} [isInternal] - true if function being called from internal PL Table code\n * @returns {DOMElement} DOMElement presents cell command bar\n *\n */\n\n\nexport let createCellCommandElement = function (column, vmo, isInternal) {\n  const fields = {\n    anchor: column.commandsAnchor,\n    column: column,\n    vmo: vmo,\n    isInternal: isInternal\n  };\n  var cellCommandsContainer = util.createElement('div', Const.CLASS_AW_CELL_COMMANDS_CONTAINER);\n  let cellCmdElem = includeComponent('AwTableCommandBar', fields);\n  renderComponent( /*#__PURE__*/_jsxDEV(AppCtxComponent, {\n    children: cellCmdElem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 22\n  }, this), cellCommandsContainer);\n  return cellCommandsContainer;\n};\nexport let createTreeCellCommandElement = function (column, vmo, tableElem) {\n  // CELL CONTAINER\n  var tableTreeCommandCell = util.createElement('div', Const.CLASS_AW_TREE_COMMAND_CELL, Const.CLASS_WIDGET_TABLE_CELL);\n  var treeCellTop = util.createElement('div', Const.CLASS_AW_JS_CELL_TOP, Const.CLASS_WIDGET_UI_NON_EDIT_CELL);\n  tableTreeCommandCell.appendChild(treeCellTop); // ICON\n\n  var iconElement = createIconElement(tableElem, vmo);\n  treeCellTop.appendChild(iconElement); // DECORATOR\n\n  var cellDecoratorElement = createCellDecoratorElement(tableElem, vmo);\n  treeCellTop.appendChild(cellDecoratorElement); // IMAGE\n\n  var cellImageElement = createCellImageElement(tableElem, vmo);\n\n  if (cellImageElement) {\n    treeCellTop.appendChild(cellImageElement);\n  } // TITLE\n\n\n  var tableNonEditContainerElement = createTitleElement(tableElem, vmo, column);\n  treeCellTop.appendChild(tableNonEditContainerElement);\n  addTreeCommandCellEvents(tableTreeCommandCell, vmo, tableElem);\n  return tableTreeCommandCell;\n};\n\nvar createCheckMarkElementInternal = function (tableElem) {\n  var commandBarHtml = '<div class=\"aw-splm-tableCheckBoxPresent\" >' + //\n  '<a class=\"aw-commands-cellCommandCommon\">' + //\n  '<div class=\"afx-checkbox afx-checkbox-label-side\">' + //\n  '<input type=\"checkbox\" class=\"aw-jswidgets-checkboxButton\"/>' + //\n  '<span class=\"afx-checkbox-md-style\">' + //\n  '<span class=\"check\"></span>' + //\n  '</span>' + //\n  '</div>' + //\n  '</a>' + //\n  '</div>'; //\n\n  var cellScope = {};\n  return util.createNgElement(commandBarHtml, tableElem, cellScope);\n}; // NOTE: By this design, the cell command will only be available for OOTB AW Cell.\n\n\nexport let createCheckMarkElement = function (column, vmo, tableElem) {\n  var elem = createCheckMarkElementInternal(tableElem);\n  applyCommandCellScope(elem, column, vmo);\n  return elem;\n};\nexport let addHighlights = function (displayValue) {\n  if (!highlighter) {\n    highlighter = appCtxService.getCtx('highlighter');\n  }\n\n  if (highlighter && typeof displayValue === 'string') {\n    return displayValue.replace(highlighter.regEx, highlighter.style);\n  }\n\n  return displayValue;\n}; // This function is called when we click on any object link\n// REFACTOR: Awp0ShowObjectCell is TC specific. Try to pull command ID from solution configuration\n// instead.\n\nvar openObjectLink = function (propertyName, uid, objectElement) {\n  if (uid && uid.length > 0) {\n    var modelObject = cdm.getObject(uid);\n    var vmo = {\n      propertyName: propertyName,\n      uid: uid\n    };\n    var commandContext = {\n      vmo: modelObject || vmo,\n      // vmo needed for gwt commands\n      edit: false\n    };\n    commandService.executeCommand('Awp0ShowObjectCell', null, null, commandContext, objectElement.runActionWithViewModel);\n  }\n}; // REFACTOR: The only meaning here to keep this is the _cellCmdElem mechanism, we can separate it out later.\n\n\nexport let createCellRenderer = function () {\n  var _renderer = {};\n\n  var _cellCmdElem;\n\n  var _tooltipElement = util.createElement('div', Const.CLASS_AW_POPUP, Const.CLASS_AW_TOOLTIP_POPUP, Const.CLASS_TOOLTIP_POPUP);\n\n  var createCommandCellHandler = function (cellTop, column, vmo, tableElem) {\n    return function () {\n      //no commands visible when in multiselection/visible checkbox\n      if (!tableElem._tableInstance.showCheckBox && cellTop.getElementsByClassName(Const.CLASS_AW_CELL_COMMANDS_CONTAINER).length === 0) {\n        _cellCmdElem = createCellCommandElement(column, vmo, true);\n        cellTop.appendChild(_cellCmdElem);\n      }\n    };\n  };\n\n  var destroyCommandCellHandler = function (cellTop, column, vmo, tableElem) {\n    return function () {\n      //no commands visible when in multiselection/visible checkbox\n      if (!tableElem._tableInstance.showCheckBox && cellTop.getElementsByClassName(Const.CLASS_AW_CELL_COMMANDS_CONTAINER).length === 1 && _cellCmdElem) {\n        _renderer.destroyHoverCommandElement();\n      }\n    };\n  };\n\n  var addCommandOnHover = function (commandHandlerParent, column, vmo, tableElem) {\n    commandHandlerParent.addEventListener('mouseover', createCommandCellHandler(commandHandlerParent, column, vmo, tableElem));\n  };\n\n  var removeCommandOnHover = function (commandHandlerParent, column, vmo, tableElem) {\n    commandHandlerParent.addEventListener('mouseleave', destroyCommandCellHandler(commandHandlerParent, column, vmo, tableElem));\n  };\n\n  var createInlineComponent = function (extendedTooltip, containerElement, vmo, column) {\n    const subPanelContext = {\n      vmo: vmo,\n      column: column\n    };\n    let extendedTooltipElement = includeComponent(extendedTooltip, subPanelContext);\n\n    if (containerElement) {\n      renderComponent( /*#__PURE__*/_jsxDEV(AppCtxComponent, {\n        children: extendedTooltipElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 30\n      }, this), containerElement);\n    }\n\n    return containerElement;\n  };\n\n  var getTooltipHTML = function (values) {\n    var tooltipInnerHTML = '<ul>';\n\n    _.forEach(values, function (value) {\n      tooltipInnerHTML += '<li>' + exports.addHighlights(value) + '</li>';\n    });\n\n    tooltipInnerHTML += '</ul>';\n    return tooltipInnerHTML;\n  };\n\n  var containsOnlyEmptyStrings = function (values) {\n    if (values.length) {\n      for (var i = 0; i < values.length; i++) {\n        if (values[i] !== '') {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  var getNewValues = function (prop) {\n    var newValues = []; // Get the new values, return an empty array if the values are all empty strings\n    // to avoid creating unnecessary DOM elements.\n\n    if (prop.isArray === true) {\n      // Only use uiValues if displayValues is not defined.\n      if (prop.displayValues) {\n        if (!containsOnlyEmptyStrings(prop.displayValues)) {\n          newValues = prop.displayValues.slice();\n        }\n      } else if (prop.uiValues) {\n        if (!containsOnlyEmptyStrings(prop.uiValues)) {\n          newValues = prop.uiValues.slice();\n        }\n      }\n    } else if (!containsOnlyEmptyStrings([prop.uiValue])) {\n      newValues = [prop.uiValue];\n    }\n\n    return newValues;\n  };\n\n  var getOldValues = function (prop) {\n    var oldValues = [];\n\n    if (prop.isArray === true && prop.oldValues && !containsOnlyEmptyStrings(prop.oldValues)) {\n      oldValues = prop.oldValues.slice();\n    } else if (prop.oldValue && !containsOnlyEmptyStrings([prop.oldValue])) {\n      oldValues = [prop.oldValue];\n    }\n\n    return oldValues;\n  };\n\n  var addOpenObjectLinkHandler = function (objectElement, prop, index) {\n    var openObjLinkHandle = function (e) {\n      if (e.target && e.target.tagName.toLowerCase() === 'a' && e.target.href !== '') {\n        return;\n      }\n\n      if (!prop.isEditable) {\n        e.cancelBubble = true;\n        openObjectLink(prop.propertyName, prop.dbValues[index], objectElement);\n      }\n    };\n\n    objectElement.addEventListener('click', function (event) {\n      openObjLinkHandle(event);\n    });\n    objectElement.addEventListener('keydown', function (event) {\n      if (event.code === 'Enter' || event.code === 'Space') {\n        openObjLinkHandle(event);\n      }\n    });\n  };\n\n  const createPropertyValueLinkElement = function (prop, oldValue) {\n    if (prop.isEditable) {\n      return util.createElement('a', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS_DISABLED);\n    } else if (oldValue) {\n      return util.createElement('a', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS, Const.CLASS_AW_CHANGED_TEXT);\n    }\n\n    return util.createElement('a', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS);\n  };\n\n  var createObjectListFragment = function (prop, addOldValue, scope, dynamicRowHeightEnabled, tableElem) {\n    var fragment = document.createDocumentFragment();\n    var newValues = getNewValues(prop);\n    var oldValues = getOldValues(prop);\n    let runActionWithViewModel = tableElem._tableInstance.runActionWithViewModel;\n    var index = 0;\n\n    while (newValues.length > 0 || oldValues.length > 0) {\n      var liForObjectLinks = util.createElement('li', Const.CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM);\n      var newValue = newValues.shift();\n      var oldValue = oldValues.shift();\n\n      if (newValue) {\n        // use a different class when there is an object array.\n        let objectElement = createPropertyValueLinkElement(prop, oldValue);\n        objectElement.tabIndex = -1;\n\n        if (dynamicRowHeightEnabled) {\n          objectElement.style.whiteSpace = 'normal';\n        } // href not to be associated with editable prop\n\n\n        if (!util.isBulkEditing(tableElem)) {\n          // associating every prop with href\n          var uidToBeEvaluated = '';\n\n          if (prop.isArray) {\n            uidToBeEvaluated = prop.dbValue[index];\n          } else {\n            uidToBeEvaluated = prop.dbValue;\n          }\n\n          addHrefToAnchorLink(objectElement, scope, uidToBeEvaluated);\n        }\n\n        objectElement.runActionWithViewModel = runActionWithViewModel;\n        addOpenObjectLinkHandler(objectElement, prop, index);\n        objectElement.innerHTML = exports.addHighlights(newValue);\n        liForObjectLinks.appendChild(objectElement);\n      }\n\n      if (addOldValue && hasOldValue(oldValue, prop.oldValue)) {\n        var oldCellTextElement = util.createElement('div', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS_DISABLED, Const.CLASS_AW_OLD_TEXT);\n        oldCellTextElement.innerHTML = exports.addHighlights(oldValue);\n        liForObjectLinks.appendChild(oldCellTextElement);\n      }\n\n      fragment.appendChild(liForObjectLinks); // Add cell text class to last li\n\n      if (fragment.childNodes.length > 0) {\n        fragment.childNodes[fragment.childNodes.length - 1].classList.add(Const.CLASS_WIDGET_TABLE_CELL_TEXT);\n      }\n\n      index++;\n    }\n\n    return fragment;\n  };\n  /**\n   * Clear the child elements of the _tooltipElement.\n   */\n\n\n  var clearTooltipContent = function () {\n    if (_tooltipElement.parentElement) {\n      _tooltipElement.parentElement.removeChild(_tooltipElement);\n    }\n\n    while (_tooltipElement.firstChild) {\n      _tooltipElement.removeChild(_tooltipElement.firstChild);\n    }\n  };\n\n  var addTooltipListeners = function (parentElement, tooltipContent, tableElement) {\n    var tooltipTimeout = null;\n    parentElement.addEventListener('mouseenter', function (event) {\n      clearTimeout(tooltipTimeout);\n\n      if (event.offsetX > event.target.clientWidth) {\n        return false;\n      }\n\n      tooltipTimeout = setTimeout(function () {\n        clearTooltipContent();\n        var parentElementDimensions = parentElement.getBoundingClientRect();\n        _tooltipElement.style.left = parentElementDimensions.left + 'px';\n        _tooltipElement.style.top = parentElementDimensions.top + 'px';\n        var tableBoundingBox = tableElement.getBoundingClientRect();\n        _tooltipElement.style.maxWidth = tableBoundingBox.right - parentElementDimensions.left + 'px'; // When tooltipContent is a document fragment, convert to array of html elements to maintain\n        // references after appending\n\n        if (tooltipContent instanceof DocumentFragment) {\n          tooltipContent = Array.prototype.slice.call(tooltipContent.childNodes);\n        }\n\n        if (Array.isArray(tooltipContent)) {\n          for (var i = 0; i < tooltipContent.length; i++) {\n            _tooltipElement.appendChild(tooltipContent[i]);\n          }\n        } else if (tooltipContent instanceof Element) {\n          _tooltipElement.appendChild(tooltipContent);\n        } else {\n          _tooltipElement.innerHTML = tooltipContent;\n        }\n\n        parentElement.appendChild(_tooltipElement);\n      }, 750);\n    });\n    parentElement.addEventListener('mouseleave', function () {\n      clearTimeout(tooltipTimeout);\n      tooltipTimeout = setTimeout(clearTooltipContent, 750);\n    });\n    return _tooltipElement;\n  };\n  /**\n   * Icon cell\n   */\n\n\n  var iconCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var cell = util.createElement('div', Const.CLASS_CELL_CONTENTS, Const.CLASS_SPLM_TABLE_ICON_CELL);\n      var colorIndicatorElement = util.createColorIndicatorElement(vmo);\n      cell.appendChild(colorIndicatorElement);\n      var cellImg = util.createElement('img', Const.CLASS_ICON_BASE, Const.CLASS_ICON_TYPE, Const.CLASS_SPLM_TABLE_ICON);\n      var rowHeight = util.getTableRowHeightForIconCellRenderer(util.getTableInstance(tableElem).gridOptions, undefined);\n\n      if (rowHeight !== undefined) {\n        cellImg.style.height = rowHeight + 'px';\n        cellImg.style.width = rowHeight + 'px';\n      }\n\n      cellImg.src = util.getImgURL(vmo);\n      cellImg.alt = getImageAltText(vmo);\n      cell.appendChild(cellImg);\n      return cell;\n    },\n    condition: function (column, vmo, tableElem) {\n      return column.name === 'icon';\n    }\n  };\n  /**\n   * Transpose Icon cell\n   */\n\n  const transposeIconCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      const cell = util.createElement('div', Const.CLASS_CELL_CONTENTS, Const.CLASS_SPLM_TABLE_ICON_CELL);\n      const colorIndicatorElement = util.createColorIndicatorElement(vmo);\n      cell.appendChild(colorIndicatorElement);\n      const cellImg = util.createElement('img', Const.CLASS_ICON_BASE, Const.CLASS_ICON_TYPE, Const.CLASS_SPLM_TABLE_ICON);\n      const rowHeight = util.getTableRowHeightForIconCellRenderer(util.getTableInstance(tableElem).gridOptions, undefined);\n\n      if (rowHeight !== undefined) {\n        cellImg.style.height = rowHeight + 'px';\n        cellImg.style.width = rowHeight + 'px';\n      }\n\n      cellImg.src = util.getImgURL(vmo.props[column.field]);\n      cellImg.alt = getImageAltText(vmo);\n      cell.appendChild(cellImg);\n      return cell;\n    },\n    condition: function (column, vmo, tableElem) {\n      return tableElem._tableInstance.gridOptions.transpose === true && vmo.name === 'icon' && column.field !== 'transposedColumnProperty';\n    }\n  };\n  /**\n   * Command in cell\n   */\n\n  var commandCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var cellContent = Cell.createElement(column, vmo, tableElem, rowElem);\n\n      if (cellContent) {\n        addCommandOnHover(cellContent, column, vmo, tableElem);\n        removeCommandOnHover(cellContent, column, vmo, tableElem);\n      }\n\n      return cellContent;\n    },\n    condition: function (column, vmo, tableElem, rowElem) {\n      return column.isTableCommand;\n    }\n  };\n  /**\n   * Tree Node\n   */\n\n  var treeTableCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var createTreeCellCommandElement = exports.createTreeCellCommandElement(column, vmo, tableElem);\n      var commandHandlerParent = createTreeCellCommandElement.getElementsByClassName(Const.CLASS_WIDGET_TABLE_NON_EDIT_CONTAINER)[0];\n      addCommandOnHover(commandHandlerParent, column, vmo, tableElem);\n      removeCommandOnHover(commandHandlerParent, column, vmo, tableElem);\n      return createTreeCellCommandElement;\n    },\n    condition: function (column, vmo, tableElem, rowElem) {\n      return column.isTreeNavigation;\n    }\n  };\n  /**\n   * AW Object Reference\n   */\n\n  var objectCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var prop = vmo.props[column.field];\n      var ulForObjectLinks = util.createElement('ul', Const.CLASS_TABLE_NON_EDIT_CELL_LIST, Const.CLASS_TABLE_CELL_TOP);\n      var dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n\n      if (dynamicRowHeightEnabled) {\n        ulForObjectLinks.classList.add(Const.CLASS_TABLE_CELL_TOP_DYNAMIC);\n      } // Prevent wrapping for cells that could have a command\n\n\n      if (column.isTableCommand === true) {\n        ulForObjectLinks.style.flexWrap = 'nowrap';\n        ulForObjectLinks.style.overflow = 'hidden';\n      }\n\n      var values = prop.displayValues || prop.uiValues; // Add tooltip\n\n      /** revisitme Shaishav: What is the replacement? Do we need anything from parent element?\n        * tstark - needed for navigationToken, only thing added is .vmo to scope, anything else is needed here\n      var scope = util.getElementScope( tableElem.parentElement, true );\n      */\n\n      var scope = {};\n\n      if (prop.isArray && values.length > 0) {\n        var objectListDomFragment = createObjectListFragment(prop, null, scope, dynamicRowHeightEnabled, tableElem);\n\n        if (objectListDomFragment) {\n          addTooltipListeners(ulForObjectLinks, objectListDomFragment, tableElem);\n        }\n      } else {\n        ulForObjectLinks.title = prop.uiValue;\n      }\n\n      var contentDomFragment = createObjectListFragment(prop, true, scope, dynamicRowHeightEnabled, tableElem);\n\n      if (contentDomFragment) {\n        ulForObjectLinks.appendChild(contentDomFragment);\n      }\n\n      return ulForObjectLinks;\n    },\n    condition: function (column, vmo, tableElem, rowElem) {\n      return vmo.props && vmo.props[column.field] && (vmo.props[column.field].type === 'OBJECT' || vmo.props[column.field].type === 'OBJECTARRAY');\n    }\n  };\n\n  var getCompiledFunctionFromCache = function (templateUrl, htmlString) {\n    // In order to stop loading/compiling same template again, template should be cached against its URL\n    var renderingTemplateCache = AwCacheFactoryService.instance.get('propRenderingTemplate');\n\n    if (!renderingTemplateCache) {\n      renderingTemplateCache = AwCacheFactoryService.instance('propRenderingTemplate');\n    }\n\n    var compiledTemplateFn = renderingTemplateCache.get(templateUrl);\n\n    if (!compiledTemplateFn && !_.isEmpty(htmlString)) {\n      compiledTemplateFn = _.template(htmlString);\n      renderingTemplateCache.put(templateUrl, compiledTemplateFn);\n    }\n\n    return compiledTemplateFn;\n  };\n\n  var loadTemplate = function (containerElement, vmo, templateUrl, dependentServices) {\n    var deferred = AwPromiseService.instance.defer();\n    AwHttpService.instance.get(templateUrl, {\n      cache: true\n    }).then(function (response) {\n      var htmlString = response;\n\n      if (htmlString) {\n        deferred.resolve({\n          containerElement: containerElement,\n          templateUrl: templateUrl,\n          vmo: vmo,\n          htmlString: response.data,\n          dependentServices: dependentServices\n        });\n      }\n    });\n    return deferred.promise;\n  };\n\n  var updateContainerElement = function (containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, depServices, column, tableElem) {\n    var compiledTemplateFn = getCompiledFunctionFromCache(templateUrl, htmlString);\n    var generatedElement = compiledTemplateFn({\n      vmo: vmo,\n      propName: propName,\n      tooltipProps: tooltipProps,\n      basePath: awConfiguration.get('baseUrl'),\n      dependentServices: depServices,\n      column: column,\n      tableContext: tableElem._tableInstance.tableContext\n    });\n    containerElement.innerHTML = generatedElement.trim();\n  };\n\n  const updateContainerWithCellTemplate = async function (containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, depsToInject, column, tableElem) {\n    if (depsToInject && depsToInject.length > 0) {\n      for (let dep in depsToInject) {\n        // eslint-disable-next-line no-await-in-loop\n        const cachedDep = await getDependentModule(depsToInject[dep]);\n\n        if (cachedDep && _.isEmpty(htmlString)) {\n          updateContainerElement(containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, [cachedDep], column, tableElem);\n        } else {\n          // eslint-disable-next-line no-await-in-loop\n          const loadedDep = await loadDependentModule(depsToInject[dep]);\n          updateContainerElement(containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, [loadedDep], column, tableElem);\n        }\n      }\n    } else {\n      updateContainerElement(containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, depsToInject, column, tableElem);\n    }\n  };\n\n  var getColRendererTemplateToUse = function (propName, tableElem, retrieveHeader) {\n    var renderingTemplate = {};\n    var propRenderTemplates = _propVsRenderingTemplate[propName];\n    var gridId = tableElem.id;\n    var defaultRenderingTemplate = _defaultRenderingTemplates[gridId];\n\n    if (defaultRenderingTemplate) {\n      if (defaultRenderingTemplate.isHeaderTemplate === true && retrieveHeader === true || defaultRenderingTemplate.isCellTemplate === true && retrieveHeader === false) {\n        renderingTemplate = defaultRenderingTemplate;\n      }\n    }\n\n    if (propRenderTemplates) {\n      var propDefault = propRenderTemplates.defaultPropRenderingTemplate;\n\n      if (propDefault) {\n        if (propDefault.isHeaderTemplate === true && retrieveHeader === true || propDefault.isCellTemplate === true && retrieveHeader === false) {\n          renderingTemplate = propDefault;\n        }\n      }\n\n      _.forEach(propRenderTemplates.specificRenderingTemplates, function (propRenderTemplate) {\n        if (propRenderTemplate.grids.indexOf(gridId) >= 0) {\n          if (propRenderTemplate.isHeaderTemplate === true && retrieveHeader === true || propRenderTemplate.isCellTemplate === true && retrieveHeader === false) {\n            renderingTemplate = propRenderTemplate;\n            return;\n          }\n        }\n      });\n    }\n\n    return renderingTemplate;\n  };\n\n  var isCustomTemplate = function (defaultTemplate, specificTemplate, retrieveHeader) {\n    if (!_.isEmpty(specificTemplate)) {\n      for (var i = 0; i < specificTemplate.length; i++) {\n        var currentTemplate = specificTemplate[i];\n\n        if (retrieveHeader) {\n          if (currentTemplate.isHeaderTemplate === true) {\n            return true;\n          }\n        } else {\n          if (currentTemplate.isCellTemplate === true) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (!_.isEmpty(defaultTemplate)) {\n      if (retrieveHeader) {\n        if (defaultTemplate.isHeaderTemplate === true) {\n          return true;\n        }\n      } else {\n        if (defaultTemplate.isCellTemplate === true) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  var isGraphicalRenderrDefinedForProp = function (propName, gridid, retrieveHeader) {\n    if (_.isEmpty(_propVsRenderingTemplate)) {\n      generatePropRendererTemplateMap();\n    }\n\n    var propRenderingObj = _propVsRenderingTemplate[propName];\n\n    if (propRenderingObj) {\n      var isHeaderTrue = isCustomTemplate(propRenderingObj.defaultPropRenderingTemplate, propRenderingObj.specificRenderingTemplates, retrieveHeader);\n      var isCellTrue = isCustomTemplate(propRenderingObj.defaultPropRenderingTemplate, propRenderingObj.specificRenderingTemplates, retrieveHeader);\n\n      if (isHeaderTrue === true && retrieveHeader === true || isCellTrue === true && retrieveHeader === false) {\n        return true;\n      }\n    }\n\n    if (_defaultRenderingTemplates[gridid]) {\n      if (_defaultRenderingTemplates[gridid].isHeaderTemplate === true && retrieveHeader === true || _defaultRenderingTemplates[gridid].isCellTemplate === true && retrieveHeader === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Returns the correct property name\n\n\n  const getPropName = function (column, vmo, tableElem) {\n    let propName = column.field;\n\n    if (tableElem._tableInstance.gridOptions.transpose === true) {\n      propName = vmo.props.transposedColumnProperty.dbValue;\n    }\n\n    return propName;\n  };\n\n  var customCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var retrieveHeader = false;\n      var propName = getPropName(column, vmo, tableElem);\n      var colRenderTemplateDef = getColRendererTemplateToUse(propName, tableElem, retrieveHeader);\n      var containerElement = null;\n\n      if (!_.isEmpty(colRenderTemplateDef.template)) {\n        //Template processing -> No need for async processing..\n        containerElement = util.createElement('div', Const.CLASS_TABLE_CELL_TOP);\n        updateContainerWithCellTemplate(containerElement, vmo, column.field, colRenderTemplateDef.tooltip, colRenderTemplateDef.template, colRenderTemplateDef.template, colRenderTemplateDef.dependentServices, column, tableElem);\n      } else if (!_.isEmpty(colRenderTemplateDef.templateUrl)) {\n        //Async loading for template once template is loaded\n        containerElement = util.createElement('div', Const.CLASS_TABLE_CELL_TOP);\n        var templateUrl = awConfiguration.get('baseUrl') + colRenderTemplateDef.templateUrl;\n        var compiledTemplateFn = getCompiledFunctionFromCache(templateUrl, null);\n\n        if (compiledTemplateFn) {\n          //If compiled function already exists for templateUrl, return\n          updateContainerWithCellTemplate(containerElement, vmo, column.field, colRenderTemplateDef.tooltip, templateUrl, '', colRenderTemplateDef.dependentServices, column, tableElem);\n        } else {\n          loadTemplate(containerElement, vmo, templateUrl, colRenderTemplateDef.dependentServices).then(function (response) {\n            updateContainerWithCellTemplate(response.containerElement, response.vmo, column.field, colRenderTemplateDef.tooltip, response.templateUrl, response.htmlString, response.dependentServices, column, tableElem);\n          });\n        }\n      } else if (!_.isEmpty(colRenderTemplateDef.renderFunction)) {\n        containerElement = util.createElement('div', Const.CLASS_TABLE_CELL_TOP);\n        var args = [vmo, containerElement, column.field, colRenderTemplateDef.tooltip];\n        /** revisitme Santhosh - The below methods to get and load dependent module has changed and both of them are same now.\n         *  Now getDependentModule method returns a promise which is not the case in old afx.\n         *  If the method implementations are changed again, we need to revert the code back to two method calls for get and load.\n         * we need to understand what this cachedDep obj is really doing in terms of performance or if there is any other reason\n         * and once we have that understanding, we need to add similar logic again.\n         * */\n\n        /* var cachedDepModuleObj = getDependentModule( colRenderTemplateDef.deps );\n        if( !cachedDepModuleObj ) {\n            loadDependentModule( colRenderTemplateDef.deps ).then( function( depModuleObj ) {\n                depModuleObj[ colRenderTemplateDef.renderFunction ].apply( null, args );\n                return containerElement;\n            } );\n        } else {\n            cachedDepModuleObj[ colRenderTemplateDef.renderFunction ].apply( null, args );\n        }*/\n\n        loadDependentModule(colRenderTemplateDef.deps).then(function (depModuleObj) {\n          depModuleObj[colRenderTemplateDef.renderFunction].apply(null, args); //return containerElement;\n        });\n      }\n\n      if (containerElement !== null) {\n        containerElement.style.paddingLeft = Const.CUSTOM_CELL_LEFTPADDING_DEFAULT_SPACE + 'px';\n      }\n\n      return containerElement; // If container element is null, default rendering will happen\n    },\n    condition: function (column, vmo, tableElem) {\n      var retrieveHeader = false;\n      var propName = column.field; // If transpose, use the propName representing the vmo to apply the renderer across the row instead of column for transpose.\n      // Don't apply renderer for the first column in transpose since it represents the column property.\n\n      if (tableElem._tableInstance.gridOptions.transpose === true && column.field !== 'transposedColumnProperty') {\n        propName = vmo.props.transposedColumnProperty.dbValue;\n      }\n\n      if (column.enableRendererContribution && isGraphicalRenderrDefinedForProp(propName, tableElem.id, retrieveHeader)) {\n        //If propertyRenderer template defined for a given property, use it for rendering\n        return true;\n      }\n\n      return false;\n    }\n  };\n  var customCellHeaderRenderer = {\n    action: function (column, tableElem) {\n      var retrieveHeader = true;\n      var colRenderTemplateDef = getColRendererTemplateToUse(column.field, tableElem, retrieveHeader);\n      var containerElement = null;\n\n      if (!_.isEmpty(colRenderTemplateDef.headerTemplate)) {\n        //Template processing -> No need for async processing..\n        containerElement = document.createElement('div');\n        updateContainerWithCellTemplate(containerElement, null, column.field, colRenderTemplateDef.tooltip, colRenderTemplateDef.headerTemplate, colRenderTemplateDef.headerTemplate, colRenderTemplateDef.dependentServices, column, tableElem);\n      } else if (!_.isEmpty(colRenderTemplateDef.headerTemplateUrl)) {\n        //Async loading for template once template is loaded\n        containerElement = document.createElement('div');\n        var templateUrl = awConfiguration.get('baseUrl') + colRenderTemplateDef.headerTemplateUrl;\n        var compiledTemplateFn = getCompiledFunctionFromCache(templateUrl, null);\n\n        if (compiledTemplateFn) {\n          //If compiled function already exists for templateUrl, return\n          updateContainerWithCellTemplate(containerElement, null, column.field, colRenderTemplateDef.tooltip, templateUrl, '', colRenderTemplateDef.dependentServices, column, tableElem);\n        } else {\n          loadTemplate(containerElement, null, templateUrl, colRenderTemplateDef.dependentServices).then(function (response) {\n            updateContainerWithCellTemplate(response.containerElement, response.vmo, column.field, colRenderTemplateDef.tooltip, response.templateUrl, response.htmlString, response.dependentServices, column, tableElem);\n          });\n        }\n      } else if (!_.isEmpty(colRenderTemplateDef.headerRenderFunction)) {\n        containerElement = document.createElement('div');\n        var args = [containerElement, column.field, colRenderTemplateDef.tooltip, column];\n        /** revisitme Santhosh - The below methods to get and load dependent module has changed and both of them are same now.\n         *  Now getDependentModule method returns a promise which is not the case in old afx.\n         *  If the method implementations are changed again, we need to revert the code back to two method calls for get and load.\n         * we need to understand what this cachedDep obj is really doing in terms of performance or if there is any other reason\n         * and once we have that understanding, we need to add similar logic again.\n         * */\n\n        /*  var cachedDepModuleObj = getDependentModule( colRenderTemplateDef.deps );\n        if( !cachedDepModuleObj ) {\n            loadDependentModule( colRenderTemplateDef.deps ).then( function( depModuleObj ) {\n                depModuleObj[ colRenderTemplateDef.headerRenderFunction ].apply( null, args );\n                return containerElement;\n            } );\n        } else {\n            cachedDepModuleObj[ colRenderTemplateDef.headerRenderFunction ].apply( null, args );\n        } */\n\n        loadDependentModule(colRenderTemplateDef.deps).then(function (depModuleObj) {\n          depModuleObj[colRenderTemplateDef.headerRenderFunction].apply(null, args);\n        });\n      } else if (!_.isEmpty(colRenderTemplateDef.headerComponent)) {\n        var vmo = {};\n        containerElement = document.createElement('div', Const.CLASS_TABLE_CELL_TOP);\n        createInlineComponent(colRenderTemplateDef.headerComponent, containerElement, vmo, column);\n      }\n\n      return containerElement; // If container element is null, default rendering will happen\n    },\n    condition: function (column, tableElem) {\n      var retrieveHeader = true;\n\n      if (column.enableRendererContribution && isGraphicalRenderrDefinedForProp(column.field, tableElem.id, retrieveHeader)) {\n        //If propertyRenderer template defined for a given property, use it for rendering\n        return true;\n      }\n\n      return false;\n    }\n  };\n  /**\n   * Rich Text Field\n   */\n\n  var richTextCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var prop = vmo.props[column.field];\n      var newValues = getNewValues(prop);\n      var oldValues = getOldValues(prop);\n      var cellTop = util.createElement('ul', Const.CLASS_TABLE_NON_EDIT_CELL_LIST, Const.CLASS_TABLE_CELL_TOP);\n\n      if (tableElem && tableElem._tableInstance.dynamicRowHeightStatus) {\n        cellTop.classList.add(Const.CLASS_TABLE_CELL_TOP_DYNAMIC);\n      } // Add tooltip\n\n\n      if (newValues.length > 0) {\n        var tooltipHTML = getTooltipHTML(newValues);\n        addTooltipListeners(cellTop, tooltipHTML, tableElem);\n      }\n\n      while (newValues.length > 0 || oldValues.length > 0) {\n        var liElement = util.createElement('li', Const.CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM);\n        liElement.style.width = '100%';\n        var rtfContainer;\n        var newValue = newValues.shift();\n        var oldValue = oldValues.shift();\n\n        if (newValue) {\n          if (oldValue) {\n            rtfContainer = util.createElement('div', Const.CLASS_TABLE_RTF_CELL_ITEM, Const.CLASS_AW_CHANGED_TEXT);\n          } else {\n            rtfContainer = util.createElement('div', Const.CLASS_TABLE_RTF_CELL_ITEM);\n          }\n\n          rtfContainer.innerHTML = exports.addHighlights(newValue);\n          liElement.appendChild(rtfContainer);\n        }\n\n        if (hasOldValue(oldValue, prop.oldValue)) {\n          var oldCellTextElement = util.createElement('div', Const.CLASS_AW_OLD_TEXT);\n          oldCellTextElement.innerHTML = exports.addHighlights(oldValue);\n          liElement.appendChild(oldCellTextElement);\n        } // NOTE: For Firefox there is a limitation that the vertical scroll bar is not show up,\n        // because of issue below:\n        // https://stackoverflow.com/questions/28636832/firefox-overflow-y-not-working-with-nested-flexbox\n        // there is a workaround by using { min-height: 0 }, I have not tested it yet and no plan to fix it\n        // now.\n        // It is not only an RTF issue, same problem for string list and object list\n        // Dynamic styling for RTF\n\n\n        if (rtfContainer && rtfContainer.childElementCount > 1 && newValues.length === 1) {\n          liElement.style.height = '100%';\n        }\n\n        cellTop.appendChild(liElement);\n      }\n\n      return cellTop;\n    },\n    condition: function (column, vmo, tableElem, rowElem) {\n      return vmo.props && vmo.props[column.field] && vmo.props[column.field].isRichText;\n    }\n  };\n  /**\n   * Plain Text\n   */\n\n  var simpleTextCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var prop = vmo.props[column.field];\n      var dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n      var cellTop = util.createElement('div', Const.CLASS_TABLE_CELL_TOP);\n\n      if (dynamicRowHeightEnabled) {\n        cellTop.classList.add(Const.CLASS_TABLE_CELL_TOP_DYNAMIC);\n      }\n\n      if (prop.uiValue) {\n        var gridCellText = util.createElement('div', Const.CLASS_WIDGET_TABLE_CELL_TEXT);\n\n        if (dynamicRowHeightEnabled) {\n          gridCellText.classList.add(Const.CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC);\n        }\n\n        cellTop.title = prop.uiValue;\n        var parsedValue = sanitizer.htmlEscapeAllowEntities(prop.uiValue, true, true);\n\n        if ((column.isTableCommand || column.isTreeNavigation) && clickableTitleService.hasClickableCellTitleActions()) {\n          addClickableCellTitle(gridCellText, vmo, parsedValue, tableElem);\n        } else {\n          gridCellText.innerHTML = exports.addHighlights(parsedValue);\n        }\n\n        cellTop.appendChild(gridCellText);\n      }\n\n      return cellTop;\n    },\n    condition: function (column, vmo, tableElem, rowElem) {\n      return vmo.props && vmo.props[column.field] && !vmo.props[column.field].isRichText && !vmo.props[column.field].oldValue && !vmo.props[column.field].isArray;\n    }\n  };\n  var plainTextCellRenderer = {\n    action: function (column, vmo, tableElem, rowElem) {\n      var prop = vmo.props[column.field];\n      var newValues = getNewValues(prop);\n      var oldValues = getOldValues(prop);\n      var dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n      var ulElement = util.createElement('ul', Const.CLASS_TABLE_NON_EDIT_CELL_LIST, Const.CLASS_TABLE_CELL_TOP);\n\n      if (dynamicRowHeightEnabled) {\n        ulElement.classList.add(Const.CLASS_TABLE_CELL_TOP_DYNAMIC);\n      } // Add tooltip\n\n\n      if (prop.isArray) {\n        if (newValues.length > 0) {\n          var tooltipHTML = getTooltipHTML(newValues);\n          addTooltipListeners(ulElement, tooltipHTML, tableElem);\n        }\n      } else {\n        ulElement.title = prop.uiValue;\n      }\n\n      while (newValues.length > 0 || oldValues.length > 0) {\n        var liElement = util.createElement('li', Const.CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM);\n        var newValue = newValues.shift();\n        var oldValue = oldValues.shift();\n        var textElem;\n\n        if (newValue) {\n          if (hasOldValue(oldValue, prop.oldValue)) {\n            textElem = util.createElement('div', Const.CLASS_WIDGET_TABLE_CELL_TEXT, Const.CLASS_AW_CHANGED_TEXT);\n          } else {\n            textElem = util.createElement('div', Const.CLASS_WIDGET_TABLE_CELL_TEXT);\n          }\n\n          var parsedValue = sanitizer.htmlEscapeAllowEntities(newValue, true, true);\n          textElem.innerHTML = exports.addHighlights(parsedValue);\n\n          if (dynamicRowHeightEnabled) {\n            textElem.classList.add(Const.CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC);\n          }\n\n          liElement.appendChild(textElem);\n        }\n\n        if (oldValue) {\n          var oldCellTextElement = util.createElement('div', Const.CLASS_WIDGET_TABLE_CELL_TEXT, Const.CLASS_AW_OLD_TEXT);\n          oldCellTextElement.innerHTML = exports.addHighlights(oldValue);\n          liElement.appendChild(oldCellTextElement);\n        }\n\n        ulElement.appendChild(liElement);\n      }\n\n      return ulElement;\n    },\n    condition: function (column, vmo, tableElem, rowElem) {\n      return vmo.props && vmo.props[column.field] && !vmo.props[column.field].isRichText && (vmo.props[column.field].isArray || vmo.props[column.field].oldValue);\n    }\n  };\n  var headerCellRenderer = {\n    action: function (column) {\n      var labelElem = document.createElement('div');\n      labelElem.classList.add(Const.CLASS_HEADER_CELL_LABEL);\n      labelElem.textContent = column.displayName;\n      return labelElem;\n    },\n    condition: function () {\n      return true;\n    }\n  };\n  var headerIconCellRenderer = {\n    action: function (column) {\n      let cellContent = document.createElement('div');\n      let imgContainer = util.createElement('div', Const.CLASS_HEADER_ICON_CONTAINER);\n      var cellImg = util.createElement('img', Const.CLASS_HEADER_ICON);\n      cellImg.src = util.getImgURL(column.vmo);\n      cellImg.alt = getImageAltText(column.vmo);\n      imgContainer.appendChild(cellImg);\n      cellContent.appendChild(imgContainer);\n      cellContent.appendChild(headerCellRenderer.action(column));\n      return cellContent;\n    },\n    condition: function (column, tableElem) {\n      return tableElem._tableInstance.gridOptions.enableHeaderIcon === true && column.field !== 'transposedColumnProperty';\n    }\n  };\n  /**\n   * exposed method\n   */\n\n  _renderer.resetHoverCommandElement = function () {\n    if (_cellCmdElem && _cellCmdElem.parentElement) {\n      util.cleanupComponents(_cellCmdElem.parentElement);\n\n      if (_cellCmdElem.parentElement) {\n        _cellCmdElem.parentElement.removeChild(_cellCmdElem);\n      }\n    }\n  };\n\n  _renderer.destroyHoverCommandElement = function () {\n    if (_cellCmdElem && _cellCmdElem.parentElement) {\n      util.cleanupComponents(_cellCmdElem.parentElement);\n\n      if (_cellCmdElem.parentElement) {\n        _cellCmdElem.parentElement.removeChild(_cellCmdElem);\n      }\n\n      util.destroyElement(_cellCmdElem);\n    }\n\n    _cellCmdElem = null;\n  };\n\n  _renderer.getAwCellRenderers = function () {\n    // NOTE: If the condition is not isolated, then the sequence matters.\n    // Decorator renderers should be first in the array since they will call\n    // Cell.createElement to get cell content provided by the next valid renderer.\n    return [commandCellRenderer, customCellRenderer, iconCellRenderer, transposeIconCellRenderer, treeTableCellRenderer, objectCellRenderer, simpleTextCellRenderer, plainTextCellRenderer, richTextCellRenderer];\n  };\n\n  _renderer.getAwHeaderRenderers = function () {\n    return [customCellHeaderRenderer, headerIconCellRenderer, headerCellRenderer];\n  };\n\n  return _renderer;\n};\n/**\n * Check if old value is available or not\n * @param  old value\n * @param old value of prop\n * @return boolean True/False\n */\n\nfunction hasOldValue(oldValue, propOldValue) {\n  return oldValue || !_.isUndefined(propOldValue);\n} // cleanup global variables.\n\n\nexport let cleanup = function () {\n  if (_propVsRenderingTemplate) {\n    _propVsRenderingTemplate = null;\n  }\n\n  if (_defaultRenderingTemplates) {\n    _defaultRenderingTemplates = {};\n  }\n};\nexports = {\n  createCellCommandElement,\n  createTreeCellCommandElement,\n  createCheckMarkElement,\n  addHighlights,\n  createCellRenderer,\n  cleanup\n};\nexport default exports;","map":{"version":3,"names":["sanitizer","appCtxService","commandService","clickableTitleService","cdm","AwHttpService","AwPromiseService","AwCacheFactoryService","navigationTokenService","_","eventBus","cfgSvc","includeComponent","getDependentModule","loadDependentModule","awConfiguration","renderComponent","AppCtxComponent","util","Const","Cell","exports","_propVsRenderingTemplate","_defaultRenderingTemplates","highlighter","generatePropRendererTemplateMap","_contributedTemplates","getCfgCached","forEach","contributedTemplate","isEmpty","headerTemplate","headerTemplateUrl","headerRenderFunction","headerComponent","isHeaderTemplate","template","templateUrl","renderFunction","isCellTemplate","isDefaultTemplate","grids","columns","gridid","column","set","specificRenderingTemplates","defaultPropRenderingTemplate","renderingTemplatesForProp","push","applyCommandCellScope","cellCmdElem","vmo","extraDigest","scope","anchor","commandsAnchor","commandContext","props","undefined","prop","field","$evalAsync","getTreeIconCellInfo","loadingStatus","id","icon","miscInProcessIndicator","isLeaf","isExpanded","miscExpandedTree","miscCollapsedTree","createIconElement","tableElem","treeCellButtonHeaderCell","createElement","CLASS_TREE_ROW_HEADER_BUTTONS","CLASS_TREE_BASE_HEADER","classList","add","CLASS_WIDGET_TREE_NODE_TOGGLE_CMD","tabIndex","_tableInstance","keyboardService","setOnFocusAndBlur","treeIndent","style","marginLeft","levelNdx","title","_twistieTitle","iconCellInfo","iconElem","document","attr","createAttribute","value","attrLegacy","setAttributeNode","innerHTML","appendChild","createCellDecoratorElement","cellColorContainerElement","CLASS_GRID_CELL_COLOR_CONTAINER","CLASS_TREE_COLOR_CONTAINER","cellColorElement","createColorIndicatorElement","getImageAltText","hasThumbnail","cellHeader1","object_type","uiValue","modelType","displayName","createCellImageElement","imgURL","getImgURL","svgString","cellImageContainerElement","CLASS_GRID_CELL_IMAGE","cellImageElement","CLASS_ICON_BASE","src","alt","toggleTreeCellAction","treeCellElement","isInExpandBelowMode","iconContainerElement","getElementsByClassName","tableInstanceCallbacks","unsetScrollToRowIndex","toggleTreeNode","publish","populateHrefContentPerPropValue","objectElement","uidToBeEvaluated","deferred","instance","defer","getNavigationContent","then","urlDetails","hrefDetails","resolve","url","promise","addHrefToAnchorLink","addEventListener","response","isUndefined","addAttributeToDOMElement","urlContent","target","addClickableCellTitle","element","clickableTextDiv","clickableText","data","declViewModel","ctx","tableContext","onclick","event","doIt","runActionWithViewModel","addHighlights","createTitleElement","tableNonEditContainerElement","CLASS_WIDGET_TABLE_NON_EDIT_CONTAINER","CLASS_LAYOUT_ROW_CONTAINER","parsedValue","htmlEscapeAllowEntities","gridCellText","CLASS_WIDGET_TABLE_CELL_TEXT","isTableCommand","isTreeNavigation","hasClickableCellTitleActions","dynamicRowHeightEnabled","dynamicRowHeightStatus","CLASS_TABLE_CELL_TOP_DYNAMIC","CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC","remove","toggleCellCommandVisibility","isSelected","showHideElement","addTreeCommandCellEvents","tableInstance","getTableInstance","dataProviderName","dataProvider","name","treeCellButtonElement","treeCommandCellClickListener","isExpandAllowed","code","treeCellImageElement","cellCommandBarElement","selectionModel","multiSelectEnabled","selected","subscribe","createCellCommandElement","isInternal","fields","cellCommandsContainer","CLASS_AW_CELL_COMMANDS_CONTAINER","createTreeCellCommandElement","tableTreeCommandCell","CLASS_AW_TREE_COMMAND_CELL","CLASS_WIDGET_TABLE_CELL","treeCellTop","CLASS_AW_JS_CELL_TOP","CLASS_WIDGET_UI_NON_EDIT_CELL","iconElement","cellDecoratorElement","createCheckMarkElementInternal","commandBarHtml","cellScope","createNgElement","createCheckMarkElement","elem","displayValue","getCtx","replace","regEx","openObjectLink","propertyName","uid","length","modelObject","getObject","edit","executeCommand","createCellRenderer","_renderer","_cellCmdElem","_tooltipElement","CLASS_AW_POPUP","CLASS_AW_TOOLTIP_POPUP","CLASS_TOOLTIP_POPUP","createCommandCellHandler","cellTop","showCheckBox","destroyCommandCellHandler","destroyHoverCommandElement","addCommandOnHover","commandHandlerParent","removeCommandOnHover","createInlineComponent","extendedTooltip","containerElement","subPanelContext","extendedTooltipElement","getTooltipHTML","values","tooltipInnerHTML","containsOnlyEmptyStrings","i","getNewValues","newValues","isArray","displayValues","slice","uiValues","getOldValues","oldValues","oldValue","addOpenObjectLinkHandler","index","openObjLinkHandle","e","tagName","toLowerCase","href","isEditable","cancelBubble","dbValues","createPropertyValueLinkElement","CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS_DISABLED","CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS","CLASS_AW_CHANGED_TEXT","createObjectListFragment","addOldValue","fragment","createDocumentFragment","liForObjectLinks","CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM","newValue","shift","whiteSpace","isBulkEditing","dbValue","hasOldValue","oldCellTextElement","CLASS_AW_OLD_TEXT","childNodes","clearTooltipContent","parentElement","removeChild","firstChild","addTooltipListeners","tooltipContent","tableElement","tooltipTimeout","clearTimeout","offsetX","clientWidth","setTimeout","parentElementDimensions","getBoundingClientRect","left","top","tableBoundingBox","maxWidth","right","DocumentFragment","Array","prototype","call","Element","iconCellRenderer","action","rowElem","cell","CLASS_CELL_CONTENTS","CLASS_SPLM_TABLE_ICON_CELL","colorIndicatorElement","cellImg","CLASS_ICON_TYPE","CLASS_SPLM_TABLE_ICON","rowHeight","getTableRowHeightForIconCellRenderer","gridOptions","height","width","condition","transposeIconCellRenderer","transpose","commandCellRenderer","cellContent","treeTableCellRenderer","objectCellRenderer","ulForObjectLinks","CLASS_TABLE_NON_EDIT_CELL_LIST","CLASS_TABLE_CELL_TOP","flexWrap","overflow","objectListDomFragment","contentDomFragment","type","getCompiledFunctionFromCache","htmlString","renderingTemplateCache","get","compiledTemplateFn","put","loadTemplate","dependentServices","cache","updateContainerElement","propName","tooltipProps","depServices","generatedElement","basePath","trim","updateContainerWithCellTemplate","depsToInject","dep","cachedDep","loadedDep","getColRendererTemplateToUse","retrieveHeader","renderingTemplate","propRenderTemplates","gridId","defaultRenderingTemplate","propDefault","propRenderTemplate","indexOf","isCustomTemplate","defaultTemplate","specificTemplate","currentTemplate","isGraphicalRenderrDefinedForProp","propRenderingObj","isHeaderTrue","isCellTrue","getPropName","transposedColumnProperty","customCellRenderer","colRenderTemplateDef","tooltip","args","deps","depModuleObj","apply","paddingLeft","CUSTOM_CELL_LEFTPADDING_DEFAULT_SPACE","enableRendererContribution","customCellHeaderRenderer","richTextCellRenderer","tooltipHTML","liElement","rtfContainer","CLASS_TABLE_RTF_CELL_ITEM","childElementCount","isRichText","simpleTextCellRenderer","plainTextCellRenderer","ulElement","textElem","headerCellRenderer","labelElem","CLASS_HEADER_CELL_LABEL","textContent","headerIconCellRenderer","imgContainer","CLASS_HEADER_ICON_CONTAINER","CLASS_HEADER_ICON","enableHeaderIcon","resetHoverCommandElement","cleanupComponents","destroyElement","getAwCellRenderers","getAwHeaderRenderers","propOldValue","cleanup"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/awSPLMTableCellRendererFactory.js"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @swf/swf/no-react-usage */\n// Copyright (c) 2020 Siemens\n\n/**\n * This module defines the primary classes used to manage the 'aw-table' directive (used by decl grid).\n *\n * DOM Structure:\n * - Cell Command\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_CELL_TOP|aw-splm-tableCellTop\n *         ( Content in CLASS_TABLE_CELL_TOP for all case above )\n *         CLASS_AW_CELL_COMMANDS|aw-jswidgets-gridCellCommands --> Custom command cell if exist\n *         CLASS_NATIVE_CELL_COMMANDS|aw-splm-tableGridCellCommands --> OOTB command cell, check mark\n *\n *\n * - Object/Object List:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_NON_EDIT_CELL_LIST|aw-jswidgets-arrayNonEditValueCellList  --> ( <ul>, CLASS_TABLE_CELL_TOP )\n *         CLASS_TOOLTIP_POPUP|aw-splm-tableTooltipPopup\n *         CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM|aw-jswidgets-arrayValueCellListItem --> ( <li> )\n *           CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS|aw-splm-tablePropertyValueLinks --> ( <a>, innerHTML from addHighlights )\n *           CLASS_AW_OLD_TEXT|aw-jswidgets-oldText --> ( <div>, innerHTML from addHighlights )\n *\n *\n * - Rich Text/Rich Text List:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_NON_EDIT_CELL_LIST|aw-jswidgets-arrayNonEditValueCellList  --> ( <ul>, CLASS_TABLE_CELL_TOP )\n *         CLASS_TOOLTIP_POPUP|aw-splm-tableTooltipPopup\n *         CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM|aw-jswidgets-arrayValueCellListItem  --> ( <li> )\n *           CLASS_TABLE_RTF_CELL_ITEM|aw-splm-tableRTFCellItem ( <div>, innerHTML from addHighlights )\n *           CLASS_AW_OLD_TEXT|aw-jswidgets-oldText --> ( <div>, innerHTML from addHighlights )\n *\n *\n * - Changed Text/Text List:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_NON_EDIT_CELL_LIST|aw-jswidgets-arrayNonEditValueCellList  --> ( <ul>, CLASS_TABLE_CELL_TOP )\n *         CLASS_TOOLTIP_POPUP|aw-splm-tableTooltipPopup\n *         CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM|aw-jswidgets-arrayValueCellListItem --> ( <li> )\n *           CLASS_WIDGET_TABLE_CELL_TEXT|aw-splm-tableCellText --> ( <div>, innerHTML from addHighlights )\n *           CLASS_AW_OLD_TEXT|aw-jswidgets-oldText --> ( <div>, innerHTML from addHighlights )\n *\n * - Text:\n *     CLASS_CELL|ui-grid-cell\n *       CLASS_TABLE_CELL_TOP|aw-splm-tableCellTop --> ( <div> )\n *         CLASS_WIDGET_TABLE_CELL_TEXT|aw-splm-tableCellText --> ( <div>, innerHTML from addHighlights )\n *\n *\n * @module js/awSPLMTableCellRendererFactory\n */\nimport sanitizer from 'js/sanitizer';\nimport appCtxService from 'js/appCtxService';\nimport commandService from 'js/command.service';\nimport clickableTitleService from 'js/clickableTitleService';\nimport cdm from 'soa/kernel/clientDataModel';\nimport AwHttpService from 'js/awHttpService';\nimport AwPromiseService from 'js/awPromiseService';\nimport AwCacheFactoryService from 'js/awCacheFactoryService';\nimport navigationTokenService from 'js/navigationTokenService';\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport cfgSvc from 'js/configurationService';\nimport { includeComponent, getDependentModule, loadDependentModule } from 'js/moduleLoader';\nimport awConfiguration from 'js/awConfiguration';\nimport { renderComponent } from 'js/declReactUtils';\nimport { AppCtxComponent } from 'js/reactAppCtx';\nimport { svgString as miscInProcessIndicator } from 'image/miscInProcessIndicator16.svg';\nimport { svgString as miscExpandedTree } from 'image/miscExpandedTree12.svg';\nimport { svgString as miscCollapsedTree } from 'image/miscCollapsedTree12.svg';\nimport util from 'js/splmTableUtils';\nimport Const from 'js/splmTableConstants';\nimport Cell from 'js/splmTableCellRenderer';\n\nvar exports = {};\n\nvar _propVsRenderingTemplate;\nvar _defaultRenderingTemplates = {};\n\nlet highlighter;\n\n/**\n * Method to render rows\n *\n * @param {Number} startIndex Start render index\n * @param {Number} endIndex End render Index\n */\nfunction generatePropRendererTemplateMap() {\n    _propVsRenderingTemplate = {};\n    var _contributedTemplates = cfgSvc.getCfgCached( 'propertyRendererTemplates' );\n    _.forEach( _contributedTemplates, function( contributedTemplate ) {\n        if( !_.isEmpty( contributedTemplate.headerTemplate ) || !_.isEmpty( contributedTemplate.headerTemplateUrl ) ||\n            !_.isEmpty( contributedTemplate.headerRenderFunction ) || !_.isEmpty( contributedTemplate.headerComponent ) ) {\n            contributedTemplate.isHeaderTemplate = true;\n        }\n        if( !_.isEmpty( contributedTemplate.template ) || !_.isEmpty( contributedTemplate.templateUrl ) ||\n            !_.isEmpty( contributedTemplate.renderFunction ) ) {\n            contributedTemplate.isCellTemplate = true;\n        }\n\n        var isDefaultTemplate = false;\n        if( _.isEmpty( contributedTemplate.grids ) ) {\n            // default rendering template for property\n            isDefaultTemplate = true;\n        }\n        // Get ModelTypes for this Indicator Json\n        if( _.isEmpty( contributedTemplate.columns ) ) {\n            _.forEach( contributedTemplate.grids, function( gridid ) {\n                _defaultRenderingTemplates[ gridid ] = contributedTemplate;\n            } );\n        }\n        _.forEach( contributedTemplate.columns, function( column ) {\n            if( !_propVsRenderingTemplate[ column ] ) {\n                _.set( _propVsRenderingTemplate, [ column ], { specificRenderingTemplates: [], defaultPropRenderingTemplate: {} } );\n            }\n            var renderingTemplatesForProp = _propVsRenderingTemplate[ column ];\n            if( isDefaultTemplate ) {\n                _.set( renderingTemplatesForProp, 'defaultPropRenderingTemplate', contributedTemplate );\n            } else {\n                renderingTemplatesForProp.specificRenderingTemplates.push( contributedTemplate );\n            }\n        } );\n    } );\n}\n\nvar applyCommandCellScope = function( cellCmdElem, column, vmo, extraDigest ) {\n    // The below getElementScope method is commented out and the usages are commented too by assigning empty object to scope.\n    //var scope = util.getElementScope( cellCmdElem );\n    var scope = {};\n    scope.anchor = column.commandsAnchor;\n    scope.commandContext = {\n        vmo: vmo\n    };\n\n    if( vmo.props !== undefined ) {\n        scope.prop = vmo.props[ column.field ];\n    }\n\n    if( extraDigest ) {\n        scope.$evalAsync();\n    }\n};\n\nconst getTreeIconCellInfo = function( vmo ) {\n    if( vmo.loadingStatus ) {\n        return { id: 'miscInProcessIndicator', icon: miscInProcessIndicator };\n    } else if( vmo.isLeaf ) {\n        // we made the decision to stop rendering 'typeBlankIcon' because (1) there is no visual difference, (2) we want\n        // to decrease the number of DOM elements and (3) we don't know the history of why it was there.\n        return {};\n    } else if( vmo.isExpanded ) {\n        return { id: 'miscExpandedTree', icon: miscExpandedTree };\n    }\n    return { id: 'miscCollapsedTree', icon: miscCollapsedTree };\n};\n\n/**\n * Creates the Icon cell for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n *\n * @returns {DOMElement} icon element\n */\nconst createIconElement = function( tableElem, vmo ) {\n    let treeCellButtonHeaderCell = util.createElement( 'div', Const.CLASS_TREE_ROW_HEADER_BUTTONS, Const.CLASS_TREE_BASE_HEADER );\n    if( !vmo.isLeaf ) {\n        treeCellButtonHeaderCell.classList.add( Const.CLASS_WIDGET_TREE_NODE_TOGGLE_CMD );\n        treeCellButtonHeaderCell.tabIndex = -1;\n        tableElem._tableInstance.keyboardService.setOnFocusAndBlur( treeCellButtonHeaderCell );\n    }\n    const treeIndent = 16;\n    treeCellButtonHeaderCell.style.marginLeft = treeIndent * vmo.levelNdx + 'px';\n    treeCellButtonHeaderCell.title = vmo._twistieTitle;\n    const iconCellInfo = getTreeIconCellInfo( vmo );\n    // this if check is for the vmo.isLeaf use case where there is no need to render an icon\n    if( iconCellInfo && iconCellInfo.id ) {\n        let iconElem = document.createElement( 'span' );\n        iconElem.classList.add( 'aw-icon', 'aw-base-icon' );\n        let attr = document.createAttribute( 'iconid' );\n        attr.value = iconCellInfo.id;\n        let attrLegacy = document.createAttribute( 'icon-id' );\n        attrLegacy.value = iconCellInfo.id;\n        iconElem.setAttributeNode( attr );\n        iconElem.setAttributeNode( attrLegacy );\n        iconElem.innerHTML = iconCellInfo.icon;\n        treeCellButtonHeaderCell.appendChild( iconElem );\n    }\n\n    return treeCellButtonHeaderCell;\n};\n\n/**\n * Creates the cell decorator element for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n *\n * @returns {DOMElement} cell decorator element\n */\nvar createCellDecoratorElement = function( tableElem, vmo ) {\n    var cellColorContainerElement = util.createElement( 'div', Const.CLASS_GRID_CELL_COLOR_CONTAINER, Const.CLASS_TREE_COLOR_CONTAINER );\n    var cellColorElement = util.createColorIndicatorElement( vmo );\n    cellColorContainerElement.appendChild( cellColorElement );\n\n    return cellColorContainerElement;\n};\n\n/**\n * Get the img element tag alt text for WCAG accessibility compliance\n * @param {Object} vmo - View model object\n * @returns {String} Returns alt text\n */\nvar getImageAltText = function( vmo ) {\n    if( vmo.hasThumbnail ) {\n        return vmo.cellHeader1;\n    } else if( vmo.props && vmo.props.object_type && vmo.props.object_type.uiValue ) {\n        return vmo.props.object_type.uiValue;\n    }\n    return vmo.modelType && vmo.modelType.displayName ? vmo.modelType.displayName : '';\n};\n\n/**\n * Creates the cell image element for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n *\n * @returns {DOMElement} cell image element\n */\nvar createCellImageElement = function( tableElem, vmo ) {\n    let imgURL = util.getImgURL( vmo );\n    let svgString = vmo.svgString;\n    if( imgURL === '' && !svgString ) {\n        return null;\n    }\n\n    let cellImageContainerElement = util.createElement( 'div', Const.CLASS_GRID_CELL_IMAGE );\n    let cellImageElement = null;\n    if( imgURL && imgURL !== '' ) {\n        cellImageElement = util.createElement( 'img', Const.CLASS_ICON_BASE );\n        cellImageElement.src = imgURL;\n    } else if( svgString ) {\n        cellImageElement = util.createElement( 'span', Const.CLASS_ICON_BASE );\n        cellImageElement.innerHTML = svgString;\n    }\n    if( cellImageElement ) {\n        cellImageElement.alt = getImageAltText( vmo );\n        cellImageContainerElement.appendChild( cellImageElement );\n    }\n    return cellImageContainerElement;\n};\n\nvar toggleTreeCellAction = function( vmo, tableElem, treeCellElement ) {\n    if( vmo.isExpanded || vmo.isInExpandBelowMode ) {\n        // collapse\n        delete vmo.isExpanded;\n        vmo.isInExpandBelowMode = false;\n    } else {\n        vmo.isExpanded = true;\n        // Set icon cell to loading icon\n        var iconContainerElement = treeCellElement.getElementsByClassName( Const.CLASS_ICON_BASE )[ 0 ];\n        if( iconContainerElement !== undefined ) {\n            iconContainerElement.innerHTML = miscInProcessIndicator;\n        }\n    }\n    // Prevent the selected row from being scrolled to if it goes out of view\n    tableElem._tableInstance.tableInstanceCallbacks.unsetScrollToRowIndex();\n    if( tableElem._tableInstance.tableInstanceCallbacks.toggleTreeNode ) {\n        tableElem._tableInstance.tableInstanceCallbacks.toggleTreeNode( vmo );\n    } else {\n        eventBus.publish( tableElem.id + '.plTable.toggleTreeNode', vmo );\n    }\n};\n\nvar populateHrefContentPerPropValue = function( objectElement, scope, uidToBeEvaluated, vmo ) {\n    var deferred = AwPromiseService.instance.defer();\n    if( objectElement && scope && uidToBeEvaluated ) {\n        navigationTokenService.getNavigationContent( scope, uidToBeEvaluated, vmo ).then( function( urlDetails ) {\n            var hrefDetails = urlDetails;\n            if( hrefDetails ) {\n                deferred.resolve( { objectElement: objectElement, url: hrefDetails } );\n            }\n        } );\n    }\n    return deferred.promise;\n};\n\nvar addHrefToAnchorLink = function( objectElement, scope, uidToBeEvaluated, vmo ) {\n    objectElement.addEventListener( 'mouseenter', function() {\n        populateHrefContentPerPropValue( objectElement, scope, uidToBeEvaluated, vmo ).then( function( response ) {\n            if( !_.isUndefined( response ) ) {\n                objectElement = util.addAttributeToDOMElement( response.objectElement, 'href', response.url.urlContent );\n                objectElement = util.addAttributeToDOMElement( objectElement, 'target', response.url.target );\n            }\n        } );\n    } );\n    return objectElement;\n};\n\nvar addClickableCellTitle = function( element, vmo, value, tableElem ) {\n    // make cell text clickable\n    var clickableTextDiv = util.createElement( 'div' );\n    var clickableText = util.createElement( 'a', 'aw-uiwidgets-clickableTitle' );\n    const scope = {\n        data: tableElem._tableInstance.declViewModel,\n        ctx: tableElem._tableInstance.ctx,\n        tableContext: tableElem._tableInstance\n    };\n    clickableText.onclick = function( event ) {\n        scope.vmo = vmo;\n        clickableTitleService.doIt( event, scope, tableElem._tableInstance.runActionWithViewModel );\n    };\n\n    clickableText.innerHTML = exports.addHighlights( value );\n    clickableTextDiv.appendChild( clickableText );\n    element.appendChild( clickableTextDiv );\n};\n\n/**\n * Creates the title and command container element for tree command cell.\n *\n * @param {DOMElement} tableElem tree table element\n * @param {Object} vmo the vmo for the cell\n * @param {Object} column the column associated with the cell\n * @returns {DOMElement} title/command container element\n */\nlet createTitleElement = function( tableElem, vmo, column ) {\n    let tableNonEditContainerElement = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_NON_EDIT_CONTAINER,\n        Const.CLASS_LAYOUT_ROW_CONTAINER );\n    let displayName = vmo.displayName;\n    tableNonEditContainerElement.title = displayName;\n\n    let parsedValue = sanitizer.htmlEscapeAllowEntities( displayName, true, true );\n    let gridCellText = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_CELL_TEXT );\n\n    if( ( column.isTableCommand || column.isTreeNavigation ) && clickableTitleService.hasClickableCellTitleActions() ) {\n        addClickableCellTitle( gridCellText, vmo, parsedValue, tableElem );\n    } else {\n        gridCellText.innerHTML = exports.addHighlights( parsedValue );\n    }\n\n    const dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n    if( dynamicRowHeightEnabled ) {\n        tableNonEditContainerElement.classList.add( Const.CLASS_TABLE_CELL_TOP_DYNAMIC );\n        gridCellText.classList.add( Const.CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC );\n    }\n\n    // Skeletons fix - if no cell content, remove table cell text class\n    if( gridCellText.innerHTML === '' ) {\n        gridCellText.classList.remove( Const.CLASS_WIDGET_TABLE_CELL_TEXT );\n    }\n\n    tableNonEditContainerElement.appendChild( gridCellText );\n\n    return tableNonEditContainerElement;\n};\n\n/**\n * Show or hide the element based on 'isSelected'.\n *\n * @param {DOMElement} element DOM element to show/hide\n * @param {Boolean} isSelected used to either show or hide element\n */\nvar toggleCellCommandVisibility = function( element, isSelected ) {\n    if( isSelected ) {\n        util.showHideElement( element, false );\n    } else {\n        util.showHideElement( element, true );\n    }\n};\n\n/**\n * Add events to the tree command cell elements.\n *\n * @param {DOMElement} treeCellElement tree cell container element\n * @param {Object} vmo the vmo for the cell\n * @param {DOMElement} tableElem table element\n */\nvar addTreeCommandCellEvents = function( treeCellElement, vmo, tableElem ) {\n    var tableInstance = util.getTableInstance( tableElem );\n    var dataProviderName = tableInstance.dataProvider.name;\n\n    var treeCellButtonElement = treeCellElement.getElementsByClassName( Const.CLASS_TREE_ROW_HEADER_BUTTONS )[ 0 ];\n    if( treeCellButtonElement ) {\n        const treeCommandCellClickListener = function() {\n            if( !vmo.isLeaf && util.isExpandAllowed( tableElem ) ) {\n                toggleTreeCellAction( vmo, tableElem, treeCellElement );\n            }\n        };\n        treeCellButtonElement.addEventListener( 'click', treeCommandCellClickListener );\n        treeCellButtonElement.addEventListener( 'keydown', function( event ) {\n            if( event.code === 'Enter' || event.code === 'Space' ) {\n                treeCommandCellClickListener();\n            }\n        } );\n    }\n\n    var treeCellImageElement = treeCellElement.getElementsByClassName( Const.CLASS_GRID_CELL_IMAGE )[ 0 ];\n    if( treeCellImageElement ) {\n        treeCellImageElement.addEventListener( 'click', function() {\n            eventBus.publish( 'plTable.imageButtonClick', vmo );\n        } );\n    }\n\n    var cellCommandBarElement = treeCellElement.getElementsByClassName( 'cellCommandBarContainer' )[ 0 ];\n    if( cellCommandBarElement ) {\n        var isSelected = tableInstance.dataProvider.selectionModel.multiSelectEnabled && vmo.selected;\n        toggleCellCommandVisibility( cellCommandBarElement, isSelected );\n\n        eventBus.subscribe( dataProviderName + '.selectionChangeEvent', function() {\n            isSelected = tableInstance.dataProvider.selectionModel.multiSelectEnabled && vmo.selected;\n            toggleCellCommandVisibility( cellCommandBarElement, isSelected );\n        } );\n    }\n};\n\n/**\n * @memberOf js/awSPLMTableCellRendererFactory\n *\n * This method is used for creating cell commands for PL Table in AW usecase.\n *\n * @param {Object} column - column Definition\n * @param {Object} vmo - View model object\n * @param {Boolean} [isInternal] - true if function being called from internal PL Table code\n * @returns {DOMElement} DOMElement presents cell command bar\n *\n */\nexport let createCellCommandElement = function( column, vmo, isInternal ) {\n    const fields = {\n        anchor: column.commandsAnchor,\n        column: column,\n        vmo: vmo,\n        isInternal: isInternal\n    };\n    var cellCommandsContainer = util.createElement( 'div', Const.CLASS_AW_CELL_COMMANDS_CONTAINER );\n    let cellCmdElem = includeComponent( 'AwTableCommandBar', fields );\n    renderComponent( <AppCtxComponent>{ cellCmdElem }</AppCtxComponent>, cellCommandsContainer );\n    return cellCommandsContainer;\n};\n\nexport let createTreeCellCommandElement = function( column, vmo, tableElem ) {\n    // CELL CONTAINER\n    var tableTreeCommandCell = util.createElement( 'div', Const.CLASS_AW_TREE_COMMAND_CELL, Const.CLASS_WIDGET_TABLE_CELL );\n    var treeCellTop = util.createElement( 'div', Const.CLASS_AW_JS_CELL_TOP, Const.CLASS_WIDGET_UI_NON_EDIT_CELL );\n    tableTreeCommandCell.appendChild( treeCellTop );\n\n    // ICON\n    var iconElement = createIconElement( tableElem, vmo );\n    treeCellTop.appendChild( iconElement );\n\n    // DECORATOR\n    var cellDecoratorElement = createCellDecoratorElement( tableElem, vmo );\n    treeCellTop.appendChild( cellDecoratorElement );\n\n    // IMAGE\n    var cellImageElement = createCellImageElement( tableElem, vmo );\n    if( cellImageElement ) {\n        treeCellTop.appendChild( cellImageElement );\n    }\n\n    // TITLE\n    var tableNonEditContainerElement = createTitleElement( tableElem, vmo, column );\n    treeCellTop.appendChild( tableNonEditContainerElement );\n\n    addTreeCommandCellEvents( tableTreeCommandCell, vmo, tableElem );\n\n    return tableTreeCommandCell;\n};\n\nvar createCheckMarkElementInternal = function( tableElem ) {\n    var commandBarHtml =\n        '<div class=\"aw-splm-tableCheckBoxPresent\" >' + //\n        '<a class=\"aw-commands-cellCommandCommon\">' + //\n        '<div class=\"afx-checkbox afx-checkbox-label-side\">' + //\n        '<input type=\"checkbox\" class=\"aw-jswidgets-checkboxButton\"/>' + //\n        '<span class=\"afx-checkbox-md-style\">' + //\n        '<span class=\"check\"></span>' + //\n        '</span>' + //\n        '</div>' + //\n        '</a>' + //\n        '</div>'; //\n    var cellScope = {};\n\n    return util.createNgElement( commandBarHtml, tableElem, cellScope );\n};\n\n// NOTE: By this design, the cell command will only be available for OOTB AW Cell.\nexport let createCheckMarkElement = function( column, vmo, tableElem ) {\n    var elem = createCheckMarkElementInternal( tableElem );\n    applyCommandCellScope( elem, column, vmo );\n    return elem;\n};\n\nexport let addHighlights = function( displayValue ) {\n    if( !highlighter ) {\n        highlighter = appCtxService.getCtx( 'highlighter' );\n    }\n    if( highlighter && typeof displayValue === 'string' ) {\n        return displayValue.replace( highlighter.regEx, highlighter.style );\n    }\n    return displayValue;\n};\n\n// This function is called when we click on any object link\n// REFACTOR: Awp0ShowObjectCell is TC specific. Try to pull command ID from solution configuration\n// instead.\nvar openObjectLink = function( propertyName, uid, objectElement ) {\n    if( uid && uid.length > 0 ) {\n        var modelObject = cdm.getObject( uid );\n\n        var vmo = {\n            propertyName: propertyName,\n            uid: uid\n        };\n\n        var commandContext = {\n            vmo: modelObject || vmo, // vmo needed for gwt commands\n            edit: false\n        };\n        commandService.executeCommand( 'Awp0ShowObjectCell', null, null, commandContext, objectElement.runActionWithViewModel );\n    }\n};\n\n// REFACTOR: The only meaning here to keep this is the _cellCmdElem mechanism, we can separate it out later.\nexport let createCellRenderer = function() {\n    var _renderer = {};\n\n    var _cellCmdElem;\n\n    var _tooltipElement = util.createElement( 'div', Const.CLASS_AW_POPUP, Const.CLASS_AW_TOOLTIP_POPUP, Const.CLASS_TOOLTIP_POPUP );\n\n    var createCommandCellHandler = function( cellTop, column, vmo, tableElem ) {\n        return function() {\n            //no commands visible when in multiselection/visible checkbox\n            if( !tableElem._tableInstance.showCheckBox && cellTop.getElementsByClassName( Const.CLASS_AW_CELL_COMMANDS_CONTAINER ).length === 0 ) {\n                _cellCmdElem = createCellCommandElement( column, vmo, true );\n                cellTop.appendChild( _cellCmdElem );\n            }\n        };\n    };\n\n    var destroyCommandCellHandler = function( cellTop, column, vmo, tableElem ) {\n        return function() {\n            //no commands visible when in multiselection/visible checkbox\n            if( !tableElem._tableInstance.showCheckBox && cellTop.getElementsByClassName( Const.CLASS_AW_CELL_COMMANDS_CONTAINER ).length === 1 && _cellCmdElem ) {\n                _renderer.destroyHoverCommandElement();\n            }\n        };\n    };\n\n    var addCommandOnHover = function( commandHandlerParent, column, vmo, tableElem ) {\n        commandHandlerParent.addEventListener( 'mouseover', createCommandCellHandler( commandHandlerParent, column, vmo, tableElem ) );\n    };\n\n    var removeCommandOnHover = function( commandHandlerParent, column, vmo, tableElem ) {\n        commandHandlerParent.addEventListener( 'mouseleave', destroyCommandCellHandler( commandHandlerParent, column, vmo, tableElem ) );\n    };\n\n    var createInlineComponent = function( extendedTooltip, containerElement, vmo, column ) {\n        const subPanelContext = {\n            vmo: vmo,\n            column: column\n        };\n        let extendedTooltipElement = includeComponent( extendedTooltip, subPanelContext );\n        if( containerElement ) {\n            renderComponent( <AppCtxComponent>{ extendedTooltipElement }</AppCtxComponent>, containerElement );\n        }\n        return containerElement;\n    };\n\n    var getTooltipHTML = function( values ) {\n        var tooltipInnerHTML = '<ul>';\n        _.forEach( values, function( value ) {\n            tooltipInnerHTML += '<li>' + exports.addHighlights( value ) + '</li>';\n        } );\n        tooltipInnerHTML += '</ul>';\n        return tooltipInnerHTML;\n    };\n\n    var containsOnlyEmptyStrings = function( values ) {\n        if( values.length ) {\n            for( var i = 0; i < values.length; i++ ) {\n                if( values[ i ] !== '' ) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n\n    var getNewValues = function( prop ) {\n        var newValues = [];\n        // Get the new values, return an empty array if the values are all empty strings\n        // to avoid creating unnecessary DOM elements.\n        if( prop.isArray === true ) {\n            // Only use uiValues if displayValues is not defined.\n            if( prop.displayValues ) {\n                if( !containsOnlyEmptyStrings( prop.displayValues ) ) {\n                    newValues = prop.displayValues.slice();\n                }\n            } else if( prop.uiValues ) {\n                if( !containsOnlyEmptyStrings( prop.uiValues ) ) {\n                    newValues = prop.uiValues.slice();\n                }\n            }\n        } else if( !containsOnlyEmptyStrings( [ prop.uiValue ] ) ) {\n            newValues = [ prop.uiValue ];\n        }\n        return newValues;\n    };\n\n    var getOldValues = function( prop ) {\n        var oldValues = [];\n        if( prop.isArray === true && prop.oldValues && !containsOnlyEmptyStrings( prop.oldValues ) ) {\n            oldValues = prop.oldValues.slice();\n        } else if( prop.oldValue && !containsOnlyEmptyStrings( [ prop.oldValue ] ) ) {\n            oldValues = [ prop.oldValue ];\n        }\n        return oldValues;\n    };\n\n    var addOpenObjectLinkHandler = function( objectElement, prop, index ) {\n        var openObjLinkHandle = function( e ) {\n            if( e.target && e.target.tagName.toLowerCase() === 'a' && e.target.href !== '' ) {\n                return;\n            }\n            if( !prop.isEditable ) {\n                e.cancelBubble = true;\n                openObjectLink( prop.propertyName, prop.dbValues[ index ], objectElement );\n            }\n        };\n\n        objectElement.addEventListener( 'click', function( event ) {\n            openObjLinkHandle( event );\n        } );\n\n        objectElement.addEventListener( 'keydown', function( event ) {\n            if( event.code === 'Enter' || event.code === 'Space' ) {\n                openObjLinkHandle( event );\n            }\n        } );\n    };\n\n    const createPropertyValueLinkElement = function( prop, oldValue ) {\n        if( prop.isEditable ) {\n            return util.createElement( 'a', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS_DISABLED );\n        } else if( oldValue ) {\n            return util.createElement( 'a', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS, Const.CLASS_AW_CHANGED_TEXT );\n        }\n        return util.createElement( 'a', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS );\n    };\n\n    var createObjectListFragment = function( prop, addOldValue, scope, dynamicRowHeightEnabled, tableElem ) {\n        var fragment = document.createDocumentFragment();\n        var newValues = getNewValues( prop );\n        var oldValues = getOldValues( prop );\n        let runActionWithViewModel = tableElem._tableInstance.runActionWithViewModel;\n        var index = 0;\n        while( newValues.length > 0 || oldValues.length > 0 ) {\n            var liForObjectLinks = util.createElement( 'li', Const.CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM );\n            var newValue = newValues.shift();\n            var oldValue = oldValues.shift();\n\n            if( newValue ) {\n                // use a different class when there is an object array.\n                let objectElement = createPropertyValueLinkElement( prop, oldValue );\n                objectElement.tabIndex = -1;\n                if( dynamicRowHeightEnabled ) {\n                    objectElement.style.whiteSpace = 'normal';\n                }\n                // href not to be associated with editable prop\n                if( !util.isBulkEditing( tableElem ) ) {\n                    // associating every prop with href\n                    var uidToBeEvaluated = '';\n                    if( prop.isArray ) {\n                        uidToBeEvaluated = prop.dbValue[ index ];\n                    } else {\n                        uidToBeEvaluated = prop.dbValue;\n                    }\n                    addHrefToAnchorLink( objectElement, scope, uidToBeEvaluated );\n                }\n                objectElement.runActionWithViewModel = runActionWithViewModel;\n                addOpenObjectLinkHandler( objectElement, prop, index );\n                objectElement.innerHTML = exports.addHighlights( newValue );\n                liForObjectLinks.appendChild( objectElement );\n            }\n\n            if( addOldValue && hasOldValue( oldValue, prop.oldValue ) ) {\n                var oldCellTextElement = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS_DISABLED, Const.CLASS_AW_OLD_TEXT );\n                oldCellTextElement.innerHTML = exports.addHighlights( oldValue );\n                liForObjectLinks.appendChild( oldCellTextElement );\n            }\n\n            fragment.appendChild( liForObjectLinks );\n\n            // Add cell text class to last li\n            if( fragment.childNodes.length > 0 ) {\n                fragment.childNodes[ fragment.childNodes.length - 1 ].classList.add( Const.CLASS_WIDGET_TABLE_CELL_TEXT );\n            }\n            index++;\n        }\n        return fragment;\n    };\n\n    /**\n     * Clear the child elements of the _tooltipElement.\n     */\n    var clearTooltipContent = function() {\n        if( _tooltipElement.parentElement ) {\n            _tooltipElement.parentElement.removeChild( _tooltipElement );\n        }\n        while( _tooltipElement.firstChild ) {\n            _tooltipElement.removeChild( _tooltipElement.firstChild );\n        }\n    };\n\n    var addTooltipListeners = function( parentElement, tooltipContent, tableElement ) {\n        var tooltipTimeout = null;\n        parentElement.addEventListener( 'mouseenter', function( event ) {\n            clearTimeout( tooltipTimeout );\n            if( event.offsetX > event.target.clientWidth ) {\n                return false;\n            }\n            tooltipTimeout = setTimeout( function() {\n                clearTooltipContent();\n                var parentElementDimensions = parentElement.getBoundingClientRect();\n                _tooltipElement.style.left = parentElementDimensions.left + 'px';\n                _tooltipElement.style.top = parentElementDimensions.top + 'px';\n                var tableBoundingBox = tableElement.getBoundingClientRect();\n                _tooltipElement.style.maxWidth = tableBoundingBox.right - parentElementDimensions.left + 'px';\n                // When tooltipContent is a document fragment, convert to array of html elements to maintain\n                // references after appending\n                if( tooltipContent instanceof DocumentFragment ) {\n                    tooltipContent = Array.prototype.slice.call( tooltipContent.childNodes );\n                }\n\n                if( Array.isArray( tooltipContent ) ) {\n                    for( var i = 0; i < tooltipContent.length; i++ ) {\n                        _tooltipElement.appendChild( tooltipContent[ i ] );\n                    }\n                } else if( tooltipContent instanceof Element ) {\n                    _tooltipElement.appendChild( tooltipContent );\n                } else {\n                    _tooltipElement.innerHTML = tooltipContent;\n                }\n                parentElement.appendChild( _tooltipElement );\n            }, 750 );\n        } );\n\n        parentElement.addEventListener( 'mouseleave', function() {\n            clearTimeout( tooltipTimeout );\n            tooltipTimeout = setTimeout( clearTooltipContent, 750 );\n        } );\n\n        return _tooltipElement;\n    };\n\n    /**\n     * Icon cell\n     */\n    var iconCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var cell = util.createElement( 'div', Const.CLASS_CELL_CONTENTS, Const.CLASS_SPLM_TABLE_ICON_CELL );\n\n            var colorIndicatorElement = util.createColorIndicatorElement( vmo );\n            cell.appendChild( colorIndicatorElement );\n\n            var cellImg = util.createElement( 'img', Const.CLASS_ICON_BASE, Const.CLASS_ICON_TYPE,\n                Const.CLASS_SPLM_TABLE_ICON );\n            var rowHeight = util.getTableRowHeightForIconCellRenderer( util.getTableInstance( tableElem ).gridOptions, undefined );\n            if( rowHeight !== undefined ) {\n                cellImg.style.height = rowHeight + 'px';\n                cellImg.style.width = rowHeight + 'px';\n            }\n            cellImg.src = util.getImgURL( vmo );\n            cellImg.alt = getImageAltText( vmo );\n            cell.appendChild( cellImg );\n            return cell;\n        },\n        condition: function( column, vmo, tableElem ) {\n            return column.name === 'icon';\n        }\n    };\n\n    /**\n     * Transpose Icon cell\n     */\n    const transposeIconCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            const cell = util.createElement( 'div', Const.CLASS_CELL_CONTENTS, Const.CLASS_SPLM_TABLE_ICON_CELL );\n\n            const colorIndicatorElement = util.createColorIndicatorElement( vmo );\n            cell.appendChild( colorIndicatorElement );\n\n            const cellImg = util.createElement( 'img', Const.CLASS_ICON_BASE, Const.CLASS_ICON_TYPE,\n                Const.CLASS_SPLM_TABLE_ICON );\n            const rowHeight = util.getTableRowHeightForIconCellRenderer( util.getTableInstance( tableElem ).gridOptions, undefined );\n            if( rowHeight !== undefined ) {\n                cellImg.style.height = rowHeight + 'px';\n                cellImg.style.width = rowHeight + 'px';\n            }\n            cellImg.src = util.getImgURL( vmo.props[ column.field ] );\n            cellImg.alt = getImageAltText( vmo );\n            cell.appendChild( cellImg );\n            return cell;\n        },\n        condition: function( column, vmo, tableElem ) {\n            return tableElem._tableInstance.gridOptions.transpose === true && vmo.name === 'icon' && column.field !== 'transposedColumnProperty';\n        }\n    };\n\n    /**\n     * Command in cell\n     */\n    var commandCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var cellContent = Cell.createElement( column, vmo, tableElem, rowElem );\n            if( cellContent ) {\n                addCommandOnHover( cellContent, column, vmo, tableElem );\n                removeCommandOnHover( cellContent, column, vmo, tableElem );\n            }\n            return cellContent;\n        },\n        condition: function( column, vmo, tableElem, rowElem ) {\n            return column.isTableCommand;\n        }\n    };\n\n    /**\n     * Tree Node\n     */\n    var treeTableCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var createTreeCellCommandElement = exports.createTreeCellCommandElement( column, vmo, tableElem );\n            var commandHandlerParent = createTreeCellCommandElement.getElementsByClassName( Const.CLASS_WIDGET_TABLE_NON_EDIT_CONTAINER )[ 0 ];\n            addCommandOnHover( commandHandlerParent, column, vmo, tableElem );\n            removeCommandOnHover( commandHandlerParent, column, vmo, tableElem );\n            return createTreeCellCommandElement;\n        },\n        condition: function( column, vmo, tableElem, rowElem ) {\n            return column.isTreeNavigation;\n        }\n    };\n\n    /**\n     * AW Object Reference\n     */\n    var objectCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var prop = vmo.props[ column.field ];\n            var ulForObjectLinks = util.createElement( 'ul', Const.CLASS_TABLE_NON_EDIT_CELL_LIST, Const.CLASS_TABLE_CELL_TOP );\n            var dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n            if( dynamicRowHeightEnabled ) {\n                ulForObjectLinks.classList.add( Const.CLASS_TABLE_CELL_TOP_DYNAMIC );\n            }\n\n            // Prevent wrapping for cells that could have a command\n            if( column.isTableCommand === true ) {\n                ulForObjectLinks.style.flexWrap = 'nowrap';\n                ulForObjectLinks.style.overflow = 'hidden';\n            }\n\n            var values = prop.displayValues || prop.uiValues;\n            // Add tooltip\n            /** revisitme Shaishav: What is the replacement? Do we need anything from parent element?\n              * tstark - needed for navigationToken, only thing added is .vmo to scope, anything else is needed here\n         var scope = util.getElementScope( tableElem.parentElement, true );\n          */\n            var scope = {};\n            if( prop.isArray && values.length > 0 ) {\n                var objectListDomFragment = createObjectListFragment( prop, null, scope, dynamicRowHeightEnabled, tableElem );\n                if( objectListDomFragment ) {\n                    addTooltipListeners( ulForObjectLinks, objectListDomFragment, tableElem );\n                }\n            } else {\n                ulForObjectLinks.title = prop.uiValue;\n            }\n\n            var contentDomFragment = createObjectListFragment( prop, true, scope, dynamicRowHeightEnabled, tableElem );\n            if( contentDomFragment ) {\n                ulForObjectLinks.appendChild( contentDomFragment );\n            }\n            return ulForObjectLinks;\n        },\n        condition: function( column, vmo, tableElem, rowElem ) {\n            return vmo.props &&\n                vmo.props[ column.field ] &&\n                ( vmo.props[ column.field ].type === 'OBJECT' ||\n                    vmo.props[ column.field ].type === 'OBJECTARRAY' );\n        }\n    };\n\n    var getCompiledFunctionFromCache = function( templateUrl, htmlString ) {\n        // In order to stop loading/compiling same template again, template should be cached against its URL\n        var renderingTemplateCache = AwCacheFactoryService.instance.get( 'propRenderingTemplate' );\n        if( !renderingTemplateCache ) {\n            renderingTemplateCache = AwCacheFactoryService.instance( 'propRenderingTemplate' );\n        }\n        var compiledTemplateFn = renderingTemplateCache.get( templateUrl );\n        if( !compiledTemplateFn && !_.isEmpty( htmlString ) ) {\n            compiledTemplateFn = _.template( htmlString );\n            renderingTemplateCache.put( templateUrl, compiledTemplateFn );\n        }\n        return compiledTemplateFn;\n    };\n\n    var loadTemplate = function( containerElement, vmo, templateUrl, dependentServices ) {\n        var deferred = AwPromiseService.instance.defer();\n        AwHttpService.instance.get( templateUrl, { cache: true } ).then( function( response ) {\n            var htmlString = response;\n            if( htmlString ) {\n                deferred.resolve( { containerElement: containerElement, templateUrl: templateUrl, vmo: vmo, htmlString: response.data, dependentServices: dependentServices } );\n            }\n        } );\n        return deferred.promise;\n    };\n\n    var updateContainerElement = function( containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, depServices, column, tableElem ) {\n        var compiledTemplateFn = getCompiledFunctionFromCache( templateUrl, htmlString );\n        var generatedElement = compiledTemplateFn( {\n            vmo: vmo,\n            propName: propName,\n            tooltipProps: tooltipProps,\n            basePath: awConfiguration.get( 'baseUrl' ),\n            dependentServices: depServices,\n            column: column,\n            tableContext: tableElem._tableInstance.tableContext\n        } );\n        containerElement.innerHTML = generatedElement.trim();\n    };\n    const updateContainerWithCellTemplate = async function( containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, depsToInject, column, tableElem ) {\n        if( depsToInject && depsToInject.length > 0 ) {\n            for( let dep in depsToInject ) {\n                // eslint-disable-next-line no-await-in-loop\n                const cachedDep = await getDependentModule( depsToInject[ dep ] );\n                if( cachedDep && _.isEmpty( htmlString ) ) {\n                    updateContainerElement( containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, [ cachedDep ], column, tableElem );\n                } else {\n                    // eslint-disable-next-line no-await-in-loop\n                    const loadedDep = await loadDependentModule( depsToInject[ dep ] );\n                    updateContainerElement( containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, [ loadedDep ], column, tableElem );\n                }\n            }\n        } else {\n            updateContainerElement( containerElement, vmo, propName, tooltipProps, templateUrl, htmlString, depsToInject, column, tableElem );\n        }\n    };\n\n    var getColRendererTemplateToUse = function( propName, tableElem, retrieveHeader ) {\n        var renderingTemplate = {};\n        var propRenderTemplates = _propVsRenderingTemplate[ propName ];\n        var gridId = tableElem.id;\n        var defaultRenderingTemplate = _defaultRenderingTemplates[ gridId ];\n        if( defaultRenderingTemplate ) {\n            if( defaultRenderingTemplate.isHeaderTemplate === true && retrieveHeader === true || defaultRenderingTemplate.isCellTemplate === true && retrieveHeader === false ) {\n                renderingTemplate = defaultRenderingTemplate;\n            }\n        }\n\n        if( propRenderTemplates ) {\n            var propDefault = propRenderTemplates.defaultPropRenderingTemplate;\n            if( propDefault ) {\n                if( propDefault.isHeaderTemplate === true && retrieveHeader === true || propDefault.isCellTemplate === true && retrieveHeader === false ) {\n                    renderingTemplate = propDefault;\n                }\n            }\n            _.forEach( propRenderTemplates.specificRenderingTemplates, function( propRenderTemplate ) {\n                if( propRenderTemplate.grids.indexOf( gridId ) >= 0 ) {\n                    if( propRenderTemplate.isHeaderTemplate === true && retrieveHeader === true ||\n                        propRenderTemplate.isCellTemplate === true && retrieveHeader === false ) {\n                        renderingTemplate = propRenderTemplate;\n                        return;\n                    }\n                }\n            } );\n        }\n        return renderingTemplate;\n    };\n\n    var isCustomTemplate = function( defaultTemplate, specificTemplate, retrieveHeader ) {\n        if( !_.isEmpty( specificTemplate ) ) {\n            for( var i = 0; i < specificTemplate.length; i++ ) {\n                var currentTemplate = specificTemplate[ i ];\n                if( retrieveHeader ) {\n                    if( currentTemplate.isHeaderTemplate === true ) {\n                        return true;\n                    }\n                } else {\n                    if( currentTemplate.isCellTemplate === true ) {\n                        return true;\n                    }\n                }\n            }\n        }\n        if( !_.isEmpty( defaultTemplate ) ) {\n            if( retrieveHeader ) {\n                if( defaultTemplate.isHeaderTemplate === true ) {\n                    return true;\n                }\n            } else {\n                if( defaultTemplate.isCellTemplate === true ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n    var isGraphicalRenderrDefinedForProp = function( propName, gridid, retrieveHeader ) {\n        if( _.isEmpty( _propVsRenderingTemplate ) ) {\n            generatePropRendererTemplateMap();\n        }\n\n        var propRenderingObj = _propVsRenderingTemplate[ propName ];\n        if( propRenderingObj ) {\n            var isHeaderTrue = isCustomTemplate( propRenderingObj.defaultPropRenderingTemplate, propRenderingObj.specificRenderingTemplates, retrieveHeader );\n            var isCellTrue = isCustomTemplate( propRenderingObj.defaultPropRenderingTemplate, propRenderingObj.specificRenderingTemplates, retrieveHeader );\n            if( isHeaderTrue === true && retrieveHeader === true || isCellTrue === true && retrieveHeader === false ) {\n                return true;\n            }\n        }\n\n        if( _defaultRenderingTemplates[ gridid ] ) {\n            if( _defaultRenderingTemplates[ gridid ].isHeaderTemplate === true && retrieveHeader === true || _defaultRenderingTemplates[ gridid ].isCellTemplate === true && retrieveHeader ===\n                false ) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // Returns the correct property name\n    const getPropName = function( column, vmo, tableElem ) {\n        let propName = column.field;\n        if( tableElem._tableInstance.gridOptions.transpose === true ) {\n            propName = vmo.props.transposedColumnProperty.dbValue;\n        }\n        return propName;\n    };\n\n    var customCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var retrieveHeader = false;\n            var propName = getPropName( column, vmo, tableElem );\n            var colRenderTemplateDef = getColRendererTemplateToUse( propName, tableElem, retrieveHeader );\n            var containerElement = null;\n            if( !_.isEmpty( colRenderTemplateDef.template ) ) {\n                //Template processing -> No need for async processing..\n                containerElement = util.createElement( 'div', Const.CLASS_TABLE_CELL_TOP );\n                updateContainerWithCellTemplate( containerElement, vmo, column.field, colRenderTemplateDef.tooltip,\n                    colRenderTemplateDef.template, colRenderTemplateDef.template, colRenderTemplateDef.dependentServices, column, tableElem );\n            } else if( !_.isEmpty( colRenderTemplateDef.templateUrl ) ) {\n                //Async loading for template once template is loaded\n                containerElement = util.createElement( 'div', Const.CLASS_TABLE_CELL_TOP );\n                var templateUrl = awConfiguration.get( 'baseUrl' ) + colRenderTemplateDef.templateUrl;\n\n                var compiledTemplateFn = getCompiledFunctionFromCache( templateUrl, null );\n                if( compiledTemplateFn ) {\n                    //If compiled function already exists for templateUrl, return\n                    updateContainerWithCellTemplate( containerElement, vmo, column.field, colRenderTemplateDef.tooltip,\n                        templateUrl, '', colRenderTemplateDef.dependentServices, column, tableElem );\n                } else {\n                    loadTemplate( containerElement, vmo, templateUrl, colRenderTemplateDef.dependentServices ).then( function( response ) {\n                        updateContainerWithCellTemplate( response.containerElement, response.vmo, column.field, colRenderTemplateDef.tooltip,\n                            response.templateUrl, response.htmlString, response.dependentServices, column, tableElem );\n                    } );\n                }\n            } else if( !_.isEmpty( colRenderTemplateDef.renderFunction ) ) {\n                containerElement = util.createElement( 'div', Const.CLASS_TABLE_CELL_TOP );\n                var args = [ vmo, containerElement, column.field, colRenderTemplateDef.tooltip ];\n\n                /** revisitme Santhosh - The below methods to get and load dependent module has changed and both of them are same now.\n                 *  Now getDependentModule method returns a promise which is not the case in old afx.\n                 *  If the method implementations are changed again, we need to revert the code back to two method calls for get and load.\n                 * we need to understand what this cachedDep obj is really doing in terms of performance or if there is any other reason\n                 * and once we have that understanding, we need to add similar logic again.\n                 * */\n                /* var cachedDepModuleObj = getDependentModule( colRenderTemplateDef.deps );\n                if( !cachedDepModuleObj ) {\n                    loadDependentModule( colRenderTemplateDef.deps ).then( function( depModuleObj ) {\n                        depModuleObj[ colRenderTemplateDef.renderFunction ].apply( null, args );\n                        return containerElement;\n                    } );\n                } else {\n                    cachedDepModuleObj[ colRenderTemplateDef.renderFunction ].apply( null, args );\n                }*/\n\n                loadDependentModule( colRenderTemplateDef.deps ).then( function( depModuleObj ) {\n                    depModuleObj[ colRenderTemplateDef.renderFunction ].apply( null, args );\n                    //return containerElement;\n                } );\n            }\n            if( containerElement !== null ) {\n                containerElement.style.paddingLeft = Const.CUSTOM_CELL_LEFTPADDING_DEFAULT_SPACE + 'px';\n            }\n            return containerElement; // If container element is null, default rendering will happen\n        },\n        condition: function( column, vmo, tableElem ) {\n            var retrieveHeader = false;\n            var propName = column.field;\n\n            // If transpose, use the propName representing the vmo to apply the renderer across the row instead of column for transpose.\n            // Don't apply renderer for the first column in transpose since it represents the column property.\n            if( tableElem._tableInstance.gridOptions.transpose === true && column.field !== 'transposedColumnProperty' ) {\n                propName = vmo.props.transposedColumnProperty.dbValue;\n            }\n\n            if( column.enableRendererContribution && isGraphicalRenderrDefinedForProp( propName, tableElem.id, retrieveHeader ) ) {\n                //If propertyRenderer template defined for a given property, use it for rendering\n                return true;\n            }\n            return false;\n        }\n    };\n\n    var customCellHeaderRenderer = {\n        action: function( column, tableElem ) {\n            var retrieveHeader = true;\n            var colRenderTemplateDef = getColRendererTemplateToUse( column.field, tableElem, retrieveHeader );\n            var containerElement = null;\n            if( !_.isEmpty( colRenderTemplateDef.headerTemplate ) ) {\n                //Template processing -> No need for async processing..\n                containerElement = document.createElement( 'div' );\n                updateContainerWithCellTemplate( containerElement, null, column.field, colRenderTemplateDef.tooltip,\n                    colRenderTemplateDef.headerTemplate, colRenderTemplateDef.headerTemplate, colRenderTemplateDef.dependentServices, column, tableElem );\n            } else if( !_.isEmpty( colRenderTemplateDef.headerTemplateUrl ) ) {\n                //Async loading for template once template is loaded\n                containerElement = document.createElement( 'div' );\n                var templateUrl = awConfiguration.get( 'baseUrl' ) + colRenderTemplateDef.headerTemplateUrl;\n                var compiledTemplateFn = getCompiledFunctionFromCache( templateUrl, null );\n                if( compiledTemplateFn ) {\n                    //If compiled function already exists for templateUrl, return\n                    updateContainerWithCellTemplate( containerElement, null, column.field, colRenderTemplateDef.tooltip,\n                        templateUrl, '', colRenderTemplateDef.dependentServices, column, tableElem );\n                } else {\n                    loadTemplate( containerElement, null, templateUrl, colRenderTemplateDef.dependentServices ).then( function( response ) {\n                        updateContainerWithCellTemplate( response.containerElement, response.vmo, column.field, colRenderTemplateDef.tooltip,\n                            response.templateUrl, response.htmlString, response.dependentServices, column, tableElem );\n                    } );\n                }\n            } else if( !_.isEmpty( colRenderTemplateDef.headerRenderFunction ) ) {\n                containerElement = document.createElement( 'div' );\n                var args = [ containerElement, column.field, colRenderTemplateDef.tooltip, column ];\n                /** revisitme Santhosh - The below methods to get and load dependent module has changed and both of them are same now.\n                 *  Now getDependentModule method returns a promise which is not the case in old afx.\n                 *  If the method implementations are changed again, we need to revert the code back to two method calls for get and load.\n                 * we need to understand what this cachedDep obj is really doing in terms of performance or if there is any other reason\n                 * and once we have that understanding, we need to add similar logic again.\n                 * */\n                /*  var cachedDepModuleObj = getDependentModule( colRenderTemplateDef.deps );\n                if( !cachedDepModuleObj ) {\n                    loadDependentModule( colRenderTemplateDef.deps ).then( function( depModuleObj ) {\n                        depModuleObj[ colRenderTemplateDef.headerRenderFunction ].apply( null, args );\n                        return containerElement;\n                    } );\n                } else {\n                    cachedDepModuleObj[ colRenderTemplateDef.headerRenderFunction ].apply( null, args );\n                } */\n                loadDependentModule( colRenderTemplateDef.deps ).then( function( depModuleObj ) {\n                    depModuleObj[ colRenderTemplateDef.headerRenderFunction ].apply( null, args );\n                } );\n            } else if( !_.isEmpty( colRenderTemplateDef.headerComponent ) ) {\n                var vmo = {};\n                containerElement = document.createElement( 'div', Const.CLASS_TABLE_CELL_TOP );\n                createInlineComponent( colRenderTemplateDef.headerComponent, containerElement, vmo, column );\n            }\n            return containerElement; // If container element is null, default rendering will happen\n        },\n        condition: function( column, tableElem ) {\n            var retrieveHeader = true;\n            if( column.enableRendererContribution && isGraphicalRenderrDefinedForProp( column.field, tableElem.id, retrieveHeader ) ) {\n                //If propertyRenderer template defined for a given property, use it for rendering\n                return true;\n            }\n            return false;\n        }\n    };\n\n    /**\n     * Rich Text Field\n     */\n    var richTextCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var prop = vmo.props[ column.field ];\n            var newValues = getNewValues( prop );\n            var oldValues = getOldValues( prop );\n\n            var cellTop = util.createElement( 'ul', Const.CLASS_TABLE_NON_EDIT_CELL_LIST, Const.CLASS_TABLE_CELL_TOP );\n            if( tableElem && tableElem._tableInstance.dynamicRowHeightStatus ) {\n                cellTop.classList.add( Const.CLASS_TABLE_CELL_TOP_DYNAMIC );\n            }\n\n            // Add tooltip\n            if( newValues.length > 0 ) {\n                var tooltipHTML = getTooltipHTML( newValues );\n                addTooltipListeners( cellTop, tooltipHTML, tableElem );\n            }\n\n            while( newValues.length > 0 || oldValues.length > 0 ) {\n                var liElement = util.createElement( 'li', Const.CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM );\n                liElement.style.width = '100%';\n\n                var rtfContainer;\n                var newValue = newValues.shift();\n                var oldValue = oldValues.shift();\n\n                if( newValue ) {\n                    if( oldValue ) {\n                        rtfContainer = util.createElement( 'div', Const.CLASS_TABLE_RTF_CELL_ITEM, Const.CLASS_AW_CHANGED_TEXT );\n                    } else {\n                        rtfContainer = util.createElement( 'div', Const.CLASS_TABLE_RTF_CELL_ITEM );\n                    }\n                    rtfContainer.innerHTML = exports.addHighlights( newValue );\n                    liElement.appendChild( rtfContainer );\n                }\n\n                if( hasOldValue( oldValue, prop.oldValue ) ) {\n                    var oldCellTextElement = util.createElement( 'div', Const.CLASS_AW_OLD_TEXT );\n                    oldCellTextElement.innerHTML = exports.addHighlights( oldValue );\n                    liElement.appendChild( oldCellTextElement );\n                }\n\n                // NOTE: For Firefox there is a limitation that the vertical scroll bar is not show up,\n                // because of issue below:\n                // https://stackoverflow.com/questions/28636832/firefox-overflow-y-not-working-with-nested-flexbox\n                // there is a workaround by using { min-height: 0 }, I have not tested it yet and no plan to fix it\n                // now.\n                // It is not only an RTF issue, same problem for string list and object list\n\n                // Dynamic styling for RTF\n                if( rtfContainer && rtfContainer.childElementCount > 1 && newValues.length === 1 ) {\n                    liElement.style.height = '100%';\n                }\n                cellTop.appendChild( liElement );\n            }\n\n            return cellTop;\n        },\n        condition: function( column, vmo, tableElem, rowElem ) {\n            return vmo.props &&\n                vmo.props[ column.field ] &&\n                vmo.props[ column.field ].isRichText;\n        }\n    };\n\n    /**\n     * Plain Text\n     */\n    var simpleTextCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var prop = vmo.props[ column.field ];\n            var dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n            var cellTop = util.createElement( 'div', Const.CLASS_TABLE_CELL_TOP );\n            if( dynamicRowHeightEnabled ) {\n                cellTop.classList.add( Const.CLASS_TABLE_CELL_TOP_DYNAMIC );\n            }\n\n            if( prop.uiValue ) {\n                var gridCellText = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_CELL_TEXT );\n                if( dynamicRowHeightEnabled ) {\n                    gridCellText.classList.add( Const.CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC );\n                }\n                cellTop.title = prop.uiValue;\n                var parsedValue = sanitizer.htmlEscapeAllowEntities( prop.uiValue, true, true );\n\n                if( ( column.isTableCommand || column.isTreeNavigation ) && clickableTitleService.hasClickableCellTitleActions() ) {\n                    addClickableCellTitle( gridCellText, vmo, parsedValue, tableElem );\n                } else {\n                    gridCellText.innerHTML = exports.addHighlights( parsedValue );\n                }\n                cellTop.appendChild( gridCellText );\n            }\n\n            return cellTop;\n        },\n        condition: function( column, vmo, tableElem, rowElem ) {\n            return vmo.props &&\n                vmo.props[ column.field ] &&\n                !vmo.props[ column.field ].isRichText &&\n                !vmo.props[ column.field ].oldValue &&\n                !vmo.props[ column.field ].isArray;\n        }\n    };\n\n    var plainTextCellRenderer = {\n        action: function( column, vmo, tableElem, rowElem ) {\n            var prop = vmo.props[ column.field ];\n            var newValues = getNewValues( prop );\n            var oldValues = getOldValues( prop );\n\n            var dynamicRowHeightEnabled = tableElem && tableElem._tableInstance.dynamicRowHeightStatus;\n\n            var ulElement = util.createElement( 'ul', Const.CLASS_TABLE_NON_EDIT_CELL_LIST, Const.CLASS_TABLE_CELL_TOP );\n            if( dynamicRowHeightEnabled ) {\n                ulElement.classList.add( Const.CLASS_TABLE_CELL_TOP_DYNAMIC );\n            }\n\n            // Add tooltip\n            if( prop.isArray ) {\n                if( newValues.length > 0 ) {\n                    var tooltipHTML = getTooltipHTML( newValues );\n                    addTooltipListeners( ulElement, tooltipHTML, tableElem );\n                }\n            } else {\n                ulElement.title = prop.uiValue;\n            }\n\n            while( newValues.length > 0 || oldValues.length > 0 ) {\n                var liElement = util.createElement( 'li', Const.CLASS_TABLE_NON_EDIT_CELL_LIST_ITEM );\n                var newValue = newValues.shift();\n                var oldValue = oldValues.shift();\n                var textElem;\n\n                if( newValue ) {\n                    if( hasOldValue( oldValue, prop.oldValue ) ) {\n                        textElem = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_CELL_TEXT, Const.CLASS_AW_CHANGED_TEXT );\n                    } else {\n                        textElem = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_CELL_TEXT );\n                    }\n\n                    var parsedValue = sanitizer.htmlEscapeAllowEntities( newValue, true, true );\n                    textElem.innerHTML = exports.addHighlights( parsedValue );\n                    if( dynamicRowHeightEnabled ) {\n                        textElem.classList.add( Const.CLASS_WIDGET_TABLE_CELL_TEXT_DYNAMIC );\n                    }\n                    liElement.appendChild( textElem );\n                }\n\n                if( oldValue ) {\n                    var oldCellTextElement = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_CELL_TEXT, Const.CLASS_AW_OLD_TEXT );\n                    oldCellTextElement.innerHTML = exports.addHighlights( oldValue );\n                    liElement.appendChild( oldCellTextElement );\n                }\n                ulElement.appendChild( liElement );\n            }\n\n            return ulElement;\n        },\n        condition: function( column, vmo, tableElem, rowElem ) {\n            return vmo.props && vmo.props[ column.field ] &&\n                !vmo.props[ column.field ].isRichText &&\n                ( vmo.props[ column.field ].isArray ||\n                    vmo.props[ column.field ].oldValue );\n        }\n    };\n\n    var headerCellRenderer = {\n        action: function( column ) {\n            var labelElem = document.createElement( 'div' );\n            labelElem.classList.add( Const.CLASS_HEADER_CELL_LABEL );\n            labelElem.textContent = column.displayName;\n            return labelElem;\n        },\n        condition: function() {\n            return true;\n        }\n    };\n\n    var headerIconCellRenderer = {\n        action: function( column ) {\n            let cellContent = document.createElement( 'div' );\n            let imgContainer = util.createElement( 'div', Const.CLASS_HEADER_ICON_CONTAINER );\n            var cellImg = util.createElement( 'img', Const.CLASS_HEADER_ICON );\n            cellImg.src = util.getImgURL( column.vmo );\n            cellImg.alt = getImageAltText( column.vmo );\n            imgContainer.appendChild( cellImg );\n            cellContent.appendChild( imgContainer );\n            cellContent.appendChild( headerCellRenderer.action( column ) );\n            return cellContent;\n        },\n        condition: function( column, tableElem ) {\n            return tableElem._tableInstance.gridOptions.enableHeaderIcon === true && column.field !== 'transposedColumnProperty';\n        }\n    };\n\n    /**\n     * exposed method\n     */\n    _renderer.resetHoverCommandElement = function() {\n        if( _cellCmdElem && _cellCmdElem.parentElement ) {\n            util.cleanupComponents( _cellCmdElem.parentElement );\n            if( _cellCmdElem.parentElement ) {\n                _cellCmdElem.parentElement.removeChild( _cellCmdElem );\n            }\n        }\n    };\n\n    _renderer.destroyHoverCommandElement = function() {\n        if( _cellCmdElem && _cellCmdElem.parentElement ) {\n            util.cleanupComponents( _cellCmdElem.parentElement );\n            if( _cellCmdElem.parentElement ) {\n                _cellCmdElem.parentElement.removeChild( _cellCmdElem );\n            }\n            util.destroyElement( _cellCmdElem );\n        }\n        _cellCmdElem = null;\n    };\n\n    _renderer.getAwCellRenderers = function() {\n        // NOTE: If the condition is not isolated, then the sequence matters.\n        // Decorator renderers should be first in the array since they will call\n        // Cell.createElement to get cell content provided by the next valid renderer.\n        return [\n            commandCellRenderer,\n            customCellRenderer,\n            iconCellRenderer,\n            transposeIconCellRenderer,\n            treeTableCellRenderer,\n            objectCellRenderer,\n            simpleTextCellRenderer,\n            plainTextCellRenderer,\n            richTextCellRenderer\n        ];\n    };\n\n    _renderer.getAwHeaderRenderers = function() {\n        return [\n            customCellHeaderRenderer,\n            headerIconCellRenderer,\n            headerCellRenderer\n        ];\n    };\n\n    return _renderer;\n};\n/**\n * Check if old value is available or not\n * @param  old value\n * @param old value of prop\n * @return boolean True/False\n */\nfunction hasOldValue( oldValue, propOldValue ) {\n    return oldValue || !_.isUndefined( propOldValue );\n}\n\n// cleanup global variables.\nexport let cleanup = function() {\n    if( _propVsRenderingTemplate ) {\n        _propVsRenderingTemplate = null;\n    }\n    if( _defaultRenderingTemplates ) {\n        _defaultRenderingTemplates = {};\n    }\n};\n\nexports = {\n    createCellCommandElement,\n    createTreeCellCommandElement,\n    createCheckMarkElement,\n    addHighlights,\n    createCellRenderer,\n    cleanup\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}