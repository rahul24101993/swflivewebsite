{"ast":null,"code":"// Copyright (c) 2021 Siemens\nimport _ from 'lodash';\nimport Debug from 'debug';\nimport { DerivedStateResult } from 'js/derivedContextService';\nimport viewModeService from 'js/viewMode.service';\nconst trace = new Debug('selection');\n\nconst updateGlobalSelections = (parentSelectionData, selectionInfo) => {\n  parentSelectionData && parentSelectionData.update(selectionInfo);\n};\n\nconst handlePrimarySelectionChange = (localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelectionModel) => {\n  let selectionInfo = {\n    selected: [],\n    pselected: undefined,\n    source: undefined\n  };\n\n  if (localSelectionData.selected && localSelectionData.selected.length > 0) {\n    selectionInfo.selected = localSelectionData.selected;\n    selectionInfo.pselected = baseSelection || undefined;\n    selectionInfo.source = localSelectionData.source;\n  } else if (baseSelection) {\n    selectionInfo.selected = [baseSelection];\n    selectionInfo.pselected = baseSelection;\n    selectionInfo.source = 'base';\n  }\n\n  updateGlobalSelections(parentSelectionData, selectionInfo);\n  dispatch && dispatch({\n    path: 'data.primarySelection',\n    value: localSelectionData.selected\n  });\n\n  if (!primarySelectionModel.isSelectionModelActivated()) {\n    primarySelectionModel.setSelectionModelActivated(true);\n  }\n};\n\nconst handleSecondarySelectionChange = (localSelectionData, baseSelection, parentSelectionData, primarySelection, primarySelectionModel) => {\n  let selectionInfo = {\n    selected: [],\n    pselected: undefined,\n    source: undefined\n  };\n\n  if (localSelectionData.selected && localSelectionData.selected.length > 0) {\n    const parentSelection = primarySelection && primarySelection.length === 1 ? primarySelection : [baseSelection];\n    selectionInfo.selected = localSelectionData.selected;\n    selectionInfo.pselected = parentSelection[0];\n    selectionInfo.source = localSelectionData.source;\n    selectionInfo.relationInfo = localSelectionData.relationInfo;\n    primarySelectionModel.setSelectionModelActivated(false);\n  } else if (primarySelection && primarySelection.length) {\n    selectionInfo.selected = primarySelection;\n    selectionInfo.pselected = baseSelection;\n    selectionInfo.source = 'primary';\n    primarySelectionModel.setSelectionModelActivated(true);\n  } else if (baseSelection) {\n    selectionInfo.selected = [baseSelection];\n    selectionInfo.pselected = baseSelection;\n    selectionInfo.source = 'base';\n  }\n\n  updateGlobalSelections(parentSelectionData, selectionInfo);\n};\n\nexport const defaultSelectionChangeHandler = (localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelection, sublocationState, primarySelectionModel) => {\n  if (localSelectionData && localSelectionData.selected) {\n    if (localSelectionData.source === 'primary') {\n      handlePrimarySelectionChange(localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelectionModel);\n    } else if (localSelectionData.source === 'secondary') {\n      handleSecondarySelectionChange(localSelectionData, baseSelection, parentSelectionData, primarySelection, primarySelectionModel);\n    }\n\n    if (sublocationState && (!sublocationState.focusComponent || sublocationState.focusComponent !== localSelectionData.source)) {\n      sublocationState.update({ ...sublocationState.value,\n        focusComponent: localSelectionData.source\n      });\n    }\n\n    trace('AwWorkarea selectionData: ', localSelectionData);\n  }\n};\nexport const handleSelectionChange = (localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelection, sublocationState, parentPWASelectionModel, localPWASelectionModel) => {\n  if (!_.isEmpty(localSelectionData)) {\n    defaultSelectionChangeHandler(localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelection, sublocationState, parentPWASelectionModel || localPWASelectionModel);\n  }\n};\nexport const getContext = (vmDef, props) => {\n  return [new DerivedStateResult({\n    ctxParameters: [],\n    additionalParameters: [props.subPanelContext, props.baseSelection],\n    compute: () => {\n      return { ...props.subPanelContext,\n        baseSelection: props.baseSelection\n      };\n    }\n  })];\n};\nexport const cleanupViewModeData = () => {\n  viewModeService.changeViewMode('None');\n  viewModeService.setAvailableViewModes([]);\n};","map":{"version":3,"names":["_","Debug","DerivedStateResult","viewModeService","trace","updateGlobalSelections","parentSelectionData","selectionInfo","update","handlePrimarySelectionChange","localSelectionData","baseSelection","dispatch","primarySelectionModel","selected","pselected","undefined","source","length","path","value","isSelectionModelActivated","setSelectionModelActivated","handleSecondarySelectionChange","primarySelection","parentSelection","relationInfo","defaultSelectionChangeHandler","sublocationState","focusComponent","handleSelectionChange","parentPWASelectionModel","localPWASelectionModel","isEmpty","getContext","vmDef","props","ctxParameters","additionalParameters","subPanelContext","compute","cleanupViewModeData","changeViewMode","setAvailableViewModes"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pagelevelcomponents/src/js/AwWorkareaService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport _ from 'lodash';\nimport Debug from 'debug';\nimport { DerivedStateResult } from 'js/derivedContextService';\nimport viewModeService from 'js/viewMode.service';\n\nconst trace = new Debug( 'selection' );\n\nconst updateGlobalSelections = ( parentSelectionData, selectionInfo ) => {\n    parentSelectionData && parentSelectionData.update( selectionInfo );\n};\n\nconst handlePrimarySelectionChange = ( localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelectionModel ) => {\n    let selectionInfo = { selected: [], pselected: undefined, source: undefined };\n    if( localSelectionData.selected && localSelectionData.selected.length > 0 ) {\n        selectionInfo.selected = localSelectionData.selected;\n        selectionInfo.pselected = baseSelection || undefined;\n        selectionInfo.source = localSelectionData.source;\n    } else if( baseSelection ) {\n        selectionInfo.selected = [ baseSelection ];\n        selectionInfo.pselected = baseSelection;\n        selectionInfo.source = 'base';\n    }\n    updateGlobalSelections( parentSelectionData, selectionInfo );\n    dispatch && dispatch( { path: 'data.primarySelection', value: localSelectionData.selected } );\n    if( !primarySelectionModel.isSelectionModelActivated() ) {\n        primarySelectionModel.setSelectionModelActivated( true );\n    }\n};\n\nconst handleSecondarySelectionChange = ( localSelectionData, baseSelection, parentSelectionData, primarySelection, primarySelectionModel ) => {\n    let selectionInfo = { selected: [], pselected: undefined, source: undefined };\n    if( localSelectionData.selected && localSelectionData.selected.length > 0 ) {\n        const parentSelection = primarySelection && primarySelection.length === 1 ? primarySelection : [ baseSelection ];\n        selectionInfo.selected = localSelectionData.selected;\n        selectionInfo.pselected = parentSelection[ 0 ];\n        selectionInfo.source = localSelectionData.source;\n        selectionInfo.relationInfo = localSelectionData.relationInfo;\n        primarySelectionModel.setSelectionModelActivated( false );\n    } else if( primarySelection && primarySelection.length ) {\n        selectionInfo.selected = primarySelection;\n        selectionInfo.pselected = baseSelection;\n        selectionInfo.source = 'primary';\n        primarySelectionModel.setSelectionModelActivated( true );\n    } else if( baseSelection ) {\n        selectionInfo.selected = [ baseSelection ];\n        selectionInfo.pselected = baseSelection;\n        selectionInfo.source = 'base';\n    }\n    updateGlobalSelections( parentSelectionData, selectionInfo );\n};\n\nexport const defaultSelectionChangeHandler = ( localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelection, sublocationState, primarySelectionModel ) => {\n    if( localSelectionData && localSelectionData.selected ) {\n        if( localSelectionData.source === 'primary' ) {\n            handlePrimarySelectionChange( localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelectionModel );\n        } else if( localSelectionData.source === 'secondary' ) {\n            handleSecondarySelectionChange( localSelectionData, baseSelection, parentSelectionData, primarySelection, primarySelectionModel );\n        }\n        if( sublocationState && ( !sublocationState.focusComponent || sublocationState.focusComponent !== localSelectionData.source ) ) {\n            sublocationState.update( { ...sublocationState.value, focusComponent: localSelectionData.source } );\n        }\n        trace( 'AwWorkarea selectionData: ', localSelectionData );\n    }\n};\n\nexport const handleSelectionChange = ( localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelection, sublocationState, parentPWASelectionModel, localPWASelectionModel ) => {\n    if( !_.isEmpty( localSelectionData ) ) {\n        defaultSelectionChangeHandler( localSelectionData, baseSelection, parentSelectionData, dispatch, primarySelection, sublocationState, parentPWASelectionModel || localPWASelectionModel );\n    }\n};\n\nexport const getContext = ( vmDef, props ) => {\n    return [ new DerivedStateResult( {\n        ctxParameters: [],\n        additionalParameters: [ props.subPanelContext, props.baseSelection ],\n        compute: () => {\n            return {\n                ...props.subPanelContext,\n                baseSelection: props.baseSelection\n            };\n        }\n    } ) ];\n};\n\nexport const cleanupViewModeData = () => {\n    viewModeService.changeViewMode( 'None' );\n    viewModeService.setAvailableViewModes( [] );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}