{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/**\n * Used for handling PL Table menus\n *\n * @module js/splmTableMenuService\n *\n */import _ from'lodash';import eventBus from'js/eventBus';import wcagService from'js/wcagService';import appCtxService from'js/appCtxService';import{svgString as cmdSettings}from\"image/cmdSettings24.svg\";import Trv from'js/splmTableTraversal';import util from'js/splmTableUtils';import Const from'js/splmTableConstants';var SPLMTableMenuService=function(table,directiveElement,tableInstance,gridContextDispatcher){var self=this;var _table=table;var _tableInstance=tableInstance;var _dataProvider=_tableInstance.dataProvider;var _gridOptions=_tableInstance.gridOptions;var _splmTableMessages=_tableInstance.messages;var _trv=new Trv(table);var _keyboardService=tableInstance.keyboardService;var _selectionHelper=null;var _columnMenuSubscriptions=[];// Add menu service to table instance\n_tableInstance.menuService=self;const focusElementOnClose=function(focusElem,isEditDisable){setTimeout(function(){const isDisabledDuringEdit=isEditDisable&&util.isBulkEditing(_table);if(focusElem&&document.activeElement&&document.activeElement.tagName==='BODY'&&!isDisabledDuringEdit){focusElem.focus();}},150);};var loadGridMenuItems=function(){var settingsCommandElement=_table.getElementsByClassName('aw-splm-tableMenuButton')[0];var loadGridMenu=function(event,focusOnCloseElem){gridContextDispatcher({type:'UPDATE_VALUES',isBulkEditing:_tableInstance.isBulkEditing,dynamicRowHeightStatus:_tableInstance.dynamicRowHeightStatus});event.preventDefault();let gridMenuPopup=_gridOptions.popupContext.gridMenuPopup;if(gridMenuPopup){if(!self.gridMenuPopupRef){const popupOptions={forceCloseOthers:false,whenParentScrolls:'close',reference:settingsCommandElement,placement:'bottom-end',hasArrow:true,autoFocus:true,innerClassName:'aw-popup-gridMenu',padding:{x:4,y:4},hooks:{whenClosed:()=>{self.gridMenuPopupRef=null;focusElementOnClose(focusOnCloseElem);}}};gridMenuPopup.show(popupOptions).then(popupRef=>{self.gridMenuPopupRef=popupRef;});}else{self.ensureTableMenuDismissed();}}};settingsCommandElement.addEventListener('click',loadGridMenu);settingsCommandElement.addEventListener('keydown',function(event){if(wcagService.isValidKeyPress(event)){loadGridMenu(event,settingsCommandElement);}});};self.addGridMenu=function(){const localeGridMenuText=_splmTableMessages.gridMenu;const html=''+'<div class=\"aw-commands-svg\">'+'<button type=\"button\" class=\"aw-commands-commandIconButton icon-override\" tabindex=\"-1\" title=\"'+localeGridMenuText+'\" aria-label=\"'+localeGridMenuText+'\" >'+cmdSettings+'</button>'+'</div>';let menu=util.createElement('div','aw-splm-tableMenuButton');menu.innerHTML=html;let btn=menu.querySelector('button');_keyboardService.setOnFocusAndBlur(btn);_table.insertBefore(menu,_table.children[0]);loadGridMenuItems();};// ////////////////////////////////////////////////\n// Context Menu\n// ////////////////////////////////////////////////\nvar _handleContextMenuSingleSelect=function(rowVmoArray,selectionModel,event,dataProvider){var currentMode=selectionModel.mode;selectionModel.setMode('single');_selectionHelper.handleSelectionEvent(rowVmoArray,selectionModel,event,dataProvider);selectionModel.setMode(currentMode);};self.setContextSelectionHelper=function(selectionHelper){_selectionHelper=selectionHelper;};self.contextSelectionHandler=function(event){if(event.target.tagName.toLowerCase()==='a'&&event.target.href!==''){return;}if(_gridOptions.showContextMenu!==true){return;}event.preventDefault();event.cancelBubble=true;let focusOnCloseElem=util.closestElement(event.target,'.'+Const.CLASS_CELL);let contextMenuPopup=_gridOptions.popupContext.contextMenuPopup;if(contextMenuPopup){const popupOptions={whenParentScrolls:'close',resizeToClose:true,targetEvent:event,reference:event.target,autoFocus:true,forceCloseOthers:false,hooks:{whenClosed:()=>{focusElementOnClose(focusOnCloseElem,true);}}};//Hiding a popup before showing it in order to re-position it on selected vmo.\ncontextMenuPopup.hide().then(()=>{contextMenuPopup.show(popupOptions);});}var rowElement=event.currentTarget;let rowVmoArray=[rowElement.vmo];gridContextDispatcher({type:'UPDATE_VALUES',contextVmo:rowVmoArray});/* if (right or left) click inside row we already have selected, we dont want to do another SOA call since commands already loaded,\n        just move panel with to mouse location */if(rowElement.classList.contains('aw-state-selected')||rowElement.classList.contains('ui-grid-row-selected')){return;}while(_table.getElementsByClassName('aw-state-selected').length>0){_table.getElementsByClassName('aw-state-selected')[0].classList.remove('aw-state-selected');_table.getElementsByClassName('ui-grid-row-selected')[0].classList.remove('ui-grid-row-selected');}var selectionModel=_dataProvider.selectionModel;_handleContextMenuSingleSelect(rowVmoArray,selectionModel,event);};var getLargestFrozenColumnIndex=function(columns){var largestFrozenIndex=0;for(var i=0;i<columns.length;i++){// Check if frozen and for index of frozen column\nif(columns[i].index>largestFrozenIndex&&columns[i].pinnedLeft){largestFrozenIndex=columns[i].index;}}return largestFrozenIndex;};self.loadDefaultColumnMenus=function(){// Make default frozen column the highest index that is pinnedLeft from column config\n// Or default to 0/1 depending on icon column\nvar columns=_dataProvider.cols;var largestFrozenIndex=getLargestFrozenColumnIndex(columns);// Set default frozen index to 1 or 0 based on if icon column is present\nvar defaultFrozenIndex=_gridOptions.addIconColumn?1:0;// Use pinnedLeft if provided\nif(largestFrozenIndex>0){defaultFrozenIndex=largestFrozenIndex;}if(gridContextDispatcher){gridContextDispatcher({type:'UPDATE_VALUES',defaultColumnPinIndex:defaultFrozenIndex});}};self.ensureAllTableMenusDismissed=function(){self.ensureColumnMenuDismissed();self.ensureTableMenuDismissed();};self.ensureTableMenuDismissed=function(){self.gridMenuPopupRef&&_gridOptions.popupContext.gridMenuPopup.hide();self.gridMenuPopupRef=null;};// ////////////////////////////////////////////////\n// Column Menu\n// ////////////////////////////////////////////////\nself.ensureColumnMenuDismissed=function(){self.columnMenuPopupRef&&_gridOptions.popupContext.columnMenuPopup.hide();self.columnMenuPopupRef=null;};self.createColumnMenuElement=function(){var menu=document.createElement('div');menu.id=_table.id+'_menu';menu.classList.add(Const.CLASS_TABLE_MENU);menu.classList.add(Const.CLASS_TABLE_MENU_POPUP);menu.setAttribute('role','menu');var menuContainer=document.createElement('div');menuContainer.id=_table.id+'_menuContainer';menuContainer.classList.add(Const.CLASS_TABLE_MENU_CONTAINER);// since this is inserted into the DOM outside of the content area, need to re-apply the content class\nmenuContainer.classList.add('afx-content-background');menuContainer.classList.add('aw-widgets-groupCommandStack');menuContainer.appendChild(menu);return menuContainer;};self.menuElements=[];const isTargetPopupOpen=function(target){return target&&target.dataset&&target.dataset.popupId&&target.dataset.popupId!=='null';};const showColumnMenuPopup=function(target,menuContainer,isFocused,focusOnClose){const getPadding=()=>{// getCellCenter\nconst cell=target;const{width,height}=cell.getBoundingClientRect();return{x:-width/2,y:-height/2};};let columnMenuPopup=_gridOptions.popupContext.columnMenuPopup;if(columnMenuPopup){const popupOptions={whenParentScrolls:'close',ignoreReferenceClick:true,ignoreClicksFrom:['.flatpickr-calendar'],reference:target,placement:'right',adaptiveShift:true,autoFocus:true,selectedElementCSS:'.aw-state-selected',innerClassName:'sw-table-menu-tooltip',// Passing placeholder class for table menu tooltip, if any styling is required in the future, this class can be used\nhasArrow:true,forceCloseOthers:false,padding:getPadding(),width:'185px',arrowOptions:{alignment:'center',offset:5,shift:15},hooks:{whenClosed:()=>{appCtxService.unRegisterCtx('columnMenuContext');if(_columnMenuSubscriptions.length){_.forEach(_columnMenuSubscriptions,function(subscription){eventBus.unsubscribe(subscription);});_columnMenuSubscriptions.length=0;}focusElementOnClose(focusOnClose);}}};appCtxService.registerCtx('columnMenuContext',{});columnMenuPopup.hide().then(()=>{columnMenuPopup.show(popupOptions).then(popupRef=>{self.columnMenuPopupRef=popupRef;gridContextDispatcher({type:'UPDATE_VALUES',popupRef:popupRef});});});}};const isColumnMenuDisabled=function(columnDef){return util.isBulkEditing(_table)||columnDef.enableColumnMenu===false||util.isCellEditing(_table);};self.columnMenuHandler=function(columnElem,isFocused){var columnDef=columnElem.columnDef;return function(event){if(isColumnMenuDisabled(columnDef)){return;}event.preventDefault();const menuContainer=util.closestElement(_table,'.'+Const.CLASS_TABLE_MENU_CONTAINER);if(isTargetPopupOpen(event.currentTarget)&&self.columnMenuPopupRef){self.ensureColumnMenuDismissed();}else{showColumnMenuPopup(event.currentTarget,menuContainer,isFocused,columnElem.parentElement);tableInstance.columnMenuLoaded=true;}};};self.setFilterDisability=function(isDisabled){var tableMenuElem=_trv.queryTableMenu(_table.id).getElement();var filterButtonElement=tableMenuElem.getElementsByClassName('filter-button')[0];if(filterButtonElement){if(isDisabled){filterButtonElement.classList.add('disabled');}else{filterButtonElement.classList.remove('disabled');}}};return self;};export default SPLMTableMenuService;","map":null,"metadata":{},"sourceType":"module"}