{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\viewmodel\\\\AwWorkareaTitleViewModel.json\";\n// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwDefaultBreadcrumb from 'viewmodel/AwDefaultBreadcrumbViewModel';\nimport AwNavigateBreadcrumb from 'viewmodel/AwNavigateBreadcrumbViewModel';\nimport { ExistWhen } from 'js/hocCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwDefaultBreadcrumbExistWhen = ExistWhen(AwDefaultBreadcrumb);\n_c = AwDefaultBreadcrumbExistWhen;\nconst AwNavigateBreadcrumbExistWhen = ExistWhen(AwNavigateBreadcrumb);\n/*\nctx imports\n*/\n\n_c2 = AwNavigateBreadcrumbExistWhen;\nconst ctxImportObj = {};\n/*\nview model\n */\n\nconst declViewModelJson = {\n  \"schemaVersion\": \"1.0.0\",\n  \"actions\": {},\n  \"data\": {},\n  \"conditions\": {},\n  \"onEvent\": [],\n  \"lifecycleHooks\": {},\n  \"props\": {\n    \"breadcrumb-config\": {\n      \"type\": \"object\"\n    },\n    \"provider\": {\n      \"type\": \"object\"\n    }\n  },\n  \"_viewModelId\": \"AwWorkareaTitle\",\n  \"_uniqueViewModelId\": \"AwWorkareaTitle\",\n  \"ctx\": {}\n};\n/*\n<div class='aw-layout-workareaTitle aw-layout-justifyFlexStart'>\n    <aw-default-breadcrumb exist-when=\"props.breadcrumbConfig && props.breadcrumbConfig.type === undefined && props.breadcrumbConfig.noBreadCrumb !== true\" provider=\"props.provider\"></aw-default-breadcrumb>\n    <aw-navigate-breadcrumb exist-when=\"props.breadcrumbConfig && props.breadcrumbConfig.type === 'navigate'\" compact=\"true\" breadcrumb-config=\"props.breadcrumbConfig\"></aw-navigate-breadcrumb>\n</div>\n*/\n\nconst renderFn = props => {\n  let subPanelContext = props.subPanelContext;\n  let {\n    viewModel: {\n      data,\n      dataProviders,\n      dispatch,\n      conditions,\n      selectionModels,\n      editHandlers,\n      chartProviders,\n      ports\n    },\n    grids,\n    ctx,\n    actions,\n    fields,\n    messages,\n    i18n,\n    formProp,\n    viewPath\n  } = props;\n  data = { ...data,\n    dataProviders\n  };\n\n  if (subPanelContext && subPanelContext.fields) {\n    fields = { ...fields,\n      ...subPanelContext.fields\n    };\n  }\n\n  let $index = null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-layout-workareaTitle aw-layout-justifyFlexStart\",\n    children: [/*#__PURE__*/_jsxDEV(AwDefaultBreadcrumbExistWhen, {\n      provider: AwParseService.instance(\"props.provider\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      }),\n      existWhen: AwParseService.instance(\"props.breadcrumbConfig && props.breadcrumbConfig.type === undefined && props.breadcrumbConfig.noBreadCrumb !== true\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwNavigateBreadcrumbExistWhen, {\n      compact: \"true\",\n      \"breadcrumb-config\": \"props.breadcrumbConfig\",\n      existWhen: AwParseService.instance(\"props.breadcrumbConfig && props.breadcrumbConfig.type === 'navigate'\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }, this);\n};\n/*\ndefine component\n*/\n\n\nconst Component = createComponent(declViewModelJson, renderFn, undefined, ctxImportObj);\nexport default Component;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AwDefaultBreadcrumbExistWhen\");\n$RefreshReg$(_c2, \"AwNavigateBreadcrumbExistWhen\");","map":{"version":3,"names":["createComponent","registerDynImportEntry","AwParseService","AwFilterService","getField","Fragment","filterSer","instance","AwDefaultBreadcrumb","AwNavigateBreadcrumb","ExistWhen","AwDefaultBreadcrumbExistWhen","AwNavigateBreadcrumbExistWhen","ctxImportObj","declViewModelJson","renderFn","props","subPanelContext","viewModel","data","dataProviders","dispatch","conditions","selectionModels","editHandlers","chartProviders","ports","grids","ctx","actions","fields","messages","i18n","formProp","viewPath","$index","Component","undefined"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/viewmodel/AwWorkareaTitleViewModel.json"],"sourcesContent":["// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwDefaultBreadcrumb from 'viewmodel/AwDefaultBreadcrumbViewModel';\nimport AwNavigateBreadcrumb from 'viewmodel/AwNavigateBreadcrumbViewModel';\nimport { ExistWhen } from 'js/hocCollection';\nconst AwDefaultBreadcrumbExistWhen = ExistWhen(AwDefaultBreadcrumb);\nconst AwNavigateBreadcrumbExistWhen = ExistWhen(AwNavigateBreadcrumb);\n\n\n\n/*\nctx imports\n*/\n\nconst ctxImportObj = {  };\n\n\n\n\n/*\nview model\n */\nconst declViewModelJson = {\n    \"schemaVersion\": \"1.0.0\",\n    \"actions\": {},\n    \"data\": {},\n    \"conditions\": {},\n    \"onEvent\": [],\n    \"lifecycleHooks\": {},\n    \"props\": {\n        \"breadcrumb-config\": {\n            \"type\": \"object\"\n        },\n        \"provider\": {\n            \"type\": \"object\"\n        }\n    },\n    \"_viewModelId\": \"AwWorkareaTitle\",\n    \"_uniqueViewModelId\": \"AwWorkareaTitle\",\n    \"ctx\": {}\n};\n\n/*\n<div class='aw-layout-workareaTitle aw-layout-justifyFlexStart'>\n    <aw-default-breadcrumb exist-when=\"props.breadcrumbConfig && props.breadcrumbConfig.type === undefined && props.breadcrumbConfig.noBreadCrumb !== true\" provider=\"props.provider\"></aw-default-breadcrumb>\n    <aw-navigate-breadcrumb exist-when=\"props.breadcrumbConfig && props.breadcrumbConfig.type === 'navigate'\" compact=\"true\" breadcrumb-config=\"props.breadcrumbConfig\"></aw-navigate-breadcrumb>\n</div>\n*/\nconst renderFn =(props)=> {\n    let subPanelContext = props.subPanelContext ;\n    let { viewModel: { data, dataProviders, dispatch, conditions, selectionModels, editHandlers, chartProviders, ports  }, grids, ctx, actions, fields, messages, i18n, formProp, viewPath  } = props;\n    data = {...data, dataProviders};\n    if( subPanelContext && subPanelContext.fields ){\n        fields = { ...fields, ...subPanelContext.fields };\n    }\n    let $index = null;\n    return (\n            <div className=\"aw-layout-workareaTitle aw-layout-justifyFlexStart\">\n        <AwDefaultBreadcrumbExistWhen provider={AwParseService.instance( \"props.provider\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )} existWhen={AwParseService.instance( \"props.breadcrumbConfig && props.breadcrumbConfig.type === undefined && props.breadcrumbConfig.noBreadCrumb !== true\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )}>\n        </AwDefaultBreadcrumbExistWhen>\n        <AwNavigateBreadcrumbExistWhen compact=\"true\" breadcrumb-config=\"props.breadcrumbConfig\" existWhen={AwParseService.instance( \"props.breadcrumbConfig && props.breadcrumbConfig.type === 'navigate'\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )}>\n        </AwNavigateBreadcrumbExistWhen>\n    </div>\n    )\n};\n\n\n/*\ndefine component\n*/\nconst Component = createComponent( declViewModelJson, renderFn, undefined, ctxImportObj );\n\nexport default Component;"],"mappings":"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"},"metadata":{},"sourceType":"module"}