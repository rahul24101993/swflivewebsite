{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwClickableTitleService.js\";\nimport { noop } from 'js/declUtils';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport clickableTitleService from 'js/clickableTitleService';\nimport _ from 'lodash';\nimport { AwHighlightPropertyHtml, DisplayVal } from 'js/hocCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpanAwHighlightPropertyHtmlDisplayVal = DisplayVal(AwHighlightPropertyHtml('span'));\n/**\n * render function for AwClickableTitle\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\n_c = SpanAwHighlightPropertyHtmlDisplayVal;\nexport const awClickableTitleRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    runActionWithViewModel,\n    ...prop\n  } = props;\n  let {\n    cellTitleId,\n    source,\n    title,\n    vmo\n  } = props;\n  let commandContext = {\n    vmo: vmo\n  };\n  let isTitleClickable = clickableTitleService.hasClickableCellTitleActions();\n\n  const doIt = event => {\n    clickableTitleService.doIt(event, commandContext, runActionWithViewModel);\n  };\n\n  let titleClass = [];\n\n  switch (source) {\n    case 'table':\n      titleClass = ['aw-jswidgets-text'];\n      break;\n\n    case 'splmtable':\n      titleClass = ['aw-splm-tableCellText'];\n      break;\n\n    case 'tree':\n      titleClass = ['aw-jswidgets-dataGridCellText'];\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-base-normal\",\n    children: [isTitleClickable && source === 'list' && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: noop,\n      onClick: e => doIt(e),\n      \"data-locator\": \"aw-clickable-title\",\n      className: \"aw-widgets-cellListCellTitle aw-widgets-propertyValueLink aw-uiwidgets-cellClickableTitle\",\n      celltitleid: cellTitleId,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), // revisitme: include aw-highlight-property-html to <span> once the attribute directive is implemented using HOC\n    !isTitleClickable && source === 'list' && /*#__PURE__*/_jsxDEV(SpanAwHighlightPropertyHtmlDisplayVal, {\n      title: title,\n      className: \"aw-widgets-cellListCellTitle\",\n      celltitleid: cellTitleId,\n      awHighlightPropertyHtml: true,\n      displayVal: title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), isTitleClickable && ['table', 'splmtable', 'tree'].includes(source) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleClass,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-locator\": \"aw-clickable-title\",\n        className: \"aw-widgets-propertyValueLink aw-uiwidgets-clickableTitle\",\n        href: noop,\n        onClick: e => doIt(e),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), !isTitleClickable && source === 'table' && /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop,\n      inTableCell: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), !isTitleClickable && ['splmtable', 'tree'].includes(source) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleClass,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SpanAwHighlightPropertyHtmlDisplayVal\");","map":{"version":3,"names":["noop","AwPropertyNonEditVal","clickableTitleService","_","AwHighlightPropertyHtml","DisplayVal","SpanAwHighlightPropertyHtmlDisplayVal","awClickableTitleRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","runActionWithViewModel","prop","cellTitleId","source","title","vmo","commandContext","isTitleClickable","hasClickableCellTitleActions","doIt","event","titleClass","e","includes"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwClickableTitleService.js"],"sourcesContent":["import { noop } from 'js/declUtils';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport clickableTitleService from 'js/clickableTitleService';\nimport _ from 'lodash';\nimport { AwHighlightPropertyHtml, DisplayVal } from 'js/hocCollection';\n\nconst SpanAwHighlightPropertyHtmlDisplayVal = DisplayVal( AwHighlightPropertyHtml( 'span' ) );\n/**\n * render function for AwClickableTitle\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awClickableTitleRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        runActionWithViewModel,\n        ...prop\n    } = props;\n    let { cellTitleId, source, title, vmo } = props;\n    let commandContext = {\n        vmo: vmo\n    };\n    let isTitleClickable = clickableTitleService.hasClickableCellTitleActions();\n\n    const doIt = ( event ) => {\n        clickableTitleService.doIt( event, commandContext, runActionWithViewModel );\n    };\n\n    let titleClass = [];\n    switch ( source ) {\n        case 'table':\n            titleClass = [ 'aw-jswidgets-text' ];\n            break;\n        case 'splmtable':\n            titleClass = [ 'aw-splm-tableCellText' ];\n            break;\n        case 'tree':\n            titleClass = [ 'aw-jswidgets-dataGridCellText' ];\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className='aw-base-normal'>\n            {\n                isTitleClickable && source === 'list' &&\n                <a href={noop} onClick={( e )=> doIt( e )} data-locator='aw-clickable-title' className='aw-widgets-cellListCellTitle aw-widgets-propertyValueLink aw-uiwidgets-cellClickableTitle' celltitleid={cellTitleId}>\n                    {title}\n                </a>\n            }\n            {\n                // revisitme: include aw-highlight-property-html to <span> once the attribute directive is implemented using HOC\n                !isTitleClickable && source === 'list' &&\n                <SpanAwHighlightPropertyHtmlDisplayVal title={title} className='aw-widgets-cellListCellTitle' celltitleid={cellTitleId} awHighlightPropertyHtml displayVal={title}>\n                    { title }\n                </SpanAwHighlightPropertyHtmlDisplayVal>\n            }\n\n            {\n                isTitleClickable && [ 'table', 'splmtable', 'tree' ].includes( source ) &&\n                <div className={titleClass}>\n                    <a data-locator='aw-clickable-title' className='aw-widgets-propertyValueLink aw-uiwidgets-clickableTitle' href={noop} onClick={( e )=> doIt( e )}>{title}</a>\n                </div>\n            }\n            {\n                !isTitleClickable && source === 'table' &&\n                <AwPropertyNonEditVal {...prop} inTableCell='true'></AwPropertyNonEditVal>\n            }\n            {\n                !isTitleClickable && [ 'splmtable', 'tree' ].includes( source ) &&\n                <div className={titleClass}>{title}</div>\n            }\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}