{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n// Copyright (c) 2021 Siemens\n\n/**\n * @module js/dataProviderUtils\n */\nimport { useReducer, useEffect, useRef, useState } from 'react';\nimport _ from 'lodash';\nimport { useSelectionModel } from 'js/declSelectionModelFactory';\nimport declUtils from 'js/declUtils';\n\nconst pageReducer = (state, action) => {\n  const pageActionType = action.type;\n  let page = state.page || 0;\n\n  switch (pageActionType) {\n    case 'NEXT_PAGE':\n      page++;\n      break;\n\n    case 'PAGE_RESET':\n      page = action.page || 0;\n      break;\n\n    case 'PREVIOUS_PAGE':\n      page--;\n      break;\n\n    case 'FOCUS_PAGE':\n      if (_.has(action, page)) {\n        page = action.page;\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n\n  return { ...state,\n    pageActionType,\n    page\n  };\n};\n\nconst loadVMCollection = (state, action) => {\n  let newState = { ...state\n  };\n  newState.totalFound = action.totalFound && action.totalFound !== '' ? action.totalFound : action.viewModelObjects.length;\n  newState.vmCollection.setViewModelObjects(action.viewModelObjects);\n  newState.cursor.startIndex = newState.vmCollection.loadedVMObjects.length;\n\n  if (action.hasMoreValuesExist !== null) {\n    newState.cursor.endReached = !newState.hasMoreValuesExist;\n  } else {\n    newState.cursor.endReached = newState.totalFound <= newState.cursor.startIndex;\n  }\n\n  newState.focusing = false;\n  newState.dataLoaded = true;\n  return newState;\n};\n\nconst updateVMCollection = (state, action) => {\n  let newState = { ...state\n  };\n  newState.totalFound = action.totalFound && action.totalFound !== '' ? action.totalFound : action.viewModelObjects.length;\n  newState.hasMoreValuesExist = action.hasMoreValuesExist ? action.hasMoreValuesExist : null;\n\n  if (newState.totalFound > 0) {\n    newState.vmCollection.setTotalObjectsFound(action.totalFound);\n\n    if (action.pageObject.pageActionType === 'FOCUS_PAGE' || action.pageObject.pageActionType === 'PREVIOUS_PAGE' || action.pageObject.pageActionType === 'NEXT_PAGE') {\n      newState.vmCollection.setViewModelObjects(action.viewModelObjects);\n    } else {\n      newState.vmCollection.setViewModelObjects(newState.vmCollection.getLoadedViewModelObjects().concat(action.viewModelObjects));\n    }\n  } else if (action.hasMoreValuesExist !== null) {\n    newState.vmCollection.setViewModelObjects(action.viewModelObjects); //This is a NEXT_PAGE case\n  }\n\n  if (action.cursorObject) {\n    newState.cursor = action.cursorObject;\n  } else {\n    newState.cursor.startIndex = newState.vmCollection.loadedVMObjects.length;\n\n    if (action.hasMoreValuesExist !== null) {\n      newState.cursor.endReached = !newState.hasMoreValuesExist;\n    } else {\n      newState.cursor.endReached = newState.totalFound <= newState.cursor.startIndex;\n    }\n  }\n  /**\n    * Determine if the last node in the collection is an 'incompleteTail' because we know\n    * there are more found than currently loaded.\n    */\n\n\n  if (!_.isEmpty(newState.vmCollection.loadedVMObjects) && newState.vmCollection.totalFound > newState.vmCollection.getTotalUniqueObjectsLoaded()) {\n    _.last(newState.vmCollection.loadedVMObjects).incompleteTail = true;\n  }\n\n  newState.focusing = false;\n  newState.dataLoaded = true; // set preferredChoices on state obj\n\n  newState.preferredChoices = action.preferredChoices;\n  return newState;\n};\n\nconst resetVMCollection = state => {\n  let newState = { ...state\n  };\n  newState.cursor.startIndex = 0;\n  delete newState.totalFound;\n  newState.cursor.endReached = false;\n  newState.fetching = false;\n  newState.focusing = false;\n  newState.dataLoaded = false;\n  return newState;\n};\n\nconst vmCollectionReducer = (state, action) => {\n  switch (action.type) {\n    case 'COLLECTION_UPDATE':\n      // revisitme - needs to do concat here to make sure the whole state of vmCollection\n      // is managed here, not dataProvider object\n      return updateVMCollection(state, action);\n\n    case 'COLLECTION_RESET':\n      return resetVMCollection(state);\n\n    case 'IN_PROGRESS':\n      return { ...state,\n        fetching: action.fetching\n      };\n\n    case 'FOCUSING':\n      return { ...state,\n        focusing: action.focusing\n      };\n\n    case 'COLLECTION_REPLACE':\n      return loadVMCollection(state, action);\n\n    default:\n      return state;\n  }\n};\n\nconst usePagingObserver = dataProvider => {\n  _s();\n\n  let rootLevelRef = dataProvider.getRootReference(); // cursor hook\n\n  const [pageObject, pageDispatcher] = useReducer(pageReducer, {\n    // revisitme: move startIndex logic to here\n    page: 0\n  });\n  let containerElement;\n  let bottomAnchorElement;\n  let paginationOption = dataProvider.getPagination();\n\n  if (paginationOption) {\n    let bottomAnchorSelector = paginationOption.bottomAnchorSelector;\n    containerElement = rootLevelRef.current ? rootLevelRef.current : null;\n    bottomAnchorElement = rootLevelRef.current ? rootLevelRef.current.querySelector(bottomAnchorSelector) : null;\n  } // only trigger next page when previous REST call is done\n\n\n  const loadNextPage = () => {\n    if (!dataProvider.vmCollectionObj.fetching) {\n      pageDispatcher({\n        type: 'NEXT_PAGE'\n      });\n    }\n  };\n\n  let observer = useRef(null);\n  useEffect(() => {\n    // intersection observer needs both the container and the anchor element to work properly.\n    if (bottomAnchorElement && containerElement) {\n      const interSectionWatcher = entries => {\n        entries.forEach(en => {\n          if (en.intersectionRatio > 0) {\n            loadNextPage();\n          }\n        });\n      };\n\n      let options = {\n        root: containerElement,\n        rootMargin: '5px',\n        threshold: 1\n      };\n      observer.current = new IntersectionObserver(interSectionWatcher, options);\n      observer.current.observe(bottomAnchorElement);\n    }\n\n    return () => {\n      //zarq9k: need to destroy the observer to prevent leakage.\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [containerElement, bottomAnchorElement, rootLevelRef]); // if containerElement has no scroll yet, then we should auto load next page until scroll happened or endReached\n\n  useEffect(() => {\n    if (dataProvider.vmCollectionObj.cursor.endReached) {\n      return undefined;\n    }\n\n    if (containerElement && containerElement.clientHeight > 0 && containerElement.scrollHeight <= containerElement.clientHeight) {\n      loadNextPage();\n    }\n\n    return undefined;\n  }, [pageObject.page]); // , dataProvider.vmCollectionObj\n\n  return {\n    pageObject,\n    pageDispatcher\n  };\n};\n\n_s(usePagingObserver, \"I8BLwVyWOOSqvtCVR0fCdzuCw70=\");\n\nexport const useDataProvider = (dataProvider, getProps, dataCtxNode) => {\n  _s2();\n\n  const topLevelRef = useRef(null); // attaching a ref to each dataProvider, so that we can pass it to list.\n\n  dataProvider.setRootReference(topLevelRef);\n  const {\n    pageObject,\n    pageDispatcher\n  } = usePagingObserver(dataProvider);\n  const [vmCollectionObj, vmCollectionDispatcher] = useReducer(vmCollectionReducer, {\n    vmCollection: dataProvider.viewModelCollection,\n    totalFound: 0,\n    hasMoreValuesExist: null,\n    fetching: false,\n    dataLoaded: false,\n    preferredChoices: [],\n    cursor: {\n      startIndex: 0,\n      startReached: false,\n      endIndex: 0,\n      endReached: true\n    }\n  });\n\n  if (dataProvider.inputDataExpressions && dataProvider.inputDataExpressions.length > 0) {\n    updateInputDataOnDP(dataProvider, dataCtxNode);\n  }\n\n  dataProvider.setPropsCallback(getProps);\n  let inputSelectionModel = null;\n\n  if (dataProvider.json.inputData && dataProvider.json.inputData.selectionModel) {\n    inputSelectionModel = dataProvider.json.inputData.selectionModel;\n  }\n\n  const dataProviderJson = _.get(dataProvider, 'json');\n\n  const mode = dataProviderJson ? dataProviderJson.selectionModelMode : null;\n  const uwSelectionModel = useSelectionModel(mode, null, inputSelectionModel);\n\n  if (dataProvider.json.inputData && dataProvider.json.inputData.selectionData) {\n    uwSelectionModel.selectionData = dataProvider.json.inputData.selectionData;\n  }\n\n  const validSourceTypes = dataProvider.json.inputData ? dataProvider.json.inputData.validSourceTypes : null;\n\n  if (_.get(dataProvider, 'setValidSourceTypes')) {\n    dataProvider.setValidSourceTypes(validSourceTypes);\n  }\n\n  if (_.get(dataProvider, 'setSelectionModel')) {\n    dataProvider.setSelectionModel({\n      selectionModel: uwSelectionModel\n    });\n  }\n\n  if (_.get(dataProvider, 'setDataUpdater')) {\n    dataProvider.setDataUpdater(pageDispatcher, vmCollectionDispatcher);\n  }\n\n  useEffect(() => {\n    //Adding 'inputSelectionModel' check to limit registration of dp listener only for pwa usecase\n    //This can be removed if more such usecases are encountered\n    if (inputSelectionModel && inputSelectionModel.selectionData) {\n      uwSelectionModel.addRemoveDpListener && uwSelectionModel.addRemoveDpListener('add', dataProvider);\n    }\n\n    return () => {\n      uwSelectionModel.addRemoveDpListener('remove');\n    };\n  }, []);\n  useEffect(() => {\n    const totalFound = dataProvider.viewModelCollection.getTotalObjectsFound();\n    const totalUniqueLoaded = dataProvider.viewModelCollection.getTotalUniqueObjectsLoaded(); // revisitme - use this cursor in loadAction instead of using internal dataProvider.startIndex\n    //if( startIndex.current === 0 || startIndex.current < totalFound.current ) {\n\n    if (!vmCollectionObj.fetching && (!vmCollectionObj.cursor.endReached || vmCollectionObj.focusing === true || totalFound > totalUniqueLoaded)) {\n      vmCollectionDispatcher({\n        type: 'IN_PROGRESS',\n        fetching: true\n      });\n      dataProvider.loadAction(vmCollectionObj.vmCollection, vmCollectionObj.cursor.startIndex, pageObject);\n    }\n  }, [dataProvider, pageObject, pageDispatcher]); //DO not consider current selection until the data is available\n\n  let currentSelection = vmCollectionObj.dataLoaded ? uwSelectionModel.getSelection() : null;\n  useEffect(() => {\n    //sync the selectionModel only if there is data\n    //if there is no data this is a redundant operation\n    if (_.get(dataProvider, 'syncSelectionModel') && vmCollectionObj.dataLoaded) {\n      dataProvider.syncSelectionModel({\n        data: {}\n      }, currentSelection, uwSelectionModel.getLastSelection());\n    }\n  }, [currentSelection, dataProvider]);\n  return {\n    vmCollectionObj\n  };\n};\n\n_s2(useDataProvider, \"9wN2fGWJOIASPu7G1HDf51y5c6Q=\", false, function () {\n  return [usePagingObserver, useSelectionModel];\n});\n\nconst updateInputDataOnDP = (dataProvider, dataCtxNode) => {\n  let context = declUtils.getLatestContext(dataCtxNode, dataCtxNode.data);\n  dataProvider.inputDataExpressions.map(observer => {\n    dataProvider.json.inputData[Object.keys(observer)[0]] = _.get(context, Object.values(observer)[0]);\n  });\n};\n\nexport const useDataProviders = (dataProviders, getProps, dataCtxNode) => {\n  _s4();\n\n  var _s3 = $RefreshSig$();\n\n  // Just to make sure the dp name order is same in every render.\n  const [dataProviderNames] = useState(() => {\n    return !_.isNil(dataProviders) ? Object.keys(dataProviders) : [];\n  }); //dataProviderNames order will never change between render cycles, hence disabling the eslint\n  //https://stackoverflow.com/questions/53906843/why-cant-react-hooks-be-called-inside-loops-or-nested-function\n  // zarq9k: any better solution ?\n\n  _s3(dataProviderNames.forEach(_s3(dpName => {\n    _s3();\n\n    // zarq9k: once we sink up new and old vmCollectionObj, dataProviders[ dpName ].vmCollectionObj would not be required\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    dataProviders[dpName].vmCollectionObj = useDataProvider(dataProviders[dpName], getProps, dataCtxNode).vmCollectionObj;\n  }, \"nu9PXk7WJrRufYwKU+ypnZZwDdU=\", false, function () {\n    return [useDataProvider];\n  })), \"nu9PXk7WJrRufYwKU+ypnZZwDdU=\", false, function () {\n    return [useDataProvider];\n  });\n\n  return {};\n};\n\n_s4(useDataProviders, \"rdVHknqRArEQl3un20OJKNL5zKY=\");","map":{"version":3,"names":["useReducer","useEffect","useRef","useState","_","useSelectionModel","declUtils","pageReducer","state","action","pageActionType","type","page","has","loadVMCollection","newState","totalFound","viewModelObjects","length","vmCollection","setViewModelObjects","cursor","startIndex","loadedVMObjects","hasMoreValuesExist","endReached","focusing","dataLoaded","updateVMCollection","setTotalObjectsFound","pageObject","getLoadedViewModelObjects","concat","cursorObject","isEmpty","getTotalUniqueObjectsLoaded","last","incompleteTail","preferredChoices","resetVMCollection","fetching","vmCollectionReducer","usePagingObserver","dataProvider","rootLevelRef","getRootReference","pageDispatcher","containerElement","bottomAnchorElement","paginationOption","getPagination","bottomAnchorSelector","current","querySelector","loadNextPage","vmCollectionObj","observer","interSectionWatcher","entries","forEach","en","intersectionRatio","options","root","rootMargin","threshold","IntersectionObserver","observe","disconnect","undefined","clientHeight","scrollHeight","useDataProvider","getProps","dataCtxNode","topLevelRef","setRootReference","vmCollectionDispatcher","viewModelCollection","startReached","endIndex","inputDataExpressions","updateInputDataOnDP","setPropsCallback","inputSelectionModel","json","inputData","selectionModel","dataProviderJson","get","mode","selectionModelMode","uwSelectionModel","selectionData","validSourceTypes","setValidSourceTypes","setSelectionModel","setDataUpdater","addRemoveDpListener","getTotalObjectsFound","totalUniqueLoaded","loadAction","currentSelection","getSelection","syncSelectionModel","data","getLastSelection","context","getLatestContext","map","Object","keys","values","useDataProviders","dataProviders","dataProviderNames","isNil","dpName"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/dataProviderUtils.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/dataProviderUtils\n */\nimport { useReducer, useEffect, useRef, useState } from 'react';\nimport _ from 'lodash';\nimport { useSelectionModel } from 'js/declSelectionModelFactory';\nimport declUtils from 'js/declUtils';\n\nconst pageReducer = ( state, action ) => {\n    const pageActionType = action.type;\n    let page = state.page || 0;\n\n    switch ( pageActionType ) {\n        case 'NEXT_PAGE':\n            page++;\n            break;\n        case 'PAGE_RESET':\n            page = action.page || 0;\n            break;\n        case 'PREVIOUS_PAGE':\n            page--;\n            break;\n        case 'FOCUS_PAGE':\n            if( _.has( action, page ) ) {\n                page = action.page;\n            }\n            break;\n        default:\n            return state;\n    }\n\n    return { ...state, pageActionType, page };\n};\n\nconst loadVMCollection = ( state, action ) => {\n    let newState = { ...state };\n    newState.totalFound = action.totalFound && action.totalFound !== '' ? action.totalFound : action.viewModelObjects.length;\n    newState.vmCollection.setViewModelObjects( action.viewModelObjects );\n    newState.cursor.startIndex = newState.vmCollection.loadedVMObjects.length;\n    if( action.hasMoreValuesExist !== null ) {\n        newState.cursor.endReached = !newState.hasMoreValuesExist;\n    } else {\n        newState.cursor.endReached = newState.totalFound <= newState.cursor.startIndex;\n    }\n    newState.focusing = false;\n    newState.dataLoaded = true;\n    return newState;\n};\n\nconst updateVMCollection = ( state, action ) => {\n    let newState = { ...state };\n    newState.totalFound = action.totalFound && action.totalFound !== '' ? action.totalFound : action.viewModelObjects.length;\n    newState.hasMoreValuesExist = action.hasMoreValuesExist ? action.hasMoreValuesExist : null;\n    if( newState.totalFound > 0 ) {\n        newState.vmCollection.setTotalObjectsFound( action.totalFound );\n        if( action.pageObject.pageActionType === 'FOCUS_PAGE' || action.pageObject.pageActionType === 'PREVIOUS_PAGE' || action.pageObject.pageActionType === 'NEXT_PAGE' ) {\n            newState.vmCollection.setViewModelObjects( action.viewModelObjects );\n        } else {\n            newState.vmCollection.setViewModelObjects( newState.vmCollection.getLoadedViewModelObjects().concat( action.viewModelObjects ) );\n        }\n    } else if( action.hasMoreValuesExist !== null ) {\n        newState.vmCollection.setViewModelObjects( action.viewModelObjects ); //This is a NEXT_PAGE case\n    }\n    if( action.cursorObject ) {\n        newState.cursor = action.cursorObject;\n    } else {\n        newState.cursor.startIndex = newState.vmCollection.loadedVMObjects.length;\n        if( action.hasMoreValuesExist !== null ) {\n            newState.cursor.endReached = !newState.hasMoreValuesExist;\n        } else {\n            newState.cursor.endReached = newState.totalFound <= newState.cursor.startIndex;\n        }\n    }\n    /**\n      * Determine if the last node in the collection is an 'incompleteTail' because we know\n      * there are more found than currently loaded.\n      */\n    if( !_.isEmpty( newState.vmCollection.loadedVMObjects ) &&\n         newState.vmCollection.totalFound > newState.vmCollection.getTotalUniqueObjectsLoaded() ) {\n        _.last( newState.vmCollection.loadedVMObjects ).incompleteTail = true;\n    }\n    newState.focusing = false;\n    newState.dataLoaded = true;\n\n    // set preferredChoices on state obj\n    newState.preferredChoices = action.preferredChoices;\n\n    return newState;\n};\n\nconst resetVMCollection = ( state ) => {\n    let newState = { ...state };\n    newState.cursor.startIndex = 0;\n    delete newState.totalFound;\n    newState.cursor.endReached = false;\n    newState.fetching = false;\n    newState.focusing = false;\n    newState.dataLoaded = false;\n\n    return newState;\n};\n\nconst vmCollectionReducer = ( state, action ) => {\n    switch ( action.type ) {\n        case 'COLLECTION_UPDATE':\n            // revisitme - needs to do concat here to make sure the whole state of vmCollection\n            // is managed here, not dataProvider object\n            return updateVMCollection( state, action );\n\n        case 'COLLECTION_RESET':\n            return resetVMCollection( state );\n\n        case 'IN_PROGRESS':\n            return { ...state, fetching: action.fetching };\n\n        case 'FOCUSING':\n            return { ...state, focusing: action.focusing };\n        case 'COLLECTION_REPLACE':\n            return loadVMCollection( state, action );\n\n        default:\n            return state;\n    }\n};\n\nconst usePagingObserver = ( dataProvider ) => {\n    let rootLevelRef = dataProvider.getRootReference();\n    // cursor hook\n    const [ pageObject, pageDispatcher ] = useReducer( pageReducer, {\n        // revisitme: move startIndex logic to here\n        page: 0\n    } );\n\n    let containerElement;\n    let bottomAnchorElement;\n    let paginationOption = dataProvider.getPagination();\n\n    if( paginationOption ) {\n        let bottomAnchorSelector = paginationOption.bottomAnchorSelector;\n        containerElement = rootLevelRef.current ? rootLevelRef.current : null;\n        bottomAnchorElement = rootLevelRef.current ? rootLevelRef.current.querySelector( bottomAnchorSelector ) : null;\n    }\n\n    // only trigger next page when previous REST call is done\n    const loadNextPage = () => {\n        if( !dataProvider.vmCollectionObj.fetching ) {\n            pageDispatcher( { type: 'NEXT_PAGE' } );\n        }\n    };\n    let observer = useRef( null );\n    useEffect( () => {\n        // intersection observer needs both the container and the anchor element to work properly.\n        if( bottomAnchorElement && containerElement ) {\n            const interSectionWatcher = ( entries ) => {\n                entries.forEach( en => {\n                    if( en.intersectionRatio > 0 ) {\n                        loadNextPage();\n                    }\n                } );\n            };\n            let options = {\n                root: containerElement,\n                rootMargin: '5px',\n                threshold: 1\n            };\n            observer.current = new IntersectionObserver( interSectionWatcher, options );\n            observer.current.observe( bottomAnchorElement );\n        }\n\n        return () => {\n            //zarq9k: need to destroy the observer to prevent leakage.\n            if( observer.current ) {\n                observer.current.disconnect();\n            }\n        };\n    }, [ containerElement, bottomAnchorElement, rootLevelRef ] );\n\n    // if containerElement has no scroll yet, then we should auto load next page until scroll happened or endReached\n    useEffect( () => {\n        if( dataProvider.vmCollectionObj.cursor.endReached ) {\n            return undefined;\n        }\n\n        if( containerElement && containerElement.clientHeight > 0 && containerElement.scrollHeight <= containerElement.clientHeight ) {\n            loadNextPage();\n        }\n        return undefined;\n    }, [ pageObject.page ] );\n    // , dataProvider.vmCollectionObj\n\n    return {\n        pageObject,\n        pageDispatcher\n    };\n};\n\nexport const useDataProvider = ( dataProvider, getProps, dataCtxNode ) => {\n    const topLevelRef = useRef( null );\n    // attaching a ref to each dataProvider, so that we can pass it to list.\n    dataProvider.setRootReference( topLevelRef );\n    const { pageObject, pageDispatcher } = usePagingObserver( dataProvider );\n    const [ vmCollectionObj, vmCollectionDispatcher ] = useReducer( vmCollectionReducer, {\n        vmCollection: dataProvider.viewModelCollection,\n        totalFound: 0,\n        hasMoreValuesExist: null,\n        fetching: false,\n        dataLoaded: false,\n        preferredChoices: [],\n        cursor: {\n            startIndex: 0,\n            startReached: false,\n            endIndex: 0,\n            endReached: true\n        }\n    } );\n\n    if( dataProvider.inputDataExpressions && dataProvider.inputDataExpressions.length > 0 ) {\n        updateInputDataOnDP( dataProvider, dataCtxNode );\n    }\n\n    dataProvider.setPropsCallback( getProps );\n    let inputSelectionModel = null;\n    if( dataProvider.json.inputData && dataProvider.json.inputData.selectionModel ) {\n        inputSelectionModel = dataProvider.json.inputData.selectionModel;\n    }\n    const dataProviderJson = _.get( dataProvider, 'json' );\n    const mode = dataProviderJson ? dataProviderJson.selectionModelMode : null;\n    const uwSelectionModel = useSelectionModel( mode, null, inputSelectionModel );\n\n    if( dataProvider.json.inputData && dataProvider.json.inputData.selectionData ) {\n        uwSelectionModel.selectionData = dataProvider.json.inputData.selectionData;\n    }\n\n    const validSourceTypes = dataProvider.json.inputData ? dataProvider.json.inputData.validSourceTypes : null;\n    if( _.get( dataProvider, 'setValidSourceTypes' ) ) {\n        dataProvider.setValidSourceTypes( validSourceTypes );\n    }\n    if( _.get( dataProvider, 'setSelectionModel' ) ) {\n        dataProvider.setSelectionModel( { selectionModel: uwSelectionModel } );\n    }\n    if( _.get( dataProvider, 'setDataUpdater' ) ) {\n        dataProvider.setDataUpdater( pageDispatcher, vmCollectionDispatcher );\n    }\n\n    useEffect( () => {\n        //Adding 'inputSelectionModel' check to limit registration of dp listener only for pwa usecase\n        //This can be removed if more such usecases are encountered\n        if( inputSelectionModel && inputSelectionModel.selectionData ) {\n            uwSelectionModel.addRemoveDpListener && uwSelectionModel.addRemoveDpListener( 'add', dataProvider );\n        }\n        return () => {\n            uwSelectionModel.addRemoveDpListener( 'remove' );\n        };\n    }, [] );\n\n    useEffect( () => {\n        const totalFound = dataProvider.viewModelCollection.getTotalObjectsFound();\n        const totalUniqueLoaded = dataProvider.viewModelCollection.getTotalUniqueObjectsLoaded();\n        // revisitme - use this cursor in loadAction instead of using internal dataProvider.startIndex\n        //if( startIndex.current === 0 || startIndex.current < totalFound.current ) {\n        if( !vmCollectionObj.fetching && ( !vmCollectionObj.cursor.endReached || vmCollectionObj.focusing === true || totalFound >\n                 totalUniqueLoaded ) ) {\n            vmCollectionDispatcher( { type: 'IN_PROGRESS', fetching: true } );\n            dataProvider.loadAction( vmCollectionObj.vmCollection, vmCollectionObj.cursor.startIndex, pageObject );\n        }\n    }, [ dataProvider, pageObject, pageDispatcher ] );\n\n    //DO not consider current selection until the data is available\n    let currentSelection = vmCollectionObj.dataLoaded ? uwSelectionModel.getSelection() : null;\n    useEffect( () => {\n        //sync the selectionModel only if there is data\n        //if there is no data this is a redundant operation\n        if( _.get( dataProvider, 'syncSelectionModel' ) && vmCollectionObj.dataLoaded ) {\n            dataProvider.syncSelectionModel( { data: {} }, currentSelection, uwSelectionModel.getLastSelection() );\n        }\n    }, [ currentSelection, dataProvider ] );\n\n    return {\n        vmCollectionObj\n    };\n};\n\nconst updateInputDataOnDP = ( dataProvider, dataCtxNode ) => {\n    let context = declUtils.getLatestContext( dataCtxNode, dataCtxNode.data );\n    dataProvider.inputDataExpressions.map( observer => {\n        dataProvider.json.inputData[ Object.keys( observer )[ 0 ] ] = _.get( context, Object.values( observer )[ 0 ] );\n    } );\n};\n\nexport const useDataProviders = ( dataProviders, getProps, dataCtxNode ) => {\n    // Just to make sure the dp name order is same in every render.\n    const [ dataProviderNames ] = useState( () => {\n        return !_.isNil( dataProviders ) ? Object.keys( dataProviders ) : [];\n    } );\n    //dataProviderNames order will never change between render cycles, hence disabling the eslint\n    //https://stackoverflow.com/questions/53906843/why-cant-react-hooks-be-called-inside-loops-or-nested-function\n    // zarq9k: any better solution ?\n    dataProviderNames.forEach( ( dpName ) => {\n        // zarq9k: once we sink up new and old vmCollectionObj, dataProviders[ dpName ].vmCollectionObj would not be required\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        dataProviders[ dpName ].vmCollectionObj = useDataProvider( dataProviders[ dpName ], getProps, dataCtxNode ).vmCollectionObj;\n    } );\n    return {};\n};\n"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,WAAW,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;EACrC,MAAMC,cAAc,GAAGD,MAAM,CAACE,IAA9B;EACA,IAAIC,IAAI,GAAGJ,KAAK,CAACI,IAAN,IAAc,CAAzB;;EAEA,QAASF,cAAT;IACI,KAAK,WAAL;MACIE,IAAI;MACJ;;IACJ,KAAK,YAAL;MACIA,IAAI,GAAGH,MAAM,CAACG,IAAP,IAAe,CAAtB;MACA;;IACJ,KAAK,eAAL;MACIA,IAAI;MACJ;;IACJ,KAAK,YAAL;MACI,IAAIR,CAAC,CAACS,GAAF,CAAOJ,MAAP,EAAeG,IAAf,CAAJ,EAA4B;QACxBA,IAAI,GAAGH,MAAM,CAACG,IAAd;MACH;;MACD;;IACJ;MACI,OAAOJ,KAAP;EAhBR;;EAmBA,OAAO,EAAE,GAAGA,KAAL;IAAYE,cAAZ;IAA4BE;EAA5B,CAAP;AACH,CAxBD;;AA0BA,MAAME,gBAAgB,GAAG,CAAEN,KAAF,EAASC,MAAT,KAAqB;EAC1C,IAAIM,QAAQ,GAAG,EAAE,GAAGP;EAAL,CAAf;EACAO,QAAQ,CAACC,UAAT,GAAsBP,MAAM,CAACO,UAAP,IAAqBP,MAAM,CAACO,UAAP,KAAsB,EAA3C,GAAgDP,MAAM,CAACO,UAAvD,GAAoEP,MAAM,CAACQ,gBAAP,CAAwBC,MAAlH;EACAH,QAAQ,CAACI,YAAT,CAAsBC,mBAAtB,CAA2CX,MAAM,CAACQ,gBAAlD;EACAF,QAAQ,CAACM,MAAT,CAAgBC,UAAhB,GAA6BP,QAAQ,CAACI,YAAT,CAAsBI,eAAtB,CAAsCL,MAAnE;;EACA,IAAIT,MAAM,CAACe,kBAAP,KAA8B,IAAlC,EAAyC;IACrCT,QAAQ,CAACM,MAAT,CAAgBI,UAAhB,GAA6B,CAACV,QAAQ,CAACS,kBAAvC;EACH,CAFD,MAEO;IACHT,QAAQ,CAACM,MAAT,CAAgBI,UAAhB,GAA6BV,QAAQ,CAACC,UAAT,IAAuBD,QAAQ,CAACM,MAAT,CAAgBC,UAApE;EACH;;EACDP,QAAQ,CAACW,QAAT,GAAoB,KAApB;EACAX,QAAQ,CAACY,UAAT,GAAsB,IAAtB;EACA,OAAOZ,QAAP;AACH,CAbD;;AAeA,MAAMa,kBAAkB,GAAG,CAAEpB,KAAF,EAASC,MAAT,KAAqB;EAC5C,IAAIM,QAAQ,GAAG,EAAE,GAAGP;EAAL,CAAf;EACAO,QAAQ,CAACC,UAAT,GAAsBP,MAAM,CAACO,UAAP,IAAqBP,MAAM,CAACO,UAAP,KAAsB,EAA3C,GAAgDP,MAAM,CAACO,UAAvD,GAAoEP,MAAM,CAACQ,gBAAP,CAAwBC,MAAlH;EACAH,QAAQ,CAACS,kBAAT,GAA8Bf,MAAM,CAACe,kBAAP,GAA4Bf,MAAM,CAACe,kBAAnC,GAAwD,IAAtF;;EACA,IAAIT,QAAQ,CAACC,UAAT,GAAsB,CAA1B,EAA8B;IAC1BD,QAAQ,CAACI,YAAT,CAAsBU,oBAAtB,CAA4CpB,MAAM,CAACO,UAAnD;;IACA,IAAIP,MAAM,CAACqB,UAAP,CAAkBpB,cAAlB,KAAqC,YAArC,IAAqDD,MAAM,CAACqB,UAAP,CAAkBpB,cAAlB,KAAqC,eAA1F,IAA6GD,MAAM,CAACqB,UAAP,CAAkBpB,cAAlB,KAAqC,WAAtJ,EAAoK;MAChKK,QAAQ,CAACI,YAAT,CAAsBC,mBAAtB,CAA2CX,MAAM,CAACQ,gBAAlD;IACH,CAFD,MAEO;MACHF,QAAQ,CAACI,YAAT,CAAsBC,mBAAtB,CAA2CL,QAAQ,CAACI,YAAT,CAAsBY,yBAAtB,GAAkDC,MAAlD,CAA0DvB,MAAM,CAACQ,gBAAjE,CAA3C;IACH;EACJ,CAPD,MAOO,IAAIR,MAAM,CAACe,kBAAP,KAA8B,IAAlC,EAAyC;IAC5CT,QAAQ,CAACI,YAAT,CAAsBC,mBAAtB,CAA2CX,MAAM,CAACQ,gBAAlD,EAD4C,CAC0B;EACzE;;EACD,IAAIR,MAAM,CAACwB,YAAX,EAA0B;IACtBlB,QAAQ,CAACM,MAAT,GAAkBZ,MAAM,CAACwB,YAAzB;EACH,CAFD,MAEO;IACHlB,QAAQ,CAACM,MAAT,CAAgBC,UAAhB,GAA6BP,QAAQ,CAACI,YAAT,CAAsBI,eAAtB,CAAsCL,MAAnE;;IACA,IAAIT,MAAM,CAACe,kBAAP,KAA8B,IAAlC,EAAyC;MACrCT,QAAQ,CAACM,MAAT,CAAgBI,UAAhB,GAA6B,CAACV,QAAQ,CAACS,kBAAvC;IACH,CAFD,MAEO;MACHT,QAAQ,CAACM,MAAT,CAAgBI,UAAhB,GAA6BV,QAAQ,CAACC,UAAT,IAAuBD,QAAQ,CAACM,MAAT,CAAgBC,UAApE;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACI,IAAI,CAAClB,CAAC,CAAC8B,OAAF,CAAWnB,QAAQ,CAACI,YAAT,CAAsBI,eAAjC,CAAD,IACCR,QAAQ,CAACI,YAAT,CAAsBH,UAAtB,GAAmCD,QAAQ,CAACI,YAAT,CAAsBgB,2BAAtB,EADxC,EAC8F;IAC1F/B,CAAC,CAACgC,IAAF,CAAQrB,QAAQ,CAACI,YAAT,CAAsBI,eAA9B,EAAgDc,cAAhD,GAAiE,IAAjE;EACH;;EACDtB,QAAQ,CAACW,QAAT,GAAoB,KAApB;EACAX,QAAQ,CAACY,UAAT,GAAsB,IAAtB,CAjC4C,CAmC5C;;EACAZ,QAAQ,CAACuB,gBAAT,GAA4B7B,MAAM,CAAC6B,gBAAnC;EAEA,OAAOvB,QAAP;AACH,CAvCD;;AAyCA,MAAMwB,iBAAiB,GAAK/B,KAAF,IAAa;EACnC,IAAIO,QAAQ,GAAG,EAAE,GAAGP;EAAL,CAAf;EACAO,QAAQ,CAACM,MAAT,CAAgBC,UAAhB,GAA6B,CAA7B;EACA,OAAOP,QAAQ,CAACC,UAAhB;EACAD,QAAQ,CAACM,MAAT,CAAgBI,UAAhB,GAA6B,KAA7B;EACAV,QAAQ,CAACyB,QAAT,GAAoB,KAApB;EACAzB,QAAQ,CAACW,QAAT,GAAoB,KAApB;EACAX,QAAQ,CAACY,UAAT,GAAsB,KAAtB;EAEA,OAAOZ,QAAP;AACH,CAVD;;AAYA,MAAM0B,mBAAmB,GAAG,CAAEjC,KAAF,EAASC,MAAT,KAAqB;EAC7C,QAASA,MAAM,CAACE,IAAhB;IACI,KAAK,mBAAL;MACI;MACA;MACA,OAAOiB,kBAAkB,CAAEpB,KAAF,EAASC,MAAT,CAAzB;;IAEJ,KAAK,kBAAL;MACI,OAAO8B,iBAAiB,CAAE/B,KAAF,CAAxB;;IAEJ,KAAK,aAAL;MACI,OAAO,EAAE,GAAGA,KAAL;QAAYgC,QAAQ,EAAE/B,MAAM,CAAC+B;MAA7B,CAAP;;IAEJ,KAAK,UAAL;MACI,OAAO,EAAE,GAAGhC,KAAL;QAAYkB,QAAQ,EAAEjB,MAAM,CAACiB;MAA7B,CAAP;;IACJ,KAAK,oBAAL;MACI,OAAOZ,gBAAgB,CAAEN,KAAF,EAASC,MAAT,CAAvB;;IAEJ;MACI,OAAOD,KAAP;EAlBR;AAoBH,CArBD;;AAuBA,MAAMkC,iBAAiB,GAAKC,YAAF,IAAoB;EAAA;;EAC1C,IAAIC,YAAY,GAAGD,YAAY,CAACE,gBAAb,EAAnB,CAD0C,CAE1C;;EACA,MAAM,CAAEf,UAAF,EAAcgB,cAAd,IAAiC9C,UAAU,CAAEO,WAAF,EAAe;IAC5D;IACAK,IAAI,EAAE;EAFsD,CAAf,CAAjD;EAKA,IAAImC,gBAAJ;EACA,IAAIC,mBAAJ;EACA,IAAIC,gBAAgB,GAAGN,YAAY,CAACO,aAAb,EAAvB;;EAEA,IAAID,gBAAJ,EAAuB;IACnB,IAAIE,oBAAoB,GAAGF,gBAAgB,CAACE,oBAA5C;IACAJ,gBAAgB,GAAGH,YAAY,CAACQ,OAAb,GAAuBR,YAAY,CAACQ,OAApC,GAA8C,IAAjE;IACAJ,mBAAmB,GAAGJ,YAAY,CAACQ,OAAb,GAAuBR,YAAY,CAACQ,OAAb,CAAqBC,aAArB,CAAoCF,oBAApC,CAAvB,GAAoF,IAA1G;EACH,CAhByC,CAkB1C;;;EACA,MAAMG,YAAY,GAAG,MAAM;IACvB,IAAI,CAACX,YAAY,CAACY,eAAb,CAA6Bf,QAAlC,EAA6C;MACzCM,cAAc,CAAE;QAAEnC,IAAI,EAAE;MAAR,CAAF,CAAd;IACH;EACJ,CAJD;;EAKA,IAAI6C,QAAQ,GAAGtD,MAAM,CAAE,IAAF,CAArB;EACAD,SAAS,CAAE,MAAM;IACb;IACA,IAAI+C,mBAAmB,IAAID,gBAA3B,EAA8C;MAC1C,MAAMU,mBAAmB,GAAKC,OAAF,IAAe;QACvCA,OAAO,CAACC,OAAR,CAAiBC,EAAE,IAAI;UACnB,IAAIA,EAAE,CAACC,iBAAH,GAAuB,CAA3B,EAA+B;YAC3BP,YAAY;UACf;QACJ,CAJD;MAKH,CAND;;MAOA,IAAIQ,OAAO,GAAG;QACVC,IAAI,EAAEhB,gBADI;QAEViB,UAAU,EAAE,KAFF;QAGVC,SAAS,EAAE;MAHD,CAAd;MAKAT,QAAQ,CAACJ,OAAT,GAAmB,IAAIc,oBAAJ,CAA0BT,mBAA1B,EAA+CK,OAA/C,CAAnB;MACAN,QAAQ,CAACJ,OAAT,CAAiBe,OAAjB,CAA0BnB,mBAA1B;IACH;;IAED,OAAO,MAAM;MACT;MACA,IAAIQ,QAAQ,CAACJ,OAAb,EAAuB;QACnBI,QAAQ,CAACJ,OAAT,CAAiBgB,UAAjB;MACH;IACJ,CALD;EAMH,CAzBQ,EAyBN,CAAErB,gBAAF,EAAoBC,mBAApB,EAAyCJ,YAAzC,CAzBM,CAAT,CAzB0C,CAoD1C;;EACA3C,SAAS,CAAE,MAAM;IACb,IAAI0C,YAAY,CAACY,eAAb,CAA6BlC,MAA7B,CAAoCI,UAAxC,EAAqD;MACjD,OAAO4C,SAAP;IACH;;IAED,IAAItB,gBAAgB,IAAIA,gBAAgB,CAACuB,YAAjB,GAAgC,CAApD,IAAyDvB,gBAAgB,CAACwB,YAAjB,IAAiCxB,gBAAgB,CAACuB,YAA/G,EAA8H;MAC1HhB,YAAY;IACf;;IACD,OAAOe,SAAP;EACH,CATQ,EASN,CAAEvC,UAAU,CAAClB,IAAb,CATM,CAAT,CArD0C,CA+D1C;;EAEA,OAAO;IACHkB,UADG;IAEHgB;EAFG,CAAP;AAIH,CArED;;GAAMJ,iB;;AAuEN,OAAO,MAAM8B,eAAe,GAAG,CAAE7B,YAAF,EAAgB8B,QAAhB,EAA0BC,WAA1B,KAA2C;EAAA;;EACtE,MAAMC,WAAW,GAAGzE,MAAM,CAAE,IAAF,CAA1B,CADsE,CAEtE;;EACAyC,YAAY,CAACiC,gBAAb,CAA+BD,WAA/B;EACA,MAAM;IAAE7C,UAAF;IAAcgB;EAAd,IAAiCJ,iBAAiB,CAAEC,YAAF,CAAxD;EACA,MAAM,CAAEY,eAAF,EAAmBsB,sBAAnB,IAA8C7E,UAAU,CAAEyC,mBAAF,EAAuB;IACjFtB,YAAY,EAAEwB,YAAY,CAACmC,mBADsD;IAEjF9D,UAAU,EAAE,CAFqE;IAGjFQ,kBAAkB,EAAE,IAH6D;IAIjFgB,QAAQ,EAAE,KAJuE;IAKjFb,UAAU,EAAE,KALqE;IAMjFW,gBAAgB,EAAE,EAN+D;IAOjFjB,MAAM,EAAE;MACJC,UAAU,EAAE,CADR;MAEJyD,YAAY,EAAE,KAFV;MAGJC,QAAQ,EAAE,CAHN;MAIJvD,UAAU,EAAE;IAJR;EAPyE,CAAvB,CAA9D;;EAeA,IAAIkB,YAAY,CAACsC,oBAAb,IAAqCtC,YAAY,CAACsC,oBAAb,CAAkC/D,MAAlC,GAA2C,CAApF,EAAwF;IACpFgE,mBAAmB,CAAEvC,YAAF,EAAgB+B,WAAhB,CAAnB;EACH;;EAED/B,YAAY,CAACwC,gBAAb,CAA+BV,QAA/B;EACA,IAAIW,mBAAmB,GAAG,IAA1B;;EACA,IAAIzC,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,IAA+B3C,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,CAA4BC,cAA/D,EAAgF;IAC5EH,mBAAmB,GAAGzC,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,CAA4BC,cAAlD;EACH;;EACD,MAAMC,gBAAgB,GAAGpF,CAAC,CAACqF,GAAF,CAAO9C,YAAP,EAAqB,MAArB,CAAzB;;EACA,MAAM+C,IAAI,GAAGF,gBAAgB,GAAGA,gBAAgB,CAACG,kBAApB,GAAyC,IAAtE;EACA,MAAMC,gBAAgB,GAAGvF,iBAAiB,CAAEqF,IAAF,EAAQ,IAAR,EAAcN,mBAAd,CAA1C;;EAEA,IAAIzC,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,IAA+B3C,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,CAA4BO,aAA/D,EAA+E;IAC3ED,gBAAgB,CAACC,aAAjB,GAAiClD,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,CAA4BO,aAA7D;EACH;;EAED,MAAMC,gBAAgB,GAAGnD,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,GAA8B3C,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,CAA4BQ,gBAA1D,GAA6E,IAAtG;;EACA,IAAI1F,CAAC,CAACqF,GAAF,CAAO9C,YAAP,EAAqB,qBAArB,CAAJ,EAAmD;IAC/CA,YAAY,CAACoD,mBAAb,CAAkCD,gBAAlC;EACH;;EACD,IAAI1F,CAAC,CAACqF,GAAF,CAAO9C,YAAP,EAAqB,mBAArB,CAAJ,EAAiD;IAC7CA,YAAY,CAACqD,iBAAb,CAAgC;MAAET,cAAc,EAAEK;IAAlB,CAAhC;EACH;;EACD,IAAIxF,CAAC,CAACqF,GAAF,CAAO9C,YAAP,EAAqB,gBAArB,CAAJ,EAA8C;IAC1CA,YAAY,CAACsD,cAAb,CAA6BnD,cAA7B,EAA6C+B,sBAA7C;EACH;;EAED5E,SAAS,CAAE,MAAM;IACb;IACA;IACA,IAAImF,mBAAmB,IAAIA,mBAAmB,CAACS,aAA/C,EAA+D;MAC3DD,gBAAgB,CAACM,mBAAjB,IAAwCN,gBAAgB,CAACM,mBAAjB,CAAsC,KAAtC,EAA6CvD,YAA7C,CAAxC;IACH;;IACD,OAAO,MAAM;MACTiD,gBAAgB,CAACM,mBAAjB,CAAsC,QAAtC;IACH,CAFD;EAGH,CATQ,EASN,EATM,CAAT;EAWAjG,SAAS,CAAE,MAAM;IACb,MAAMe,UAAU,GAAG2B,YAAY,CAACmC,mBAAb,CAAiCqB,oBAAjC,EAAnB;IACA,MAAMC,iBAAiB,GAAGzD,YAAY,CAACmC,mBAAb,CAAiC3C,2BAAjC,EAA1B,CAFa,CAGb;IACA;;IACA,IAAI,CAACoB,eAAe,CAACf,QAAjB,KAA+B,CAACe,eAAe,CAAClC,MAAhB,CAAuBI,UAAxB,IAAsC8B,eAAe,CAAC7B,QAAhB,KAA6B,IAAnE,IAA2EV,UAAU,GAC/GoF,iBADL,CAAJ,EAC+B;MAC3BvB,sBAAsB,CAAE;QAAElE,IAAI,EAAE,aAAR;QAAuB6B,QAAQ,EAAE;MAAjC,CAAF,CAAtB;MACAG,YAAY,CAAC0D,UAAb,CAAyB9C,eAAe,CAACpC,YAAzC,EAAuDoC,eAAe,CAAClC,MAAhB,CAAuBC,UAA9E,EAA0FQ,UAA1F;IACH;EACJ,CAVQ,EAUN,CAAEa,YAAF,EAAgBb,UAAhB,EAA4BgB,cAA5B,CAVM,CAAT,CA3DsE,CAuEtE;;EACA,IAAIwD,gBAAgB,GAAG/C,eAAe,CAAC5B,UAAhB,GAA6BiE,gBAAgB,CAACW,YAAjB,EAA7B,GAA+D,IAAtF;EACAtG,SAAS,CAAE,MAAM;IACb;IACA;IACA,IAAIG,CAAC,CAACqF,GAAF,CAAO9C,YAAP,EAAqB,oBAArB,KAA+CY,eAAe,CAAC5B,UAAnE,EAAgF;MAC5EgB,YAAY,CAAC6D,kBAAb,CAAiC;QAAEC,IAAI,EAAE;MAAR,CAAjC,EAA+CH,gBAA/C,EAAiEV,gBAAgB,CAACc,gBAAjB,EAAjE;IACH;EACJ,CANQ,EAMN,CAAEJ,gBAAF,EAAoB3D,YAApB,CANM,CAAT;EAQA,OAAO;IACHY;EADG,CAAP;AAGH,CApFM;;IAAMiB,e;UAI8B9B,iB,EA2BdrC,iB;;;AAuD7B,MAAM6E,mBAAmB,GAAG,CAAEvC,YAAF,EAAgB+B,WAAhB,KAAiC;EACzD,IAAIiC,OAAO,GAAGrG,SAAS,CAACsG,gBAAV,CAA4BlC,WAA5B,EAAyCA,WAAW,CAAC+B,IAArD,CAAd;EACA9D,YAAY,CAACsC,oBAAb,CAAkC4B,GAAlC,CAAuCrD,QAAQ,IAAI;IAC/Cb,YAAY,CAAC0C,IAAb,CAAkBC,SAAlB,CAA6BwB,MAAM,CAACC,IAAP,CAAavD,QAAb,EAAyB,CAAzB,CAA7B,IAA8DpD,CAAC,CAACqF,GAAF,CAAOkB,OAAP,EAAgBG,MAAM,CAACE,MAAP,CAAexD,QAAf,EAA2B,CAA3B,CAAhB,CAA9D;EACH,CAFD;AAGH,CALD;;AAOA,OAAO,MAAMyD,gBAAgB,GAAG,CAAEC,aAAF,EAAiBzC,QAAjB,EAA2BC,WAA3B,KAA4C;EAAA;;EAAA;;EACxE;EACA,MAAM,CAAEyC,iBAAF,IAAwBhH,QAAQ,CAAE,MAAM;IAC1C,OAAO,CAACC,CAAC,CAACgH,KAAF,CAASF,aAAT,CAAD,GAA4BJ,MAAM,CAACC,IAAP,CAAaG,aAAb,CAA5B,GAA2D,EAAlE;EACH,CAFqC,CAAtC,CAFwE,CAKxE;EACA;EACA;;EACA,IAAAC,iBAAiB,CAACxD,OAAlB,KAA6B0D,MAAF,IAAc;IAAA;;IACrC;IACA;IACAH,aAAa,CAAEG,MAAF,CAAb,CAAwB9D,eAAxB,GAA0CiB,eAAe,CAAE0C,aAAa,CAAEG,MAAF,CAAf,EAA2B5C,QAA3B,EAAqCC,WAArC,CAAf,CAAkEnB,eAA5G;EACH,CAJD;IAAA,QAG8CiB,eAH9C;EAAA;IAAA,QAG8CA,eAH9C;EAAA;;EAKA,OAAO,EAAP;AACH,CAdM;;IAAMyC,gB"},"metadata":{},"sourceType":"module"}