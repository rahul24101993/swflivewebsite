{"ast":null,"code":"// Copyright (c) 2022 Siemens\n\n/**\n * This module provides the native implementation of the awHttpService.\n *\n * @module js/awHttpService\n */\nimport axios from 'axios';\nimport AwCacheFactoryService from 'js/awCacheFactoryService';\nconst cache = AwCacheFactoryService.instance('http');\nconst pendingHttpCalls = {};\n/**\n * create HTTP request\n * @param {Object} config http config object\n * @returns {Promise} http promise\n */\n\nfunction createHttpRequest(config) {\n  return axios(config);\n}\n\ncreateHttpRequest.patch = (url, data, config) => {\n  return new Promise((resolve, reject) => {\n    axios.patch(url, data, config).then(data => resolve(data), error => reject(error));\n  });\n};\n\ncreateHttpRequest.put = (url, data, config) => {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data, config).then(data => resolve(data), error => reject(error));\n  });\n};\n\ncreateHttpRequest.post = (url, data, config) => {\n  // window.webdriverIsEnabled is set when we launch the browser from Selenium\n  // this is a temporary hack to get past some file upload issues. Browser\n  // is cancelling the network requests for some unknown reason\n  if (window.webdriverIsEnabled === true) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        axios.post(url, data, config).then(data => resolve(data), error => reject(error));\n      }, 0);\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    axios.post(url, data, config).then(data => resolve(data), error => reject(error));\n  });\n};\n\ncreateHttpRequest.head = (url, config) => {\n  return new Promise((resolve, reject) => {\n    axios.head(url, config).then(data => resolve(data), error => reject(error));\n  });\n};\n\ncreateHttpRequest.delete = (url, config) => {\n  return new Promise((resolve, reject) => {\n    axios.delete(url, config).then(data => resolve(data), error => reject(error));\n  });\n};\n\ncreateHttpRequest.get = (url, config) => {\n  if (config && config.cache) {\n    const cachedData = cache.get(url);\n\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const getCallPromise = new Promise((resolve, reject) => {\n      axios.get(url, config).then(data => resolve(data), error => reject(error));\n    });\n    cache.put(url, getCallPromise);\n    return getCallPromise;\n  }\n\n  return new Promise((resolve, reject) => {\n    axios.get(url, config).then(data => resolve(data), error => reject(error));\n  });\n}; // Add a request interceptor\n\n\naxios.interceptors.request.use(function (config) {\n  pendingHttpCalls[config.url] = config;\n  updatePendingRequests();\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // Add a response interceptor\n\naxios.interceptors.response.use(function (response) {\n  delete pendingHttpCalls[response.config.url];\n  updatePendingRequests();\n  return response;\n}, function (error) {\n  delete pendingHttpCalls[error.config.url];\n  updatePendingRequests();\n  return Promise.reject(error);\n});\n/**\n */\n\nfunction updatePendingRequests() {\n  createHttpRequest.pendingRequests = Object.values(pendingHttpCalls);\n}\n\nupdatePendingRequests();\nconst exports = {\n  instance: createHttpRequest\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/services/src/js/awHttpService.js"],"names":["cache","AwCacheFactoryService","pendingHttpCalls","axios","createHttpRequest","data","resolve","error","reject","window","setTimeout","config","cachedData","getCallPromise","updatePendingRequests","Promise","response","Object","exports","instance"],"mappings":"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","sourcesContent":["// Copyright (c) 2022 Siemens\n\n/**\n * This module provides the native implementation of the awHttpService.\n *\n * @module js/awHttpService\n */\n\nimport axios from 'axios';\nimport AwCacheFactoryService from 'js/awCacheFactoryService';\n\nconst cache = AwCacheFactoryService.instance( 'http' );\nconst pendingHttpCalls = {};\n\n/**\n * create HTTP request\n * @param {Object} config http config object\n * @returns {Promise} http promise\n */\nfunction createHttpRequest( config ) {\n    return axios( config );\n}\n\ncreateHttpRequest.patch = ( url, data, config ) => {\n    return new Promise( ( resolve, reject ) => {\n        axios.patch( url, data, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n    } );\n};\n\ncreateHttpRequest.put = ( url, data, config ) => {\n    return new Promise( ( resolve, reject ) => {\n        axios.put( url, data, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n    } );\n};\n\ncreateHttpRequest.post = ( url, data, config ) => {\n    // window.webdriverIsEnabled is set when we launch the browser from Selenium\n    // this is a temporary hack to get past some file upload issues. Browser\n    // is cancelling the network requests for some unknown reason\n    if( window.webdriverIsEnabled === true ) {\n        return new Promise( ( resolve, reject ) => {\n            setTimeout( () => {\n                axios.post( url, data, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n            }, 0 );\n        } );\n    }\n\n    return new Promise( ( resolve, reject ) => {\n        axios.post( url, data, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n    } );\n};\n\ncreateHttpRequest.head = ( url, config ) => {\n    return new Promise( ( resolve, reject ) => {\n        axios.head( url, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n    } );\n};\ncreateHttpRequest.delete = ( url, config ) => {\n    return new Promise( ( resolve, reject ) => {\n        axios.delete( url, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n    } );\n};\n\ncreateHttpRequest.get = ( url, config ) => {\n    if( config && config.cache ) {\n        const cachedData = cache.get( url );\n        if( cachedData ) {\n            return cachedData;\n        }\n        const getCallPromise = new Promise( ( resolve, reject ) => {\n            axios.get( url, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n        } );\n        cache.put( url, getCallPromise );\n        return getCallPromise;\n    }\n\n    return new Promise( ( resolve, reject ) => {\n        axios.get( url, config ).then( ( data ) => resolve( data ), ( error ) => reject( error ) );\n    } );\n};\n\n// Add a request interceptor\naxios.interceptors.request.use( function( config ) {\n    pendingHttpCalls[ config.url ] = config;\n    updatePendingRequests();\n    return config;\n}, function( error ) {\n    return Promise.reject( error );\n} );\n\n// Add a response interceptor\naxios.interceptors.response.use( function( response ) {\n    delete pendingHttpCalls[ response.config.url ];\n    updatePendingRequests();\n    return response;\n}, function( error ) {\n    delete pendingHttpCalls[ error.config.url ];\n    updatePendingRequests();\n    return Promise.reject( error );\n} );\n\n/**\n */\nfunction updatePendingRequests() {\n    createHttpRequest.pendingRequests = Object.values( pendingHttpCalls );\n}\n\nupdatePendingRequests();\n\nconst exports = {\n    instance: createHttpRequest\n};\n\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}