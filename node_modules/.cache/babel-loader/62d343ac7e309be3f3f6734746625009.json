{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyLabelService.js\"; // Copyright (c) 2021 Siemens\n\nimport { getPropClass } from 'js/componentUtils';\nimport AwPattern from 'viewmodel/AwPatternViewModel';\nimport _ from 'lodash';\n/**\n * render function for AwLPropertyLabel\n * this can be used for label-only or to wrap a child value\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awPropertyLabelRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  var labelValue;\n  const labelClass = prop.required && prop.fielddata && prop.fielddata.propertyDisplayName ? 'sw-required' : '';\n  labelValue = prop.fielddata.propertyDisplayName;\n  let displayErrorLabel = Boolean(_.isUndefined(prop.displayErrorLabel) || prop.displayErrorLabel === true);\n\n  if (prop.error) {\n    // apply aria role when there is an error\n    if (prop.fielddata.uwAnchor) {\n      // if command bar will be present within label tag set dummy 'for' prop\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dummyProp\",\n        className: getPropClass(labelClass, prop),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sw-property-nameWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sw-property-name\",\n            ...(prop.error ? {\n              role: 'alert',\n              title: labelValue\n            } : {}),\n            children: labelValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sw-errorSeparator\",\n            children: \" - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sw-errorHint\",\n            children: prop.error[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AwPattern, {\n            prop: prop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), prop.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: getPropClass(labelClass, prop),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-property-nameWrapper\",\n        children: [displayErrorLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sw-property-name\",\n          ...(prop.error ? {\n            role: 'alert',\n            title: labelValue\n          } : {}),\n          children: labelValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 43\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sw-errorHint\",\n          children: `(${prop.error[0]})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AwPattern, {\n          prop: prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), prop.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  const renderAwPatternConditionally = prop => {\n    if (prop && prop.fielddata && prop.fielddata.patterns || prop.fielddata.patternAutoAssignFlags) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"propertyLabelTopContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sw-property-name\",\n          children: labelValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AwPattern, {\n          prop: prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sw-property-name\",\n      children: labelValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  };\n\n  if (prop.fielddata.uwAnchor) {\n    // apply aria role when there is an error\n    // if command bar will be present within label tag set dummy 'for' prop\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"dummyProp\",\n      className: getPropClass(labelClass, prop),\n      children: [renderAwPatternConditionally(prop), prop.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  } // apply aria role when there is an error\n\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: getPropClass(labelClass, prop),\n    children: [renderAwPatternConditionally(prop), prop.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyLabelService.js"],"names":["awPropertyLabelRenderFunction","props","prop","labelClass","labelValue","displayErrorLabel","Boolean","_","getPropClass","role","title","renderAwPatternConditionally"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport { getPropClass } from 'js/componentUtils';\nimport AwPattern from 'viewmodel/AwPatternViewModel';\nimport _ from 'lodash';\n\n/**\n * render function for AwLPropertyLabel\n * this can be used for label-only or to wrap a child value\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awPropertyLabelRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    var labelValue;\n\n    const labelClass = prop.required && prop.fielddata && prop.fielddata.propertyDisplayName ? 'sw-required' : '';\n    labelValue = prop.fielddata.propertyDisplayName;\n\n    let displayErrorLabel = Boolean( _.isUndefined( prop.displayErrorLabel ) || prop.displayErrorLabel === true );\n\n    if( prop.error ) {\n        // apply aria role when there is an error\n        if( prop.fielddata.uwAnchor ) {\n            // if command bar will be present within label tag set dummy 'for' prop\n            return (\n                <label htmlFor='dummyProp' className={getPropClass( labelClass, prop ) }>\n                    <div className='sw-property-nameWrapper'>\n                        <span className='sw-property-name' {...( prop.error ? { role: 'alert', title: labelValue } : {} )}>{ labelValue }</span>\n                        <span className='sw-errorSeparator'> - </span>\n                        <span className='sw-errorHint'>{prop.error[0]}</span>\n                        <AwPattern prop={prop}></AwPattern>\n                    </div>\n                    { prop.children }\n                </label>\n            );\n        }\n\n        return (\n            <label className={getPropClass( labelClass, prop ) }>\n                <div className='sw-property-nameWrapper'>\n                    {displayErrorLabel && <span className='sw-property-name' {...( prop.error ? { role: 'alert', title: labelValue } : {} )}>{ labelValue }</span>}\n                    &nbsp;\n                    <span className='sw-errorHint'>{`(${prop.error[0]})`}</span>\n                    <AwPattern prop={prop}></AwPattern>\n                </div>\n                { prop.children }\n            </label>\n        );\n    }\n\n    const renderAwPatternConditionally = ( prop ) => {\n        if( prop && prop.fielddata && prop.fielddata.patterns || prop.fielddata.patternAutoAssignFlags ) {\n            return <div className='propertyLabelTopContainer'>\n                <span className='sw-property-name'>{ labelValue }</span>\n                <AwPattern prop={prop}></AwPattern>\n            </div>;\n        }\n\n        return <span className='sw-property-name'>{labelValue}</span>;\n    };\n\n    if( prop.fielddata.uwAnchor ) {\n        // apply aria role when there is an error\n        // if command bar will be present within label tag set dummy 'for' prop\n        return (\n            <label htmlFor='dummyProp' className = { getPropClass( labelClass, prop ) } >\n                { renderAwPatternConditionally( prop ) }\n                { prop.children }\n            </label>\n        );\n    }\n\n    // apply aria role when there is an error\n    return (\n        <label className = { getPropClass( labelClass, prop ) } >\n            { renderAwPatternConditionally( prop ) }\n            { prop.children }\n        </label>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}