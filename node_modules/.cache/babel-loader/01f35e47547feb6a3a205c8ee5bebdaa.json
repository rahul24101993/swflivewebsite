{"ast":null,"code":"var _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(); // Copyright (c) 2021 Siemens\n\n/**\n * @module js/lovProviderUtils\n */\n\n\nimport { useEffect, useRef } from 'react';\nimport appCtxSvc from 'js/appCtxService';\nimport { useInitHook } from 'js/reactHelper';\nimport { useDataProvider } from 'js/dataProviderUtils';\nimport { loadAction, validateLovAction, createDynamicDataProvider } from 'js/dataProviderFactory';\n/**\n *  This particular hook is specific to dynamic dataprovider for LOV means not applicable for static dataprovider LOVS\n * @param {} dataProvider\n * @param {*} viewModel\n */\n\nconst useDynamicDataProviderForLOV = (dataProvider, viewModel, prop) => {\n  _s4();\n\n  _s();\n\n  dataProvider.vmCollectionObj = useDataProvider(dataProvider).vmCollectionObj; // align dataCtxNode , check declViewModelProcessingFactory.js L216\n\n  let initial = {\n    data: viewModel\n  };\n  let dataCtxNode = useRef(initial); // dataCtxNode should be reactive,\n  // ref issue: https://gitlab.industrysoftware.automation.siemens.com/Apollo/swf/-/issues/887\n  // update the viewModel and prop accordingly\n\n  dataCtxNode.current.data = viewModel;\n\n  if (prop) {\n    dataCtxNode.current.parameters = {\n      prop\n    };\n  }\n\n  useEffect(() => {\n    if (!dataProvider.loadAction && !dataProvider.validateLovAction) {\n      dataProvider.loadAction = async (vmCollection, startIndex, pageObject) => {\n        return loadAction(dataProvider, dataCtxNode.current, vmCollection, startIndex, pageObject);\n      };\n\n      dataProvider.validateLovAction = async input => {\n        return validateLovAction(input, dataProvider, dataCtxNode.current);\n      };\n    }\n\n    return () => {\n      if (dataProvider) {\n        dataProvider.destroy();\n      }\n    };\n  }, []);\n};\n\n_s4(useDynamicDataProviderForLOV, \"fzeM+v8DBqsqwdkOxZwj9TrwzoY=\", false, function () {\n  return [useDataProvider];\n});\n\n_s(useDynamicDataProviderForLOV, \"fzeM+v8DBqsqwdkOxZwj9TrwzoY=\", false, function () {\n  return [useDataProvider];\n});\n\nconst useDataProviderInLovPopup = prop => {\n  _s5();\n\n  _s2(); //OnMount\n\n\n  let currentLovEntry = null;\n  let dataProvider = prop.dataProvider;\n  /**\n   * This ref brings mutually exclusive behavior between init and useEffect hook.\n   * It prevents multiple REST calls.\n   */\n\n  let exclusiveHook = useRef({});\n  let lovConfig = useRef({});\n  currentLovEntry = {\n    propDisplayValue: prop.field.fielddata.uiValue,\n    propInternalValue: prop.field.typex === 'DATETIME' || prop.field.typex === 'DATE' ? Date.parse(prop.field.value) : String(prop.field.value)\n  }; // If the LOV type is checkbox array , then the UI value is never updated manually.\n  // It is updated by selecting on the checkbox.\n  // Hence, we never need to do the filtering.\n  // For checkboxarray lov filtering is done from another textbox which appears inside the LOV popup.\n  // So, added a check to make sure filtering never changes for checkbox array LOVs.\n\n  let filterString = prop.staticFilterStr;\n  lovConfig.current = {\n    filterString\n  };\n  useInitHook(() => {\n    if (dataProvider) {\n      exclusiveHook.current = {\n        isExecuted: true\n      };\n      dataProvider.resetDataProvider({});\n      dataProvider.selectionModel.setSelection(currentLovEntry); // TODO: how to support auto focus selection??\n      // reset attention\n\n      prop.selectIndex && (prop.selectIndex.current = null);\n      let lovInfo = {\n        ctxLovPropName: prop.field.name,\n        ctxLovPropVMO: prop.field.vmo\n      };\n      appCtxSvc.registerCtx('aw.lovInfo', lovInfo);\n    }\n  });\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      if (dataProvider && !exclusiveHook.current.isExecuted) {\n        // reset attention\n        prop.selectIndex && (prop.selectIndex.current = null);\n        dataProvider.resetDataProvider();\n      }\n    }, 500);\n    return () => {\n      exclusiveHook.current = {\n        isExecuted: false\n      };\n      clearTimeout(timeout);\n    };\n  }, [dataProvider, lovConfig.current.filterString]);\n};\n\n_s5(useDataProviderInLovPopup, \"YjzdMXH0Z00gUog6+eGmeLV/egQ=\", false, function () {\n  return [useInitHook];\n});\n\n_s2(useDataProviderInLovPopup, \"YjzdMXH0Z00gUog6+eGmeLV/egQ=\", false, function () {\n  return [useInitHook];\n});\n\nexport const useLOVs = function (fields, prop, viewModel) {\n  _s6();\n\n  _s3();\n\n  let {\n    elementRefList\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {}; // useInit( () => {\n  //     if( viewModel.data.name === 'dataProviderLOV' ) {\n  //         useDynamicDataProviderForLOV( dataProvider, viewModel, prop );\n  //     }\n  // });\n\n  let lovEntryRef = useRef(null);\n\n  if (prop.lovlist) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDataProviderInLovPopup(prop);\n  }\n\n  if (viewModel.data.name === 'dataProviderLOV') {\n    let dataProvider = prop.fielddata.dataProvider ? prop.fielddata.dataProvider : elementRefList.get('dynDataprovider').current;\n\n    if (!dataProvider) {\n      dataProvider = prop.isListbox ? createDynamicDataProvider(1) : createDynamicDataProvider();\n      elementRefList.get('dynDataprovider').current = dataProvider;\n    }\n\n    if (dataProvider.getLovEntryRef() === null) {\n      dataProvider.setLovEntryRef(lovEntryRef);\n    } //The hook is being called conditionally since it is only supposed to be invoked for dynamic dataproviders\n    //It is made sure that the dataprovider is always available before this stage\n    //thereby providing a gaurantee that the hooks will always be invoked in the same order for a particular component\n\n\n    if (dataProvider.dynamicDp) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useDynamicDataProviderForLOV(dataProvider, viewModel, prop);\n    }\n  }\n};\n\n_s6(useLOVs, \"JDiuWoHUF1Kmv6CsM9IBzjXmX/o=\", false, function () {\n  return [useDataProviderInLovPopup, useDynamicDataProviderForLOV];\n});\n\n_s3(useLOVs, \"JDiuWoHUF1Kmv6CsM9IBzjXmX/o=\", false, function () {\n  return [useDataProviderInLovPopup, useDynamicDataProviderForLOV];\n});\n\nexport default {\n  useLOVs\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/lovProviderUtils.js"],"names":["useDynamicDataProviderForLOV","dataProvider","useDataProvider","initial","data","viewModel","dataCtxNode","useRef","prop","useEffect","loadAction","validateLovAction","useDataProviderInLovPopup","currentLovEntry","exclusiveHook","lovConfig","propDisplayValue","propInternalValue","Date","String","filterString","useInitHook","isExecuted","lovInfo","ctxLovPropName","ctxLovPropVMO","vmo","appCtxSvc","timeout","setTimeout","clearTimeout","useLOVs","elementRefList","lovEntryRef","createDynamicDataProvider"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/lovProviderUtils\n */\nimport { useEffect, useRef } from 'react';\nimport appCtxSvc from 'js/appCtxService';\nimport { useInitHook } from 'js/reactHelper';\nimport { useDataProvider } from 'js/dataProviderUtils';\nimport { loadAction, validateLovAction, createDynamicDataProvider } from 'js/dataProviderFactory';\n\n/**\n *  This particular hook is specific to dynamic dataprovider for LOV means not applicable for static dataprovider LOVS\n * @param {} dataProvider\n * @param {*} viewModel\n */\nconst useDynamicDataProviderForLOV = ( dataProvider, viewModel, prop ) => {\n    dataProvider.vmCollectionObj = useDataProvider( dataProvider ).vmCollectionObj;\n    // align dataCtxNode , check declViewModelProcessingFactory.js L216\n    let initial = { data: viewModel };\n    let dataCtxNode = useRef( initial );\n\n    // dataCtxNode should be reactive,\n    // ref issue: https://gitlab.industrysoftware.automation.siemens.com/Apollo/swf/-/issues/887\n    // update the viewModel and prop accordingly\n    dataCtxNode.current.data = viewModel;\n    if( prop ) {\n        dataCtxNode.current.parameters = { prop };\n    }\n\n    useEffect( () => {\n        if( !dataProvider.loadAction && !dataProvider.validateLovAction ) {\n            dataProvider.loadAction = async( vmCollection, startIndex, pageObject ) => {\n                return loadAction( dataProvider, dataCtxNode.current, vmCollection, startIndex, pageObject );\n            };\n            dataProvider.validateLovAction = async( input ) => {\n                return validateLovAction( input, dataProvider, dataCtxNode.current );\n            };\n        }\n        return () => {\n            if( dataProvider ) {\n                dataProvider.destroy();\n            }\n        };\n    }, [] );\n};\n\nconst useDataProviderInLovPopup = ( prop ) => {\n    //OnMount\n    let currentLovEntry = null;\n    let dataProvider = prop.dataProvider;\n    /**\n     * This ref brings mutually exclusive behavior between init and useEffect hook.\n     * It prevents multiple REST calls.\n     */\n    let exclusiveHook = useRef( {} );\n    let lovConfig = useRef( {} );\n    currentLovEntry = {\n        propDisplayValue: prop.field.fielddata.uiValue,\n        propInternalValue: prop.field.typex === 'DATETIME' || prop.field.typex === 'DATE' ? Date.parse( prop.field.value ) : String( prop.field.value )\n    };\n\n    // If the LOV type is checkbox array , then the UI value is never updated manually.\n    // It is updated by selecting on the checkbox.\n    // Hence, we never need to do the filtering.\n    // For checkboxarray lov filtering is done from another textbox which appears inside the LOV popup.\n    // So, added a check to make sure filtering never changes for checkbox array LOVs.\n    let filterString = prop.staticFilterStr;\n    lovConfig.current = { filterString };\n    useInitHook( () => {\n        if( dataProvider ) {\n            exclusiveHook.current = { isExecuted: true };\n            dataProvider.resetDataProvider( {} );\n            dataProvider.selectionModel.setSelection( currentLovEntry );\n\n            // TODO: how to support auto focus selection??\n            // reset attention\n            prop.selectIndex && ( prop.selectIndex.current = null );\n\n            let lovInfo = {\n                ctxLovPropName: prop.field.name,\n                ctxLovPropVMO: prop.field.vmo\n            };\n            appCtxSvc.registerCtx( 'aw.lovInfo', lovInfo );\n        }\n    } );\n    useEffect( () => {\n        let timeout = setTimeout( () => {\n            if( dataProvider && !exclusiveHook.current.isExecuted ) {\n                // reset attention\n                prop.selectIndex && ( prop.selectIndex.current = null );\n                dataProvider.resetDataProvider();\n            }\n        }, 500 );\n        return () => {\n            exclusiveHook.current = { isExecuted: false };\n            clearTimeout( timeout );\n        };\n    }, [ dataProvider, lovConfig.current.filterString ] );\n};\n\nexport const useLOVs = ( fields, prop, viewModel, { elementRefList } = {} ) => {\n    // useInit( () => {\n    //     if( viewModel.data.name === 'dataProviderLOV' ) {\n    //         useDynamicDataProviderForLOV( dataProvider, viewModel, prop );\n    //     }\n    // });\n    let lovEntryRef = useRef( null );\n    if( prop.lovlist ) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useDataProviderInLovPopup( prop );\n    }\n    if( viewModel.data.name === 'dataProviderLOV' ) {\n        let dataProvider = prop.fielddata.dataProvider ? prop.fielddata.dataProvider : elementRefList.get( 'dynDataprovider' ).current;\n        if( !dataProvider ) {\n            dataProvider = prop.isListbox ? createDynamicDataProvider( 1 ) : createDynamicDataProvider();\n            elementRefList.get( 'dynDataprovider' ).current = dataProvider;\n        }\n        if( dataProvider.getLovEntryRef() === null ) {\n            dataProvider.setLovEntryRef( lovEntryRef );\n        }\n        //The hook is being called conditionally since it is only supposed to be invoked for dynamic dataproviders\n        //It is made sure that the dataprovider is always available before this stage\n        //thereby providing a gaurantee that the hooks will always be invoked in the same order for a particular component\n        if( dataProvider.dynamicDp ) {\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            useDynamicDataProviderForLOV( dataProvider, viewModel, prop );\n        }\n    }\n};\n\nexport default {\n    useLOVs\n};\n"]},"metadata":{},"sourceType":"module"}