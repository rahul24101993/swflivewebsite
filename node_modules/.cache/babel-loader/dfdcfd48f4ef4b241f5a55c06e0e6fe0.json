{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwColumnRenderService.js\"; // Copyright (c) 2021 Siemens\n\nimport rowColSvc from 'js/awRowColumnService';\n/**\n * render function for AwColumn\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awColumnRenderFunction = props => {\n  const {\n    className,\n    elementRefList\n  } = props;\n  let classnames = 'aw-layout-column aw-layout-flexbox';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames,\n    ref: elementRefList.get('column'),\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\nexport const onMount = (elementRefList, props, data) => {\n  let elements = elementRefList.get('column').current; //todo\n\n  if (elements && !elements.isAlreadyAdded) {\n    if (props.width) {\n      elements.setAttribute('width', props.width);\n    }\n\n    if (props.height) {\n      elements.setAttribute('height', props.height);\n    }\n\n    if (props.offset) {\n      elements.setAttribute('offset', props.offset);\n    }\n\n    if (props.justify) {\n      elements.setAttribute('justify', props.justify);\n    }\n\n    if (props.alignContent) {\n      elements.setAttribute('align-content', props.alignContent);\n    }\n\n    if (props.wrapStyle) {\n      elements.setAttribute('wrap-style', props.wrapStyle);\n    }\n\n    if (props.color) {\n      elements.setAttribute('color', props.color);\n    }\n\n    if (props.when) {\n      elements.setAttribute('when', props.when);\n    }\n\n    elements.isAlreadyAdded = true;\n    rowColSvc.initRowOrColumn([elements]);\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwColumnRenderService.js"],"names":["awColumnRenderFunction","props","elementRefList","classnames","children","onMount","elements","rowColSvc"],"mappings":"oKAAA;;AACA,OAAA,SAAA,MAAA,uBAAA;AAEA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,sBAAsB,GAAKC,KAAF,IAAa;EAC/C,MAAM;IAAA,SAAA;IAAaC;EAAb,IAAN,KAAA;EAEA,IAAIC,UAAU,GAAd,oCAAA;EAEA,OAAA,aACI,OAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAd,UAAA;IAA4B,GAAG,EAAED,cAAc,CAAdA,GAAAA,CAAjC,QAAiCA,CAAjC;IAAA,QAAA,EACKD,KAAK,CAACG;EADX,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADJ,IACI,CADJ;AALG,CAAA;AAYP,OAAO,MAAMC,OAAO,GAAG,CAAA,cAAA,EAAA,KAAA,EAAA,IAAA,KAAmC;EACtD,IAAIC,QAAQ,GAAGJ,cAAc,CAAdA,GAAAA,CAAAA,QAAAA,EADuC,OACtD,CADsD,CACC;;EACvD,IAAII,QAAQ,IAAI,CAACA,QAAQ,CAAzB,cAAA,EAA2C;IACvC,IAAIL,KAAK,CAAT,KAAA,EAAkB;MACdK,QAAQ,CAARA,YAAAA,CAAAA,OAAAA,EAAgCL,KAAK,CAArCK,KAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,MAAA,EAAmB;MACfK,QAAQ,CAARA,YAAAA,CAAAA,QAAAA,EAAiCL,KAAK,CAAtCK,MAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,MAAA,EAAmB;MACfK,QAAQ,CAARA,YAAAA,CAAAA,QAAAA,EAAiCL,KAAK,CAAtCK,MAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,OAAA,EAAoB;MAChBK,QAAQ,CAARA,YAAAA,CAAAA,SAAAA,EAAkCL,KAAK,CAAvCK,OAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,YAAA,EAAyB;MACrBK,QAAQ,CAARA,YAAAA,CAAAA,eAAAA,EAAwCL,KAAK,CAA7CK,YAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,SAAA,EAAsB;MAClBK,QAAQ,CAARA,YAAAA,CAAAA,YAAAA,EAAqCL,KAAK,CAA1CK,SAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,KAAA,EAAkB;MACdK,QAAQ,CAARA,YAAAA,CAAAA,OAAAA,EAAgCL,KAAK,CAArCK,KAAAA;IACH;;IAED,IAAIL,KAAK,CAAT,IAAA,EAAiB;MACbK,QAAQ,CAARA,YAAAA,CAAAA,MAAAA,EAA+BL,KAAK,CAApCK,IAAAA;IACH;;IAEDA,QAAQ,CAARA,cAAAA,GAAAA,IAAAA;IAEAC,SAAS,CAATA,eAAAA,CAA2B,CAA3BA,QAA2B,CAA3BA;EACH;AAtCE,CAAA","sourcesContent":["// Copyright (c) 2021 Siemens\nimport rowColSvc from 'js/awRowColumnService';\n\n/**\n * render function for AwColumn\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awColumnRenderFunction = ( props ) => {\n    const { className, elementRefList } = props;\n\n    let classnames = 'aw-layout-column aw-layout-flexbox';\n\n    return (\n        <div className={classnames} ref={elementRefList.get( 'column' )}>\n            {props.children}\n        </div>\n    );\n};\n\nexport const onMount = ( elementRefList, props, data ) => {\n    let elements = elementRefList.get( 'column' ).current; //todo\n    if( elements && !elements.isAlreadyAdded ) {\n        if( props.width ) {\n            elements.setAttribute( 'width', props.width );\n        }\n\n        if( props.height ) {\n            elements.setAttribute( 'height', props.height );\n        }\n\n        if( props.offset ) {\n            elements.setAttribute( 'offset', props.offset );\n        }\n\n        if( props.justify ) {\n            elements.setAttribute( 'justify', props.justify );\n        }\n\n        if( props.alignContent ) {\n            elements.setAttribute( 'align-content', props.alignContent );\n        }\n\n        if( props.wrapStyle ) {\n            elements.setAttribute( 'wrap-style', props.wrapStyle );\n        }\n\n        if( props.color ) {\n            elements.setAttribute( 'color', props.color );\n        }\n\n        if( props.when ) {\n            elements.setAttribute( 'when', props.when );\n        }\n\n        elements.isAlreadyAdded = true;\n\n        rowColSvc.initRowOrColumn( [ elements ] );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}