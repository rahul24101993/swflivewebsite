{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwTileService.js\";\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport AwTileIcon from 'viewmodel/AwTileIconViewModel';\nimport tileSvc from 'js/tileService';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport wcagService from 'js/wcagService';\nimport { AwLongPress } from 'js/hocCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwLongPressProvider = AwLongPress('div');\n_c = AwLongPressProvider;\nconst colorClassNames = ['aw-theme-adminLocationsTile', 'aw-theme-pinnedObjectsTile', 'aw-theme-locationsTile', 'aw-theme-commandsActionsTile', 'aw-theme-savedSearchesTile'];\nexport const awTileRenderFunction = props => {\n  const {\n    viewModel,\n    i18n,\n    runActionWithViewModel,\n    ...prop\n  } = props;\n  const {\n    handleTileGroupDragAndDrop\n  } = prop;\n\n  if (_.isEmpty(viewModel.data.tile)) {\n    initialize(prop.tile, viewModel);\n  }\n\n  const tile = viewModel.tile;\n  let context = {\n    tile: tile\n  };\n  const isDraggable = handleTileGroupDragAndDrop && handleTileGroupDragAndDrop.draggable ? handleTileGroupDragAndDrop.draggable : false;\n\n  const openLocation = event => {\n    if (!prop.tile.isGatewayInEditMode) {\n      tileSvc.performAction(tile.action, context, runActionWithViewModel);\n    } else {\n      eventBus.publish('gateway.tileClick');\n\n      _.defer(function () {\n        prop.tileClickCallback();\n      });\n\n      dispatchTileEdit(event);\n    }\n  };\n  /* Launch tile from keyboard\n   *\n   * @param {Event} event - the event object\n   */\n\n\n  const handleKeyPress = event => {\n    if (wcagService.isValidKeyPress(event)) {\n      openLocation(event);\n    }\n  };\n\n  const startEdit = event => {\n    event.preventDefault();\n\n    if (!_.isUndefined(prop.tile.isGatewayInEditMode) && (event.type === 'mousedown' || event.type === 'contextmenu')) {\n      dispatchTileEdit(event);\n    }\n  };\n\n  const dispatchTileEdit = event => {\n    let vmProp = { ...viewModel.getData()\n    };\n    vmProp.tile.editing = true;\n    vmProp.tile.isGatewayInEditMode = true;\n    viewModel.dispatch({\n      path: 'data',\n      value: { ...vmProp\n      }\n    });\n    prop.tile.editTileCallback(event);\n  };\n\n  const handleRemoveTile = event => {\n    event.stopPropagation();\n    let vmProp = { ...viewModel.getData()\n    };\n    vmProp.tile.isDirty = true;\n    viewModel.dispatch({\n      path: 'data',\n      value: { ...vmProp\n      }\n    });\n    eventBus.publish('gateway.unpinTile', viewModel.tile);\n\n    _.defer(function () {\n      prop.unPinTileCallback(viewModel.tile);\n    });\n  };\n\n  const handleDrag = event => {\n    handleTileGroupDragAndDrop.drag(event, tile);\n  };\n\n  const handleDrop = (event, tile) => {\n    handleTileGroupDragAndDrop.drop(event, tile);\n  };\n\n  if (!_.isEmpty(tile)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-tile\",\n      children: /*#__PURE__*/_jsxDEV(AwLongPressProvider, {\n        \"data-locator\": \"tile-container\",\n        className: getTileContainerClass(tile, viewModel),\n        onContextMenu: e => startEdit(e),\n        awLongPress: e => startEdit(e),\n        onClick: e => openLocation(e),\n        onKeyDown: e => handleKeyPress(e),\n        draggable: isDraggable,\n        onDragOver: e => handleDrop(e, tile),\n        onDragStart: e => handleDrag(e),\n        onDragEnter: e => handleDrop(e, tile),\n        onDragLeave: e => handleDrop(e, tile),\n        onDrop: e => handleDrop(e, tile),\n        onDragEnd: e => handleDrag(e),\n        tabIndex: \"0\",\n        role: \"button\",\n        title: tile.displayName,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-locator\": \"afx-tile\",\n          className: getTileDisplayClass(tile),\n          \"aria-hidden\": true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aw-tile-tileName aw-theme-tileText\",\n            children: tile.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-tile-tileContent sw-column aw-theme-tileText justify-center\",\n          children: [tile.tileSize !== 0 && tile.content.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"aw-tile-tileContentData\",\n            children: tile.content.map((entry, currentIndex) => getTileContentDataList(entry, currentIndex, tile.content.length))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), (tile.content.length === 0 || tile.tileSize === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getTileIconClass(tile),\n            children: /*#__PURE__*/_jsxDEV(AwTileIcon, {\n              icon: tile.icons,\n              primary: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-tile-brand aw-layout-flexColumnContainer aw-theme-tileText\",\n          children: [tile.content.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sw-column\",\n            children: [tile.tileSize !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aw-tile-tileIcon aw-tile-tileImage aw-tile-dynamicIcon\",\n              children: /*#__PURE__*/_jsxDEV(AwTileIcon, {\n                icon: tile.icons,\n                primary: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), tile.content[0].contentValue !== '0' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aw-tile-tileBadge\",\n              children: tile.content[0].contentValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), tile.content.length === 0 && tile.icons.secondaryIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sw-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aw-tile-tileIcon aw-tile-tileImage aw-tile-dynamicIcon\",\n              children: /*#__PURE__*/_jsxDEV(AwTileIcon, {\n                icon: \"tile.icons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), !tile.isProtected && /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-locator\": \"tile-unpinButton\",\n          className: \"aw-tile-tileEditButton aw-tile-unpin\",\n          onClick: e => handleRemoveTile(e),\n          title: i18n.unpinCommandTitle,\n          children: /*#__PURE__*/_jsxDEV(AwIcon, {\n            iconId: \"homeUnpinButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-locator\": \"tile-resizeButton\",\n          className: \"aw-tile-tileEditButton aw-tile-resize\",\n          onClick: e => toggleTileSize(e, viewModel),\n          title: i18n.resizeCommandTitle,\n          children: /*#__PURE__*/_jsxDEV(AwIcon, {\n            iconId: viewModel.data.resizeSvg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nconst getTileContentDataList = (entry, currentIndex, tileContent) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"aw-tile-counterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"aw-tile-counter\",\n        children: entry.contentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"aw-tile-countDesc\",\n        children: entry.contentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), currentIndex !== tileContent - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"aw-tile-contentSep\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 51\n    }, this)]\n  }, currentIndex, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n\nconst initialize = (tile, viewModel) => {\n  let vmProp = { ...viewModel.getData()\n  };\n  vmProp.tile = tile;\n  viewModel.dispatch({\n    path: 'data',\n    value: { ...vmProp\n    }\n  });\n  evaluateResizeSvg(viewModel);\n};\n\nconst toggleTileSize = (event, viewModel) => {\n  event.stopPropagation();\n  changeTileSize(viewModel);\n  evaluateResizeSvg(viewModel);\n};\n\nconst changeTileSize = viewModel => {\n  let vmProp = { ...viewModel.getData()\n  };\n  vmProp.tile.isDirty = true;\n\n  if (vmProp.tile.tileSize === 1) {\n    vmProp.tile.tileSize = 0;\n  } else if (vmProp.tile.tileSize === 2) {\n    vmProp.tile.tileSize = 1;\n  } else {\n    vmProp.tile.tileSize = 2;\n  }\n\n  viewModel.dispatch({\n    path: 'data',\n    value: { ...vmProp\n    }\n  });\n};\n\nconst evaluateResizeSvg = viewModel => {\n  let resizeSvg;\n\n  if (viewModel.tile) {\n    let vmData = { ...viewModel.getData()\n    };\n\n    if (vmData.tile.tileSize === 0) {\n      resizeSvg = 'homeDownRightArrowMakeMedium';\n    } else if (vmData.tile.tileSize === 1) {\n      resizeSvg = 'homeLeftArrowMakeSmall';\n    } else if (vmData.tile.tileSize === 2) {\n      resizeSvg = 'homeUpLeftArrowMakeLarge';\n    }\n\n    vmData.resizeSvg = resizeSvg;\n    viewModel.dispatch({\n      path: 'data',\n      value: { ...vmData\n      }\n    });\n  }\n}; // CSS classes loading dynamically\n\n/**\n * Function to get dynamic css classes from tile size\n * @param {*} tile tile\n * @param {*} viewModel vm\n * @returns {String} CSS classes\n */\n\n\nconst getTileContainerClass = (tile, viewModel) => {\n  let tileContainerClass = ['sw-column', 'aw-tile-tileContainer'];\n  tileContainerClass.push(tile.styleOverride);\n  tileContainerClass.push(colorClassNames[tile.themeIndex]);\n\n  if (viewModel.tile.editing) {\n    tileContainerClass.push('aw-tile-tileEdit');\n  }\n\n  switch (viewModel.tile.tileSize) {\n    case 0:\n      tileContainerClass.push('aw-tile-smallSize');\n      break;\n\n    case 1:\n      tileContainerClass.push('aw-tile-doubleSize');\n      break;\n\n    case 2:\n      tileContainerClass.push('aw-tile-doubleSize aw-tile-doubleVerticalSize');\n      break;\n\n    default:\n      break;\n  }\n\n  return tileContainerClass.join(' ');\n};\n/**\n * Function to get dynamic CSS classes for tile display div\n * @param {*} tile tile\n * @returns {*} CSS classes\n */\n\n\nconst getTileDisplayClass = tile => {\n  let tileDisplayClass = ['aw-tile-brand aw-tile-displayTitle aw-theme-tileText'];\n  tileDisplayClass.push(colorClassNames[tile.themeIndex]);\n  return tileDisplayClass.join(' ');\n};\n/**\n * Function to get dynamic CSS classes for tile icon\n * @param {*} tile tile\n * @returns {*} CSS classes\n */\n\n\nconst getTileIconClass = tile => {\n  let tileIconClass = ['aw-tile-tileIcon aw-tile-tileImage sw-column aw-tile-fullsizeIcon'];\n  tileIconClass.push(tile.icons.primaryIcon !== '__TYPEICON__' ? 'aw-tile-dynamicIcon' : '');\n  return tileIconClass.join(' ');\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AwLongPressProvider\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwTileService.js"],"names":["AwLongPressProvider","AwLongPress","colorClassNames","awTileRenderFunction","props","prop","handleTileGroupDragAndDrop","_","viewModel","initialize","tile","context","isDraggable","openLocation","event","tileSvc","eventBus","dispatchTileEdit","handleKeyPress","wcagService","startEdit","vmProp","path","value","handleRemoveTile","handleDrag","handleDrop","getTileContainerClass","e","getTileDisplayClass","displayName","getTileContentDataList","getTileIconClass","contentValue","i18n","toggleTileSize","resizeSvg","entry","contentName","currentIndex","tileContent","evaluateResizeSvg","changeTileSize","vmData","tileContainerClass","tileDisplayClass","tileIconClass"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport AwTileIcon from 'viewmodel/AwTileIconViewModel';\nimport tileSvc from 'js/tileService';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport wcagService from 'js/wcagService';\nimport { AwLongPress } from 'js/hocCollection';\n\nconst AwLongPressProvider = AwLongPress( 'div' );\n\nconst colorClassNames = [\n    'aw-theme-adminLocationsTile',\n    'aw-theme-pinnedObjectsTile',\n    'aw-theme-locationsTile',\n    'aw-theme-commandsActionsTile',\n    'aw-theme-savedSearchesTile'\n];\n\nexport const awTileRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        i18n,\n        runActionWithViewModel,\n        ...prop\n    } = props;\n    const { handleTileGroupDragAndDrop } = prop;\n    if( _.isEmpty( viewModel.data.tile ) ) {\n        initialize( prop.tile, viewModel );\n    }\n\n    const tile = viewModel.tile;\n    let context = {\n        tile: tile\n    };\n\n    const isDraggable = handleTileGroupDragAndDrop && handleTileGroupDragAndDrop.draggable ? handleTileGroupDragAndDrop.draggable : false;\n    const openLocation = ( event ) => {\n        if( !prop.tile.isGatewayInEditMode ) {\n            tileSvc.performAction( tile.action, context, runActionWithViewModel );\n        } else {\n            eventBus.publish( 'gateway.tileClick' );\n            _.defer( function() {\n                prop.tileClickCallback();\n            } );\n            dispatchTileEdit( event );\n        }\n    };\n\n    /* Launch tile from keyboard\n     *\n     * @param {Event} event - the event object\n     */\n    const handleKeyPress = ( event ) => {\n        if( wcagService.isValidKeyPress( event ) ) {\n            openLocation( event );\n        }\n    };\n\n    const startEdit = ( event ) => {\n        event.preventDefault();\n        if( !_.isUndefined( prop.tile.isGatewayInEditMode ) && ( event.type === 'mousedown' || event.type === 'contextmenu' ) ) {\n            dispatchTileEdit( event );\n        }\n    };\n\n    const dispatchTileEdit = ( event ) => {\n        let vmProp = { ...viewModel.getData() };\n        vmProp.tile.editing = true;\n        vmProp.tile.isGatewayInEditMode = true;\n        viewModel.dispatch( { path: 'data', value: { ...vmProp } } );\n        prop.tile.editTileCallback( event );\n    };\n\n    const handleRemoveTile = ( event ) => {\n        event.stopPropagation();\n        let vmProp = { ...viewModel.getData() };\n        vmProp.tile.isDirty = true;\n        viewModel.dispatch( { path: 'data', value: { ...vmProp } } );\n        eventBus.publish( 'gateway.unpinTile', viewModel.tile );\n        _.defer( function() {\n            prop.unPinTileCallback( viewModel.tile );\n        } );\n    };\n    const handleDrag = ( event ) => {\n        handleTileGroupDragAndDrop.drag( event, tile );\n    };\n\n    const handleDrop = ( event, tile ) => {\n        handleTileGroupDragAndDrop.drop( event, tile );\n    };\n\n    if( !_.isEmpty( tile ) ) {\n        return (\n            <div className='aw-tile'>\n                <AwLongPressProvider data-locator='tile-container' className={getTileContainerClass( tile, viewModel )}\n                    onContextMenu={( e )=>startEdit( e )}\n                    awLongPress={( e )=>startEdit( e )}\n                    onClick={( e )=>openLocation( e )}\n                    onKeyDown={( e )=>handleKeyPress( e )}\n                    draggable={isDraggable}\n                    onDragOver={( e )=> handleDrop( e, tile )}\n                    onDragStart={( e )=> handleDrag( e )}\n                    onDragEnter={( e )=> handleDrop( e, tile )}\n                    onDragLeave={( e )=> handleDrop( e, tile )}\n                    onDrop={( e )=> handleDrop( e, tile )}\n                    onDragEnd={( e )=>handleDrag( e )}\n                    tabIndex='0'\n                    role='button'\n                    title={tile.displayName}>\n                    <div data-locator='afx-tile' className={getTileDisplayClass( tile )} aria-hidden={true}>\n                        <div className='aw-tile-tileName aw-theme-tileText'>\n                            {tile.displayName}\n                        </div>\n                    </div>\n                    <div className='aw-tile-tileContent sw-column aw-theme-tileText justify-center'>\n                        {\n                            tile.tileSize !== 0 && tile.content.length > 0 &&\n                        <ul className='aw-tile-tileContentData' >\n                            {\n                                tile.content.map( ( entry, currentIndex ) => getTileContentDataList( entry, currentIndex, tile.content.length ) )\n                            }\n                        </ul>\n                        }\n                        {\n                            ( tile.content.length === 0 || tile.tileSize === 0 ) &&\n                        <div className={getTileIconClass( tile )}>\n                            <AwTileIcon icon={tile.icons} primary='true'></AwTileIcon>\n                        </div>\n                        }\n                    </div>\n                    <div className='aw-tile-brand aw-layout-flexColumnContainer aw-theme-tileText'>\n                        {\n                            tile.content.length > 0 &&\n                        <div className='sw-column'>\n                            {\n                                tile.tileSize !== 0 &&\n                            <div className='aw-tile-tileIcon aw-tile-tileImage aw-tile-dynamicIcon'>\n                                <AwTileIcon icon={tile.icons} primary='true'></AwTileIcon>\n                            </div>\n                            }\n                            {\n                                tile.content[0].contentValue !== '0' &&\n                            <div className='aw-tile-tileBadge'>{tile.content[0].contentValue}</div>\n                            }\n                        </div>\n                        }\n                        {\n                            tile.content.length === 0 && tile.icons.secondaryIcon &&\n                        <div className='sw-column'>\n                            <div className='aw-tile-tileIcon aw-tile-tileImage aw-tile-dynamicIcon'>\n                                <AwTileIcon icon='tile.icons'></AwTileIcon>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    {\n                        !tile.isProtected &&\n                    <div data-locator='tile-unpinButton' className='aw-tile-tileEditButton aw-tile-unpin'\n                        onClick={( e )=>handleRemoveTile( e )} title={i18n.unpinCommandTitle}>\n                        <AwIcon iconId='homeUnpinButton'></AwIcon>\n                    </div>\n                    }\n                    <div data-locator='tile-resizeButton' className='aw-tile-tileEditButton aw-tile-resize'\n                        onClick={( e )=>toggleTileSize( e, viewModel )} title={i18n.resizeCommandTitle}>\n                        <AwIcon iconId={viewModel.data.resizeSvg}></AwIcon>\n                    </div>\n                </AwLongPressProvider>\n            </div>\n        );\n    }\n};\n\nconst getTileContentDataList = ( entry, currentIndex, tileContent ) => {\n    return (\n        <li key={currentIndex}>\n            <span className='aw-tile-counterContainer'>\n                <span className='aw-tile-counter'>{entry.contentValue}</span>\n                <span className='aw-tile-countDesc'>{entry.contentName}</span>\n            </span>\n            { currentIndex !== tileContent - 1 && <span className='aw-tile-contentSep'></span> }\n        </li>\n    );\n};\n\nconst initialize = ( tile, viewModel ) => {\n    let vmProp = { ...viewModel.getData() };\n    vmProp.tile = tile;\n    viewModel.dispatch( { path: 'data', value: { ...vmProp } } );\n    evaluateResizeSvg( viewModel );\n};\n\nconst toggleTileSize = ( event, viewModel ) => {\n    event.stopPropagation();\n    changeTileSize( viewModel );\n    evaluateResizeSvg( viewModel );\n};\n\nconst changeTileSize = ( viewModel ) => {\n    let vmProp = { ...viewModel.getData() };\n    vmProp.tile.isDirty = true;\n\n    if( vmProp.tile.tileSize === 1 ) {\n        vmProp.tile.tileSize = 0;\n    } else if( vmProp.tile.tileSize === 2 ) {\n        vmProp.tile.tileSize = 1;\n    } else {\n        vmProp.tile.tileSize = 2;\n    }\n    viewModel.dispatch( { path: 'data', value: { ...vmProp } } );\n};\n\nconst evaluateResizeSvg = ( viewModel ) => {\n    let resizeSvg;\n    if( viewModel.tile ) {\n        let vmData = { ...viewModel.getData() };\n        if( vmData.tile.tileSize === 0 ) {\n            resizeSvg = 'homeDownRightArrowMakeMedium';\n        } else if( vmData.tile.tileSize === 1 ) {\n            resizeSvg = 'homeLeftArrowMakeSmall';\n        } else if( vmData.tile.tileSize === 2 ) {\n            resizeSvg = 'homeUpLeftArrowMakeLarge';\n        }\n        vmData.resizeSvg = resizeSvg;\n        viewModel.dispatch( { path: 'data', value: { ...vmData } } );\n    }\n};\n\n// CSS classes loading dynamically\n/**\n * Function to get dynamic css classes from tile size\n * @param {*} tile tile\n * @param {*} viewModel vm\n * @returns {String} CSS classes\n */\nconst getTileContainerClass = ( tile, viewModel ) => {\n    let tileContainerClass = [ 'sw-column', 'aw-tile-tileContainer' ];\n    tileContainerClass.push( tile.styleOverride );\n    tileContainerClass.push( colorClassNames[ tile.themeIndex ] );\n\n    if( viewModel.tile.editing ) {\n        tileContainerClass.push( 'aw-tile-tileEdit' );\n    }\n\n    switch ( viewModel.tile.tileSize ) {\n        case 0:\n            tileContainerClass.push( 'aw-tile-smallSize' );\n            break;\n\n        case 1:\n            tileContainerClass.push( 'aw-tile-doubleSize' );\n            break;\n\n        case 2:\n            tileContainerClass.push( 'aw-tile-doubleSize aw-tile-doubleVerticalSize' );\n            break;\n\n        default:\n            break;\n    }\n    return tileContainerClass.join( ' ' );\n};\n\n/**\n * Function to get dynamic CSS classes for tile display div\n * @param {*} tile tile\n * @returns {*} CSS classes\n */\nconst getTileDisplayClass = ( tile ) => {\n    let tileDisplayClass = [ 'aw-tile-brand aw-tile-displayTitle aw-theme-tileText' ];\n    tileDisplayClass.push( colorClassNames[ tile.themeIndex ] );\n\n    return tileDisplayClass.join( ' ' );\n};\n\n/**\n * Function to get dynamic CSS classes for tile icon\n * @param {*} tile tile\n * @returns {*} CSS classes\n */\nconst getTileIconClass = ( tile ) => {\n    let tileIconClass = [ 'aw-tile-tileIcon aw-tile-tileImage sw-column aw-tile-fullsizeIcon' ];\n    tileIconClass.push( tile.icons.primaryIcon !== '__TYPEICON__' ? 'aw-tile-dynamicIcon' : '' );\n\n    return tileIconClass.join( ' ' );\n};\n"]},"metadata":{},"sourceType":"module"}