{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-disable indent */\nimport sessionMgr from 'js/sessionManager.service';\nimport routeChangeHandler from 'js/routeChangeHandler';\n/**\n * This is the uiJs layer route/state contribution.\n *\n * @module js/ui.states\n */\n\nvar contribution = {\n  // route to deal with handling checks for authentication.\n  checkAuthentication: {\n    view: 'Login',\n    noAuth: true,\n    resolve: [{\n      token: 'authenticator',\n      resolveFn: () => {\n        return routeChangeHandler.pickAuthenticator().then(authenticator => {\n          if (authenticator) {\n            sessionMgr.resetPipeLine();\n            authenticator.authenticate().then(function () {\n              sessionMgr.authenticationSuccessful();\n            });\n          }\n        });\n      }\n    }]\n  }\n};\n/**\n * @param {String} key - The key\n * @param {Promise} deferred - Promise\n * @returns {Object} contribution\n */\n\nexport default function (key, deferred) {\n  if (key === 'states') {\n    if (deferred) {\n      deferred.resolve(contribution);\n    } else {\n      return contribution;\n    }\n  } else {\n    if (deferred) {\n      deferred.resolve();\n    }\n  }\n}","map":{"version":3,"names":["sessionMgr","routeChangeHandler","contribution","checkAuthentication","view","noAuth","resolve","token","resolveFn","pickAuthenticator","then","authenticator","resetPipeLine","authenticate","authenticationSuccessful","key","deferred"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/ui.states.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-disable indent */\n\nimport sessionMgr from 'js/sessionManager.service';\nimport routeChangeHandler from 'js/routeChangeHandler';\n/**\n * This is the uiJs layer route/state contribution.\n *\n * @module js/ui.states\n */\n\nvar contribution = {\n    // route to deal with handling checks for authentication.\n    checkAuthentication: {\n        view: 'Login',\n        noAuth: true,\n        resolve: [ {\n            token: 'authenticator',\n            resolveFn: () => {\n                return routeChangeHandler.pickAuthenticator().then( ( authenticator ) => {\n                    if( authenticator ) {\n                        sessionMgr.resetPipeLine();\n                        authenticator.authenticate().then( function() {\n                            sessionMgr.authenticationSuccessful();\n                        } );\n                    }\n                } );\n            }\n        } ]\n    }\n};\n\n/**\n * @param {String} key - The key\n * @param {Promise} deferred - Promise\n * @returns {Object} contribution\n */\nexport default function( key, deferred ) {\n    if( key === 'states' ) {\n        if( deferred ) {\n            deferred.resolve( contribution );\n        } else {\n            return contribution;\n        }\n    } else {\n        if( deferred ) {\n            deferred.resolve();\n        }\n    }\n}\n"],"mappings":"AAAA;;AACA;AAEA,OAAOA,UAAP,MAAuB,2BAAvB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG;EACf;EACAC,mBAAmB,EAAE;IACjBC,IAAI,EAAE,OADW;IAEjBC,MAAM,EAAE,IAFS;IAGjBC,OAAO,EAAE,CAAE;MACPC,KAAK,EAAE,eADA;MAEPC,SAAS,EAAE,MAAM;QACb,OAAOP,kBAAkB,CAACQ,iBAAnB,GAAuCC,IAAvC,CAA+CC,aAAF,IAAqB;UACrE,IAAIA,aAAJ,EAAoB;YAChBX,UAAU,CAACY,aAAX;YACAD,aAAa,CAACE,YAAd,GAA6BH,IAA7B,CAAmC,YAAW;cAC1CV,UAAU,CAACc,wBAAX;YACH,CAFD;UAGH;QACJ,CAPM,CAAP;MAQH;IAXM,CAAF;EAHQ;AAFN,CAAnB;AAqBA;AACA;AACA;AACA;AACA;;AACA,eAAe,UAAUC,GAAV,EAAeC,QAAf,EAA0B;EACrC,IAAID,GAAG,KAAK,QAAZ,EAAuB;IACnB,IAAIC,QAAJ,EAAe;MACXA,QAAQ,CAACV,OAAT,CAAkBJ,YAAlB;IACH,CAFD,MAEO;MACH,OAAOA,YAAP;IACH;EACJ,CAND,MAMO;IACH,IAAIc,QAAJ,EAAe;MACXA,QAAQ,CAACV,OAAT;IACH;EACJ;AACJ"},"metadata":{},"sourceType":"module"}