{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPatternService.js\";\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwButton from 'viewmodel/AwButtonViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport modelPropertyService from 'js/modelPropertyService';\nimport uwPropertyService from 'js/uwPropertyService';\nimport localeService from 'js/localeService';\nimport logger from 'js/logger';\nimport { noop } from 'js/declUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialize = (elementRefList, prop) => {\n  let assignBtnTitle = null;\n  let isSinglePattern = false;\n  let isMultiplePattern = false;\n  let patternProp = null;\n  let selectedPattern = null;\n\n  if (prop.patterns && _.isArray(prop.patterns)) {\n    if (prop.patterns.length === 1) {\n      isSinglePattern = true;\n    } else if (prop.patterns.length > 1) {\n      isMultiplePattern = true; // Create a view model property for the patterns drop down\n\n      var listBoxProp = {\n        type: 'STRING'\n      };\n      patternProp = modelPropertyService.createViewModelProperty(listBoxProp); // Set the default value on the view model prop\n\n      if (prop.preferredPattern && prop.patterns.indexOf(prop.preferredPattern) !== -1) {\n        patternProp.dbValue = prop.preferredPattern;\n      } else {\n        patternProp.dbValue = prop.patterns[0];\n      }\n\n      selectedPattern = patternProp.dbValue;\n    }\n  } else if (prop.patternAutoAssignFlags && !_.isUndefined(prop.preferredPattern)) {\n    selectedPattern = prop.preferredPattern;\n  }\n\n  let p1 = localeService.getLocalizedText('awAddDirectiveMessages', 'assignButtonTitle').then(function (result) {\n    assignBtnTitle = result;\n  });\n  return Promise.all([p1]).then(() => {\n    return {\n      patternProp,\n      selectedPattern,\n      isSinglePattern,\n      isMultiplePattern,\n      assignBtnTitle\n    };\n  });\n};\n\nconst updatePatternState = (dispatch, value, data) => {\n  let updateValue = {\n    selectedPattern: value,\n    patternProp: { ...data._states.patternProp,\n      dbValue: value\n    }\n  };\n  dispatch({\n    path: 'data._states',\n    value: { ...data._states,\n      ...updateValue\n    }\n  });\n};\n/**\n * render function for awPattern\n * @returns {JSX.Element} react component\n */\n\n\nexport const awPatternRenderFunction = _ref => {\n  let {\n    prop,\n    actions,\n    viewModel,\n    elementRefList\n  } = _ref;\n  let {\n    dropDown\n  } = actions;\n  let {\n    data,\n    dispatch\n  } = viewModel;\n  let {\n    patternProp,\n    selectedPattern,\n    isSinglePattern,\n    isMultiplePattern,\n    assignBtnTitle\n  } = data ? data._states || {} : {};\n\n  if (!prop) {\n    logger.warn('AwPattern prop is undefined.');\n    return;\n  }\n\n  let autoAssign = prop.fielddata && prop.fielddata.isAutoAssign === false && prop.fielddata.patternAutoAssignFlags && prop.fielddata.patternAutoAssignFlags[selectedPattern] === true || isSinglePattern && prop.fielddata && prop.fielddata.patternAutoAssignFlags && prop.fielddata.patternAutoAssignFlags[prop.fielddata.patterns[0]] === true; // onClick handler\n\n  const setSelectedPatternHandler = function (event, pattern) {\n    if (event.key && event.key !== 'Enter') {\n      return;\n    } // case click or enter\n\n\n    let newValue = pattern;\n    let oldValue = patternProp && patternProp.dbValue;\n\n    if (!_.isUndefined(newValue) && newValue !== oldValue && prop.fielddata.patterns.indexOf(newValue) > -1 && newValue !== selectedPattern) {\n      updatePatternState(dispatch, newValue, data);\n\n      if (prop.fielddata.isAutoAssign === undefined || prop.fielddata.isAutoAssign === true || prop.fielddata.isAutoAssignable === true) {\n        const publishData = {\n          prop: prop,\n          newPattern: newValue\n        };\n        eventBus.publish('awPattern.newPatternSelected', publishData);\n\n        if (prop && prop.fielddata && prop.fielddata.action) {\n          // defer is added to let the render cycle complete\n          _.defer(function () {\n            prop.fielddata.action(publishData);\n          });\n        }\n\n        if (prop.onChange) {\n          event.target.value = newValue;\n          prop.onChange(event);\n        }\n      } else {\n        uwPropertyService.setValue(prop, '');\n      }\n    }\n\n    dropDown.hide();\n  };\n\n  const toggleDropdown = function (event) {\n    if (event.key && event.key !== 'Enter') {\n      return;\n    } // case click or enter\n\n\n    dropDown.show({\n      reference: elementRefList.get('input').current,\n      width: elementRefList.get('input').current.offsetWidth\n    });\n  }; // The function will read the pattern from patternProp and will publish an event which will generate the next value as per the pattern\n\n\n  const autoAssignIDs = function () {\n    var pattern = prop.fielddata.preferredPattern;\n\n    if (patternProp && patternProp.dbValue) {\n      pattern = patternProp.dbValue;\n    }\n\n    const publishData = {\n      prop,\n      newPattern: pattern\n    };\n    eventBus.publish('awPattern.newPatternSelected', publishData);\n\n    if (prop && prop.fielddata && prop.fielddata.action) {\n      // defer is added to let the render cycle complete\n      _.defer(function () {\n        prop.fielddata.action(publishData);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-widgets-namingRuleGroup\",\n    children: [isSinglePattern && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-propertylabel\",\n      children: prop.fielddata.patterns[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 30\n    }, this), isMultiplePattern && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-layout-flexRowContainer aw-widget-iconParent\",\n      onClick: toggleDropdown,\n      role: \"button\",\n      tabIndex: \"0\",\n      onKeyPress: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: elementRefList.get('input'),\n        type: \"text\",\n        value: patternProp && patternProp.dbValue,\n        onChange: noop,\n        className: dropDown.open ? 'aw-jswidgets-choice aw-jswidgets-expanded' : 'aw-jswidgets-choice'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AwIcon, {\n        iconId: \"miscChevronDown\",\n        className: \"aw-widget-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 32\n    }, this), autoAssign && /*#__PURE__*/_jsxDEV(AwButton, {\n      className: \"aw-widgets-assignIdButton\",\n      action: autoAssignIDs,\n      children: assignBtnTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 24\n    }, this), dropDown.open && /*#__PURE__*/_jsxDEV(AwPopup, { ...dropDown.options,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-base-scrollPanel\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          role: \"listbox\",\n          tabIndex: 0,\n          className: \"sw-column\",\n          children: prop.fielddata.patterns.map(pattern => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop\",\n                onClick: event => setSelectedPatternHandler(event, pattern),\n                role: \"button\",\n                tabIndex: \"0\",\n                onKeyPress: event => setSelectedPatternHandler(event, pattern),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sw-row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sw-cell-valName\",\n                    title: pattern,\n                    children: pattern\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this)\n            }, pattern, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"names":["AwIcon","AwButton","AwPopup","_","eventBus","modelPropertyService","uwPropertyService","localeService","logger","noop","initialize","elementRefList","prop","assignBtnTitle","isSinglePattern","isMultiplePattern","patternProp","selectedPattern","patterns","isArray","length","listBoxProp","type","createViewModelProperty","preferredPattern","indexOf","dbValue","patternAutoAssignFlags","isUndefined","p1","getLocalizedText","then","result","Promise","all","updatePatternState","dispatch","value","data","updateValue","_states","path","awPatternRenderFunction","actions","viewModel","dropDown","warn","autoAssign","fielddata","isAutoAssign","setSelectedPatternHandler","event","pattern","key","newValue","oldValue","undefined","isAutoAssignable","publishData","newPattern","publish","action","defer","onChange","target","setValue","hide","toggleDropdown","show","reference","get","current","width","offsetWidth","autoAssignIDs","open","options","map"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPatternService.js"],"sourcesContent":["import AwIcon from 'viewmodel/AwIconViewModel';\nimport AwButton from 'viewmodel/AwButtonViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport modelPropertyService from 'js/modelPropertyService';\nimport uwPropertyService from 'js/uwPropertyService';\nimport localeService from 'js/localeService';\nimport logger from 'js/logger';\nimport { noop } from 'js/declUtils';\n\nexport const initialize = ( elementRefList, prop ) => {\n    let assignBtnTitle = null;\n    let isSinglePattern = false;\n    let isMultiplePattern = false;\n    let patternProp = null;\n    let selectedPattern = null;\n\n    if( prop.patterns && _.isArray( prop.patterns ) ) {\n        if( prop.patterns.length === 1 ) {\n            isSinglePattern = true;\n        } else if( prop.patterns.length > 1 ) {\n            isMultiplePattern = true;\n\n            // Create a view model property for the patterns drop down\n            var listBoxProp = {\n                type: 'STRING'\n            };\n\n            patternProp = modelPropertyService.createViewModelProperty( listBoxProp );\n\n            // Set the default value on the view model prop\n            if( prop.preferredPattern &&\n                prop.patterns.indexOf( prop.preferredPattern ) !== -1 ) {\n                patternProp.dbValue = prop.preferredPattern;\n            } else {\n                patternProp.dbValue = prop.patterns[ 0 ];\n            }\n            selectedPattern = patternProp.dbValue;\n        }\n    } else if( prop.patternAutoAssignFlags && !_.isUndefined( prop.preferredPattern ) ) {\n        selectedPattern = prop.preferredPattern;\n    }\n\n    let p1 = localeService.getLocalizedText( 'awAddDirectiveMessages', 'assignButtonTitle' ).then( function( result ) {\n        assignBtnTitle = result;\n    } );\n\n    return Promise.all( [ p1 ] ).then( () => {\n        return {\n            patternProp,\n            selectedPattern,\n            isSinglePattern,\n            isMultiplePattern,\n            assignBtnTitle\n        };\n    } );\n};\n\nconst updatePatternState = ( dispatch, value, data ) => {\n    let updateValue = {\n        selectedPattern: value,\n        patternProp: { ...data._states.patternProp, dbValue: value }\n    };\n    dispatch( { path: 'data._states', value: { ...data._states, ...updateValue } } );\n};\n\n/**\n * render function for awPattern\n * @returns {JSX.Element} react component\n */\nexport const awPatternRenderFunction = ( { prop, actions, viewModel, elementRefList } ) => {\n    let { dropDown } = actions;\n    let { data, dispatch } = viewModel;\n    let {\n        patternProp,\n        selectedPattern,\n        isSinglePattern,\n        isMultiplePattern,\n        assignBtnTitle\n    } = data ? data._states || {} : {};\n\n    if( !prop ) {\n        logger.warn( 'AwPattern prop is undefined.' );\n        return;\n    }\n\n    let autoAssign = prop.fielddata && prop.fielddata.isAutoAssign === false && prop.fielddata.patternAutoAssignFlags && prop.fielddata.patternAutoAssignFlags[ selectedPattern ] === true ||\n        isSinglePattern && prop.fielddata && prop.fielddata.patternAutoAssignFlags && prop.fielddata.patternAutoAssignFlags[ prop.fielddata.patterns[ 0 ] ] === true;\n\n    // onClick handler\n    const setSelectedPatternHandler = function( event, pattern ) {\n        if( event.key && event.key !== 'Enter' ) {\n            return;\n        }\n\n        // case click or enter\n        let newValue = pattern;\n        let oldValue = patternProp && patternProp.dbValue;\n        if( !_.isUndefined( newValue ) && newValue !== oldValue &&\n            prop.fielddata.patterns.indexOf( newValue ) > -1 &&\n            newValue !== selectedPattern ) {\n            updatePatternState( dispatch, newValue, data );\n            if( prop.fielddata.isAutoAssign === undefined || prop.fielddata.isAutoAssign === true || prop.fielddata.isAutoAssignable === true ) {\n                const publishData = {\n                    prop: prop,\n                    newPattern: newValue\n                };\n                eventBus.publish( 'awPattern.newPatternSelected', publishData );\n                if( prop && prop.fielddata && prop.fielddata.action ) {\n                    // defer is added to let the render cycle complete\n                    _.defer( function() {\n                        prop.fielddata.action( publishData );\n                    } );\n                }\n                if( prop.onChange ) {\n                    event.target.value = newValue;\n                    prop.onChange( event );\n                }\n            } else {\n                uwPropertyService.setValue( prop, '' );\n            }\n        }\n\n        dropDown.hide();\n    };\n    const toggleDropdown = function( event ) {\n        if( event.key && event.key !== 'Enter' ) {\n            return;\n        }\n\n        // case click or enter\n        dropDown.show( {\n            reference: elementRefList.get( 'input' ).current,\n            width: elementRefList.get( 'input' ).current.offsetWidth\n        } );\n    };\n\n    // The function will read the pattern from patternProp and will publish an event which will generate the next value as per the pattern\n    const autoAssignIDs = function() {\n        var pattern = prop.fielddata.preferredPattern;\n        if( patternProp && patternProp.dbValue ) {\n            pattern = patternProp.dbValue;\n        }\n        const publishData = {\n            prop,\n            newPattern: pattern\n        };\n        eventBus.publish( 'awPattern.newPatternSelected', publishData );\n        if( prop && prop.fielddata && prop.fielddata.action ) {\n            // defer is added to let the render cycle complete\n            _.defer( function() {\n                prop.fielddata.action( publishData );\n            } );\n        }\n    };\n\n    return <div className='aw-widgets-namingRuleGroup'>\n        { isSinglePattern && <div className='aw-widgets-propertylabel'>{prop.fielddata.patterns[0]}</div>}\n        { isMultiplePattern && <div className='aw-layout-flexRowContainer aw-widget-iconParent' onClick={toggleDropdown} role='button'\n            tabIndex='0' onKeyPress={toggleDropdown}>\n            <input ref={elementRefList.get( 'input' )}\n                type='text'\n                value={patternProp && patternProp.dbValue}\n                onChange={noop}\n                className={dropDown.open ? 'aw-jswidgets-choice aw-jswidgets-expanded' : 'aw-jswidgets-choice'}/>\n            <AwIcon iconId='miscChevronDown' className='aw-widget-icon'></AwIcon>\n        </div>}\n\n        {autoAssign && <AwButton className='aw-widgets-assignIdButton' action={autoAssignIDs}>{ assignBtnTitle }</AwButton> }\n\n        {dropDown.open && <AwPopup {...dropDown.options}>\n            <div className='aw-base-scrollPanel'>\n                <ul role='listbox' tabIndex={0}  className='sw-column'>\n                    {prop.fielddata.patterns.map( ( pattern )=>{\n                        return <li key={pattern}>\n                            <div className='sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop' onClick={( event )=>setSelectedPatternHandler( event, pattern )} role='button'\n                                tabIndex='0' onKeyPress={( event )=>setSelectedPatternHandler( event, pattern )}>\n                                <div className='sw-row'>\n                                    <div className='sw-cell-valName' title={pattern}>{pattern}</div>\n                                </div>\n                            </div>\n                        </li>;\n                    } )}\n                </ul>\n            </div>\n        </AwPopup>}\n    </div>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}