{"ast":null,"code":"import AwPropertyLovVal from'viewmodel/AwPropertyLovValViewModel';/**\n *\n * @param {String} link url to open a new tab\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const loadTriStateInfo=data=>{let lovEntries=[];lovEntries.push({propDisplayValue:data.propertyRadioTrueText,propInternalValue:true},{propDisplayValue:data.propertyRadioFalseText,propInternalValue:false});let result={triStateValues:lovEntries,totalFound:lovEntries.length};return result;};/**\n * render function for AwPropertyTriStateVal\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */export const awPropertyTriStateValRenderFunction=props=>{const{viewModel,ctxMin,actions,i18n,fields,grids,formProp,messages,...prop}=props;let fielddata={...prop.fielddata};fielddata.hasLov=true;fielddata.isSelectOnly=true;fielddata.propertyLabelDisplay='NO_PROPERTY_LABEL';fielddata.dataProvider=viewModel.dataProviders.triStateProvider;let finalProps={...prop,fielddata};let vmData={...viewModel.getData()};if(vmData.propertyRadioTrueText!==prop.fielddata.propertyRadioTrueText&&vmData.propertyRadioFalseText!==prop.fielddata.propertyRadioFalseText){vmData.propertyRadioTrueText=prop.fielddata.propertyRadioTrueText;vmData.propertyRadioFalseText=prop.fielddata.propertyRadioFalseText;viewModel.dispatch({path:'data',value:vmData});}return/*#__PURE__*/_jsx(AwPropertyLovVal,{...finalProps});};","map":null,"metadata":{},"sourceType":"module"}