{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwIconService2.js\"; // Copyright (c) 2021 Siemens\n\nimport { convertToHtml } from 'js/reactHelper';\nimport awIconService from 'js/awIconService';\nimport { includeImage } from 'js/moduleLoader';\nimport { getImageAliasFromId } from 'js/imageRegistry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AwIconRenderFunction = props => {\n  let svg = null;\n  let iconName = null;\n  const {\n    iconId\n  } = props; // add icon-id for consistency\n\n  const propFinal = {\n    iconid: iconId,\n    className: 'aw-icon',\n    'icon-id': iconId\n  };\n  let imgAlias = getImageAliasFromId(`cmd${iconId}`);\n\n  if (props.cmdIcon && imgAlias) {\n    return /*#__PURE__*/_jsxDEV(\"span\", { ...propFinal,\n      children: includeImage(imgAlias, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (props.iconId) {\n    iconName = props.iconId.replace(/.*[\\\\/]([^\\\\/]*).svg$/, '$1').replace(/[0-9]*$/, '');\n  }\n\n  imgAlias = iconName && getImageAliasFromId(iconName);\n\n  if (imgAlias) {\n    return /*#__PURE__*/_jsxDEV(\"span\", { ...propFinal,\n      children: includeImage(imgAlias, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  svg = awIconService.getIconDef(iconName); //AwPropertyImage already has this implementation\n  //We will be deprecating AwPropertyImage and use AwIcon instead\n\n  if (svg) {\n    return /*#__PURE__*/_jsxDEV(\"span\", { ...propFinal,\n      children: convertToHtml(svg)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c2 = AwIconRenderFunction;\n_c = AwIconRenderFunction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AwIconRenderFunction\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"AwIconRenderFunction\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwIconService2.js"],"names":["AwIconRenderFunction","props","svg","iconName","iconId","propFinal","iconid","className","imgAlias","getImageAliasFromId","includeImage","awIconService","convertToHtml"],"mappings":"6JAAA;;AACA,SAAA,aAAA,QAAA,gBAAA;AACA,OAAA,aAAA,MAAA,kBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AACA,SAAA,mBAAA,QAAA,kBAAA;;AACA,OAAO,MAAMA,oBAAoB,GAAKC,KAAF,IAAa;EAC7C,IAAIC,GAAG,GAAP,IAAA;EACA,IAAIC,QAAQ,GAAZ,IAAA;EACA,MAAM;IAAEC;EAAF,IAHuC,KAG7C,CAH6C,CAK7C;;EACA,MAAMC,SAAS,GAAG;IAAEC,MAAM,EAAR,MAAA;IAAkBC,SAAS,EAA3B,SAAA;IAAwC,WAAWH;EAAnD,CAAlB;EACA,IAAII,QAAQ,GAAGC,mBAAmB,CAAG,MAAKL,MAA1C,EAAkC,CAAlC;;EACA,IAAIH,KAAK,CAALA,OAAAA,IAAJ,QAAA,EAAgC;IAC5B,OAAA,aAAO,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,SAAA;MAAA,QAAA,EAAsBS,YAAY,CAAA,QAAA,EAAA,IAAA;IAAlC,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAP,IAAO,CAAP;EACH;;EAED,IAAIT,KAAK,CAAT,MAAA,EAAmB;IACfE,QAAQ,GAAGF,KAAK,CAALA,MAAAA,CAAAA,OAAAA,CAAAA,uBAAAA,EAAAA,IAAAA,EAAAA,OAAAA,CAAAA,SAAAA,EAAXE,EAAWF,CAAXE;EACH;;EACDK,QAAQ,GAAGL,QAAQ,IAAIM,mBAAmB,CAA1CD,QAA0C,CAA1CA;;EACA,IAAA,QAAA,EAAe;IACX,OAAA,aAAO,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,SAAA;MAAA,QAAA,EAAsBE,YAAY,CAAA,QAAA,EAAA,IAAA;IAAlC,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAP,IAAO,CAAP;EACH;;EACDR,GAAG,GAAGS,aAAa,CAAbA,UAAAA,CAnBuC,QAmBvCA,CAANT,CAnB6C,CAoB7C;EACA;;EACA,IAAA,GAAA,EAAU;IACN,OAAA,aAAO,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,SAAA;MAAA,QAAA,EAAsBU,aAAa,CAAA,GAAA;IAAnC,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAP,IAAO,CAAP;EACH;AAxBE,CAAA;MAAMZ,oB;KAAAA,oB","sourcesContent":["// Copyright (c) 2021 Siemens\nimport { convertToHtml } from 'js/reactHelper';\nimport awIconService from 'js/awIconService';\nimport { includeImage } from 'js/moduleLoader';\nimport { getImageAliasFromId } from 'js/imageRegistry';\nexport const AwIconRenderFunction = ( props ) => {\n    let svg = null;\n    let iconName = null;\n    const { iconId } = props;\n\n    // add icon-id for consistency\n    const propFinal = { iconid: iconId, className: 'aw-icon', 'icon-id': iconId };\n    let imgAlias = getImageAliasFromId( `cmd${iconId}` );\n    if( props.cmdIcon && imgAlias ) {\n        return <span {...propFinal}>{includeImage( imgAlias, true )}</span>;\n    }\n\n    if( props.iconId ) {\n        iconName = props.iconId.replace( /.*[\\\\/]([^\\\\/]*).svg$/, '$1' ).replace( /[0-9]*$/, '' );\n    }\n    imgAlias = iconName && getImageAliasFromId( iconName );\n    if( imgAlias ) {\n        return <span {...propFinal}>{includeImage( imgAlias, true )}</span>;\n    }\n    svg = awIconService.getIconDef( iconName );\n    //AwPropertyImage already has this implementation\n    //We will be deprecating AwPropertyImage and use AwIcon instead\n    if( svg ) {\n        return <span {...propFinal}>{convertToHtml( svg )}</span>;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}