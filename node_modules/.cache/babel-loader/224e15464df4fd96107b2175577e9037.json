{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwGuidanceMessageService.js\";\nimport AwButton from 'viewmodel/AwButtonViewModel';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwLink from 'viewmodel/AwLinkViewModel';\nimport { convertToHtml } from 'js/reactHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GUIDANCE_MSG_STYLES = {\n  ERROR: 'guidance-container-type-error',\n  WARNING: 'guidance-container-type-warning',\n  INFO: 'guidance-container-type-information',\n  SUCCESS: 'guidance-container-type-success'\n};\nconst GUIDANCE_MSG_ICONS = {\n  ERROR: 'indicatorCancelled',\n  WARNING: 'indicatorWarning',\n  INFO: 'indicatorInfo',\n  SUCCESS: 'indicatorCompleted'\n};\nconst GUIDANCE_MSG_TYPES = {\n  INFO: 'generalInfo',\n  WARNING: 'warningInfo',\n  ERROR: 'errorInfo',\n  SUCCESS: 'successInfo'\n};\n\nconst applyLinkParams = (messageString, messageParams) => {\n  if (!messageString) {\n    return [];\n  }\n\n  const outputString = [];\n  const msgParts = messageString.split(/(\\{@msgTxtLink[0-9]*\\})/g);\n\n  for (const msgStr of msgParts) {\n    if (/\\{@msgTxtLink[0-9]*\\}/g.test(msgStr)) {\n      const index = msgStr.split('{@msgTxtLink').pop().split('}')[0];\n      outputString.push( /*#__PURE__*/_jsxDEV(AwLink, { ...messageParams[index].prop,\n        action: messageParams[index].action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this));\n      continue;\n    } else {\n      outputString.push(convertToHtml(`<span>${msgStr}</span>`));\n    }\n  }\n\n  return outputString;\n};\n\nexport const closeGuidanceMessage = () => {\n  return true;\n};\nexport const awGuidanceMessageRenderFunction = props => {\n  const {\n    i18n,\n    actions,\n    viewModel\n  } = props;\n  const {\n    data\n  } = viewModel;\n  const {\n    message,\n    icon\n  } = props;\n\n  if (message && !data.hideMessage) {\n    const guidanceMsgDef = message.messageDefn;\n    const guidanceMessageText = applyLinkParams(message.localizedMessage, guidanceMsgDef && guidanceMsgDef.messageTextLinks);\n    const messageType = guidanceMsgDef && guidanceMsgDef.messageType.toUpperCase();\n    let bannerStyleClass = props.bannerStyle !== 'false' ? 'guidance-container-banner' : 'guidance-container-fullWidth';\n    const iconId = icon ? icon : GUIDANCE_MSG_ICONS[messageType];\n    const messageTypeGuidance = i18n[GUIDANCE_MSG_TYPES[messageType]];\n    const guidanceMessageClass = GUIDANCE_MSG_STYLES[messageType] + ' ' + bannerStyleClass;\n    const isCloseButtonHidden = props.closable && /^false$/i.test(props.closable) === true;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'sw-guidanceMessage' + ' ' + guidanceMessageClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-guidanceMsg-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sw-guidanceMsg-textContainer\",\n          children: [props.showIcon !== 'false' ? /*#__PURE__*/_jsxDEV(AwIcon, {\n            className: \"sw-guidanceMsg-typeIndicator\",\n            iconId: iconId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 55\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sw-guidanceMsg-text\",\n            children: [props.showType !== 'false' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sw-guidanceMsg-guideText\",\n              children: [messageTypeGuidance, \"\\xA0-\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this) : '', guidanceMessageText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), !isCloseButtonHidden ? /*#__PURE__*/_jsxDEV(AwButton, {\n        \"aria-label\": i18n.closeMessage,\n        className: \"sw-guidanceMsg-closeButton\",\n        iconId: \"cmdClosePanel\",\n        action: actions.closeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwGuidanceMessageService.js"],"names":["GUIDANCE_MSG_STYLES","ERROR","WARNING","INFO","SUCCESS","GUIDANCE_MSG_ICONS","GUIDANCE_MSG_TYPES","applyLinkParams","outputString","msgParts","messageString","index","msgStr","messageParams","action","convertToHtml","closeGuidanceMessage","awGuidanceMessageRenderFunction","props","viewModel","data","icon","message","guidanceMsgDef","guidanceMessageText","messageType","bannerStyleClass","iconId","messageTypeGuidance","i18n","guidanceMessageClass","isCloseButtonHidden","children","actions","closeMessage"],"mappings":"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","sourcesContent":["import AwButton from 'viewmodel/AwButtonViewModel';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwLink from 'viewmodel/AwLinkViewModel';\nimport { convertToHtml } from 'js/reactHelper';\n\nconst GUIDANCE_MSG_STYLES = {\n    ERROR: 'guidance-container-type-error',\n    WARNING: 'guidance-container-type-warning',\n    INFO: 'guidance-container-type-information',\n    SUCCESS: 'guidance-container-type-success'\n};\n\nconst GUIDANCE_MSG_ICONS = {\n    ERROR: 'indicatorCancelled',\n    WARNING: 'indicatorWarning',\n    INFO: 'indicatorInfo',\n    SUCCESS: 'indicatorCompleted'\n};\n\nconst GUIDANCE_MSG_TYPES = {\n    INFO: 'generalInfo',\n    WARNING: 'warningInfo',\n    ERROR: 'errorInfo',\n    SUCCESS: 'successInfo'\n};\n\nconst applyLinkParams = ( messageString, messageParams ) => {\n    if( !messageString ) {\n        return [];\n    }\n\n    const outputString = [];\n    const msgParts = messageString.split( /(\\{@msgTxtLink[0-9]*\\})/g );\n\n    for( const msgStr of msgParts ) {\n        if( /\\{@msgTxtLink[0-9]*\\}/g.test( msgStr ) ) {\n            const index = msgStr.split( '{@msgTxtLink' ).pop().split( '}' )[ 0 ];\n            outputString.push( <AwLink {...messageParams[ index ].prop} action={messageParams[ index ].action}></AwLink> );\n            continue;\n        } else {\n            outputString.push( convertToHtml( `<span>${msgStr}</span>` ) );\n        }\n    }\n\n    return outputString;\n};\n\nexport const closeGuidanceMessage = () => {\n    return true;\n};\n\nexport const awGuidanceMessageRenderFunction = ( props ) => {\n    const { i18n, actions, viewModel } = props;\n    const { data } = viewModel;\n    const { message, icon } = props;\n    if( message && !data.hideMessage ) {\n        const guidanceMsgDef = message.messageDefn;\n        const guidanceMessageText = applyLinkParams( message.localizedMessage, guidanceMsgDef && guidanceMsgDef.messageTextLinks );\n        const messageType = guidanceMsgDef && guidanceMsgDef.messageType.toUpperCase();\n        let bannerStyleClass = props.bannerStyle !== 'false' ? 'guidance-container-banner' : 'guidance-container-fullWidth';\n        const iconId = icon ? icon : GUIDANCE_MSG_ICONS[ messageType ];\n        const messageTypeGuidance = i18n[ GUIDANCE_MSG_TYPES[ messageType ] ];\n        const guidanceMessageClass = GUIDANCE_MSG_STYLES[ messageType ] + ' ' + bannerStyleClass;\n        const isCloseButtonHidden = props.closable && ( /^false$/i ).test( props.closable ) === true;\n        return (\n            <div className={'sw-guidanceMessage' + ' ' + guidanceMessageClass}>\n                <div className='sw-guidanceMsg-container'>\n                    <div className='sw-guidanceMsg-textContainer'>\n                        {props.showIcon !== 'false' ? <AwIcon className='sw-guidanceMsg-typeIndicator' iconId={iconId}></AwIcon> : ''}\n                        <div className='sw-guidanceMsg-text'>\n                            {props.showType !== 'false' ?\n                                <span className='sw-guidanceMsg-guideText'>{messageTypeGuidance}&nbsp;-&nbsp;</span> : ''}\n                            {guidanceMessageText}\n                        </div>\n                    </div>\n                    <div className='flex-shrink'>\n                        {props.children}\n                    </div>\n                </div>\n                {!isCloseButtonHidden ? <AwButton aria-label={i18n.closeMessage} className='sw-guidanceMsg-closeButton' iconId='cmdClosePanel' action={actions.closeMessage}></AwButton> : ''}\n            </div>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}