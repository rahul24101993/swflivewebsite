{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwNodeService.js\"; // Copyright (c) 2021 Siemens\n\nimport AwPropertyImage from 'viewmodel/AwPropertyImageViewModel';\nimport AwNode from 'viewmodel/AwNodeViewModel';\nimport wcagSvc from 'js/wcagService';\nimport { mapChildren } from 'js/reactHelper';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet BASE_MARGIN = 16;\n\nconst collapse = (viewModel, node) => {\n  node.expanded = false;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  dispatch({\n    path: 'data._isRefreshNeeded',\n    value: {\n      _isRefreshNeeded: !data._isRefreshNeeded\n    }\n  });\n};\n\nconst expand = (viewModel, node) => {\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  node.expanded = true;\n  dispatch({\n    path: 'data._isRefreshNeeded',\n    value: {\n      _isRefreshNeeded: !data._isRefreshNeeded\n    }\n  });\n};\n\nconst toggleSelection = (event, node, prop) => {\n  prop.toggleSelectionHandler(event, node);\n};\n\nconst handleKeyDown = (event, node, prop) => {\n  if (wcagSvc.isValidKeyPress(event)) {\n    toggleSelection(event, node, prop);\n  }\n};\n\nexport const awNodeRenderFunction = props => {\n  const {\n    viewModel,\n    tree,\n    level,\n    children,\n    ...prop\n  } = props;\n\n  const getLevelMargin = (node, level) => {\n    let calculatedMargin = BASE_MARGIN * level;\n\n    if (!node.children || node.children.length === 0) {\n      calculatedMargin += 16;\n    }\n\n    return {\n      marginLeft: `${calculatedMargin}px`\n    };\n  };\n\n  if (tree === undefined) {\n    return;\n  }\n\n  let candidate = _.concat([], children);\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"aw-ui-tree\",\n    children: tree.map((node, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"aw-ui-treeNode\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'aw-ui-treeNode-valueContainer sw-aria-border' + (node.selected ? ' aw-state-selected' : ''),\n          tabIndex: \"0\",\n          role: \"tree\",\n          style: getLevelMargin(node, props.level),\n          children: [node.children && node.children.length > 0 && node.expanded && /*#__PURE__*/_jsxDEV(AwPropertyImage, {\n            name: \"miscExpandedTree\",\n            className: \"expanded\",\n            onClickHandler: () => collapse(viewModel, node)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this), node.children && node.children.length > 0 && !node.expanded && /*#__PURE__*/_jsxDEV(AwPropertyImage, {\n            name: \"miscExpandedTree\",\n            className: \"collapsed\",\n            onClickHandler: () => expand(viewModel, node)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            tabIndex: \"-1\",\n            \"aria-expanded\": node.expanded,\n            role: \"treeitem\",\n            className: \"aw-ui-treeNodeValue\",\n            onKeyDown: e => handleKeyDown(e, node, props),\n            onClick: e => toggleSelection(e, node, props),\n            children: mapChildren(candidate, {\n              node,\n              index\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), node.expanded && node.children && /*#__PURE__*/_jsxDEV(AwNode, {\n          level: level + 1,\n          tree: node.children,\n          toggleSelectionHandler: props.toggleSelectionHandler,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 32\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwNodeService.js"],"names":["BASE_MARGIN","collapse","node","dispatch","path","value","_isRefreshNeeded","data","expand","toggleSelection","prop","handleKeyDown","wcagSvc","awNodeRenderFunction","props","getLevelMargin","calculatedMargin","marginLeft","tree","candidate","_","e","mapChildren","index","level","children"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyImage from 'viewmodel/AwPropertyImageViewModel';\nimport AwNode from 'viewmodel/AwNodeViewModel';\nimport wcagSvc from 'js/wcagService';\nimport { mapChildren } from 'js/reactHelper';\nimport _ from 'lodash';\n\nlet BASE_MARGIN = 16;\nconst collapse = ( viewModel, node ) => {\n    node.expanded = false;\n    const { data, dispatch } = viewModel;\n    dispatch( { path: 'data._isRefreshNeeded', value: { _isRefreshNeeded: !data._isRefreshNeeded } } );\n};\n\nconst expand = ( viewModel, node ) => {\n    const { data, dispatch } = viewModel;\n    node.expanded = true;\n    dispatch( { path: 'data._isRefreshNeeded', value: { _isRefreshNeeded: !data._isRefreshNeeded } } );\n};\n\nconst toggleSelection = ( event, node, prop ) => {\n    prop.toggleSelectionHandler( event, node );\n};\n\nconst handleKeyDown = ( event, node, prop ) => {\n    if( wcagSvc.isValidKeyPress( event ) ) {\n        toggleSelection( event, node, prop );\n    }\n};\n\nexport const awNodeRenderFunction = ( props ) => {\n    const { viewModel, tree, level, children, ...prop } = props;\n\n\n    const getLevelMargin = ( node, level ) => {\n        let calculatedMargin = BASE_MARGIN * level;\n        if( !node.children || node.children.length === 0 ) {\n            calculatedMargin += 16;\n        }\n        return { marginLeft: `${calculatedMargin }px` };\n    };\n    if( tree === undefined ) {\n        return;\n    }\n    let candidate = _.concat( [], children );\n\n    return (\n        <ul className='aw-ui-tree'>\n            {\n                tree.map( ( node, index ) => {\n                    return (\n                        <li className='aw-ui-treeNode' key={index}>\n                            <div className={'aw-ui-treeNode-valueContainer sw-aria-border' + ( node.selected ? ' aw-state-selected' : '' ) }\n                                tabIndex='0' role='tree'\n                                style={getLevelMargin( node, props.level )} >\n                                { node.children && node.children.length > 0 && node.expanded &&\n                                    <AwPropertyImage name ='miscExpandedTree' className='expanded'\n                                        onClickHandler={ ( ) => collapse( viewModel, node ) } >\n                                    </AwPropertyImage>\n                                }\n                                { node.children && node.children.length > 0 && !node.expanded &&\n                                    <AwPropertyImage name ='miscExpandedTree' className='collapsed'\n                                        onClickHandler={ ( ) => expand( viewModel, node )  } >\n                                    </AwPropertyImage>\n                                }\n                                <span tabIndex='-1'\n                                    aria-expanded={node.expanded} role='treeitem' className='aw-ui-treeNodeValue'\n                                    onKeyDown = { ( e ) => handleKeyDown( e, node, props ) }\n                                    onClick={ ( e )=>toggleSelection( e, node, props ) } >\n                                    {  mapChildren( candidate, {  node, index } ) }\n                                </span>\n                            </div>\n                            {\n                                node.expanded && node.children &&\n                               <AwNode level= {level + 1} tree= {node.children} toggleSelectionHandler={props.toggleSelectionHandler}  >\n                                   {children}\n                               </AwNode>\n                            }\n                        </li>\n                    );\n                } )\n            }\n        </ul>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}