{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwSelectionSummaryInternal from'viewmodel/AwSelectionSummaryInternalViewModel';import{ExistWhen}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";const AwSelectionSummaryInternalExistWhen=ExistWhen(AwSelectionSummaryInternal);/*\nctx imports\n*/const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('js/AwSelectionSummaryService',()=>import('js/AwSelectionSummaryService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"actions\":{\"loadSWATabs\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"initialize\",\"outputData\":{\"tabsConfig\":\"tabsConfig\",\"ctxParameters\":\"ctxParameters\",\"additionalParameters\":\"additionalParameters\"},\"deps\":\"js/AwSelectionSummaryService\"}},\"lifecycleHooks\":{\"onMount\":\"loadSWATabs\"},\"props\":{\"selection\":{\"type\":\"object\"},\"context\":{\"type\":\"object\"},\"selection-data\":{\"type\":\"object\"}},\"_viewModelId\":\"AwSelectionSummary\",\"_uniqueViewModelId\":\"AwSelectionSummary\",\"ctx\":{}};/*\n<aw-selection-summary-internal tabs-config=\"data.tabsConfig\" ctx-parameters=\"data.ctxParameters\" additional-parameters=\"data.additionalParameters\" selection=\"props.selection\" context=\"props.context\" selection-data=\"props.selectionData\" exist-when=\"data.tabsConfig\">\n</aw-selection-summary-internal>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsx(AwSelectionSummaryInternalExistWhen,{tabsConfig:AwParseService.instance(\"data.tabsConfig\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),ctxParameters:AwParseService.instance(\"data.ctxParameters\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),additionalParameters:AwParseService.instance(\"data.additionalParameters\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),selection:AwParseService.instance(\"props.selection\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),context:AwParseService.instance(\"props.context\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),selectionData:AwParseService.instance(\"props.selectionData\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"data.tabsConfig\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}