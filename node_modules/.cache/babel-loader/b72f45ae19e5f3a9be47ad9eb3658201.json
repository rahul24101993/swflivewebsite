{"ast":null,"code":"// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\n/*\nrender function\n*/\n\nimport { awCommandPanelRenderFunction } from 'js/AwCommandPanelService';\n/*\nctx imports\n*/\n\nconst ctxImportObj = {};\n/*\ndynamic import\n */\n\nregisterDynImportEntry('js/AwCommandPanelService', () => import('js/AwCommandPanelService'));\n;\n/*\nview model\n */\n\nconst declViewModelJson = {\n  \"schemaVersion\": \"1.0.0\",\n  \"actions\": {\n    \"render\": {\n      \"method\": \"awCommandPanelRenderFunction\",\n      \"deps\": \"js/AwCommandPanelService\"\n    },\n    \"executeReveal\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"executeReveal\",\n      \"inputData\": {\n        \"revealAction\": \"{{props.revealAction}}\",\n        \"subPanels\": \"{{props.children}}\"\n      },\n      \"outputData\": {\n        \"staticCommandSubPanels\": \"\"\n      },\n      \"deps\": \"js/AwCommandPanelService\"\n    },\n    \"navigatePanel\": {\n      \"actionType\": \"batchJob\",\n      \"steps\": [{\n        \"action\": \"initiatePanelNav\"\n      }, {\n        \"action\": \"dispatchActiveView\"\n      }]\n    },\n    \"initiatePanelNav\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"navigatePanel\",\n      \"inputData\": {\n        \"evenData\": \"{{parameters.eventData}}\",\n        \"updateActiveView\": \"{{props.updateActiveView}}\",\n        \"panelNavTree\": \"{{data.panelNavTree}}\",\n        \"dynamicSubPanels\": \"{{data.dynamicSubPanels}}\",\n        \"staticCommandSubPanels\": \"{{data.staticCommandSubPanels}}\",\n        \"data\": \"{{data}}\"\n      },\n      \"outputData\": {\n        \"panelNavTree\": \"panelNavTree\",\n        \"dynamicSubPanels\": \"dynamicSubPanels\",\n        \"currentView\": \"currentView\"\n      },\n      \"deps\": \"js/AwCommandPanelService\"\n    },\n    \"dispatchActiveView\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"dispatchActiveView\",\n      \"inputData\": {\n        \"updateActiveView\": \"{{props.updateActiveView}}\",\n        \"currentView\": \"{{data.currentView}}\"\n      },\n      \"deps\": \"js/AwCommandPanelService\"\n    }\n  },\n  \"data\": {\n    \"panelNavTree\": null,\n    \"dynamicSubPanels\": [],\n    \"staticCommandSubPanels\": []\n  },\n  \"props\": {\n    \"update-hook\": {\n      \"type\": \"object\"\n    },\n    \"caption\": {\n      \"type\": \"string\"\n    },\n    \"hide-title\": {\n      \"type\": \"object\"\n    },\n    \"anchor\": {\n      \"type\": \"object\"\n    },\n    \"context\": {\n      \"type\": \"object\"\n    },\n    \"submit-action\": {\n      \"type\": \"action\"\n    },\n    \"sub-panel-context\": {\n      \"type\": \"object\"\n    }\n  },\n  \"conditions\": {},\n  \"onEvent\": [{\n    \"eventId\": \"awPanel.navigate\",\n    \"action\": \"navigatePanel\",\n    \"inputArgs\": {\n      \"eventData\": \"{{eventData}}\"\n    }\n  }],\n  \"lifecycleHooks\": {\n    \"render\": \"render\",\n    \"onMount\": \"executeReveal\"\n  },\n  \"_viewModelId\": \"AwCommandPanel\",\n  \"_uniqueViewModelId\": \"AwCommandPanel\",\n  \"ctx\": {}\n};\n/*\ndefine component\n*/\n\nconst Component = createComponent(declViewModelJson, awCommandPanelRenderFunction, undefined, ctxImportObj);\nexport default Component;","map":{"version":3,"names":["createComponent","registerDynImportEntry","AwParseService","AwFilterService","getField","Fragment","filterSer","instance","awCommandPanelRenderFunction","ctxImportObj","declViewModelJson","Component","undefined"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/viewmodel/AwCommandPanelViewModel.json"],"sourcesContent":["// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\n\n\n\n/*\nrender function\n*/\nimport { awCommandPanelRenderFunction } from 'js/AwCommandPanelService';\n\n\n/*\nctx imports\n*/\n\nconst ctxImportObj = {  };\n\n\n/*\ndynamic import\n */\nregisterDynImportEntry('js/AwCommandPanelService', () => import('js/AwCommandPanelService'));;\n\n/*\nview model\n */\nconst declViewModelJson = {\n    \"schemaVersion\": \"1.0.0\",\n    \"actions\": {\n        \"render\": {\n            \"method\": \"awCommandPanelRenderFunction\",\n            \"deps\": \"js/AwCommandPanelService\"\n        },\n        \"executeReveal\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"executeReveal\",\n            \"inputData\": {\n                \"revealAction\": \"{{props.revealAction}}\",\n                \"subPanels\": \"{{props.children}}\"\n            },\n            \"outputData\": {\n                \"staticCommandSubPanels\": \"\"\n            },\n            \"deps\": \"js/AwCommandPanelService\"\n        },\n        \"navigatePanel\": {\n            \"actionType\": \"batchJob\",\n            \"steps\": [\n                {\n                    \"action\": \"initiatePanelNav\"\n                },\n                {\n                    \"action\": \"dispatchActiveView\"\n                }\n            ]\n        },\n        \"initiatePanelNav\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"navigatePanel\",\n            \"inputData\": {\n                \"evenData\": \"{{parameters.eventData}}\",\n                \"updateActiveView\": \"{{props.updateActiveView}}\",\n                \"panelNavTree\": \"{{data.panelNavTree}}\",\n                \"dynamicSubPanels\": \"{{data.dynamicSubPanels}}\",\n                \"staticCommandSubPanels\": \"{{data.staticCommandSubPanels}}\",\n                \"data\": \"{{data}}\"\n            },\n            \"outputData\": {\n                \"panelNavTree\": \"panelNavTree\",\n                \"dynamicSubPanels\": \"dynamicSubPanels\",\n                \"currentView\": \"currentView\"\n            },\n            \"deps\": \"js/AwCommandPanelService\"\n        },\n        \"dispatchActiveView\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"dispatchActiveView\",\n            \"inputData\": {\n                \"updateActiveView\": \"{{props.updateActiveView}}\",\n                \"currentView\": \"{{data.currentView}}\"\n            },\n            \"deps\": \"js/AwCommandPanelService\"\n        }\n    },\n    \"data\": {\n        \"panelNavTree\": null,\n        \"dynamicSubPanels\": [],\n        \"staticCommandSubPanels\": []\n    },\n    \"props\": {\n        \"update-hook\": {\n            \"type\": \"object\"\n        },\n        \"caption\": {\n            \"type\": \"string\"\n        },\n        \"hide-title\": {\n            \"type\": \"object\"\n        },\n        \"anchor\": {\n            \"type\": \"object\"\n        },\n        \"context\": {\n            \"type\": \"object\"\n        },\n        \"submit-action\": {\n            \"type\": \"action\"\n        },\n        \"sub-panel-context\": {\n            \"type\": \"object\"\n        }\n    },\n    \"conditions\": {},\n    \"onEvent\": [\n        {\n            \"eventId\": \"awPanel.navigate\",\n            \"action\": \"navigatePanel\",\n            \"inputArgs\": {\n                \"eventData\": \"{{eventData}}\"\n            }\n        }\n    ],\n    \"lifecycleHooks\": {\n        \"render\": \"render\",\n        \"onMount\": \"executeReveal\"\n    },\n    \"_viewModelId\": \"AwCommandPanel\",\n    \"_uniqueViewModelId\": \"AwCommandPanel\",\n    \"ctx\": {}\n};\n\n\n\n\n/*\ndefine component\n*/\nconst Component = createComponent( declViewModelJson, awCommandPanelRenderFunction, undefined, ctxImportObj );\n\nexport default Component;"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,yBAAhC;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,IAAIC,SAAS,GAAGH,eAAe,CAACI,QAAhC;AAIA;AACA;AACA;;AACA,SAASC,4BAAT,QAA6C,0BAA7C;AAGA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAGA;AACA;AACA;;AACAR,sBAAsB,CAAC,0BAAD,EAA6B,MAAM,OAAO,0BAAP,CAAnC,CAAtB;AAA6F;AAE7F;AACA;AACA;;AACA,MAAMS,iBAAiB,GAAG;EACtB,iBAAiB,OADK;EAEtB,WAAW;IACP,UAAU;MACN,UAAU,8BADJ;MAEN,QAAQ;IAFF,CADH;IAKP,iBAAiB;MACb,cAAc,YADD;MAEb,UAAU,eAFG;MAGb,aAAa;QACT,gBAAgB,wBADP;QAET,aAAa;MAFJ,CAHA;MAOb,cAAc;QACV,0BAA0B;MADhB,CAPD;MAUb,QAAQ;IAVK,CALV;IAiBP,iBAAiB;MACb,cAAc,UADD;MAEb,SAAS,CACL;QACI,UAAU;MADd,CADK,EAIL;QACI,UAAU;MADd,CAJK;IAFI,CAjBV;IA4BP,oBAAoB;MAChB,cAAc,YADE;MAEhB,UAAU,eAFM;MAGhB,aAAa;QACT,YAAY,0BADH;QAET,oBAAoB,4BAFX;QAGT,gBAAgB,uBAHP;QAIT,oBAAoB,2BAJX;QAKT,0BAA0B,iCALjB;QAMT,QAAQ;MANC,CAHG;MAWhB,cAAc;QACV,gBAAgB,cADN;QAEV,oBAAoB,kBAFV;QAGV,eAAe;MAHL,CAXE;MAgBhB,QAAQ;IAhBQ,CA5Bb;IA8CP,sBAAsB;MAClB,cAAc,YADI;MAElB,UAAU,oBAFQ;MAGlB,aAAa;QACT,oBAAoB,4BADX;QAET,eAAe;MAFN,CAHK;MAOlB,QAAQ;IAPU;EA9Cf,CAFW;EA0DtB,QAAQ;IACJ,gBAAgB,IADZ;IAEJ,oBAAoB,EAFhB;IAGJ,0BAA0B;EAHtB,CA1Dc;EA+DtB,SAAS;IACL,eAAe;MACX,QAAQ;IADG,CADV;IAIL,WAAW;MACP,QAAQ;IADD,CAJN;IAOL,cAAc;MACV,QAAQ;IADE,CAPT;IAUL,UAAU;MACN,QAAQ;IADF,CAVL;IAaL,WAAW;MACP,QAAQ;IADD,CAbN;IAgBL,iBAAiB;MACb,QAAQ;IADK,CAhBZ;IAmBL,qBAAqB;MACjB,QAAQ;IADS;EAnBhB,CA/Da;EAsFtB,cAAc,EAtFQ;EAuFtB,WAAW,CACP;IACI,WAAW,kBADf;IAEI,UAAU,eAFd;IAGI,aAAa;MACT,aAAa;IADJ;EAHjB,CADO,CAvFW;EAgGtB,kBAAkB;IACd,UAAU,QADI;IAEd,WAAW;EAFG,CAhGI;EAoGtB,gBAAgB,gBApGM;EAqGtB,sBAAsB,gBArGA;EAsGtB,OAAO;AAtGe,CAA1B;AA4GA;AACA;AACA;;AACA,MAAMC,SAAS,GAAGX,eAAe,CAAEU,iBAAF,EAAqBF,4BAArB,EAAmDI,SAAnD,EAA8DH,YAA9D,CAAjC;AAEA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}