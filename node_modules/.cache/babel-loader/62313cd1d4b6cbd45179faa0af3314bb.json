{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/* eslint-env es6 */ /**\n * @module js/splmStatsLocationService\n */ // import { wrapFunction } from 'js/splmStatsJsService';\nimport{setReportAnalytics}from'js/splmStatsUtils';const POPSTATE='popState';const HASHCHANGE='hashchange';let _procs=[];const globalHistoryPushState=history.pushState;const globalHistoryReplaceState=history.replaceState;const wrapFunction=function(thisArg,func){return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(_procs.length===0){return func.apply(thisArg,args);}try{_procs.forEach(function(proc){proc.start();});}catch(ex){// TODO: Do nothing for now, will fill it up before EOD 1905\n}const res=func.apply(thisArg,args);try{_procs.forEach(function(proc){proc.stop();});}catch(ex){// TODO: Do nothing for now, will fill it up before EOD 1905\n}return res;};};const watcherFn=wrapFunction(null,()=>null);export const install=function(){history.pushState=wrapFunction(history,globalHistoryPushState);history.replaceState=wrapFunction(history,globalHistoryReplaceState);// instead of popstate hashchange gives the old and new url information.\n// win.addEventListener( 'popstate', () => {\n//     win.dispatchEvent( new Event( 'locationchange' ) );\n// } );\n// https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onhashchange\nwindow.addEventListener(HASHCHANGE,()=>{watcherFn();setReportAnalytics(true);});};export const uninstall=function(){history.pushState=globalHistoryPushState;history.replaceState=globalHistoryReplaceState;window.removeEventListener(HASHCHANGE,watcherFn);};export const addProc=function(proc){_procs.push(proc);};export const removeProc=function(proc){_procs=_procs.filter(procObj=>proc!==procObj);};export default{install,uninstall,addProc,removeProc};","map":null,"metadata":{},"sourceType":"module"}