{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwExtendedTooltipService.js\";\nimport AwInclude from 'viewmodel/AwIncludeViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport parsingUtils from 'js/parsingUtils';\nimport _ from 'lodash';\nimport utils from 'js/popupUtils';\nimport Debug from 'debug';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trace = new Debug('AwExtendedTooltip');\n\nconst isJSONObject = jsonString => {\n  try {\n    JSON.parse(jsonString);\n\n    if (typeof jsonString === 'string' && jsonString.length === 0) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const awExtendedTooltipRenderFunction = props => {\n  let {\n    extendedTooltipPopup\n  } = props.actions;\n  let {\n    extTooltipData,\n    extendedTooltip,\n    extendedTooltipContext,\n    reference\n  } = props;\n\n  const initializer = () => {\n    trace('initialize tooltip with props: ', props); // set default view\n\n    extendedTooltip = extendedTooltip || 'ExtendedTooltipDefault';\n\n    if (_.isString(extendedTooltip) && extendedTooltip.indexOf('.') === -1 && !isJSONObject(extendedTooltip)) {\n      extendedTooltip = {\n        view: extendedTooltip\n      };\n    } else if (_.isString(extendedTooltip) && extendedTooltip.indexOf('.') > 0) {\n      let key = extendedTooltip.split('.')[1];\n      extendedTooltip = _.get(extTooltipData, key).view ? _.get(extTooltipData, key) : null;\n    }\n\n    if (extendedTooltip.extendedTooltipContent) {\n      let content = extendedTooltip.extendedTooltipContent;\n\n      if (extTooltipData && _.startsWith(content, '{{')) {\n        let viewModelProp = parsingUtils.getStringBetweenDoubleMustaches(content);\n        content = _.get({\n          data: extTooltipData\n        }, viewModelProp);\n      }\n\n      extendedTooltip.content = content;\n    } // init subPanelContext, subPanelContext always should be an object.\n    // there are cases where application(ACE) pass in string values due to wrong usage.\n\n\n    if (!extendedTooltip.subPanelContext && extendedTooltipContext) {\n      // retrieve context by get, so that we can support any level path access: eg: data.tooltips.tooltip1\n      let contextValue = extendedTooltipContext;\n\n      if (typeof contextValue === 'object') {// extendedTooltip.subPanelContext = contextValue || {};\n      }\n    } // return Promise.resolve();\n\n  }; // modify ref belongs to side effect, should wrap with useEffect\n  // //override placement based on dynamic configuration\n  // extendedTooltipPopup.reference.current = prop.reference.current;\n  // extendedTooltipPopup.userOptions.current = extendedTooltipOptions;\n\n\n  const getContent = () => {\n    if (reference.current !== null) {\n      utils.removeNativeTitle(reference.current);\n    }\n\n    extendedTooltipPopup.options && Object.assign(extendedTooltipPopup.options, utils.tooltipAdapteOption(extendedTooltipPopup.options, reference.current));\n\n    if (!extendedTooltipPopup.options.placement) {\n      extendedTooltipPopup.options.placement = 'left';\n    }\n\n    initializer();\n    const {\n      view,\n      content\n    } = extendedTooltip;\n    let result = content;\n\n    if (view) {\n      result = /*#__PURE__*/_jsxDEV(AwInclude, {\n        name: view,\n        subPanelContext: extendedTooltipContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(AwPopup, { ...extendedTooltipPopup.options,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sw-column aw-popup-tooltipContainer ${!view ? 'font-bold new-line' : ''}`,\n        children: [\" \", result, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  };\n\n  return extendedTooltipPopup.open && getContent();\n};","map":{"version":3,"names":["AwInclude","AwPopup","parsingUtils","_","utils","Debug","trace","isJSONObject","jsonString","JSON","parse","length","e","awExtendedTooltipRenderFunction","props","extendedTooltipPopup","actions","extTooltipData","extendedTooltip","extendedTooltipContext","reference","initializer","isString","indexOf","view","key","split","get","extendedTooltipContent","content","startsWith","viewModelProp","getStringBetweenDoubleMustaches","data","subPanelContext","contextValue","getContent","current","removeNativeTitle","options","Object","assign","tooltipAdapteOption","placement","result","open"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwExtendedTooltipService.js"],"sourcesContent":["import AwInclude from 'viewmodel/AwIncludeViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport parsingUtils from 'js/parsingUtils';\nimport _ from 'lodash';\nimport utils from 'js/popupUtils';\nimport Debug from 'debug';\nconst trace = new Debug( 'AwExtendedTooltip' );\n\nconst isJSONObject = ( jsonString ) => {\n    try {\n        JSON.parse( jsonString );\n        if( typeof jsonString === 'string' && jsonString.length === 0 ) {\n            return false;\n        }\n    } catch ( e ) {\n        return false;\n    }\n    return true;\n};\n\nexport const awExtendedTooltipRenderFunction = ( props ) => {\n    let { extendedTooltipPopup } = props.actions;\n    let { extTooltipData, extendedTooltip, extendedTooltipContext, reference } = props;\n\n    const initializer = () => {\n        trace( 'initialize tooltip with props: ', props );\n        // set default view\n        extendedTooltip = extendedTooltip || 'ExtendedTooltipDefault';\n        if( _.isString( extendedTooltip ) && extendedTooltip.indexOf( '.' ) === -1 && !isJSONObject( extendedTooltip ) ) {\n            extendedTooltip = { view: extendedTooltip };\n        } else if( _.isString( extendedTooltip ) && extendedTooltip.indexOf( '.' ) > 0 ) {\n            let key = extendedTooltip.split( '.' )[ 1 ];\n            extendedTooltip = _.get( extTooltipData, key ).view ? _.get( extTooltipData, key ) : null;\n        }\n\n        if( extendedTooltip.extendedTooltipContent ) {\n            let content = extendedTooltip.extendedTooltipContent;\n            if( extTooltipData && _.startsWith( content, '{{' ) ) {\n                let viewModelProp = parsingUtils.getStringBetweenDoubleMustaches( content );\n                content = _.get( { data: extTooltipData }, viewModelProp );\n            }\n            extendedTooltip.content = content;\n        }\n        // init subPanelContext, subPanelContext always should be an object.\n        // there are cases where application(ACE) pass in string values due to wrong usage.\n        if( !extendedTooltip.subPanelContext && extendedTooltipContext ) {\n            // retrieve context by get, so that we can support any level path access: eg: data.tooltips.tooltip1\n            let contextValue = extendedTooltipContext;\n            if( typeof contextValue === 'object' ) {\n                // extendedTooltip.subPanelContext = contextValue || {};\n            }\n        }\n        // return Promise.resolve();\n    };\n\n    // modify ref belongs to side effect, should wrap with useEffect\n    // //override placement based on dynamic configuration\n    // extendedTooltipPopup.reference.current = prop.reference.current;\n    // extendedTooltipPopup.userOptions.current = extendedTooltipOptions;\n\n    const getContent = () => {\n        if( reference.current !== null ) {\n            utils.removeNativeTitle( reference.current );\n        }\n        extendedTooltipPopup.options && Object.assign( extendedTooltipPopup.options, utils.tooltipAdapteOption( extendedTooltipPopup.options, reference.current ) );\n        if( !extendedTooltipPopup.options.placement ) {\n            extendedTooltipPopup.options.placement = 'left';\n        }\n        initializer();\n        const { view, content } = extendedTooltip;\n        let result = content;\n        if( view ) { result = <AwInclude name={view} subPanelContext={extendedTooltipContext}/>; }\n        return <AwPopup {...extendedTooltipPopup.options}>\n            <div className={ `sw-column aw-popup-tooltipContainer ${ !view ? 'font-bold new-line' : '' }` }> { result } </div>\n        </AwPopup>;\n    };\n\n    return extendedTooltipPopup.open && getContent();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}