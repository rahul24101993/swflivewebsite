{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPanelSectionService.js\",\n    _this = this; // Copyright (c) 2021 Siemens\n\n\nimport _ from 'lodash';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\nimport eventBus from 'js/eventBus';\nimport { includeComponent } from 'js/moduleLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awPanelSectionRenderFunction = props => {\n  let {\n    anchor,\n    caption,\n    titlekey,\n    name,\n    collapsed,\n    toggleAction,\n    children,\n    viewModel,\n    ctx,\n    includeComponentName\n  } = props;\n  const {\n    data,\n    dispatch\n  } = viewModel; // section is expanded by default\n\n  let initiallyCollapsed = false;\n  let isCollapsible = collapsed !== 'disabled'; // collapsed var is the initial state from props and is a string ('true'/'false'/undefined/'disabled')\n\n  if (collapsed === true || collapsed === 'true') {\n    initiallyCollapsed = true;\n  }\n\n  const onToggle = e => {\n    // don't bubble event; stops propagation to parent in nested section case...\n    e.stopPropagation(); // get state from dom\n\n    let collapsedState = e.target.open !== true;\n\n    if (!data._toggled) {\n      // trip gate on first expand\n      dispatch({\n        path: 'data',\n        value: {\n          _toggled: true\n        }\n      }); // smother event on the initial auto-expand from browser\n\n      if (!initiallyCollapsed) {\n        return true;\n      }\n    }\n\n    const publishData = {\n      isCollapsed: collapsedState,\n      name: name,\n      caption: caption\n    }; // publish event\n\n    if (props.isCommandPanelSection) {\n      eventBus.publish('awCommandPanelSection.collapse', publishData);\n    } else {\n      eventBus.publish('awPanelSection.collapse', publishData);\n    }\n\n    if (toggleAction) {\n      // defer is added to let the render cycle complete\n      _.defer(function () {\n        toggleAction(publishData);\n      });\n    }\n  };\n\n  const getSummaryClass = () => {\n    let classVal = 'sw-column sw-panel-summary';\n    return isCollapsible ? classVal + ' aw-layout-collapsiblePanelSectionTitle collapsible' : classVal + ' notCollapsible';\n  };\n\n  const getCommandbar = function () {\n    let withLabel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!anchor) {\n      return null;\n    }\n\n    if (Boolean(ctx.toggleLabel) === withLabel) {\n      if (withLabel) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sw-row\",\n          children: /*#__PURE__*/_jsxDEV(AwCommandBar, {\n            className: \"aw-layout-workareaCommandbar\",\n            anchor: anchor,\n            alignment: \"HORIZONTAL\",\n            context: props.context\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 48\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, _this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-column flex-grow align-right sw-panel-bar\",\n        children: /*#__PURE__*/_jsxDEV(AwCommandBar, {\n          className: \"aw-layout-workareaCommandbar\",\n          anchor: anchor,\n          alignment: \"HORIZONTAL\",\n          context: props.context\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 82\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, _this);\n    }\n\n    return null;\n  };\n\n  const getIncludeComponent = () => {\n    if (includeComponentName) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-column flex-grow align-right sw-panel-bar align-self-center\",\n        children: [\" \", includeComponent(includeComponentName, {\n          subPanelContext: props.context\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this);\n    }\n\n    return null;\n  }; // getContents should not get called until section is expanded\n\n\n  const getContents = () => {\n    // TODO: ssu remove sw-section after stepDef update\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sw-section sw-section-content sw-column\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"details\", {\n    // TODO: rm aw-panelSection class\n    className: \"sw-section aw-panelSection flex-shrink align-self-stretch\",\n    caption: caption,\n    titleKey: titlekey,\n    open: !initiallyCollapsed,\n    onToggle: onToggle,\n    children: [caption && /*#__PURE__*/_jsxDEV(\"summary\", {\n      role: \"button\",\n      tabIndex: isCollapsible ? 0 : -1,\n      className: getSummaryClass(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row sw-sectionTitleContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sw-column sw-sectionTitle\",\n          title: caption,\n          children: caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), getCommandbar(), getIncludeComponent()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), caption && getCommandbar(true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 26\n    }, this), !caption && /*#__PURE__*/_jsxDEV(\"summary\", {\n      className: \"noSummary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }, this), !initiallyCollapsed || data._toggled ? getContents() : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPanelSectionService.js"],"names":["awPanelSectionRenderFunction","props","includeComponentName","dispatch","initiallyCollapsed","isCollapsible","collapsed","onToggle","e","collapsedState","data","path","value","_toggled","publishData","isCollapsed","name","caption","eventBus","_","toggleAction","getSummaryClass","classVal","getCommandbar","withLabel","Boolean","ctx","context","getIncludeComponent","includeComponent","subPanelContext","getContents","children"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport _ from 'lodash';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\nimport eventBus from 'js/eventBus';\nimport { includeComponent } from 'js/moduleLoader';\n\nexport const awPanelSectionRenderFunction = ( props ) => {\n    let { anchor, caption, titlekey, name, collapsed, toggleAction, children, viewModel, ctx, includeComponentName } = props;\n    const { data, dispatch } = viewModel;\n\n    // section is expanded by default\n    let initiallyCollapsed = false;\n    let isCollapsible = collapsed !== 'disabled';\n\n    // collapsed var is the initial state from props and is a string ('true'/'false'/undefined/'disabled')\n    if( collapsed === true || collapsed === 'true' ) {\n        initiallyCollapsed = true;\n    }\n\n    const onToggle = ( e ) => {\n        // don't bubble event; stops propagation to parent in nested section case...\n        e.stopPropagation();\n\n        // get state from dom\n        let collapsedState = e.target.open !== true;\n\n        if( !data._toggled ) {\n            // trip gate on first expand\n            dispatch( { path: 'data', value: { _toggled: true } } );\n\n            // smother event on the initial auto-expand from browser\n            if( !initiallyCollapsed ) {\n                return true;\n            }\n        }\n\n        const publishData = {\n            isCollapsed: collapsedState,\n            name: name,\n            caption: caption\n        };\n\n        // publish event\n        if( props.isCommandPanelSection ) {\n            eventBus.publish( 'awCommandPanelSection.collapse', publishData );\n        } else {\n            eventBus.publish( 'awPanelSection.collapse', publishData );\n        }\n\n        if( toggleAction ) {\n            // defer is added to let the render cycle complete\n            _.defer( function() {\n                toggleAction( publishData );\n            } );\n        }\n    };\n\n    const getSummaryClass = () => {\n        let classVal = 'sw-column sw-panel-summary';\n        return isCollapsible ? classVal + ' aw-layout-collapsiblePanelSectionTitle collapsible' : classVal + ' notCollapsible';\n    };\n\n    const getCommandbar = ( withLabel = false ) => {\n        if( !anchor ) { return null; }\n        if( Boolean( ctx.toggleLabel ) === withLabel ) {\n            if( withLabel ) {\n                return <div className='sw-row'><AwCommandBar className='aw-layout-workareaCommandbar' anchor={ anchor } alignment='HORIZONTAL' context={ props.context }></AwCommandBar></div>;\n            }\n            return <div className='sw-column flex-grow align-right sw-panel-bar'><AwCommandBar className='aw-layout-workareaCommandbar' anchor={ anchor } alignment='HORIZONTAL' context={ props.context }></AwCommandBar></div>;\n        }\n        return null;\n    };\n\n    const getIncludeComponent = () => {\n        if( includeComponentName ) {\n            return <div className='sw-column flex-grow align-right sw-panel-bar align-self-center'> {includeComponent( includeComponentName, { subPanelContext : props.context } )} </div>;\n        }\n        return null;\n    };\n\n    // getContents should not get called until section is expanded\n    const getContents = () => {\n        // TODO: ssu remove sw-section after stepDef update\n        return <div className='sw-section sw-section-content sw-column'>{ children }</div>;\n    };\n\n    return (\n        <details\n            // TODO: rm aw-panelSection class\n            className='sw-section aw-panelSection flex-shrink align-self-stretch'\n            caption={caption}\n            titleKey={titlekey}\n            open={!initiallyCollapsed}\n            onToggle={onToggle}>\n            { caption && <summary\n                role='button'\n                tabIndex={isCollapsible ? 0 : -1}\n                className={getSummaryClass()}>\n                <div className='sw-row sw-sectionTitleContainer'>\n                    <div className='sw-column sw-sectionTitle' title={caption}>{caption}</div>\n                    { getCommandbar() }\n                    { getIncludeComponent() }\n                </div>\n                {caption && getCommandbar( true )}\n            </summary> }\n            { !caption && <summary className='noSummary'></summary> }\n            { !initiallyCollapsed || data._toggled ? getContents() : '' }\n        </details>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}