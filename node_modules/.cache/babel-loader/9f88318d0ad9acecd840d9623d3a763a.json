{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * Debug Reporter that will send performance info to console if enabled\n *\n * @module js/splmStatsDebugReporter\n */\nimport _ from 'lodash';\nimport { getLocationInformation } from 'js/splmStatsUtils';\n/**\n * Debug Reporter that will send performance info to console if enabled\n *\n * @class SPLMStatsDebugReporter\n */\n\nfunction SPLMStatsDebugReporter() {\n  let self = this;\n\n  const repeat = function (str, n) {\n    let newStr = '';\n\n    for (let i = 0; i < n; i++) {\n      newStr += str;\n    }\n\n    return newStr;\n  };\n\n  const _getFormattedPrint = function (performanceObj) {\n    const Table = function (report) {\n      let self = this;\n      let _rows = {};\n      let _skeletonStruct = '';\n\n      self.addRow = function (row, colIdx) {\n        if (!_rows[colIdx]) {\n          _rows[colIdx] = {};\n          _rows[colIdx].rowList = [];\n          _rows[colIdx].maxWidth = 0;\n        }\n\n        _rows[colIdx].rowList.push(row);\n\n        if (_rows[colIdx].maxWidth < row.length) {\n          _rows[colIdx].maxWidth = row.length;\n        }\n      };\n\n      self.buildSkeleton = function () {\n        let _skel = 'PLStats Performance Summary\\n';\n        let columns = Object.keys(_rows);\n        _rows['0'].maxWidth = 1 + _rows[0].maxWidth;\n        _rows['1'].maxWidth = 1 + (_rows[1].maxWidth > 13 ? _rows[1].maxWidth : 13);\n        /* SETUP TOP */\n\n        for (let i = 0; i < columns.length; i++) {\n          _skel += '+' + repeat('-', _rows[i].maxWidth);\n        }\n\n        _skel += '+\\n';\n        _skel += '|' + ' Metric' + repeat(' ', _rows[0].maxWidth - ' Metric'.length);\n        _skel += '|' + repeat(' ', _rows[1].maxWidth - ' Value |'.length + 1) + ' Value |';\n        _skel += '\\n';\n        /* SETUP MIDDLE PORTION */\n\n        for (let ii = 0; ii < columns.length; ii++) {\n          _skel += '+' + repeat('-', _rows[ii].maxWidth);\n        }\n\n        _skel += '+\\n';\n        /* Print Data Here */\n\n        for (let j = 0; j < _rows[0].rowList.length; j++) {\n          _skel += '|' + ' ' + _rows[0].rowList[j] + repeat(' ', _rows[0].maxWidth - (' ' + _rows[0].rowList[j]).length);\n          _skel += '|' + repeat(' ', 1 + _rows[1].maxWidth - String(' ' + _rows[1].rowList[j] + '|').length) + ' ' + _rows[1].rowList[j] + '|';\n          _skel += '\\n';\n        }\n        /* SETUP BOTTOM */\n\n\n        for (let k = 0; k < columns.length; k++) {\n          _skel += '+' + repeat('-', _rows[k].maxWidth);\n        }\n\n        _skel += '+\\n';\n        _skeletonStruct = _skel;\n        return _skel;\n      };\n      /* Any processing that needs to be done to report performance object... => String */\n\n\n      let memoryUsed = report.MemoryUsed;\n      let memoryConsumed = report.MemoryConsumption;\n      let memoryStart = report.MemoryStart;\n      let memoryEnd = report.MemoryEnd;\n      let soaCount = 0;\n      let totalHttpRequests = report.Network.totalHttpRequests;\n\n      if (memoryUsed === 0 || memoryConsumed === 0) {\n        memoryStart = 'Not Supported';\n        memoryEnd = 'Not Supported';\n      } else {\n        memoryStart = (memoryStart / 1024000).toFixed(0) + 'MB';\n        memoryEnd = (memoryEnd / 1024000).toFixed(0) + 'MB';\n      }\n\n      soaCount = report.Network.SoaDetails.filter(function (networkCall) {\n        return networkCall.logCorrelationID !== 0;\n      }).length;\n      self.addRow(' Browser Type', 0);\n      self.addRow(report.BrowserType + ' ', 1);\n      self.addRow(' ', 0);\n      self.addRow(' ', 1);\n      self.addRow(' Total Time', 0);\n      self.addRow((report.TTI / 1000).toFixed(2) + 's ', 1); // TODO: Get scripting time recording correctly again/not included with networking time.\n      //self.addRow( ' Scripting Time', 0 );\n      //self.addRow( ( report.scriptTime / 1000 ).toFixed( 1 ) + 's ', 1 );\n\n      self.addRow(' Total Network Time', 0);\n      self.addRow((report.totalNetworkTime / 1000).toFixed(2) + 's ', 1);\n      self.addRow(' ', 0);\n      self.addRow(' ', 1);\n      self.addRow(' Total SOA Requests', 0);\n      self.addRow(soaCount + ' ', 1);\n      self.addRow(' Total HTTP Requests', 0);\n      self.addRow(totalHttpRequests + ' ', 1);\n      self.addRow(' ', 0);\n      self.addRow(' ', 1);\n      self.addRow(' Memory At Start', 0);\n      self.addRow(memoryStart + ' ', 1);\n      self.addRow(' Memory At Stop', 0);\n      self.addRow(memoryEnd + ' ', 1);\n      self.addRow(' ', 0);\n      self.addRow(' ', 1);\n      self.addRow(' DOM Node Count', 0);\n      self.addRow(report.DOM.elemCount + ' ', 1);\n      self.addRow(' DOM Tree Depth', 0);\n      self.addRow(report.DOM.DOMTreeDepth + ' ', 1);\n      self.addRow(' ', 0);\n      self.addRow(' ', 1);\n      self.addRow(' Number of Unique Components', 0);\n      self.addRow(report.Component.uniqueComponents + ' ', 1);\n      self.addRow(' Number of Component Renders', 0);\n      self.addRow(report.Component.componentRenders + ' ', 1); // self.addRow( ' Estimated Render Time', 0 );\n      // self.addRow( ( report.Component.componentsRenderTime / 1000 ).toFixed( 2 ) + 's ', 1 );\n\n      self.buildSkeleton();\n      return self;\n    };\n\n    return new Table(performanceObj).buildSkeleton();\n  };\n  /**\n   * @param {Object} performanceObject - Performance object to be formatted and sent to console\n   */\n\n\n  self.report = function (performanceObject) {\n    if (performanceObject.TTI < 50) {\n      return;\n    }\n\n    let memoryStart = performanceObject.MemoryStart;\n    let memoryEnd = performanceObject.MemoryEnd;\n\n    if (performanceObject.MemoryUsed === 0 || performanceObject.MemoryConsumption === 0) {\n      memoryStart = 'Not Supported';\n      memoryEnd = 'Not Supported';\n    } else {\n      memoryStart = (memoryStart / 1024).toFixed(3) + 'kb';\n      memoryEnd = (memoryEnd / 1024).toFixed(3) + 'kb';\n    }\n\n    performanceObject.Network['*TotalNetworkTime'] = performanceObject.totalNetworkTime.toFixed(3) + 'ms';\n    console.log(_getFormattedPrint(performanceObject));\n    console.log('PLStats Performance Telemetry Internal Debug: * = denotes sent to analytics if enabled', {\n      '*TotalTime': performanceObject.TTI.toFixed(3) + 'ms',\n      '*ScriptingTime': performanceObject.scriptTime.toFixed(3) + 'ms',\n      '*Type': performanceObject.BrowserType,\n      Title: performanceObject.title,\n      DOM: {\n        '*NodeCount': performanceObject.DOM.elemCount,\n        TreeDepth: performanceObject.DOM.DOMTreeDepth,\n        'CostlyWidgets( >= 50 watchers || >= 7 Descendant DOM Depth )': performanceObject.DOM.DOMCostlyWidgets\n      },\n      Network: performanceObject.Network,\n      Memory: {\n        '*MemoryAtStart': memoryStart,\n        '*MemoryAtStop': memoryEnd\n      },\n      Components: {\n        'Number of Unique Components': performanceObject.Component.uniqueComponents,\n        'Number of Component Renders': performanceObject.Component.componentRenders,\n        details: performanceObject.Component.componentDetails\n      },\n      LocationInformation: getLocationInformation(),\n      _processorOverhead: {\n        DOM: performanceObject.DOMProcessorOverhead.toFixed(3) + 'ms',\n        Memory: performanceObject.MemProcessorOverhead.toFixed(3) + 'ms',\n        NETWORK: performanceObject.XHRProcessorOverhead.toFixed(3) + 'ms',\n        SCRIPT: performanceObject.JsProcessorOverhead.toFixed(3) + 'ms',\n        COMPONENTS: performanceObject.ComponentOverhead.toFixed(3) + 'ms'\n      }\n    });\n  };\n\n  return self;\n}\n\n_c = SPLMStatsDebugReporter;\nexport default SPLMStatsDebugReporter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SPLMStatsDebugReporter\");","map":{"version":3,"names":["_","getLocationInformation","SPLMStatsDebugReporter","self","repeat","str","n","newStr","i","_getFormattedPrint","performanceObj","Table","report","_rows","_skeletonStruct","addRow","row","colIdx","rowList","maxWidth","push","length","buildSkeleton","_skel","columns","Object","keys","ii","j","String","k","memoryUsed","MemoryUsed","memoryConsumed","MemoryConsumption","memoryStart","MemoryStart","memoryEnd","MemoryEnd","soaCount","totalHttpRequests","Network","toFixed","SoaDetails","filter","networkCall","logCorrelationID","BrowserType","TTI","totalNetworkTime","DOM","elemCount","DOMTreeDepth","Component","uniqueComponents","componentRenders","performanceObject","console","log","scriptTime","Title","title","TreeDepth","DOMCostlyWidgets","Memory","Components","details","componentDetails","LocationInformation","_processorOverhead","DOMProcessorOverhead","MemProcessorOverhead","NETWORK","XHRProcessorOverhead","SCRIPT","JsProcessorOverhead","COMPONENTS","ComponentOverhead"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/plstats/src/js/splmStatsDebugReporter.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * Debug Reporter that will send performance info to console if enabled\n *\n * @module js/splmStatsDebugReporter\n */\nimport _ from 'lodash';\nimport { getLocationInformation } from 'js/splmStatsUtils';\n\n\n/**\n * Debug Reporter that will send performance info to console if enabled\n *\n * @class SPLMStatsDebugReporter\n */\nfunction SPLMStatsDebugReporter() {\n    let self = this;\n\n    const repeat = function( str, n ) {\n        let newStr = '';\n        for( let i = 0; i < n; i++ ) {\n            newStr += str;\n        }\n        return newStr;\n    };\n\n    const _getFormattedPrint = function( performanceObj ) {\n        const Table = function( report ) {\n            let self = this;\n            let _rows = {};\n            let _skeletonStruct = '';\n\n            self.addRow = function( row, colIdx ) {\n                if( !_rows[ colIdx ] ) {\n                    _rows[ colIdx ] = {};\n                    _rows[ colIdx ].rowList = [];\n                    _rows[ colIdx ].maxWidth = 0;\n                }\n                _rows[ colIdx ].rowList.push( row );\n                if( _rows[ colIdx ].maxWidth < row.length ) {\n                    _rows[ colIdx ].maxWidth = row.length;\n                }\n            };\n\n            self.buildSkeleton = function() {\n                let _skel = 'PLStats Performance Summary\\n';\n                let columns = Object.keys( _rows );\n\n                _rows[ '0' ].maxWidth = 1 + _rows[ 0 ].maxWidth;\n                _rows[ '1' ].maxWidth = 1 + ( _rows[ 1 ].maxWidth > 13 ? _rows[ 1 ].maxWidth : 13 );\n\n                /* SETUP TOP */\n                for( let i = 0; i < columns.length; i++ ) {\n                    _skel += '+' + repeat( '-', _rows[ i ].maxWidth );\n                }\n                _skel += '+\\n';\n                _skel += '|' + ' Metric' + repeat( ' ', _rows[ 0 ].maxWidth - ' Metric'.length );\n                _skel += '|' + repeat( ' ', _rows[ 1 ].maxWidth - ' Value |'.length + 1 ) + ' Value |';\n                _skel += '\\n';\n\n                /* SETUP MIDDLE PORTION */\n                for( let ii = 0; ii < columns.length; ii++ ) {\n                    _skel += '+' + repeat( '-', _rows[ ii ].maxWidth );\n                }\n                _skel += '+\\n';\n\n                /* Print Data Here */\n                for( let j = 0; j < _rows[ 0 ].rowList.length; j++ ) {\n                    _skel += '|' + ' ' + _rows[ 0 ].rowList[ j ] + repeat( ' ', _rows[ 0 ].maxWidth - ( ' ' + _rows[ 0 ].rowList[ j ] ).length );\n                    _skel += '|' + repeat( ' ', 1 + _rows[ 1 ].maxWidth - String( ' ' + _rows[ 1 ].rowList[ j ] + '|' ).length ) + ' ' + _rows[ 1 ].rowList[ j ] + '|';\n                    _skel += '\\n';\n                }\n\n                /* SETUP BOTTOM */\n                for( let k = 0; k < columns.length; k++ ) {\n                    _skel += '+' + repeat( '-', _rows[ k ].maxWidth );\n                }\n                _skel += '+\\n';\n                _skeletonStruct = _skel;\n                return _skel;\n            };\n\n            /* Any processing that needs to be done to report performance object... => String */\n\n            let memoryUsed = report.MemoryUsed;\n            let memoryConsumed = report.MemoryConsumption;\n            let memoryStart = report.MemoryStart;\n            let memoryEnd = report.MemoryEnd;\n\n            let soaCount = 0;\n            let totalHttpRequests = report.Network.totalHttpRequests;\n\n            if( memoryUsed === 0 || memoryConsumed === 0 ) {\n                memoryStart = 'Not Supported';\n                memoryEnd = 'Not Supported';\n            } else {\n                memoryStart = ( memoryStart / 1024000 ).toFixed( 0 ) + 'MB';\n                memoryEnd = ( memoryEnd / 1024000 ).toFixed( 0 ) + 'MB';\n            }\n\n            soaCount = report.Network.SoaDetails.filter( function( networkCall ) {\n                return networkCall.logCorrelationID !== 0;\n            } ).length;\n\n            self.addRow( ' Browser Type', 0 );\n            self.addRow( report.BrowserType + ' ', 1 );\n\n            self.addRow( ' ', 0 );\n            self.addRow( ' ', 1 );\n\n            self.addRow( ' Total Time', 0 );\n            self.addRow( ( report.TTI / 1000 ).toFixed( 2 ) + 's ', 1 );\n\n\n            // TODO: Get scripting time recording correctly again/not included with networking time.\n            //self.addRow( ' Scripting Time', 0 );\n            //self.addRow( ( report.scriptTime / 1000 ).toFixed( 1 ) + 's ', 1 );\n\n            self.addRow( ' Total Network Time', 0 );\n            self.addRow( ( report.totalNetworkTime / 1000 ).toFixed( 2 ) + 's ', 1 );\n\n            self.addRow( ' ', 0 );\n            self.addRow( ' ', 1 );\n\n            self.addRow( ' Total SOA Requests', 0 );\n            self.addRow( soaCount + ' ', 1 );\n            self.addRow( ' Total HTTP Requests', 0 );\n            self.addRow( totalHttpRequests + ' ', 1 );\n\n            self.addRow( ' ', 0 );\n            self.addRow( ' ', 1 );\n\n            self.addRow( ' Memory At Start', 0 );\n            self.addRow( memoryStart + ' ', 1 );\n\n            self.addRow( ' Memory At Stop', 0 );\n            self.addRow( memoryEnd + ' ', 1 );\n\n            self.addRow( ' ', 0 );\n            self.addRow( ' ', 1 );\n\n            self.addRow( ' DOM Node Count', 0 );\n            self.addRow( report.DOM.elemCount + ' ', 1 );\n\n            self.addRow( ' DOM Tree Depth', 0 );\n            self.addRow( report.DOM.DOMTreeDepth + ' ', 1 );\n\n            self.addRow( ' ', 0 );\n            self.addRow( ' ', 1 );\n\n            self.addRow( ' Number of Unique Components', 0 );\n            self.addRow( report.Component.uniqueComponents + ' ', 1 );\n\n            self.addRow( ' Number of Component Renders', 0 );\n            self.addRow( report.Component.componentRenders + ' ', 1 );\n\n            // self.addRow( ' Estimated Render Time', 0 );\n            // self.addRow( ( report.Component.componentsRenderTime / 1000 ).toFixed( 2 ) + 's ', 1 );\n\n            self.buildSkeleton();\n\n            return self;\n        };\n        return new Table( performanceObj ).buildSkeleton();\n    };\n\n    /**\n     * @param {Object} performanceObject - Performance object to be formatted and sent to console\n     */\n    self.report = function( performanceObject ) {\n        if( performanceObject.TTI < 50 ) {\n            return;\n        }\n        let memoryStart = performanceObject.MemoryStart;\n        let memoryEnd = performanceObject.MemoryEnd;\n        if( performanceObject.MemoryUsed === 0 || performanceObject.MemoryConsumption === 0 ) {\n            memoryStart = 'Not Supported';\n            memoryEnd = 'Not Supported';\n        } else {\n            memoryStart = ( memoryStart / 1024 ).toFixed( 3 ) + 'kb';\n            memoryEnd = ( memoryEnd / 1024 ).toFixed( 3 ) + 'kb';\n        }\n        performanceObject.Network[ '*TotalNetworkTime' ] = performanceObject.totalNetworkTime.toFixed( 3 ) + 'ms';\n\n        console.log( _getFormattedPrint( performanceObject ) );\n        console.log( 'PLStats Performance Telemetry Internal Debug: * = denotes sent to analytics if enabled', {\n            '*TotalTime': performanceObject.TTI.toFixed( 3 ) + 'ms',\n            '*ScriptingTime': performanceObject.scriptTime.toFixed( 3 ) + 'ms',\n            '*Type': performanceObject.BrowserType,\n            Title: performanceObject.title,\n            DOM: {\n                '*NodeCount': performanceObject.DOM.elemCount,\n                TreeDepth: performanceObject.DOM.DOMTreeDepth,\n                'CostlyWidgets( >= 50 watchers || >= 7 Descendant DOM Depth )': performanceObject.DOM.DOMCostlyWidgets\n            },\n            Network: performanceObject.Network,\n            Memory: {\n                '*MemoryAtStart': memoryStart,\n                '*MemoryAtStop': memoryEnd\n            },\n            Components: {\n                'Number of Unique Components': performanceObject.Component.uniqueComponents,\n                'Number of Component Renders': performanceObject.Component.componentRenders,\n                details: performanceObject.Component.componentDetails\n            },\n            LocationInformation: getLocationInformation(),\n            _processorOverhead: {\n                DOM: performanceObject.DOMProcessorOverhead.toFixed( 3 ) + 'ms',\n                Memory: performanceObject.MemProcessorOverhead.toFixed( 3 ) + 'ms',\n                NETWORK: performanceObject.XHRProcessorOverhead.toFixed( 3 ) + 'ms',\n                SCRIPT: performanceObject.JsProcessorOverhead.toFixed( 3 ) + 'ms',\n                COMPONENTS: performanceObject.ComponentOverhead.toFixed( 3 ) + 'ms'\n            }\n        } );\n    };\n    return self;\n}\n\nexport default SPLMStatsDebugReporter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}