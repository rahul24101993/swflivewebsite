{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwHeaderTitle from'viewmodel/AwHeaderTitleViewModel';import AwWorkareaTitle from'viewmodel/AwWorkareaTitleViewModel';import{ExistWhen}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DivExistWhen=ExistWhen('div');const AwWorkareaTitleExistWhen=ExistWhen(AwWorkareaTitle);/*\nctx imports\n*/const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('js/awHeaderService',()=>import('js/awHeaderService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"actions\":{\"updateBreadcrumbAction\":{\"actionType\":\"JSFunction\",\"method\":\"updateBreadCrumb\",\"deps\":\"js/awHeaderService\",\"inputData\":{\"eventData\":\"{{data.eventMap['refreshBreadCrumb']}}\"},\"outputData\":{\"breadCrumbProvider\":\"result.breadCrumbProvider\",\"breadcrumbConfig\":\"result.breadcrumbConfig\",\"objFound\":\"result.objFound\"}},\"resetBreadcrumbAction\":{\"actionType\":\"JSFunction\",\"method\":\"resetBreadCrumb\",\"deps\":\"js/awHeaderService\",\"outputData\":{\"breadCrumbProvider\":\"result.breadCrumbProvider\"}},\"getBreadcrumbConfig\":{\"actionType\":\"JSFunction\",\"method\":\"getBreadcrumbConfig\",\"deps\":\"js/awHeaderService\",\"inputData\":{},\"outputData\":{\"breadcrumbConfig\":\"\"}}},\"onEvent\":[{\"eventId\":\"refreshBreadCrumb\",\"cacheEventData\":true,\"action\":\"updateBreadcrumbAction\"},{\"eventId\":\"resetBreadCrumb\",\"action\":\"resetBreadcrumbAction\"}],\"ctx\":{\"location.titles.headerTitle\":null},\"lifecycleHooks\":{\"onMount\":\"getBreadcrumbConfig\",\"onUnmount\":\"resetBreadcrumbAction\"},\"_viewModelId\":\"CommonHeaderTitle\",\"_uniqueViewModelId\":\"CommonHeaderTitle\"};/*\n<div class='awHeader sw-column'>\n    <div class ='sw-row aw-layout-headerTitleContainer'>\n        <aw-header-title headertitle=\"ctx.location.titles.headerTitle\" headervmo=\"props.subPanelContext.headerViewModel\" headerproperties=\"subPanelContext.headerProperties\"></aw-header-title>\n    </div>\n    <div class='sw-row '>\n        <div exist-when=\"ctx.sublocationTitleErrorMessage\" class='aw-layout-validationErrorMessage'>{ctx.sublocationTitleErrorMessage}</div>\n        <aw-workarea-title exist-when=\"!ctx.sublocationTitleErrorMessage\" provider=\"data.breadCrumbProvider\" breadcrumb-config=\"data.breadcrumbConfig\"></aw-workarea-title>\n    </div>\n</div>\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsxs(\"div\",{className:\"awHeader sw-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sw-row aw-layout-headerTitleContainer\",children:/*#__PURE__*/_jsx(AwHeaderTitle,{headertitle:AwParseService.instance(\"ctx.location.titles.headerTitle\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),headervmo:AwParseService.instance(\"props.subPanelContext.headerViewModel\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),headerproperties:AwParseService.instance(\"subPanelContext.headerProperties\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sw-row \",children:[/*#__PURE__*/_jsx(DivExistWhen,{className:\"aw-layout-validationErrorMessage\",existWhen:AwParseService.instance(\"ctx.sublocationTitleErrorMessage\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:ctx.sublocationTitleErrorMessage}),/*#__PURE__*/_jsx(AwWorkareaTitleExistWhen,{provider:AwParseService.instance(\"data.breadCrumbProvider\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),breadcrumbConfig:AwParseService.instance(\"data.breadcrumbConfig\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"!ctx.sublocationTitleErrorMessage\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})]})]});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}