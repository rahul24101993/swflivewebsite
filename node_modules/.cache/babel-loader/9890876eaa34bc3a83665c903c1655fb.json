{"ast":null,"code":"// Copyright (c) 2021 Siemens\n/**\n * This service provides access method and url of icons based on configuration in kit.\n *\n * @module js/iconRepositoryService\n */import cfgSvc from'js/configurationService';/** Exports */let exports;/** A place holder */let BASE_URL='{{baseUrl}}';/** Fetch method. */let _fetchMethod=null;/** URl */let _Url=null;/** constant a possible value of #fetchMethod */export let GET='GET';export let DEFAULT='DEFAULT';/**\n * Return Url based on configuration.\n *\n * @param {String} filename - Name of the file to base return value on.\n *\n * @return {String} The IconFile URL\n */export let getIconFileUrl=function(filename){if(_Url){return _Url+filename;}return undefined;};/**\n * @return {Function} Method to be used for Icon.\n */export let getIconFetchMethod=function(){return _fetchMethod;};/**\n * Initialize the service.\n */export let initialize=function(){let imageRepositoryConfiguration=cfgSvc.getCfgCached('imageRepositoryConfiguration');if(!(imageRepositoryConfiguration&&imageRepositoryConfiguration.actionType&&imageRepositoryConfiguration.url)){return;}if(imageRepositoryConfiguration.actionType===exports.GET&&imageRepositoryConfiguration.url.indexOf(BASE_URL)>-1){_Url=imageRepositoryConfiguration.url.replace(BASE_URL,cfgSvc.getCfgCached('baseUrl')+'/image/');_fetchMethod=exports.DEFAULT;}else if(imageRepositoryConfiguration.actionType===exports.GET){_Url=imageRepositoryConfiguration.url+'/image/';_fetchMethod=exports.GET;}};exports={GET,DEFAULT,getIconFileUrl,getIconFetchMethod,initialize};export default exports;initialize();","map":null,"metadata":{},"sourceType":"module"}