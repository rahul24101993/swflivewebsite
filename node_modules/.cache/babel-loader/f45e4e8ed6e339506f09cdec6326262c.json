{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * @module js/awSearchLocationService\n */\nimport AwStateService from 'js/awStateService';\nimport logger from 'js/logger';\nlet exports;\nexport const getFilteredTabsInfo = sublocationTabs => {\n  return {\n    sublocationTabs: sublocationTabs.filter(tab => tab.displayTab === true),\n    tabCallbackApi: tabCallbackApi\n  };\n};\nexport const handleStateChange = sublocationTabs => {\n  const activeTab = sublocationTabs.filter(tab => tab.selectedTab)[0];\n\n  if (activeTab && activeTab.state !== AwStateService.instance.current.name) {\n    return sublocationTabs.map(tab => {\n      if (tab.state === AwStateService.instance.current.name) {\n        tab.selectedTab = true;\n      } else {\n        tab.selectedTab = false;\n      }\n\n      return tab;\n    });\n  }\n\n  return sublocationTabs;\n};\nexport const tabCallbackApi = (pageId, tabTitle, sublocationTabs) => {\n  var tabToSelect;\n\n  if (tabTitle) {\n    tabToSelect = sublocationTabs.filter(function (tab) {\n      return tab.name === tabTitle;\n    })[0];\n  } else {\n    // Should only happen when api is called before tapTitle is loaded from i18n file\n    tabToSelect = sublocationTabs.filter(function (tab) {\n      return tab.pageId === pageId;\n    })[0];\n  }\n\n  if (tabToSelect) {\n    // When the tab widget is forced to update after the state has already changed it will still trigger callback\n    if (tabToSelect.state !== AwStateService.instance.current.name) {\n      // Switch to the new state\n      if (tabToSelect.params) {\n        AwStateService.instance.go(tabToSelect.state, tabToSelect.params);\n      } else {\n        AwStateService.instance.go(tabToSelect.state);\n      }\n    }\n  } else {\n    logger.error('Missing tab was selected: ' + tabTitle);\n  }\n};\nexports = {\n  getFilteredTabsInfo,\n  handleStateChange,\n  tabCallbackApi\n};\nexport default exports;","map":{"version":3,"names":["AwStateService","logger","exports","getFilteredTabsInfo","sublocationTabs","filter","tab","displayTab","tabCallbackApi","handleStateChange","activeTab","selectedTab","state","instance","current","name","map","pageId","tabTitle","tabToSelect","params","go","error"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/searchcore/src/js/awSearchLocationService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/awSearchLocationService\n */\nimport AwStateService from 'js/awStateService';\nimport logger from 'js/logger';\n\nlet exports;\n\nexport const getFilteredTabsInfo = ( sublocationTabs ) => {\n    return {\n        sublocationTabs: sublocationTabs.filter( tab => tab.displayTab === true ),\n        tabCallbackApi: tabCallbackApi\n    };\n};\n\nexport const handleStateChange = ( sublocationTabs ) => {\n    const activeTab = sublocationTabs.filter( tab => tab.selectedTab )[ 0 ];\n    if( activeTab && activeTab.state !== AwStateService.instance.current.name ) {\n        return sublocationTabs.map( tab => {\n            if( tab.state === AwStateService.instance.current.name ) {\n                tab.selectedTab = true;\n            } else {\n                tab.selectedTab = false;\n            }\n            return tab;\n        } );\n    }\n    return sublocationTabs;\n};\n\nexport const tabCallbackApi = ( pageId, tabTitle, sublocationTabs ) => {\n    var tabToSelect;\n    if( tabTitle ) {\n        tabToSelect = sublocationTabs.filter( function( tab ) {\n            return tab.name === tabTitle;\n        } )[ 0 ];\n    } else {\n        // Should only happen when api is called before tapTitle is loaded from i18n file\n        tabToSelect = sublocationTabs.filter( function( tab ) {\n            return tab.pageId === pageId;\n        } )[ 0 ];\n    }\n    if( tabToSelect ) {\n        // When the tab widget is forced to update after the state has already changed it will still trigger callback\n        if( tabToSelect.state !== AwStateService.instance.current.name ) {\n            // Switch to the new state\n            if( tabToSelect.params ) {\n                AwStateService.instance.go( tabToSelect.state, tabToSelect.params );\n            } else {\n                AwStateService.instance.go( tabToSelect.state );\n            }\n        }\n    } else {\n        logger.error( 'Missing tab was selected: ' + tabTitle );\n    }\n};\n\nexports = {\n    getFilteredTabsInfo,\n    handleStateChange,\n    tabCallbackApi\n};\nexport default exports;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,OAAOA,cAAP,MAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAIC,OAAJ;AAEA,OAAO,MAAMC,mBAAmB,GAAKC,eAAF,IAAuB;EACtD,OAAO;IACHA,eAAe,EAAEA,eAAe,CAACC,MAAhB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,UAAJ,KAAmB,IAAlD,CADd;IAEHC,cAAc,EAAEA;EAFb,CAAP;AAIH,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAKL,eAAF,IAAuB;EACpD,MAAMM,SAAS,GAAGN,eAAe,CAACC,MAAhB,CAAwBC,GAAG,IAAIA,GAAG,CAACK,WAAnC,EAAkD,CAAlD,CAAlB;;EACA,IAAID,SAAS,IAAIA,SAAS,CAACE,KAAV,KAAoBZ,cAAc,CAACa,QAAf,CAAwBC,OAAxB,CAAgCC,IAArE,EAA4E;IACxE,OAAOX,eAAe,CAACY,GAAhB,CAAqBV,GAAG,IAAI;MAC/B,IAAIA,GAAG,CAACM,KAAJ,KAAcZ,cAAc,CAACa,QAAf,CAAwBC,OAAxB,CAAgCC,IAAlD,EAAyD;QACrDT,GAAG,CAACK,WAAJ,GAAkB,IAAlB;MACH,CAFD,MAEO;QACHL,GAAG,CAACK,WAAJ,GAAkB,KAAlB;MACH;;MACD,OAAOL,GAAP;IACH,CAPM,CAAP;EAQH;;EACD,OAAOF,eAAP;AACH,CAbM;AAeP,OAAO,MAAMI,cAAc,GAAG,CAAES,MAAF,EAAUC,QAAV,EAAoBd,eAApB,KAAyC;EACnE,IAAIe,WAAJ;;EACA,IAAID,QAAJ,EAAe;IACXC,WAAW,GAAGf,eAAe,CAACC,MAAhB,CAAwB,UAAUC,GAAV,EAAgB;MAClD,OAAOA,GAAG,CAACS,IAAJ,KAAaG,QAApB;IACH,CAFa,EAET,CAFS,CAAd;EAGH,CAJD,MAIO;IACH;IACAC,WAAW,GAAGf,eAAe,CAACC,MAAhB,CAAwB,UAAUC,GAAV,EAAgB;MAClD,OAAOA,GAAG,CAACW,MAAJ,KAAeA,MAAtB;IACH,CAFa,EAET,CAFS,CAAd;EAGH;;EACD,IAAIE,WAAJ,EAAkB;IACd;IACA,IAAIA,WAAW,CAACP,KAAZ,KAAsBZ,cAAc,CAACa,QAAf,CAAwBC,OAAxB,CAAgCC,IAA1D,EAAiE;MAC7D;MACA,IAAII,WAAW,CAACC,MAAhB,EAAyB;QACrBpB,cAAc,CAACa,QAAf,CAAwBQ,EAAxB,CAA4BF,WAAW,CAACP,KAAxC,EAA+CO,WAAW,CAACC,MAA3D;MACH,CAFD,MAEO;QACHpB,cAAc,CAACa,QAAf,CAAwBQ,EAAxB,CAA4BF,WAAW,CAACP,KAAxC;MACH;IACJ;EACJ,CAVD,MAUO;IACHX,MAAM,CAACqB,KAAP,CAAc,+BAA+BJ,QAA7C;EACH;AACJ,CAzBM;AA2BPhB,OAAO,GAAG;EACNC,mBADM;EAENM,iBAFM;EAGND;AAHM,CAAV;AAKA,eAAeN,OAAf"},"metadata":{},"sourceType":"module"}