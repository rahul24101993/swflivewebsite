{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwIntegerValService.js\"; // Copyright (c) 2021 Siemens\n\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awIntegerValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props; // use simple non-edit val if not editing\n\n  if (!prop.fielddata.isEditable) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  let sanitizedProps = sanitizer.sanitizeHTMLTagProps(prop, 'input');\n  const inputClass = getValClass(props);\n\n  const handleChange = event => {\n    let newVal = event.target.value.replace(/[^\\+|\\-|0-9]/g, '');\n\n    if ((newVal.indexOf('-') > -1 || newVal.indexOf('+') > -1) && newVal.length > 1) {\n      prop.onChange(event);\n    }\n\n    event.target.value = newVal;\n  };\n\n  const handleArrayChange = event => {\n    let newVal = event.target.value.replace(/[^\\+|\\-|0-9]/g, '');\n\n    if (!isNaN(Number(event.target.value)) && event.key === 'Enter') {\n      prop.onChange(event);\n    }\n\n    event.target.value = newVal;\n  };\n\n  const keyPressed = event => {\n    if (event.target.value !== '' && !isNaN(Number(event.target.value)) && (event.key === 'Enter' || event.type === 'blur' && prop.typex === 'INTEGERARRAY')) {\n      let val = parseInt(event.target.value, 10);\n      event.target.value = val;\n      event.preventDefault();\n      prop.onChange(event);\n      event.target.value = '';\n    }\n  };\n\n  if (prop.fielddata.renderingHint === 'label') {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  } else if (!prop.fielddata.renderingHint && prop.fielddata.hasLov) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...prop,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else if (prop.typex === 'INTEGERARRAY') {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      maxLength: prop.maxLength,\n      \"aria-required\": prop.isRequired,\n      \"data-locator\": prop.label,\n      placeholder: prop.placeholder,\n      className: inputClass,\n      onChange: handleArrayChange,\n      onBlur: keyPressed,\n      onKeyPress: keyPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", { ...sanitizedProps,\n    autoComplete: \"off\",\n    type: \"text\",\n    className: inputClass\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwIntegerValService.js"],"names":["awIntegerValRenderFunction","props","prop","sanitizedProps","sanitizer","inputClass","getValClass","handleChange","event","newVal","handleArrayChange","isNaN","Number","keyPressed","val","parseInt"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\n\nexport const awIntegerValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    // use simple non-edit val if not editing\n    if( !prop.fielddata.isEditable ) {\n        return (\n            <AwPropertyNonEditVal {...prop}></AwPropertyNonEditVal>\n        );\n    }\n\n    let sanitizedProps = sanitizer.sanitizeHTMLTagProps( prop, 'input' );\n    const inputClass = getValClass( props );\n\n    const handleChange = ( event ) => {\n        let newVal = event.target.value.replace( /[^\\+|\\-|0-9]/g, '' );\n        if( ( newVal.indexOf( '-' ) > -1 || newVal.indexOf( '+' ) > -1 ) && newVal.length > 1 ) {\n            prop.onChange( event );\n        }\n        event.target.value = newVal;\n    };\n\n    const handleArrayChange = ( event ) => {\n        let newVal = event.target.value.replace( /[^\\+|\\-|0-9]/g, '' );\n        if( !isNaN( Number( event.target.value ) ) && event.key === 'Enter' ) {\n            prop.onChange( event );\n        }\n        event.target.value = newVal;\n    };\n\n    const keyPressed = ( event ) => {\n        if( event.target.value !== '' && !isNaN( Number( event.target.value ) ) && ( event.key === 'Enter' ||\n                event.type === 'blur' && prop.typex === 'INTEGERARRAY' ) ) {\n            let val = parseInt( event.target.value, 10 );\n            event.target.value = val;\n            event.preventDefault();\n            prop.onChange( event );\n            event.target.value = '';\n        }\n    };\n\n    if( prop.fielddata.renderingHint === 'label' ) {\n        return (\n            <AwPropertyNonEditVal {...prop} ></AwPropertyNonEditVal>\n        );\n    } else if( !prop.fielddata.renderingHint && prop.fielddata.hasLov ) {\n        return (\n            <AwPropertyLovVal {...prop} onChange={handleChange}></AwPropertyLovVal>\n        );\n    } else if( prop.typex === 'INTEGERARRAY' ) {\n        return (\n            <input type='text' maxLength={prop.maxLength} aria-required={prop.isRequired} data-locator={prop.label} placeholder={prop.placeholder} className={inputClass} onChange={handleArrayChange} onBlur={keyPressed} onKeyPress={keyPressed}/>\n        );\n    }\n    return (\n        <input {...sanitizedProps} autoComplete='off' type='text' className={inputClass}/>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}