{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/* eslint-disable require-jsdoc */\n\n/**\n * @module js/routerConfig\n */\nimport { initializeStateService } from 'js/awStateService';\nimport { loadConfiguration } from 'js/leavePlace.service';\nimport awConfiguration from 'js/awConfiguration'; // the config function takes the router instance as argument. it lets you manually configure the router\n\nexport default function config(router) {\n  // default route\n  const defaultPage = awConfiguration.get('defaultRoutePath');\n  router.urlService.rules.initial({\n    state: defaultPage\n  }); // show error page if no state found\n\n  router.urlRouter.otherwise({\n    state: 'errorSubLocation'\n  }); // initialize state service\n\n  initializeStateService(router);\n  loadConfiguration();\n}","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/config/src/js/routerConfig.js"],"names":["defaultPage","awConfiguration","router","state","initializeStateService","loadConfiguration"],"mappings":"AAAA;;AACA;;AAEA;AACA;AACA;AACA,SAAA,sBAAA,QAAA,mBAAA;AACA,SAAA,iBAAA,QAAA,uBAAA;AACA,OAAA,eAAA,MAAA,oBAAA,C,CAEA;;AACA,eAAe,SAAA,MAAA,CAAA,MAAA,EAA0B;EACrC;EACA,MAAMA,WAAW,GAAGC,eAAe,CAAfA,GAAAA,CAApB,kBAAoBA,CAApB;EACAC,MAAM,CAANA,UAAAA,CAAAA,KAAAA,CAAAA,OAAAA,CAAiC;IAAEC,KAAK,EAAEH;EAAT,CAAjCE,EAHqC,CAIrC;;EACAA,MAAM,CAANA,SAAAA,CAAAA,SAAAA,CAA4B;IAAEC,KAAK,EAAE;EAAT,CAA5BD,EALqC,CAOrC;;EACAE,sBAAsB,CAAtBA,MAAsB,CAAtBA;EACAC,iBAAiB;AACpB","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable require-jsdoc */\n\n/**\n * @module js/routerConfig\n */\nimport { initializeStateService } from 'js/awStateService';\nimport { loadConfiguration } from 'js/leavePlace.service';\nimport awConfiguration from 'js/awConfiguration';\n\n// the config function takes the router instance as argument. it lets you manually configure the router\nexport default function config( router ) {\n    // default route\n    const defaultPage = awConfiguration.get( 'defaultRoutePath' );\n    router.urlService.rules.initial( { state: defaultPage } );\n    // show error page if no state found\n    router.urlRouter.otherwise( { state: 'errorSubLocation' } );\n\n    // initialize state service\n    initializeStateService( router );\n    loadConfiguration();\n}\n"]},"metadata":{},"sourceType":"module"}