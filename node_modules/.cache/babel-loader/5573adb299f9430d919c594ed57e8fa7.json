{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\declreact\\\\src\\\\js\\\\awShowWhenHOC.js\"; // Copyright (c) 2021 Siemens\n\n/* eslint-disable react/display-name */\n\n/**\n * @module js/awShowWhenHOC\n */\n\nimport React from 'react';\nimport sanitizer from 'js/sanitizer';\nimport { nonMemoizedComponents } from 'js/hocCollectionConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst displayName = 'AwShowWhen';\n\nconst awShowWhenHOC = Component => {\n  let classes = []; // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n\n  let ActualComponent = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n    let {\n      children,\n      ...props\n    } = _ref;\n    let {\n      showWhen\n    } = props;\n    let finalProps = { ...props\n    };\n    ref && (finalProps.ref = ref);\n    classes.length = 0;\n    classes.push(finalProps.className || '');\n    classes.push(!showWhen ? 'aw-widget-hide' : '');\n    finalProps.className = classes.join(' ').trim();\n\n    if (typeof Component === 'object') {\n      Component.displayName = displayName;\n    }\n\n    if (typeof Component === 'string') {\n      return /*#__PURE__*/_jsxDEV(Component, { ...sanitizer.sanitizeHTMLTagProps(finalProps, Component),\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...finalProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  });\n\n  if (nonMemoizedComponents.includes(Component.displayName)) {\n    return ActualComponent;\n  }\n\n  return /*#__PURE__*/React.memo(ActualComponent);\n};\n\nexport default awShowWhenHOC;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/awShowWhenHOC.js"],"names":["displayName","awShowWhenHOC","Component","classes","ActualComponent","props","showWhen","finalProps","ref","sanitizer","children","nonMemoizedComponents","React"],"mappings":"2JAAA;;AACA;;AAEA;AACA;AACA;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,cAAA;AACA,SAAA,qBAAA,QAAA,2BAAA;;AAEA,MAAMA,WAAW,GAAjB,YAAA;;AAEA,MAAMC,aAAa,GAAKC,SAAF,IAAiB;EACnC,IAAIC,OAAO,GADwB,EACnC,CADmC,CAEnC;;EACA,IAAIC,eAAe,GAAA,aAAG,KAAK,CAAL,UAAA,CAAkB,CAAA,IAAA,EAAA,GAAA,KAAmC;IAAA,IAAjC;MAAA,QAAA;MAAY,GAAGC;IAAf,IAAiC,IAAA;IACvE,IAAI;MAAEC;IAAF,IAAJ,KAAA;IACA,IAAIC,UAAU,GAAG,EAAE,GAAGF;IAAL,CAAjB;IACAG,GAAG,KAAMD,UAAU,CAAVA,GAAAA,GAATC,GAAG,CAAHA;IACAL,OAAO,CAAPA,MAAAA,GAAAA,CAAAA;IACAA,OAAO,CAAPA,IAAAA,CAAcI,UAAU,CAAVA,SAAAA,IAAdJ,EAAAA;IACAA,OAAO,CAAPA,IAAAA,CAAc,CAAA,QAAA,GAAA,gBAAA,GAAdA,EAAAA;IACAI,UAAU,CAAVA,SAAAA,GAAuBJ,OAAO,CAAPA,IAAAA,CAAAA,GAAAA,EAAvBI,IAAuBJ,EAAvBI;;IACA,IAAI,OAAA,SAAA,KAAJ,QAAA,EAAoC;MAChCL,SAAS,CAATA,WAAAA,GAAAA,WAAAA;IACH;;IACD,IAAI,OAAA,SAAA,KAAJ,QAAA,EAAoC;MAChC,OAAA,aACI,OAAA,CAAA,SAAA,EAAA,EAAA,GAAiBO,SAAS,CAATA,oBAAAA,CAAAA,UAAAA,EAAjB,SAAiBA,CAAjB;QAAA,QAAA,EAA6EC;MAA7E,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EADJ,IACI,CADJ;IAGH;;IACD,OAAA,aACI,OAAA,CAAA,SAAA,EAAA,EAAA,GAAA,UAAA;MAAA,QAAA,EAA4BA;IAA5B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EADJ,IACI,CADJ;EAhBJ,CAAsB,CAAtB;;EAoBA,IAAIC,qBAAqB,CAArBA,QAAAA,CAAgCT,SAAS,CAA7C,WAAIS,CAAJ,EAA8D;IAC1D,OAAA,eAAA;EACH;;EACD,OAAA,aAAOC,KAAK,CAALA,IAAAA,CAAP,eAAOA,CAAP;AA1BJ,CAAA;;AA6BA,eAAA,aAAA","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable react/display-name */\n\n/**\n * @module js/awShowWhenHOC\n */\nimport React from 'react';\nimport sanitizer from 'js/sanitizer';\nimport { nonMemoizedComponents } from 'js/hocCollectionConstants';\n\nconst displayName = 'AwShowWhen';\n\nconst awShowWhenHOC = ( Component ) => {\n    let classes = [];\n    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n    let ActualComponent = React.forwardRef( ( { children, ...props }, ref ) => {\n        let { showWhen } = props;\n        let finalProps = { ...props };\n        ref && ( finalProps.ref = ref );\n        classes.length = 0;\n        classes.push( finalProps.className || '' );\n        classes.push( !showWhen ? 'aw-widget-hide' : '' );\n        finalProps.className = classes.join( ' ' ).trim();\n        if( typeof Component === 'object' ) {\n            Component.displayName = displayName;\n        }\n        if( typeof Component === 'string' ) {\n            return (\n                <Component {...( sanitizer.sanitizeHTMLTagProps( finalProps, Component ) )}>{children}</Component>\n            );\n        }\n        return (\n            <Component {...finalProps}>{children}</Component>\n        );\n    } );\n    if( nonMemoizedComponents.includes( Component.displayName ) ) {\n        return ActualComponent;\n    }\n    return React.memo( ActualComponent );\n};\n\nexport default awShowWhenHOC;\n"]},"metadata":{},"sourceType":"module"}