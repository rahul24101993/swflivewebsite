{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwLovListService.js\";\n// Copyright (c) 2021 Siemens\n\n/* eslint-disable complexity */\n\n/* eslint-disable @swf/swf/no-react-usage */\nimport React from 'react';\nimport _ from 'lodash';\n/**\n * render function for AwList\n * @param {*} props context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awLovListRenderFunction = props => {\n  const {\n    i18n,\n    viewModel,\n    actions,\n    blankLovEntry,\n    checkLovEntries,\n    context,\n    ...prop\n  } = props;\n  const {\n    children,\n    field,\n    setlovEntry,\n    lovPopup,\n    staticFilterStr,\n    isCheckBoxArryLOV,\n    dataProvider\n  } = prop;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  let vmCollectionObj = [];\n  let scrollElement;\n  let lovEntries = [];\n  let preferredChoices = [];\n  let {\n    selectedEntries = [],\n    dirty\n  } = data;\n  let restEntries = [];\n  let hasPreferredChoices = false;\n\n  const renderChildWithItem = lovEntry => {\n    return React.Children.map(children, child => {\n      let key = lovEntry.propInternalValue !== '' ? lovEntry.propInternalValue : '_blank_';\n      return /*#__PURE__*/React.cloneElement(child, {\n        field,\n        lovEntry,\n        dataProvider,\n        setLovEntry: setlovEntry,\n        key,\n        prop\n      });\n    });\n  };\n\n  if (dataProvider) {\n    scrollElement = dataProvider.getRootReference();\n    let paginationOption = dataProvider.getPagination();\n\n    if (!paginationOption) {\n      dataProvider.setPagination({\n        root: scrollElement,\n        rootMargin: '5px',\n        threshold: 1,\n        bottomAnchorSelector: '.page-bottom'\n      });\n    }\n\n    vmCollectionObj = dataProvider.vmCollectionObj;\n  } // there are applications using object as propInternalValue,\n  // in this case, comparator expected to use propDisplayValue as key\n\n\n  let propInternalValueInObject = false;\n\n  if (vmCollectionObj && vmCollectionObj.dataLoaded && vmCollectionObj.vmCollection && vmCollectionObj.vmCollection.loadedVMObjects.length > 0) {\n    lovEntries = [...vmCollectionObj.vmCollection.loadedVMObjects]; // check for any preferred values\n\n    if (vmCollectionObj.preferredChoices && vmCollectionObj.preferredChoices.length > 0) {\n      preferredChoices = [...vmCollectionObj.preferredChoices];\n      hasPreferredChoices = true;\n    }\n\n    propInternalValueInObject = Boolean(_.find(lovEntries, item => _.isObject(item.propInternalValue)));\n  }\n\n  const comparator = (item1, item2) => {\n    let key = propInternalValueInObject ? 'propDisplayValue' : 'propInternalValue';\n    return item1[key] === item2[key];\n  }; // As per the previous code...we are assuming if dataprovider does not have action\n  // It means it is static and client-side filtering can be done.\n  // apply filter if not null\n\n\n  if (staticFilterStr && _.isString(staticFilterStr) && (context.isListbox || !(dataProvider.action || dataProvider.initializeAction))) {\n    // alway keep the empty entry if has\n    lovEntries = applyFilter(lovEntries, staticFilterStr, true);\n  } // syncLovEntries\n\n\n  prop.updateValidEntries(lovEntries);\n\n  if (hasPreferredChoices) {\n    // MRU can always be filtered client-side\n    preferredChoices = applyFilter(preferredChoices, staticFilterStr); // denote last preferred choice for styling purposes\n\n    if (preferredChoices.length) {\n      preferredChoices[preferredChoices.length - 1].lastMru = true;\n    }\n  }\n\n  if (lovEntries.length > 0) {\n    if (!isCheckBoxArryLOV) {\n      // prepend preferredChoices to top of list\n      lovEntries = preferredChoices.concat(lovEntries); // syncLovEntries\n\n      prop.updateValidEntries(lovEntries); // honor emptyLOVEntry\n\n      if (field.fielddata.emptyLOVEntry !== false) {\n        lovEntries.splice(0, 0, blankLovEntry);\n      } // initialize attention\n\n\n      if (prop.selectIndex.current === null) {\n        prop.selectIndex.current = prop.getDefaultAttention();\n      } // set attention\n\n\n      let inx = prop.selectIndex.current;\n\n      _.forEach(lovEntries, (item, jnx) => {\n        item.attn = inx === jnx;\n      });\n    } else {\n      // isCheckBoxArryLOV\n      // need to filter the checked lov at the top\n      // apply filter if has selectedEntries and has filter\n      // selectedEntries may have placeHolders, we should replace then with valid (if matched) lovEntries\n      let selectedEntries_fixed = [];\n\n      if (staticFilterStr || dirty) {\n        // replace the selectedEntries with latest if dirty\n        selectedEntries = getLatestCheckLovEntries(checkLovEntries.current); // remember the list had been filtered, and we should pull latest CheckLovEntries each time\n\n        if (!dirty) {\n          dispatch({\n            path: 'data.dirty',\n            value: true\n          });\n        }\n      }\n\n      if (selectedEntries) {\n        // replace with valid (if matched) lovEntries\n        for (let index = 0; index < selectedEntries.length; index++) {\n          const item = selectedEntries[index];\n\n          let entry = _.find(lovEntries, i => comparator(i, item)); // only pick the valid ones:\n          // 1, case all data loaded, we only pick the ones already in lovEntries, entry maybe valid or null\n          // 2, case data partial loaded, we need to keep the placeholders, ensure entry always valid\n\n\n          if (vmCollectionObj.hasMoreValuesExist && !entry) {\n            entry = item;\n          }\n\n          if (entry) {\n            selectedEntries_fixed.push({ ...entry,\n              isChecked: true\n            });\n          }\n        }\n\n        selectedEntries = selectedEntries_fixed; // apply filter\n\n        staticFilterStr && (selectedEntries = applyFilter(selectedEntries_fixed, staticFilterStr)); // cbLov is a bit complex...\n        // selected values float to top and DON'T duplicate values in list below\n        // preferredChoices can be duplicates though\n        // rm any selected entries from preferred choices array\n\n        preferredChoices = _.differenceWith(preferredChoices, selectedEntries, (item1, item2) => comparator(item1, item2)); // reset lastMru\n\n        preferredChoices.forEach(function (choice) {\n          choice.lastMru = false;\n        }); // set lastMru state on last in list\n\n        if (preferredChoices.length) {\n          preferredChoices[preferredChoices.length - 1].lastMru = true;\n        }\n      } // filter out selected entries and preferred choices to avoid duplicates\n\n\n      restEntries = _.differenceWith(lovEntries, selectedEntries.concat(preferredChoices), (item1, item2) => comparator(item1, item2)); // prepend preferred choices to top\n\n      restEntries = preferredChoices.concat(restEntries); // syncLovEntries\n\n      prop.updateValidEntries(selectedEntries.concat(restEntries));\n    }\n  }\n\n  const hasValidEntries = () => {\n    return lovEntries && lovEntries.length > 0;\n  };\n\n  const transform = item => renderChildWithItem(item);\n\n  const renderContents = () => {\n    let result = [];\n\n    if (isCheckBoxArryLOV) {\n      // selectedEntries\n      if (selectedEntries && selectedEntries.length > 0) {\n        let part1 = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"afx-selected-vals\",\n          children: selectedEntries.map(transform)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this);\n\n        result.push(part1);\n      } // others\n\n\n      if (restEntries && restEntries.length > 0) {\n        let part2 = restEntries.map(transform);\n        result.push(part2);\n      }\n    } else {\n      if (hasValidEntries()) {\n        result.push(lovEntries.map(transform));\n      }\n    }\n\n    return result;\n  };\n\n  const NO_LOV_VALUES = i18n.NO_LOV_VALUES;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-base-scrollPanel\",\n    ref: scrollElement,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"listbox\",\n      \"aria-label\": field.name,\n      className: \"sw-column flex-shrink\",\n      children: [renderContents(), !hasValidEntries() && !vmCollectionObj.fetching && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"aw-jswidgets-lov-novals\",\n        title: NO_LOV_VALUES,\n        children: NO_LOV_VALUES\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 72\n      }, this), vmCollectionObj.fetching && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"aw-jswidgets-loadingItem\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-jswidgets-loading\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\nexport const onMount = prop => {\n  prop.selectIndex.current = null;\n  const {\n    isCheckBoxArryLOV,\n    checkLovEntries\n  } = prop;\n\n  if (isCheckBoxArryLOV && checkLovEntries.current) {\n    return getLatestCheckLovEntries(checkLovEntries.current);\n  }\n};\n\nconst getLatestCheckLovEntries = checkLovEntries => {\n  return _.reduce(checkLovEntries, (result, value, key) => {\n    result.push(value);\n    return result;\n  }, []);\n};\n\nconst applyFilter = function (collection, filterString) {\n  let keepNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!filterString) {\n    return collection;\n  }\n\n  return collection.filter(item => {\n    return keepNull && !item.propDisplayValue || // only filter it when it's a string\n    _.isString(item.propInternalValue) && item.propInternalValue.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 || item.propDisplayValue.toLowerCase().indexOf(filterString.toLowerCase()) !== -1;\n  });\n};","map":{"version":3,"names":["React","_","awLovListRenderFunction","props","i18n","viewModel","actions","blankLovEntry","checkLovEntries","context","prop","children","field","setlovEntry","lovPopup","staticFilterStr","isCheckBoxArryLOV","dataProvider","data","dispatch","vmCollectionObj","scrollElement","lovEntries","preferredChoices","selectedEntries","dirty","restEntries","hasPreferredChoices","renderChildWithItem","lovEntry","Children","map","child","key","propInternalValue","cloneElement","setLovEntry","getRootReference","paginationOption","getPagination","setPagination","root","rootMargin","threshold","bottomAnchorSelector","propInternalValueInObject","dataLoaded","vmCollection","loadedVMObjects","length","Boolean","find","item","isObject","comparator","item1","item2","isString","isListbox","action","initializeAction","applyFilter","updateValidEntries","lastMru","concat","fielddata","emptyLOVEntry","splice","selectIndex","current","getDefaultAttention","inx","forEach","jnx","attn","selectedEntries_fixed","getLatestCheckLovEntries","path","value","index","entry","i","hasMoreValuesExist","push","isChecked","differenceWith","choice","hasValidEntries","transform","renderContents","result","part1","part2","NO_LOV_VALUES","name","fetching","onMount","reduce","collection","filterString","keepNull","filter","propDisplayValue","toLowerCase","indexOf"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwLovListService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable complexity */\n/* eslint-disable @swf/swf/no-react-usage */\nimport React from 'react';\nimport _ from 'lodash';\n\n/**\n * render function for AwList\n * @param {*} props context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awLovListRenderFunction = ( props ) => {\n    const { i18n, viewModel, actions, blankLovEntry, checkLovEntries, context, ...prop } = props;\n    const { children, field, setlovEntry, lovPopup, staticFilterStr, isCheckBoxArryLOV, dataProvider } = prop;\n    const { data, dispatch } = viewModel;\n    let vmCollectionObj = [];\n    let scrollElement;\n    let lovEntries = [];\n    let preferredChoices = [];\n    let { selectedEntries = [], dirty } = data;\n    let restEntries = [];\n    let hasPreferredChoices = false;\n\n    const renderChildWithItem = ( lovEntry ) => {\n        return React.Children.map( children, child => {\n            let key = lovEntry.propInternalValue !== '' ? lovEntry.propInternalValue : '_blank_';\n            return React.cloneElement( child, { field, lovEntry, dataProvider, setLovEntry: setlovEntry, key, prop } );\n        } );\n    };\n\n    if( dataProvider ) {\n        scrollElement = dataProvider.getRootReference();\n        let paginationOption = dataProvider.getPagination();\n        if( !paginationOption ) {\n            dataProvider.setPagination( {\n                root: scrollElement,\n                rootMargin: '5px',\n                threshold: 1,\n                bottomAnchorSelector: '.page-bottom'\n            } );\n        }\n        vmCollectionObj = dataProvider.vmCollectionObj;\n    }\n\n    // there are applications using object as propInternalValue,\n    // in this case, comparator expected to use propDisplayValue as key\n    let propInternalValueInObject = false;\n\n    if( vmCollectionObj && vmCollectionObj.dataLoaded && vmCollectionObj.vmCollection && vmCollectionObj.vmCollection.loadedVMObjects.length > 0 ) {\n        lovEntries = [ ...vmCollectionObj.vmCollection.loadedVMObjects ];\n\n        // check for any preferred values\n        if( vmCollectionObj.preferredChoices && vmCollectionObj.preferredChoices.length > 0 ) {\n            preferredChoices = [ ...vmCollectionObj.preferredChoices ];\n            hasPreferredChoices = true;\n        }\n\n        propInternalValueInObject = Boolean( _.find( lovEntries, ( item ) => _.isObject( item.propInternalValue ) ) );\n    }\n\n    const comparator = ( item1, item2 ) => {\n        let key = propInternalValueInObject ? 'propDisplayValue' : 'propInternalValue';\n        return item1[ key ] === item2[ key ];\n    };\n\n    // As per the previous code...we are assuming if dataprovider does not have action\n    // It means it is static and client-side filtering can be done.\n    // apply filter if not null\n    if( staticFilterStr && _.isString( staticFilterStr ) &&\n        ( context.isListbox || !( dataProvider.action || dataProvider.initializeAction ) )\n    ) {\n        // alway keep the empty entry if has\n        lovEntries = applyFilter( lovEntries, staticFilterStr, true );\n    }\n\n    // syncLovEntries\n    prop.updateValidEntries( lovEntries );\n\n    if( hasPreferredChoices ) {\n        // MRU can always be filtered client-side\n        preferredChoices = applyFilter( preferredChoices, staticFilterStr );\n\n        // denote last preferred choice for styling purposes\n        if( preferredChoices.length ) {\n            preferredChoices[ preferredChoices.length - 1 ].lastMru = true;\n        }\n    }\n\n    if( lovEntries.length > 0 ) {\n        if ( !isCheckBoxArryLOV ) {\n            // prepend preferredChoices to top of list\n            lovEntries = preferredChoices.concat( lovEntries );\n\n            // syncLovEntries\n            prop.updateValidEntries( lovEntries );\n\n            // honor emptyLOVEntry\n            if( field.fielddata.emptyLOVEntry !== false ) {\n                lovEntries.splice( 0, 0, blankLovEntry );\n            }\n\n            // initialize attention\n            if( prop.selectIndex.current === null ) {\n                prop.selectIndex.current = prop.getDefaultAttention();\n            }\n\n            // set attention\n            let inx = prop.selectIndex.current;\n            _.forEach( lovEntries, ( item, jnx ) => {\n                item.attn = inx === jnx;\n            } );\n        } else {\n            // isCheckBoxArryLOV\n            // need to filter the checked lov at the top\n            // apply filter if has selectedEntries and has filter\n            // selectedEntries may have placeHolders, we should replace then with valid (if matched) lovEntries\n            let selectedEntries_fixed = [];\n            if( staticFilterStr || dirty ) {\n                // replace the selectedEntries with latest if dirty\n                selectedEntries = getLatestCheckLovEntries( checkLovEntries.current );\n\n                // remember the list had been filtered, and we should pull latest CheckLovEntries each time\n                if( !dirty ) { dispatch( { path: 'data.dirty', value: true } ); }\n            }\n\n            if( selectedEntries ) {\n                // replace with valid (if matched) lovEntries\n                for( let index = 0; index < selectedEntries.length; index++ ) {\n                    const item = selectedEntries[ index ];\n                    let entry = _.find( lovEntries, ( i ) => comparator( i, item ) );\n\n                    // only pick the valid ones:\n                    // 1, case all data loaded, we only pick the ones already in lovEntries, entry maybe valid or null\n                    // 2, case data partial loaded, we need to keep the placeholders, ensure entry always valid\n                    if( vmCollectionObj.hasMoreValuesExist && !entry ) {\n                        entry = item;\n                    }\n\n                    if( entry ) {\n                        selectedEntries_fixed.push( { ...entry, isChecked: true } );\n                    }\n                }\n                selectedEntries = selectedEntries_fixed;\n\n                // apply filter\n                staticFilterStr && ( selectedEntries = applyFilter( selectedEntries_fixed, staticFilterStr ) );\n\n                // cbLov is a bit complex...\n                // selected values float to top and DON'T duplicate values in list below\n                // preferredChoices can be duplicates though\n                // rm any selected entries from preferred choices array\n                preferredChoices = _.differenceWith( preferredChoices, selectedEntries, ( item1, item2 ) => comparator( item1, item2 ) );\n\n                // reset lastMru\n                preferredChoices.forEach( function( choice ) {\n                    choice.lastMru = false;\n                } );\n\n                // set lastMru state on last in list\n                if( preferredChoices.length ) {\n                    preferredChoices[ preferredChoices.length - 1 ].lastMru = true;\n                }\n            }\n\n            // filter out selected entries and preferred choices to avoid duplicates\n            restEntries = _.differenceWith( lovEntries, selectedEntries.concat( preferredChoices ), ( item1, item2 ) => comparator( item1, item2 ) );\n\n            // prepend preferred choices to top\n            restEntries = preferredChoices.concat( restEntries );\n\n            // syncLovEntries\n            prop.updateValidEntries( selectedEntries.concat( restEntries ) );\n        }\n    }\n\n    const hasValidEntries = () => {\n        return lovEntries && lovEntries.length > 0;\n    };\n\n    const transform = ( item ) => renderChildWithItem( item );\n    const renderContents = () => {\n        let result = [];\n\n        if( isCheckBoxArryLOV ) {\n            // selectedEntries\n            if( selectedEntries && selectedEntries.length > 0 ) {\n                let part1 = <div className='afx-selected-vals'>\n                    { selectedEntries.map( transform ) }\n                </div>;\n                result.push( part1 );\n            }\n            // others\n            if( restEntries && restEntries.length > 0 ) {\n                let part2 = restEntries.map( transform );\n                result.push( part2 );\n            }\n        } else {\n            if( hasValidEntries() ) {\n                result.push( lovEntries.map( transform ) );\n            }\n        }\n        return result;\n    };\n\n    const NO_LOV_VALUES = i18n.NO_LOV_VALUES;\n\n    return (\n        <div className='aw-base-scrollPanel' ref={scrollElement}>\n            <ul role='listbox' aria-label={field.name} className='sw-column flex-shrink' >\n                {\n                    renderContents()\n                }\n                {\n                    !hasValidEntries() && !vmCollectionObj.fetching && <li className='aw-jswidgets-lov-novals' title={NO_LOV_VALUES}>{NO_LOV_VALUES}</li>\n                }\n                {\n                    vmCollectionObj.fetching && <li className='aw-jswidgets-loadingItem'>\n                        <div className='aw-jswidgets-loading'>&nbsp;</div>\n                    </li>\n                }\n            </ul>\n            <div className='page-bottom'></div>\n        </div>\n    );\n};\n\nexport const onMount = ( prop ) => {\n    prop.selectIndex.current = null;\n\n    const { isCheckBoxArryLOV, checkLovEntries } = prop;\n    if( isCheckBoxArryLOV && checkLovEntries.current ) {\n        return getLatestCheckLovEntries( checkLovEntries.current );\n    }\n};\n\nconst getLatestCheckLovEntries = ( checkLovEntries ) => {\n    return _.reduce( checkLovEntries, ( result, value, key ) => {\n        result.push( value );\n        return result;\n    }, [] );\n};\n\nconst applyFilter = ( collection, filterString, keepNull = false ) => {\n    if( !filterString ) { return collection; }\n    return collection.filter( ( item ) => {\n        return keepNull && !item.propDisplayValue ||\n            // only filter it when it's a string\n            _.isString( item.propInternalValue ) && item.propInternalValue.toLowerCase().indexOf( filterString.toLowerCase() ) !== -1 ||\n            item.propDisplayValue.toLowerCase().indexOf( filterString.toLowerCase() ) !== -1;\n    } );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}