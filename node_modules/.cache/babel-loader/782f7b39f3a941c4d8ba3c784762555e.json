{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListFilterService.js\";\nimport AwTextbox from 'viewmodel/AwTextboxViewModel';\nimport AwList from 'viewmodel/AwListViewModel';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const awListFilterRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    grids,\n    formProp,\n    messages,\n    ...otherProps\n  } = props;\n  const {\n    dataprovider,\n    fixedCellHeight,\n    isGroupList,\n    doubleClickAction,\n    hasFloatingCellCommands,\n    prop,\n    children,\n    itemOptions,\n    showDropArea,\n    dndHandler,\n    commandContext\n  } = otherProps;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  let listProps = {\n    dataprovider,\n    itemOptions,\n    commandContext\n  };\n\n  if (fixedCellHeight && !isGroupList) {\n    listProps.fixedCellHeight = true;\n  } else if (!fixedCellHeight && !isGroupList) {\n    listProps.hasFloatingCellCommands = true;\n  } else {\n    listProps.isGroupList = true;\n    listProps.hasFloatingCellCommands = true;\n  }\n\n  listProps.showDropArea = showDropArea;\n  listProps.dndHandler = dndHandler;\n\n  if (doubleClickAction) {\n    listProps.doubleClickAction = doubleClickAction;\n  } // Per Ux standard, ensure place holder text if not already\n  // clear children to prevent future AwTextbox pollution\n\n\n  let textBoxProps = { ...(prop || otherProps),\n    children: null\n  }; // don't show a label on filter box\n\n  textBoxProps.fielddata.propertyDisplayName = '';\n\n  if (!textBoxProps.placeholder) {\n    textBoxProps.placeholder = i18n.FILTER_TEXT;\n  } // Set timer delay of 1.5 seconds before initiating dataprovider.\n\n\n  const onChange = function (newValue, oldValue) {\n    let immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!_.isNull(data._timerid)) {\n      clearTimeout(data._timerid);\n    } // trigger a immediate filter for enter case\n\n\n    if (immediate) {\n      dataprovider.resetDataProvider();\n      return;\n    } // else trigger a delay filter\n\n\n    if (newValue !== oldValue) {\n      let timerid = setTimeout(() => {\n        dataprovider.resetDataProvider();\n      }, 1500); // update previous timerid\n\n      dispatch({\n        path: 'data._timerid',\n        value: timerid\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // use Fragment\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AwTextbox, { ...textBoxProps,\n        className: \"sw-noDirtyStyle\",\n        onSwChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row sw-listAfterFilter\",\n        children: /*#__PURE__*/_jsxDEV(AwList, { ...listProps,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  );\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListFilterService.js"],"names":["awListFilterRenderFunction","props","otherProps","commandContext","dispatch","listProps","fixedCellHeight","textBoxProps","prop","children","i18n","onChange","immediate","_","data","clearTimeout","dataprovider","newValue","timerid","setTimeout","path","value"],"mappings":"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","sourcesContent":["import AwTextbox from 'viewmodel/AwTextboxViewModel';\nimport AwList from 'viewmodel/AwListViewModel';\nimport _ from 'lodash';\n\nexport const awListFilterRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        grids,\n        formProp,\n        messages,\n        ...otherProps\n    } = props;\n    const { dataprovider, fixedCellHeight, isGroupList, doubleClickAction, hasFloatingCellCommands, prop, children, itemOptions, showDropArea, dndHandler, commandContext } = otherProps;\n    const { data, dispatch } = viewModel;\n\n    let listProps = { dataprovider, itemOptions, commandContext };\n    if( fixedCellHeight && !isGroupList ) {\n        listProps.fixedCellHeight = true;\n    } else if( !fixedCellHeight && !isGroupList ) {\n        listProps.hasFloatingCellCommands = true;\n    } else {\n        listProps.isGroupList = true;\n        listProps.hasFloatingCellCommands = true;\n    }\n\n    listProps.showDropArea = showDropArea;\n    listProps.dndHandler = dndHandler;\n    if( doubleClickAction ) {\n        listProps.doubleClickAction = doubleClickAction;\n    }\n    // Per Ux standard, ensure place holder text if not already\n    // clear children to prevent future AwTextbox pollution\n    let textBoxProps = { ...prop || otherProps, children: null };\n    // don't show a label on filter box\n    textBoxProps.fielddata.propertyDisplayName = '';\n    if( !textBoxProps.placeholder ) {\n        textBoxProps.placeholder = i18n.FILTER_TEXT;\n    }\n\n    // Set timer delay of 1.5 seconds before initiating dataprovider.\n    const onChange = ( newValue, oldValue, immediate = false ) => {\n        if( !_.isNull( data._timerid ) ) {\n            clearTimeout( data._timerid );\n        }\n\n        // trigger a immediate filter for enter case\n        if( immediate ) {\n            dataprovider.resetDataProvider();\n            return;\n        }\n\n        // else trigger a delay filter\n        if( newValue !== oldValue ) {\n            let timerid = setTimeout( () => {\n                dataprovider.resetDataProvider();\n            }, 1500 );\n\n            // update previous timerid\n            dispatch( { path: 'data._timerid', value: timerid } );\n        }\n    };\n\n    return (\n        // use Fragment\n        <>\n            <AwTextbox {...textBoxProps} className='sw-noDirtyStyle' onSwChange={onChange}></AwTextbox>\n            <div className='sw-row sw-listAfterFilter'>\n                <AwList {...listProps}>{children}</AwList>\n            </div>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}