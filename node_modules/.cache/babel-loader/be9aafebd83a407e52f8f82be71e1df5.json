{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwFileUploadService.js\"; // Copyright (c) 2020 Siemens\n\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport fileSvc from 'js/awFileService';\nimport AwFileUploadLabel from 'viewmodel/AwFileUploadLabelViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport domUtils from 'js/domUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst domApis = domUtils.DOMAPIs;\nvar fileLabelElement;\nvar fileNameElement;\nvar fileNameElementAfterFileUploaded;\nvar classesForFileLabelElementFocus = ['aw-file-uploadFocus', 'aw-file-uploadFileLabelFocus'];\nvar classesForFileNameElementFocus = ['aw-file-uploadFocus', 'aw-file-uploadFileNameFocus'];\n\nconst addStyleToElem = elem => {\n  elem.classList.add('aw-widgets-dropframe');\n  elem.classList.add('aw-theme-dropframe');\n};\n\nconst removeStyleFromElem = elem => {\n  elem.classList.remove('aw-widgets-dropframe');\n  elem.classList.remove('aw-theme-dropframe');\n};\n\nconst highlightWidget = eventData => {\n  if (!_.isUndefined(eventData) && !_.isUndefined(eventData.targetElement) && eventData.targetElement.classList) {\n    let isHighlightFlag = eventData.isHighlightFlag;\n    let target = eventData.targetElement;\n\n    if (target.classList.contains('aw-widgets-chooseordropfile')) {\n      if (isHighlightFlag) {\n        addStyleToElem(target);\n      } else {\n        removeStyleFromElem(target);\n      }\n    }\n  }\n};\n\nexport const handleViewFileSelection = function (props, data) {\n  const {\n    dispatch\n  } = data;\n  const {\n    selectionData\n  } = props;\n\n  if (selectionData.value && selectionData.value.files) {\n    const updatedFileChosen = {\n      now: true,\n      uploadModelProviderSelected: true,\n      _attachedFiles: selectionData.value.files\n    };\n    dispatch({\n      path: 'data.fileChosen',\n      value: updatedFileChosen\n    });\n  }\n};\nexport const awFileUploadRenderFunction = _ref => {\n  let {\n    viewModel,\n    i18n,\n    removeTooltip,\n    fileChangeAction,\n    typeFilter,\n    multiple,\n    dndHandler,\n    formData,\n    chooseFileName,\n    uploadModel,\n    selectionData,\n    actions,\n    elementRefList\n  } = _ref;\n  let {\n    providerPopup,\n    customViewPopup\n  } = actions;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  const providerPopupRef = elementRefList.get('providerPopupRef');\n  const customViewPopupRef = elementRefList.get('customViewPopupRef');\n\n  if (uploadModel && uploadModel.length > 1) {\n    uploadModel = _.sortBy(uploadModel, ['priority']);\n  }\n\n  let attachedFiles;\n  let attachedFile = [];\n\n  if (formData instanceof FormData) {\n    for (var value of formData.values()) {\n      attachedFile.push(value);\n    }\n  }\n\n  if (!multiple && formData instanceof FormData && attachedFile.length > 0) {\n    attachedFiles = formData;\n    data.fileChosen.now = true;\n    let fileExt = fileSvc.getFileExtension(attachedFile[0].name);\n\n    if (fileExt !== '') {\n      fileExt = _.replace(fileExt, '.', '');\n    }\n\n    let validFile = fileSvc.fileMatchTypes(typeFilter, fileExt);\n\n    if (!validFile) {\n      eventBus.publish('invalidFileSelected', {});\n      dispatch({\n        path: 'data.fileChosen',\n        value: {\n          now: false,\n          uploadModelProviderSelected: false\n        }\n      });\n    }\n  } else {\n    attachedFiles = data.fileChosen._attachedFiles ? data.fileChosen._attachedFiles : new FormData();\n  }\n\n  data.fileChosen._attachedFiles = attachedFiles; // ChangeEvent<HTMLInputElement>\n\n  const updateData = (files, isAppend) => {\n    let validFile = true;\n\n    if (files.length > 0) {\n      let fileNames = [];\n      let fileNameNoExts = [];\n      let fileExts = [];\n      let fileInputForms = [];\n      files.forEach(fileItem => {\n        let fileName = fileItem.name;\n        let fileNameNoExt = fileSvc.getFileNameWithoutExtension(fileName);\n        let fileExt = fileSvc.getFileExtension(fileName);\n\n        if (fileExt !== '') {\n          fileExt = _.replace(fileExt, '.', '');\n        }\n\n        validFile = fileSvc.fileMatchTypes(typeFilter, fileExt);\n        fileNames.push(fileName);\n        fileNameNoExts.push(fileNameNoExt);\n        fileExts.push(fileExt);\n        fileInputForms.push({\n          selectedFile: fileName,\n          file: fileItem\n        });\n      });\n\n      if (!multiple) {\n        if (!validFile) {\n          eventBus.publish('invalidFileSelected', {});\n          dispatch({\n            path: 'data.fileChosen',\n            value: {\n              now: false,\n              uploadModelProviderSelected: false\n            }\n          });\n        }\n\n        data.formData = new FormData();\n        data.formData.append('fmsFile', files[0]);\n        data.fileInputForms = data.formData;\n        data.fileName = fileNames[0];\n        data.fileNameNoExt = fileNameNoExts[0];\n        data.fileExt = fileExts[0];\n      } else {\n        data.fileName = data.fileName && isAppend ? [...data.fileName, ...fileNames] : fileNames;\n        data.fileNameNoExt = data.fileNameNoExt && isAppend ? [...data.fileNameNoExt, ...fileNameNoExts] : fileNameNoExts;\n        data.fileExt = data.fileExt && isAppend ? [...data.fileExt, ...fileExts] : fileExts;\n        data.fileInputForms = data.fileInputForms && isAppend ? [...fileInputForms, ...data.fileInputForms] : fileInputForms;\n      }\n\n      data.validFile = validFile;\n      data.fileChosen.now = true;\n\n      if (validFile && data.fileChosen.uploadModelProviderSelected) {\n        attachedFiles = new FormData();\n      }\n\n      dispatch({\n        path: 'data.fileChosen',\n        value: {\n          now: true,\n          uploadModelProviderSelected: false\n        }\n      });\n      const fileInfo = {\n        fileName: data.fileName,\n        fileNameNoExt: data.fileNameNoExt,\n        validFile: data.validFile,\n        fileExt: data.fileExt,\n        formData: data.fileInputForms\n      }; // call action when file selection changed, inputData : {{ data.formData}}\n\n      if (fileChangeAction) {\n        fileChangeAction(fileInfo);\n      }\n\n      if (selectionData) {\n        // Required model info & file info updates\n        const updateInfo = selectionData.value;\n        updateInfo.selectedFileInfo = fileInfo;\n\n        if (_.isEmpty(updateInfo.modelInfo) && uploadModel && uploadModel.length > 0) {\n          updateInfo.modelInfo = uploadModel[0];\n        }\n\n        selectionData.update(updateInfo);\n      }\n    } else {\n      const fileInfo = {\n        fileName: undefined,\n        fileNameNoExt: undefined,\n        validFile: undefined,\n        fileExt: undefined,\n        formData: undefined\n      };\n\n      if (fileChangeAction) {\n        fileChangeAction(fileInfo);\n      }\n\n      if (selectionData) {\n        // Required model info & file info updates\n        const updateInfo = selectionData.value;\n        updateInfo.modelInfo = undefined;\n        updateInfo.selectedFileInfo = fileInfo;\n        selectionData.update(updateInfo);\n      }\n    }\n\n    return validFile;\n  };\n\n  let typesSet = null;\n\n  if (typeFilter && '*' !== typeFilter && '.' !== typeFilter) {\n    typesSet = new Set(typeFilter.split(',').map(item => {\n      const validFileExt = item.trim();\n      return _.replace(validFileExt.toLowerCase(), '.', '');\n    }));\n  }\n\n  const allFileMatchTypes = items => {\n    if (!typesSet) {\n      return true;\n    }\n\n    let allMatched = true;\n    const fileItemsArray = Array.from(items);\n    fileItemsArray.forEach(fileItem => {\n      let fileExt = fileSvc.getFileExtension(fileItem.name);\n\n      if (fileExt !== '') {\n        fileExt = _.replace(fileExt, '.', '');\n      }\n\n      if (!typesSet.has(fileExt.toLowerCase())) {\n        allMatched = false;\n      }\n    });\n    return allMatched;\n  }; // ChangeEvent<HTMLInputElement>\n\n\n  const handleFileChange = e => {\n    const files = e.target.files;\n    let filesArr = Array.from(files);\n    updateAttachedFiles(filesArr);\n    e.target.value = '';\n  }; // ClickEvent<HTMLInputElement>\n\n\n  const handleClick = e => {\n    if (uploadModel) {\n      let providerPopupToDisplay = true; // By default if there is a single configuration without popupViewId then the local file selection is invoked.\n\n      if (uploadModel.length === 1 && !uploadModel[0].popupViewId) {\n        providerPopupToDisplay = false;\n\n        if (selectionData) {\n          // Required model info update\n          selectionData.value.modelInfo = uploadModel[0];\n        }\n      }\n\n      if (providerPopupToDisplay) {\n        const inputElement = providerPopupRef.current;\n        const isUploadModelOptionClick = inputElement.getAttribute('isUploadModelOptionClick');\n\n        if (!isUploadModelOptionClick) {\n          e.preventDefault(); // case click or enter\n\n          providerPopup.show({\n            reference: inputElement,\n            width: inputElement.offsetWidth,\n            className: 'sw-lov-popup'\n          });\n        } else {\n          domApis.removeAttribute(inputElement, 'isUploadModelOptionClick');\n          providerPopup.hide();\n        }\n      }\n    }\n  };\n\n  const handleUploadModelOptionSelect = (e, model) => {\n    if (model.name && model.popupViewId) {\n      e.preventDefault();\n      customViewPopup.show({\n        reference: customViewPopupRef.current,\n        view: model.popupViewId,\n        subPanelContext: {\n          selectionData: selectionData,\n          ...model\n        },\n        caption: model.caption\n      });\n      providerPopup.hide();\n    } else {\n      if (selectionData) {\n        // Required model info update\n        selectionData.value.modelInfo = model;\n      }\n\n      const inputElement = providerPopupRef.current;\n      domApis.setAttribute(inputElement, 'isUploadModelOptionClick', true);\n      inputElement.click();\n    }\n  }; // KeyDownEvent<HTMLInputElement>\n\n\n  const handleUploadModelOptionKeyDown = (e, optionName) => {\n    if (e.key && (e.key === 'Enter' || e.key === ' ')) {\n      handleUploadModelOptionSelect(e, optionName);\n    }\n  };\n\n  const isFileUploadWidgetFocused = () => {\n    let fileInputElement = document.getElementsByClassName('aw-file-upload-fileInput');\n\n    if (fileInputElement && fileInputElement.length > 0) {\n      return document.activeElement === fileInputElement[0];\n    }\n\n    return false;\n  };\n\n  const handleFocus = () => {\n    fileLabelElement = document.getElementsByClassName('aw-file-upload-fileLabel');\n\n    if (fileLabelElement && fileLabelElement.length > 0) {\n      fileLabelElement[0].classList.add(...classesForFileLabelElementFocus);\n    }\n\n    fileNameElement = document.getElementsByClassName('aw-file-upload-fileName');\n\n    if (fileNameElement && fileNameElement.length > 0) {\n      fileNameElement[0].classList.add(...classesForFileNameElementFocus);\n    }\n  };\n\n  const handleBlur = () => {\n    if (fileLabelElement && fileLabelElement.length > 0) {\n      fileLabelElement[0].classList.remove(...classesForFileLabelElementFocus);\n    }\n\n    if (fileNameElement && fileNameElement.length > 0) {\n      fileNameElement[0].classList.remove(...classesForFileNameElementFocus);\n    }\n\n    fileNameElementAfterFileUploaded = document.getElementsByClassName('file-upload-selected-file');\n\n    if (fileNameElementAfterFileUploaded && fileNameElementAfterFileUploaded.length > 0) {\n      fileNameElementAfterFileUploaded[0].classList.remove(...classesForFileNameElementFocus);\n    }\n  };\n\n  const getClassesAfterFileUpload = () => {\n    if (isFileUploadWidgetFocused()) {\n      return 'aw-file-upload-fileName '.concat('file-upload-selected-file ').concat('aw-file-uploadFocus ').concat('aw-file-uploadFileNameFocus');\n    }\n\n    return 'aw-file-upload-fileName '.concat('file-upload-selected-file');\n  };\n\n  const refreshFileListInfo = isChosen => {\n    dispatch({\n      path: 'data.fileChosen',\n      value: {\n        now: isChosen,\n        uploadModelProviderSelected: false,\n        _attachedFiles: attachedFiles\n      }\n    });\n  }; // Deletes file from attachedFiles list\n\n\n  const deleteFile = name => {\n    let fileNames = data.fileName;\n\n    if (_.isArray(fileNames)) {\n      let indxToRemove = fileNames.indexOf(name);\n      data.fileName.splice(indxToRemove, 1);\n      data.fileNameNoExt.splice(indxToRemove, 1);\n      data.fileInputForms.splice(indxToRemove, 1);\n      data.fileExt.splice(indxToRemove, 1);\n    }\n\n    attachedFiles.delete(name);\n  };\n  /**\n   * @param { File[] } files - files\n   * @return {File[] } resultFiles\n   */\n\n\n  const filterTypes = function (files) {\n    let allMatchedType = true;\n\n    if (!typesSet) {\n      return files;\n    }\n\n    const resultFiles = files.filter(file => {\n      const fileTypes = file.name.split('.'); // in case of 1.x.dat\n\n      const fileType = fileTypes[fileTypes.length - 1];\n\n      if (!multiple || typesSet.has(fileType)) {\n        return true;\n      }\n\n      allMatchedType = false;\n      return false;\n    });\n\n    if (!allMatchedType) {\n      eventBus.publish('invalidFileSelected', {});\n    }\n\n    return resultFiles;\n  };\n  /**\n   *\n   * @param { File[] } filesArray - array of files to be uploaded\n   * @param { Boolean } isAppend - isAppend\n   */\n\n\n  const updateAttachedFiles = function (filesArray) {\n    let isAppend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    updateData(filesArray, isAppend);\n    const typeFilterFiles = filterTypes(filesArray);\n\n    if (!multiple && typeFilterFiles.length > 0) {\n      //If single mode and typeFilterFiles are valid , delete existing file before updating\n      for (var file of attachedFiles.values()) {\n        deleteFile(file.name);\n      }\n    }\n\n    typeFilterFiles.forEach(file => {\n      attachedFiles.set(file.name, file);\n    });\n    refreshFileListInfo(true);\n  };\n\n  const handleImplicitFilesAttachment = e => {\n    if (fileSvc.dataTransferContainsFiles(e) && allFileMatchTypes(e.dataTransfer.files)) {\n      const filesArray = Array.from(e.dataTransfer.files);\n      updateAttachedFiles(filesArray);\n    }\n  };\n\n  const callbackAPIs = {\n    highlightTarget: highlightWidget,\n    updateFileData: handleImplicitFilesAttachment,\n    getTargetElementAndVmo: event => {\n      let targetVMO = null;\n      let target = event.currentTarget;\n      return {\n        targetElement: target,\n        targetVMO: targetVMO\n      };\n    }\n  }; //DragEvent<HTMLElement>\n\n  const handleDrop = e => {\n    let targetEle = e.currentTarget; // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n    // hence NOT leaving it to contributed handlers to implement it\n\n    removeStyleFromElem(targetEle);\n\n    if (e.dataTransfer) {\n      e.dataTransfer.dropEffect = 'none';\n      e.preventDefault();\n    }\n\n    handleDrag(false);\n\n    if (dndHandler && dndHandler[e.type]) {\n      let fun = dndHandler[e.type];\n      fun(e, {\n        targetElement: targetEle,\n        targetVMO: null\n      }, callbackAPIs);\n    } else {\n      handleImplicitFilesAttachment(e);\n    }\n  };\n\n  const handleClickDeselect = (e, name) => {\n    if (!data.fileChosen.uploadModelProviderSelected) {\n      e.preventDefault();\n      deleteFile(name);\n      updateAttachedFiles(getAttachedFiles(), false);\n    } else {\n      const currentAttachedFiles = data.fileChosen._attachedFiles;\n      const index = currentAttachedFiles.findIndex(file => file.name === name);\n      currentAttachedFiles.splice(index, 1);\n\n      if (currentAttachedFiles.length === 0) {\n        updateData([], false);\n      }\n\n      dispatch({\n        path: 'data.fileChosen',\n        value: {\n          now: true,\n          uploadModelProviderSelected: true,\n          _attachedFiles: currentAttachedFiles\n        }\n      });\n    }\n  };\n\n  const getAttachedFiles = () => {\n    let attachedFileArray = [];\n\n    for (var value of attachedFiles.values()) {\n      attachedFileArray.push(value);\n    }\n\n    return attachedFileArray;\n  }; // set Dragger highlight when over: boolean\n\n\n  const handleDrag = over => {\n    dispatch({\n      path: 'data.isDragOn',\n      value: over\n    });\n  };\n\n  const fileDragOver = e => {\n    let targetEle = e.currentTarget; // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n    // hence NOT leaving it to contributed handlers to implement it\n\n    addStyleToElem(targetEle);\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (dndHandler && dndHandler[e.type]) {\n      let fun = dndHandler[e.type];\n      fun(e, {\n        targetElement: targetEle,\n        targetVMO: null\n      }, callbackAPIs);\n    }\n  }; // clear the drag style after drop or drop leave\n\n  /**\n   * @param {DragEvent<HtmlElement>} e : the drag event\n   */\n\n\n  const fileDragLeave = e => {\n    let targetEle = e.currentTarget; // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n    // hence NOT leaving it to contributed handlers to implement it\n\n    removeStyleFromElem(targetEle);\n\n    if (e.dataTransfer) {\n      e.dataTransfer.dropEffect = 'none';\n      e.preventDefault();\n    }\n\n    handleDrag(false);\n\n    if (dndHandler && dndHandler[e.type]) {\n      let fun = dndHandler[e.type];\n      fun(e, {\n        targetElement: targetEle,\n        targetVMO: null\n      }, callbackAPIs);\n    }\n  };\n\n  let filesToDisp = getAttachedFiles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-file-upload-container aw-file-upload-initial aw-widgets-chooseordropfile\",\n    onDragOver: e => fileDragOver(e),\n    onDragLeave: e => {\n      fileDragLeave(e);\n    },\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sw-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-file-upload-fileLabel\",\n        ref: customViewPopupRef,\n        children: [\"  \", chooseFileName ? chooseFileName : i18n.ChooseFile, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), filesToDisp && filesToDisp.length === 0 && !multiple && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-file-upload-fileName\",\n        children: [\" \", i18n.singleUpload, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 75\n      }, this), multiple && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-file-upload-fileName\",\n        children: [\" \", i18n.multipleUpload, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 32\n      }, this), filesToDisp && filesToDisp.length > 0 && data.fileChosen.now && !multiple && /*#__PURE__*/_jsxDEV(\"div\", {\n        onDrop: handleDrop,\n        className: getClassesAfterFileUpload(),\n        children: /*#__PURE__*/_jsxDEV(AwFileUploadLabel, {\n          removeTooltip: removeTooltip,\n          item: filesToDisp[0],\n          removeFileHandler: handleClickDeselect\n        }, filesToDisp[0].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: providerPopupRef,\n        \"data-locator\": \"aw-fileUpload\",\n        multiple: multiple,\n        className: \"aw-file-upload-fileInput\",\n        type: \"file\",\n        accept: typeFilter,\n        onChange: handleFileChange,\n        onClick: handleClick,\n        title: filesToDisp && filesToDisp[0] && filesToDisp[0].name,\n        onFocus: handleFocus,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }, this), providerPopup.open && /*#__PURE__*/_jsxDEV(AwPopup, { ...providerPopup.options,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-base-scrollPanel\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            role: \"listbox\",\n            tabIndex: 0,\n            className: \"sw-column\",\n            children: uploadModel.map(model => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                role: \"option\",\n                \"aria-selected\": \"false\",\n                tabIndex: -1,\n                onClick: e => handleUploadModelOptionSelect(e, model),\n                onKeyDown: e => handleUploadModelOptionKeyDown(e, model.name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sw-row sw-component\",\n                    children: [/*#__PURE__*/_jsxDEV(AwPic, {\n                      className: \"aw-widget-thumbnail\",\n                      iconId: model.iconName,\n                      source: model.iconName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sw-cell-valName\",\n                      title: model.name,\n                      children: model.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 37\n                }, this)\n              }, model.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 41\n      }, this), customViewPopup.open && /*#__PURE__*/_jsxDEV(AwPopup, { ...customViewPopup.options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }, this), multiple && filesToDisp && filesToDisp.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"aw-upload-list-items\",\n      children: filesToDisp.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"sw-flex-row\",\n          children: /*#__PURE__*/_jsxDEV(AwFileUploadLabel, {\n            removeTooltip: removeTooltip,\n            item: item,\n            removeFileHandler: handleClickDeselect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 41\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwFileUploadService.js"],"names":["domApis","domUtils","classesForFileLabelElementFocus","classesForFileNameElementFocus","addStyleToElem","elem","removeStyleFromElem","highlightWidget","eventData","_","isHighlightFlag","target","handleViewFileSelection","dispatch","selectionData","updatedFileChosen","now","uploadModelProviderSelected","_attachedFiles","files","path","value","awFileUploadRenderFunction","elementRefList","customViewPopup","providerPopupRef","customViewPopupRef","uploadModel","attachedFile","formData","attachedFiles","data","fileExt","fileSvc","validFile","eventBus","updateData","fileNames","fileNameNoExts","fileExts","fileInputForms","fileItem","fileName","fileNameNoExt","selectedFile","file","fileInfo","fileChangeAction","updateInfo","undefined","typesSet","typeFilter","item","validFileExt","allFileMatchTypes","items","allMatched","fileItemsArray","Array","handleFileChange","e","filesArr","updateAttachedFiles","handleClick","providerPopupToDisplay","inputElement","isUploadModelOptionClick","providerPopup","reference","width","className","handleUploadModelOptionSelect","model","view","subPanelContext","caption","handleUploadModelOptionKeyDown","isFileUploadWidgetFocused","fileInputElement","document","handleFocus","fileLabelElement","fileNameElement","handleBlur","fileNameElementAfterFileUploaded","getClassesAfterFileUpload","refreshFileListInfo","isChosen","deleteFile","name","indxToRemove","filterTypes","allMatchedType","resultFiles","fileTypes","fileType","isAppend","typeFilterFiles","handleImplicitFilesAttachment","filesArray","callbackAPIs","highlightTarget","updateFileData","getTargetElementAndVmo","event","targetVMO","targetElement","handleDrop","targetEle","handleDrag","dndHandler","fun","handleClickDeselect","getAttachedFiles","currentAttachedFiles","index","attachedFileArray","over","fileDragOver","fileDragLeave","filesToDisp","chooseFileName","i18n","multiple","iconName","options"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Siemens\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport fileSvc from 'js/awFileService';\nimport AwFileUploadLabel from 'viewmodel/AwFileUploadLabelViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport domUtils from 'js/domUtils';\n\nconst domApis = domUtils.DOMAPIs;\nvar fileLabelElement;\nvar fileNameElement;\nvar fileNameElementAfterFileUploaded;\nvar classesForFileLabelElementFocus = [\n    'aw-file-uploadFocus',\n    'aw-file-uploadFileLabelFocus'\n];\nvar classesForFileNameElementFocus = [\n    'aw-file-uploadFocus',\n    'aw-file-uploadFileNameFocus'\n];\n\nconst addStyleToElem = elem => {\n    elem.classList.add( 'aw-widgets-dropframe' );\n    elem.classList.add( 'aw-theme-dropframe' );\n};\n\nconst removeStyleFromElem = elem => {\n    elem.classList.remove( 'aw-widgets-dropframe' );\n    elem.classList.remove( 'aw-theme-dropframe' );\n};\n\nconst highlightWidget = ( eventData ) => {\n    if( !_.isUndefined( eventData ) && !_.isUndefined( eventData.targetElement ) && eventData.targetElement.classList ) {\n        let isHighlightFlag = eventData.isHighlightFlag;\n        let target = eventData.targetElement;\n        if( target.classList.contains( 'aw-widgets-chooseordropfile' ) ) {\n            if( isHighlightFlag ) {\n                addStyleToElem( target );\n            } else {\n                removeStyleFromElem( target );\n            }\n        }\n    }\n};\n\nexport const handleViewFileSelection = function( props, data ) {\n    const { dispatch } = data;\n    const { selectionData } = props;\n\n    if( selectionData.value && selectionData.value.files ) {\n        const updatedFileChosen = {\n            now: true,\n            uploadModelProviderSelected: true,\n            _attachedFiles: selectionData.value.files\n        };\n        dispatch( { path: 'data.fileChosen', value: updatedFileChosen } );\n    }\n};\n\nexport const awFileUploadRenderFunction = ( {\n    viewModel,\n    i18n,\n    removeTooltip,\n    fileChangeAction,\n    typeFilter,\n    multiple,\n    dndHandler,\n    formData,\n    chooseFileName,\n    uploadModel,\n    selectionData,\n    actions,\n    elementRefList\n} ) => {\n    let { providerPopup, customViewPopup } = actions;\n    const { data, dispatch } = viewModel;\n\n    const providerPopupRef = elementRefList.get( 'providerPopupRef' );\n    const customViewPopupRef = elementRefList.get( 'customViewPopupRef' );\n\n    if( uploadModel && uploadModel.length > 1 ) {\n        uploadModel = _.sortBy( uploadModel, [ 'priority' ] );\n    }\n\n    let attachedFiles;\n    let attachedFile = [];\n    if( formData instanceof FormData ) {\n        for( var value of formData.values() ) {\n            attachedFile.push( value );\n        }\n    }\n    if( !multiple && formData instanceof FormData && attachedFile.length > 0 ) {\n        attachedFiles = formData;\n        data.fileChosen.now = true;\n        let fileExt = fileSvc.getFileExtension( attachedFile[ 0 ].name );\n        if( fileExt !== '' ) {\n            fileExt = _.replace( fileExt, '.', '' );\n        }\n        let validFile = fileSvc.fileMatchTypes( typeFilter, fileExt );\n        if( !validFile ) {\n            eventBus.publish( 'invalidFileSelected', {} );\n            dispatch( { path: 'data.fileChosen', value: { now: false, uploadModelProviderSelected: false } } );\n        }\n    } else {\n        attachedFiles = data.fileChosen._attachedFiles ? data.fileChosen._attachedFiles : new FormData();\n    }\n    data.fileChosen._attachedFiles = attachedFiles;\n\n    // ChangeEvent<HTMLInputElement>\n    const updateData = ( files, isAppend ) => {\n        let validFile = true;\n        if( files.length > 0 ) {\n            let fileNames = [];\n            let fileNameNoExts = [];\n            let fileExts = [];\n            let fileInputForms = [];\n            files.forEach( fileItem => {\n                let fileName = fileItem.name;\n                let fileNameNoExt = fileSvc.getFileNameWithoutExtension( fileName );\n                let fileExt = fileSvc.getFileExtension( fileName );\n                if( fileExt !== '' ) {\n                    fileExt = _.replace( fileExt, '.', '' );\n                }\n                validFile = fileSvc.fileMatchTypes( typeFilter, fileExt );\n                fileNames.push( fileName );\n                fileNameNoExts.push( fileNameNoExt );\n                fileExts.push( fileExt );\n                fileInputForms.push( { selectedFile: fileName, file: fileItem } );\n            } );\n            if( !multiple ) {\n                if( !validFile ) {\n                    eventBus.publish( 'invalidFileSelected', {} );\n                    dispatch( { path: 'data.fileChosen', value: { now: false, uploadModelProviderSelected: false } } );\n                }\n                data.formData = new FormData();\n                data.formData.append( 'fmsFile', files[ 0 ] );\n                data.fileInputForms = data.formData;\n                data.fileName = fileNames[ 0 ];\n                data.fileNameNoExt = fileNameNoExts[ 0 ];\n                data.fileExt = fileExts[ 0 ];\n            } else {\n                data.fileName = data.fileName && isAppend ? [ ...data.fileName, ...fileNames ] : fileNames;\n                data.fileNameNoExt = data.fileNameNoExt && isAppend ? [ ...data.fileNameNoExt, ...fileNameNoExts ] : fileNameNoExts;\n                data.fileExt = data.fileExt && isAppend ? [ ...data.fileExt, ...fileExts ] : fileExts;\n                data.fileInputForms = data.fileInputForms && isAppend ? [ ...fileInputForms, ...data.fileInputForms ] : fileInputForms;\n            }\n            data.validFile = validFile;\n            data.fileChosen.now = true;\n            if( validFile && data.fileChosen.uploadModelProviderSelected ) {\n                attachedFiles = new FormData();\n            }\n            dispatch( { path: 'data.fileChosen', value: { now: true, uploadModelProviderSelected: false } } );\n\n            const fileInfo = {\n                fileName: data.fileName,\n                fileNameNoExt: data.fileNameNoExt,\n                validFile: data.validFile,\n                fileExt: data.fileExt,\n                formData: data.fileInputForms\n            };\n\n            // call action when file selection changed, inputData : {{ data.formData}}\n            if( fileChangeAction ) {\n                fileChangeAction( fileInfo );\n            }\n            if( selectionData ) {\n                // Required model info & file info updates\n                const updateInfo = selectionData.value;\n                updateInfo.selectedFileInfo = fileInfo;\n                if ( _.isEmpty( updateInfo.modelInfo ) && uploadModel && uploadModel.length > 0 ) {\n                    updateInfo.modelInfo = uploadModel[0];\n                }\n                selectionData.update( updateInfo );\n            }\n        } else {\n            const fileInfo = {\n                fileName: undefined,\n                fileNameNoExt: undefined,\n                validFile: undefined,\n                fileExt: undefined,\n                formData: undefined\n            };\n            if( fileChangeAction ) {\n                fileChangeAction( fileInfo );\n            }\n            if( selectionData ) {\n                // Required model info & file info updates\n                const updateInfo = selectionData.value;\n                updateInfo.modelInfo = undefined;\n                updateInfo.selectedFileInfo = fileInfo;\n                selectionData.update( updateInfo );\n            }\n        }\n        return validFile;\n    };\n\n    let typesSet = null;\n\n    if( typeFilter && '*' !== typeFilter && '.' !== typeFilter ) {\n        typesSet = new Set( typeFilter.split( ',' ).map( item => {\n            const validFileExt = item.trim();\n            return _.replace( validFileExt.toLowerCase(), '.', '' );\n        } ) );\n    }\n\n    const allFileMatchTypes = ( items ) => {\n        if( !typesSet ) {\n            return true;\n        }\n        let allMatched = true;\n        const fileItemsArray = Array.from( items );\n        fileItemsArray.forEach( fileItem => {\n            let fileExt = fileSvc.getFileExtension( fileItem.name );\n            if( fileExt !== '' ) {\n                fileExt = _.replace( fileExt, '.', '' );\n            }\n            if( !typesSet.has( fileExt.toLowerCase() ) ) {\n                allMatched = false;\n            }\n        } );\n        return allMatched;\n    };\n\n    // ChangeEvent<HTMLInputElement>\n    const handleFileChange = ( e ) => {\n        const files = e.target.files;\n        let filesArr = Array.from( files );\n        updateAttachedFiles( filesArr );\n        e.target.value = '';\n    };\n\n    // ClickEvent<HTMLInputElement>\n    const handleClick = ( e ) => {\n        if( uploadModel ) {\n            let providerPopupToDisplay = true;\n            // By default if there is a single configuration without popupViewId then the local file selection is invoked.\n            if( uploadModel.length === 1 && !uploadModel[ 0 ].popupViewId ) {\n                providerPopupToDisplay = false;\n                if( selectionData ) {\n                    // Required model info update\n                    selectionData.value.modelInfo = uploadModel[ 0 ];\n                }\n            }\n\n            if( providerPopupToDisplay ) {\n                const inputElement = providerPopupRef.current;\n                const isUploadModelOptionClick = inputElement.getAttribute( 'isUploadModelOptionClick' );\n                if( !isUploadModelOptionClick ) {\n                    e.preventDefault();\n\n                    // case click or enter\n                    providerPopup.show( {\n                        reference: inputElement,\n                        width: inputElement.offsetWidth,\n                        className: 'sw-lov-popup'\n                    } );\n                } else {\n                    domApis.removeAttribute( inputElement, 'isUploadModelOptionClick' );\n                    providerPopup.hide();\n                }\n            }\n        }\n    };\n\n    const handleUploadModelOptionSelect = ( e, model ) => {\n        if( model.name && model.popupViewId ) {\n            e.preventDefault();\n\n            customViewPopup.show( {\n                reference: customViewPopupRef.current,\n                view: model.popupViewId,\n                subPanelContext: {\n                    selectionData: selectionData,\n                    ...model\n                },\n                caption: model.caption\n            } );\n\n            providerPopup.hide();\n        } else {\n            if( selectionData ) {\n                // Required model info update\n                selectionData.value.modelInfo = model;\n            }\n            const inputElement = providerPopupRef.current;\n            domApis.setAttribute( inputElement, 'isUploadModelOptionClick', true );\n            inputElement.click();\n        }\n    };\n\n    // KeyDownEvent<HTMLInputElement>\n    const handleUploadModelOptionKeyDown = ( e, optionName ) => {\n        if( e.key && ( e.key === 'Enter' || e.key === ' ' ) ) {\n            handleUploadModelOptionSelect( e, optionName );\n        }\n    };\n\n    const isFileUploadWidgetFocused = () => {\n        let fileInputElement = document.getElementsByClassName( 'aw-file-upload-fileInput' );\n        if( fileInputElement && fileInputElement.length > 0 ) {\n            return document.activeElement === fileInputElement[ 0 ];\n        }\n        return false;\n    };\n\n    const handleFocus = () => {\n        fileLabelElement = document.getElementsByClassName( 'aw-file-upload-fileLabel' );\n        if( fileLabelElement && fileLabelElement.length > 0 ) {\n            fileLabelElement[ 0 ].classList.add( ...classesForFileLabelElementFocus );\n        }\n\n        fileNameElement = document.getElementsByClassName( 'aw-file-upload-fileName' );\n        if( fileNameElement && fileNameElement.length > 0 ) {\n            fileNameElement[ 0 ].classList.add( ...classesForFileNameElementFocus );\n        }\n    };\n\n    const handleBlur = () => {\n        if( fileLabelElement && fileLabelElement.length > 0 ) {\n            fileLabelElement[ 0 ].classList.remove( ...classesForFileLabelElementFocus );\n        }\n        if( fileNameElement && fileNameElement.length > 0 ) {\n            fileNameElement[ 0 ].classList.remove( ...classesForFileNameElementFocus );\n        }\n\n        fileNameElementAfterFileUploaded = document.getElementsByClassName( 'file-upload-selected-file' );\n        if( fileNameElementAfterFileUploaded && fileNameElementAfterFileUploaded.length > 0 ) {\n            fileNameElementAfterFileUploaded[ 0 ].classList.remove( ...classesForFileNameElementFocus );\n        }\n    };\n\n    const getClassesAfterFileUpload = () => {\n        if( isFileUploadWidgetFocused() ) {\n            return 'aw-file-upload-fileName '\n                .concat( 'file-upload-selected-file ' )\n                .concat( 'aw-file-uploadFocus ' )\n                .concat( 'aw-file-uploadFileNameFocus' );\n        }\n        return 'aw-file-upload-fileName '\n            .concat( 'file-upload-selected-file' );\n    };\n\n    const refreshFileListInfo = ( isChosen ) => {\n        dispatch( { path: 'data.fileChosen', value: { now: isChosen, uploadModelProviderSelected: false, _attachedFiles: attachedFiles } } );\n    };\n\n    // Deletes file from attachedFiles list\n    const deleteFile = ( name ) => {\n        let fileNames = data.fileName;\n        if( _.isArray( fileNames ) ) {\n            let indxToRemove = fileNames.indexOf( name );\n            data.fileName.splice( indxToRemove, 1 );\n            data.fileNameNoExt.splice( indxToRemove, 1 );\n            data.fileInputForms.splice( indxToRemove, 1 );\n            data.fileExt.splice( indxToRemove, 1 );\n        }\n        attachedFiles.delete( name );\n    };\n\n    /**\n     * @param { File[] } files - files\n     * @return {File[] } resultFiles\n     */\n    const filterTypes = function( files ) {\n        let allMatchedType = true;\n\n        if( !typesSet ) {\n            return files;\n        }\n        const resultFiles = files.filter( file => {\n            const fileTypes = file.name.split( '.' );\n            // in case of 1.x.dat\n            const fileType = fileTypes[ fileTypes.length - 1 ];\n            if( !multiple || typesSet.has( fileType ) ) {\n                return true;\n            }\n            allMatchedType = false;\n            return false;\n        } );\n        if( !allMatchedType ) {\n            eventBus.publish( 'invalidFileSelected', {} );\n        }\n        return resultFiles;\n    };\n\n    /**\n     *\n     * @param { File[] } filesArray - array of files to be uploaded\n     * @param { Boolean } isAppend - isAppend\n     */\n    const updateAttachedFiles = ( filesArray, isAppend = true ) => {\n        updateData( filesArray, isAppend );\n        const typeFilterFiles = filterTypes( filesArray );\n        if( !multiple && typeFilterFiles.length > 0 ) {\n            //If single mode and typeFilterFiles are valid , delete existing file before updating\n            for( var file of attachedFiles.values() ) {\n                deleteFile( file.name );\n            }\n        }\n        typeFilterFiles.forEach( ( file ) => {\n            attachedFiles.set( file.name, file );\n        } );\n        refreshFileListInfo( true );\n    };\n\n    const handleImplicitFilesAttachment = e => {\n        if( fileSvc.dataTransferContainsFiles( e ) && allFileMatchTypes( e.dataTransfer.files ) ) {\n            const filesArray = Array.from( e.dataTransfer.files );\n            updateAttachedFiles( filesArray );\n        }\n    };\n\n    const callbackAPIs = {\n        highlightTarget: highlightWidget,\n        updateFileData: handleImplicitFilesAttachment,\n        getTargetElementAndVmo: ( event ) => {\n            let targetVMO = null;\n            let target = event.currentTarget;\n            return {\n                targetElement: target,\n                targetVMO: targetVMO\n            };\n        }\n    };\n\n    //DragEvent<HTMLElement>\n    const handleDrop = ( e ) => {\n        let targetEle = e.currentTarget;\n        // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n        // hence NOT leaving it to contributed handlers to implement it\n        removeStyleFromElem( targetEle );\n        if( e.dataTransfer ) {\n            e.dataTransfer.dropEffect = 'none';\n            e.preventDefault();\n        }\n        handleDrag( false );\n\n        if( dndHandler && dndHandler[ e.type ] ) {\n            let fun = dndHandler[ e.type ];\n            fun( e, { targetElement: targetEle, targetVMO: null }, callbackAPIs );\n        } else {\n            handleImplicitFilesAttachment( e );\n        }\n    };\n    const handleClickDeselect = ( e, name ) => {\n        if( !data.fileChosen.uploadModelProviderSelected ) {\n            e.preventDefault();\n            deleteFile( name );\n            updateAttachedFiles( getAttachedFiles(), false );\n        } else {\n            const currentAttachedFiles = data.fileChosen._attachedFiles;\n            const index = currentAttachedFiles.findIndex( ( file ) => file.name === name );\n            currentAttachedFiles.splice( index, 1 );\n            if( currentAttachedFiles.length === 0 ) {\n                updateData( [], false );\n            }\n            dispatch( { path: 'data.fileChosen', value: { now: true, uploadModelProviderSelected: true, _attachedFiles: currentAttachedFiles } } );\n        }\n    };\n\n    const getAttachedFiles = () => {\n        let attachedFileArray = [];\n        for( var value of attachedFiles.values() ) {\n            attachedFileArray.push( value );\n        }\n        return attachedFileArray;\n    };\n\n    // set Dragger highlight when over: boolean\n    const handleDrag = ( over ) => {\n        dispatch( { path: 'data.isDragOn', value: over } );\n    };\n\n    const fileDragOver = ( e ) => {\n        let targetEle = e.currentTarget;\n        // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n        // hence NOT leaving it to contributed handlers to implement it\n        addStyleToElem( targetEle );\n        e.preventDefault();\n        e.stopPropagation();\n\n        if( dndHandler && dndHandler[ e.type ] ) {\n            let fun = dndHandler[ e.type ];\n            fun( e, { targetElement: targetEle, targetVMO: null }, callbackAPIs );\n        }\n    };\n    // clear the drag style after drop or drop leave\n    /**\n     * @param {DragEvent<HtmlElement>} e : the drag event\n     */\n    const fileDragLeave = e => {\n        let targetEle = e.currentTarget;\n        // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n        // hence NOT leaving it to contributed handlers to implement it\n        removeStyleFromElem( targetEle );\n        if( e.dataTransfer ) {\n            e.dataTransfer.dropEffect = 'none';\n            e.preventDefault();\n        }\n        handleDrag( false );\n        if( dndHandler && dndHandler[ e.type ] ) {\n            let fun = dndHandler[ e.type ];\n            fun( e, { targetElement: targetEle, targetVMO: null }, callbackAPIs );\n        }\n    };\n\n    let filesToDisp = getAttachedFiles();\n    return (\n        <div className = 'aw-file-upload-container aw-file-upload-initial aw-widgets-chooseordropfile' onDragOver = { e => fileDragOver( e )}\n            onDragLeave={e => { fileDragLeave( e ); } } onDrop={handleDrop}>\n            <div className = 'sw-row'>\n                <div className = 'aw-file-upload-fileLabel' ref={customViewPopupRef}>  { chooseFileName ? chooseFileName : i18n.ChooseFile } </div>\n                { filesToDisp && filesToDisp.length === 0 && !multiple && <div className='aw-file-upload-fileName'> { i18n.singleUpload } </div> }\n                {  multiple && <div className='aw-file-upload-fileName'> { i18n.multipleUpload } </div> }\n                { filesToDisp && filesToDisp.length > 0 && data.fileChosen.now && !multiple && <div onDrop={handleDrop} className={ getClassesAfterFileUpload() }>\n                    <AwFileUploadLabel removeTooltip={removeTooltip} key={filesToDisp[0].name} item={filesToDisp[0]} removeFileHandler={handleClickDeselect}/>\n                </div> }\n                <input ref={providerPopupRef} data-locator='aw-fileUpload' multiple =  { multiple } className = 'aw-file-upload-fileInput' type='file'  accept = { typeFilter }\n                    onChange={ handleFileChange } onClick={ handleClick } title={filesToDisp && filesToDisp[0] && filesToDisp[0].name} onFocus={ handleFocus } onBlur={ handleBlur }\n                />\n                { providerPopup.open && <AwPopup {...providerPopup.options}>\n                    <div className='aw-base-scrollPanel'>\n                        <ul role='listbox' tabIndex={0}  className='sw-column'>\n                            { uploadModel.map( ( model ) => {\n                                return <li role='option' aria-selected='false' key={model.name} tabIndex={-1}\n                                    onClick={( e ) => handleUploadModelOptionSelect( e, model ) }\n                                    onKeyDown={( e ) => handleUploadModelOptionKeyDown( e, model.name ) }>\n                                    <div className='sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop'>\n                                        <div className='sw-row sw-component'>\n                                            <AwPic className='aw-widget-thumbnail' iconId={model.iconName} source={model.iconName}></AwPic>\n                                            <div className='sw-cell-valName' title={model.name}>{model.name}</div>\n                                        </div>\n                                    </div>\n                                </li>;\n                            } )}\n                        </ul>\n                    </div>\n                </AwPopup> }\n                {\n                    customViewPopup.open && <AwPopup {...customViewPopup.options} />\n                }\n            </div>\n            {\n                multiple && filesToDisp && filesToDisp.length > 0 &&\n                    <ul className = 'aw-upload-list-items'>\n                        {\n                            filesToDisp.map( item=>{\n                                return (\n                                    <li className = 'sw-flex-row' key={item.name}>\n                                        <AwFileUploadLabel removeTooltip={removeTooltip}  item={item} removeFileHandler={handleClickDeselect}></AwFileUploadLabel>\n                                    </li>\n                                );\n                            } )\n                        }\n                    </ul>\n            }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}