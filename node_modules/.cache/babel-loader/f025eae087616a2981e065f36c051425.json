{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwAvatarService.js\";\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport logger from 'js/logger';\nimport _ from 'lodash';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onAvatarClick = function (e, prop) {\n  return prop.action ? prop.action(e) : '';\n};\n\nconst getInitialsFromString = function (str) {\n  if (!str) {\n    return '';\n  }\n\n  let output = '';\n  let strings = [];\n\n  if (str.indexOf(',') !== -1) {\n    strings = str.split(',');\n\n    if (strings && strings.length) {\n      output += strings[1].trim()[0] + strings[0][0];\n    }\n  } else {\n    strings = str.split(' ');\n\n    _.forEach(strings, function (word) {\n      if (word !== '') {\n        output += word[0];\n      }\n    });\n  }\n\n  return output;\n};\n/**\n * render function for AwAvatar\n * @param {*} props context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\n\nexport const awAvatarRenderFunction = props => {\n  let initials = null;\n\n  if (props.fullLayout) {\n    if (!props.name) {\n      logger.error('name attribute is required if full-layout is used');\n    }\n\n    let textPositionClass = '';\n\n    switch (props.textPosition) {\n      case 'BOTTOM':\n        textPositionClass = 'sw-column align-center';\n        break;\n\n      case 'RIGHT':\n        textPositionClass = 'sw-row';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-locator\": props.textPosition,\n      \"aria-label\": props.i18n.USER_PROFILE,\n      className: 'sw-avatar-layout ' + textPositionClass,\n      onClick: e => onAvatarClick(e, props),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-locator\": \"avatar-generic\",\n        className: \"sw-avatar-generic sw-avatar-small sw-avatar-layoutImg\",\n        children: /*#__PURE__*/_jsxDEV(AwPic, {\n          className: \"sw-avatar-icon sw-avatar-image\",\n          alt: props.i18n.USER_PROFILE,\n          source: props.source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-avatar-text\",\n        children: props.fielddata.propertyDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  let avatarIcon = props.icon || 'cmdUser';\n  let avatarSize = props.size || 'small';\n  let sizeClass = '';\n\n  switch (avatarSize) {\n    case 'xsmall':\n      sizeClass = 'sw-avatar-xsmall';\n      break;\n\n    case 'small':\n      sizeClass = 'sw-avatar-small';\n      break;\n\n    case 'medium':\n      sizeClass = 'sw-avatar-medium';\n      break;\n\n    case 'large':\n      sizeClass = 'sw-avatar-large';\n      break;\n\n    case 'xlarge':\n      sizeClass = 'sw-avatar-xlarge';\n      break;\n  }\n\n  if (!_.isNil(props.initials)) {\n    initials = getInitialsFromString(props.initials);\n  } else if (props.fielddata) {\n    let val = props.fielddata.propertyDisplayName;\n\n    if (_.isNil(val) || val === '') {\n      val = props.fielddata.uiValue ? props.fielddata.uiValue : props.name;\n    }\n\n    initials = getInitialsFromString(val);\n  }\n\n  if (initials && initials.length > 2) {\n    initials = '';\n  }\n\n  let innerHtml = initials ? /*#__PURE__*/_jsxDEV(\"span\", {\n    \"data-locator\": \"sw-avatar-initials\",\n    className: \"sw-avatar-name sw-avatar-initials\",\n    children: initials\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 32\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-locator\": \"sw-avatar-normalIcon\",\n    className: \"sw-avatar-name sw-avatar-normalIcon\",\n    children: /*#__PURE__*/_jsxDEV(AwIcon, {\n      className: \"aw-base-icon\",\n      iconId: avatarIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n\n  if (props.source) {\n    innerHtml = /*#__PURE__*/_jsxDEV(\"img\", {\n      \"data-locator\": \"sw-avatar-image\",\n      src: props.source,\n      alt: props.i18n.USER_PROFILE,\n      className: \"sw-avatar-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    \"data-locator\": 'avatar-generic ' + avatarSize,\n    \"aria-label\": props.i18n.USER_PROFILE,\n    className: 'sw-avatar-generic ' + sizeClass,\n    onClick: e => onAvatarClick(e, props),\n    children: innerHtml\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwAvatarService.js"],"names":["onAvatarClick","prop","getInitialsFromString","output","strings","str","_","word","awAvatarRenderFunction","props","initials","logger","textPositionClass","e","source","propertyDisplayName","avatarIcon","avatarSize","sizeClass","val","innerHtml"],"mappings":"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","sourcesContent":["import AwIcon from 'viewmodel/AwIconViewModel';\nimport logger from 'js/logger';\nimport _ from 'lodash';\nimport AwPic from 'viewmodel/AwPicViewModel';\n\nconst onAvatarClick = function( e, prop ) {\n    return prop.action ? prop.action( e ) : '';\n};\n\nconst getInitialsFromString = function( str ) {\n    if( !str ) {\n        return '';\n    }\n\n    let output = '';\n    let strings = [];\n    if( str.indexOf( ',' ) !== -1 ) {\n        strings = str.split( ',' );\n        if( strings && strings.length ) {\n            output += strings[ 1 ].trim()[ 0 ] + strings[ 0 ][ 0 ];\n        }\n    } else {\n        strings = str.split( ' ' );\n        _.forEach( strings, function( word ) {\n            if( word !== '' ) {\n                output += word[ 0 ];\n            }\n        } );\n    }\n\n    return output;\n};\n\n/**\n * render function for AwAvatar\n * @param {*} props context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awAvatarRenderFunction = ( props ) => {\n    let initials = null;\n    if( props.fullLayout ) {\n        if( !props.name ) {\n            logger.error( 'name attribute is required if full-layout is used' );\n        }\n        let textPositionClass = '';\n        switch ( props.textPosition ) {\n            case 'BOTTOM':\n                textPositionClass = 'sw-column align-center';\n                break;\n            case 'RIGHT':\n                textPositionClass = 'sw-row';\n        }\n        return (\n            <button type='button' data-locator={props.textPosition} aria-label={props.i18n.USER_PROFILE} className={'sw-avatar-layout ' + textPositionClass} onClick={( e ) => onAvatarClick( e, props )}>\n                <div data-locator='avatar-generic' className='sw-avatar-generic sw-avatar-small sw-avatar-layoutImg'>\n                    <AwPic className='sw-avatar-icon sw-avatar-image' alt={props.i18n.USER_PROFILE} source={props.source}></AwPic>\n                </div>\n                <div className='sw-avatar-text'>\n                    {props.fielddata.propertyDisplayName}\n                </div>\n            </button>\n        );\n    }\n\n    let avatarIcon = props.icon || 'cmdUser';\n    let avatarSize = props.size || 'small';\n    let sizeClass = '';\n    switch ( avatarSize ) {\n        case 'xsmall':\n            sizeClass = 'sw-avatar-xsmall';\n            break;\n        case 'small':\n            sizeClass = 'sw-avatar-small';\n            break;\n        case 'medium':\n            sizeClass = 'sw-avatar-medium';\n            break;\n        case 'large':\n            sizeClass = 'sw-avatar-large';\n            break;\n        case 'xlarge':\n            sizeClass = 'sw-avatar-xlarge';\n            break;\n    }\n\n    if( !_.isNil( props.initials ) ) {\n        initials = getInitialsFromString( props.initials );\n    } else if( props.fielddata ) {\n        let val = props.fielddata.propertyDisplayName;\n        if( _.isNil( val ) || val === '' ) {\n            val = props.fielddata.uiValue ? props.fielddata.uiValue : props.name;\n        }\n        initials = getInitialsFromString( val );\n    }\n    if( initials && initials.length > 2 ) {\n        initials = '';\n    }\n    let innerHtml = initials ? <span data-locator='sw-avatar-initials' className='sw-avatar-name sw-avatar-initials'>{initials}</span> :\n        <div data-locator='sw-avatar-normalIcon' className='sw-avatar-name sw-avatar-normalIcon'>\n            <AwIcon className='aw-base-icon' iconId={avatarIcon}></AwIcon>\n        </div>;\n    if( props.source ) {\n        innerHtml = <img data-locator='sw-avatar-image' src={props.source} alt={props.i18n.USER_PROFILE} className='sw-avatar-image'></img>;\n    }\n    return (\n        <button type='button' data-locator={ 'avatar-generic ' + avatarSize} aria-label={props.i18n.USER_PROFILE} className={'sw-avatar-generic ' + sizeClass} onClick={( e ) => onAvatarClick( e, props )}>\n            {innerHtml}\n        </button>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}