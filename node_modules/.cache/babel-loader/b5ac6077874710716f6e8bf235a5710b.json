{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * @module js/derivedContextService\n */\n\n/**\n * Return type that must be used when getting derived states\n *\n * @param {Object} param0 DerivedStateResult input\n * @param {[String]} param0.ctxParameters A string list of ctx dependencies. For example [\"flagA\"] indicates a dependency on \"ctx.flagA\"\n * @param {[Any]} param0.additionalParameters A list of additional parameters to include in the compute function. These will be passed directly to the compute function.\n * @param {[String]} param0.compute The compute function which will be called with the renderContext and any additionalParameters to get the latest result\n */\nexport const DerivedStateResult = function (_ref) {\n  let {\n    ctxParameters,\n    additionalParameters,\n    compute\n  } = _ref;\n\n  if (!compute) {\n    throw new Error('DerivedStateResult must have a compute function');\n  }\n\n  this.ctxParameters = ctxParameters || [];\n  this.additionalParameters = additionalParameters || [];\n  this.compute = compute;\n};\n_c2 = DerivedStateResult;\n_c = DerivedStateResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"DerivedStateResult\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"DerivedStateResult\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declarativeui/src/js/derivedContextService.js"],"names":["DerivedStateResult","compute","ctxParameters","additionalParameters"],"mappings":"AAAA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAG,UAAA,IAAA,EAI9B;EAAA,IAJwC;IAAA,aAAA;IAAA,oBAAA;IAGxCC;EAHwC,IAIxC,IAAA;;EACA,IAAI,CAAJ,OAAA,EAAe;IACX,MAAM,IAAA,KAAA,CAAN,iDAAM,CAAN;EACH;;EACD,KAAA,aAAA,GAAqBC,aAAa,IAAlC,EAAA;EACA,KAAA,oBAAA,GAA4BC,oBAAoB,IAAhD,EAAA;EACA,KAAA,OAAA,GAAA,OAAA;AAVG,CAAA;MAAMH,kB;KAAAA,kB","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/derivedContextService\n */\n/**\n * Return type that must be used when getting derived states\n *\n * @param {Object} param0 DerivedStateResult input\n * @param {[String]} param0.ctxParameters A string list of ctx dependencies. For example [\"flagA\"] indicates a dependency on \"ctx.flagA\"\n * @param {[Any]} param0.additionalParameters A list of additional parameters to include in the compute function. These will be passed directly to the compute function.\n * @param {[String]} param0.compute The compute function which will be called with the renderContext and any additionalParameters to get the latest result\n */\nexport const DerivedStateResult = function( {\n    ctxParameters,\n    additionalParameters,\n    compute\n} ) {\n    if( !compute ) {\n        throw new Error( 'DerivedStateResult must have a compute function' );\n    }\n    this.ctxParameters = ctxParameters || [];\n    this.additionalParameters = additionalParameters || [];\n    this.compute = compute;\n};\n"]},"metadata":{},"sourceType":"module"}