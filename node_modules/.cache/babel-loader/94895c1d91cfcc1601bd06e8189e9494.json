{"ast":null,"code":"// Copyright (c) 2021 Siemens\nimport AwPropertyLabel from'viewmodel/AwPropertyLabelViewModel';import AwWidgetVal from'viewmodel/AwWidgetValViewModel';import uwPropSvc from'js/uwPropertyService';import uwSupportSvc from'js/uwSupportService';// --------------------------------\n// widgets\n// --------------------------------\n/**\n * render function for AwWidget\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const awWidgetRenderFunction=props=>{const{viewModel,ctxMin,actions,i18n,fields,grids,formProp,messages,...prop}=props;const hint=prop.hint||prop.renderingHint;if(hint){prop.fielddata.renderingHint=hint;if(prop.vmo){uwPropSvc.setRenderingHint(prop.vmo.props[prop.name],hint);}}if(prop&&prop.modifiable&&prop.modifiable!=='false'){uwPropSvc.setIsPropertyModifiable(prop,prop.modifiable);}if(prop&&prop.labeldisplay){const labelDisplay=uwSupportSvc.retrievePropertyLabelDisplay(prop.labeldisplay);uwPropSvc.setPropertyLabelDisplay(prop,labelDisplay);if(labelDisplay==='NO_PROPERTY_LABEL'){return/*#__PURE__*/_jsx(AwWidgetVal,{...prop});}}// in future, do we want a className='sw-property-valWrapper' on the AwWidgetVal?\n// would need to do similar from all prop widget wrappers\nreturn/*#__PURE__*/_jsx(AwPropertyLabel,{...prop,children:/*#__PURE__*/_jsx(AwWidgetVal,{...prop,className:\"\"})});};","map":null,"metadata":{},"sourceType":"module"}