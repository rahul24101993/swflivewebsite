{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListService.js\";\n// Copyright (c) 2021 Siemens\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport { AwServerVisibilityPopupCommandBar } from 'js/AwServerVisibilityCommandBarService';\nimport AwListItem from 'viewmodel/AwListItemViewModel';\nimport dragAndDropSvc from 'js/dragAndDropService';\nimport _ from 'lodash';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport domUtils from 'js/domUtils';\nimport eventBus from 'js/eventBus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst eleRef = domUtils.DOMAPIs;\nexport const onMount = data => {\n  const listElement = data.dataprovider.getRootReference() && data.dataprovider.getRootReference().current;\n\n  if (listElement) {\n    const list = new ariaList();\n    let ul = listElement.querySelector('[role=\"listbox\"]');\n\n    if (!ul) {\n      return;\n    }\n\n    ul.setAttribute('aria-label', 'i18n.listAriaLabel');\n    wcagSvc.updateArialabel(ul, '', 'UIElementsMessages');\n    let childSelector = 'option';\n    list.init(ul, {}, childSelector);\n  }\n};\nexport const selectionUpdated = props => {\n  const {\n    dataprovider,\n    useVirtual\n  } = props;\n  let listElement = dataprovider.getRootReference();\n\n  if (!useVirtual && listElement && listElement.current) {\n    const scrollContainer = eleRef.closest(listElement.current, '.aw-base-scrollPanel');\n    const selectedElement = eleRef.get('.aw-widgets-cellListItemSelected', listElement.current);\n\n    if (scrollContainer && selectedElement) {\n      const scrollEleDim = scrollContainer.getBoundingClientRect();\n      const selectedEleDim = selectedElement.getBoundingClientRect();\n\n      if (selectedEleDim.top + selectedEleDim.height > scrollEleDim.bottom || selectedEleDim.bottom - selectedEleDim.height < scrollEleDim.top) {\n        selectedElement.focus();\n      }\n    }\n  }\n};\n/**\n * render function for AwList\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nexport const awListRenderFunction = props => {\n  const {\n    actions,\n    commandContext = {},\n    ctx,\n    ...prop\n  } = props;\n  const {\n    dataprovider,\n    children,\n    showCheckbox,\n    listOptions,\n    itemOptions,\n    showContextMenu,\n    fixedCellHeight,\n    isGroupList,\n    // Given as \"true\" - cells appears on hover and selection of the item.\n    // Given as \"false\" - cells appears always.\n    hasFloatingCellCommands,\n    showDropArea,\n    dndHandler,\n    showDecorators,\n    doubleClickAction\n  } = prop;\n  const {\n    contextPopup\n  } = actions;\n  const {\n    json\n  } = dataprovider;\n  const anchor = json.contextMenuCommandsAnchor || 'aw_contextMenu2';\n  let scrollElement = dataprovider.getRootReference();\n  let paginationOption = dataprovider.getPagination();\n\n  if (!paginationOption) {\n    dataprovider.setPagination({\n      root: scrollElement,\n      rootMargin: '5px',\n      threshold: 1,\n      bottomAnchorSelector: '.page-bottom'\n    });\n  }\n\n  let vmCollectionObj = dataprovider.vmCollectionObj;\n  let loadedVMO = vmCollectionObj.vmCollection.loadedVMObjects;\n\n  const menuContext = event => {\n    if (!showContextMenu) {\n      return;\n    }\n\n    event.persist(); // don't show browser's context menu\n\n    event.preventDefault(); // activate selection if not already selected\n\n    if (event.currentTarget.ariaSelected !== 'true') {\n      event.currentTarget.click();\n    }\n\n    contextPopup.show({\n      targetEvent: event\n    });\n  };\n\n  let highlightListWidget = function (target) {\n    if (target) {\n      target.classList.add('aw-widgets-dropframe');\n      target.classList.add('aw-theme-dropframe');\n    }\n  };\n\n  let unHighlightListWidget = function (target) {\n    if (target) {\n      target.classList.remove('aw-theme-dropframe');\n      target.classList.remove('aw-widgets-dropframe');\n    }\n  };\n\n  const highlightUnhighlightList = eventData => {\n    if (!_.isUndefined(eventData) && eventData.targetElement && eventData.targetElement.classList) {\n      var isHighlightFlag = eventData.isHighlightFlag;\n      var target = eventData.targetElement;\n\n      if (target) {\n        if (target.classList.contains('aw-widgets-cellListItemContainer')) {\n          target = target.parentElement;\n        }\n\n        var isGlobalArea = eventData.isGlobalArea;\n\n        if (isGlobalArea) {\n          // OBJECT DRAG OVER GLOBAL AREA\n          if (isHighlightFlag) {\n            if (target.classList.contains('aw-widgets-cellListContainer') || target.children[0].classList.contains('aw-widgets-cellListContainer')) {\n              highlightListWidget(target);\n            }\n          } else {\n            if (target.classList.contains('aw-widgets-cellListContainer') || target.classList.contains('aw-widgets-cellListItem') || target.children.length > 0 && target.children[0].classList.contains('aw-widgets-cellListContainer')) {\n              unHighlightListWidget(target);\n            }\n          }\n        } else {\n          // OBJECT DRAG OVER APPLICABLE AREA\n          if (isHighlightFlag) {\n            if (target.classList.contains('aw-widgets-cellListContainer') || target.classList.contains('aw-widgets-cellListItem') || target.children.length > 0 && target.children[0].classList.contains('aw-widgets-cellListContainer')) {\n              highlightListWidget(target);\n            }\n          } else {\n            unHighlightListWidget(target);\n          }\n        }\n      }\n    }\n  };\n\n  let newCallbackApis = {\n    /**\n     * Use the given ViewModelObject(s) .\n     */\n    clearSelection: function () {\n      // Handle clear previous selection\n      dataprovider.selectNone();\n    },\n\n    /**\n     * Use the given ViewModelObject ...\n     *\n     * @param {ViewModelObject} targetVMO - The 'target' ViewModelObject being dropped onto.\n     */\n    setSelection: function (targetVMO) {\n      // Handle select result\n      var subDef = null;\n      subDef = eventBus.subscribe('cdm.relatedModified', function () {\n        eventBus.unsubscribe(subDef);\n\n        if (targetVMO) {\n          targetVMO.selected = true;\n        } // Handle select result\n\n\n        if (dataprovider) {\n          dataprovider.selectionModel.setSelection([targetVMO]);\n        }\n      });\n    },\n    highlightTarget: highlightUnhighlightList\n  };\n\n  const processContextMenu = () => {\n    return showContextMenu && contextPopup.open ? /*#__PURE__*/_jsxDEV(AwPopup, { ...contextPopup.options,\n      children: /*#__PURE__*/_jsxDEV(AwServerVisibilityPopupCommandBar, {\n        anchor: anchor,\n        context: commandContext,\n        childCommandClickCallback: () => contextPopup.hide(),\n        mselected: dataprovider.selectedObjects,\n        pselected: commandContext.pSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 55\n    }, this) : null;\n  };\n\n  const processShowDropArea = () => {\n    return showDropArea && dndHandler ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-emptyCell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 45\n    }, this) : null;\n  };\n\n  const handleDrag = (event, item) => {\n    let target = eleRef.closest(event.target, '.aw-widgets-cellListItem') || eleRef.closest(event.target, '.aw-widgets-droppable');\n    let targetVMO = [];\n\n    if (target && item) {\n      targetVMO = dragAndDropSvc.getSourceObjects(dataprovider, item.uid).filter(function (obj) {\n        return targetVMO.indexOf(obj) === -1;\n      });\n    }\n\n    if (!targetVMO.length && item) {\n      targetVMO.push(item);\n    }\n\n    if (dndHandler && dndHandler[event.type]) {\n      let fun = dndHandler[event.type];\n      fun(event, {\n        targetElement: target,\n        targetVMO: targetVMO\n      }, newCallbackApis, dataprovider);\n    }\n  };\n\n  const handleDrop = (event, item) => {\n    let target = eleRef.closest(event.target, '.aw-widgets-cellListItem') || eleRef.closest(event.target, '.aw-widgets-droppable');\n    let targetVMO = [];\n\n    if (target && item) {\n      targetVMO = [item];\n    }\n\n    if (showDropArea !== 'false' && showDropArea !== false && dndHandler && dndHandler[event.type]) {\n      let fun = dndHandler[event.type];\n      fun(event, {\n        targetElement: target,\n        targetVMO: targetVMO\n      }, newCallbackApis, dataprovider);\n    }\n  };\n\n  const ownCellCommands = () => dataprovider.commands || dataprovider.json.commandsAnchor; // cell commands or list commands\n\n\n  const showCellCommandsAlways = () => dataprovider.json.commandsAnchor && hasFloatingCellCommands === false || dataprovider.commands && _.some(dataprovider.commands, i => i.displayOption === 'ALWAYS');\n\n  const processCellItem = (item, index) => {\n    const listItemRole = 'option';\n    const context = commandContext;\n    const listItemProps = {\n      item,\n      index,\n      dataprovider,\n      ownCellCommands: ownCellCommands(),\n      showCellCommandsAlways: showCellCommandsAlways(),\n      showCheckbox,\n      listOptions,\n      itemOptions,\n      fixedCellHeight,\n      isGroupList,\n      hasFloatingCellCommands,\n      menuContext,\n      listItemRole,\n      handleDragAndDrop: {\n        drag: handleDrag,\n        drop: handleDrop,\n        draggable: true\n      },\n      showDecorators,\n      context,\n      doubleClickAction\n    };\n    return /*#__PURE__*/_createElement(AwListItem, { ...listItemProps,\n      key: item.uid ? item.uid : index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 16\n      }\n    }, children);\n  };\n\n  const processFetching = () => {\n    return vmCollectionObj.fetching ? /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"aw-jswidgets-loadingItem\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-jswidgets-loading\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 43\n    }, this) : null;\n  };\n\n  const processNoResults = () => {\n    return dataprovider.noResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-noResultsLabel\",\n      children: dataprovider.noResultsFound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }, this) : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragOver: e => handleDrop(e),\n    onDragEnter: e => handleDrop(e),\n    onDragLeave: e => handleDrop(e),\n    onDrop: e => handleDrop(e),\n    className: \"aw-base-scrollPanel\",\n    ref: scrollElement,\n    children: [processContextMenu(), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"listbox\",\n      tabIndex: dataprovider.viewModelCollection.totalFound > 0 ? 0 : -1,\n      className: \"aw-widgets-cellListWidget sw-column flex-shrink\",\n      children: [loadedVMO.length > 0 && loadedVMO.map(processCellItem), processFetching()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), processNoResults(), processShowDropArea()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["AwPopup","AwServerVisibilityPopupCommandBar","AwListItem","dragAndDropSvc","_","ariaList","wcagSvc","domUtils","eventBus","eleRef","DOMAPIs","onMount","data","listElement","dataprovider","getRootReference","current","list","ul","querySelector","setAttribute","updateArialabel","childSelector","init","selectionUpdated","props","useVirtual","scrollContainer","closest","selectedElement","get","scrollEleDim","getBoundingClientRect","selectedEleDim","top","height","bottom","focus","awListRenderFunction","actions","commandContext","ctx","prop","children","showCheckbox","listOptions","itemOptions","showContextMenu","fixedCellHeight","isGroupList","hasFloatingCellCommands","showDropArea","dndHandler","showDecorators","doubleClickAction","contextPopup","json","anchor","contextMenuCommandsAnchor","scrollElement","paginationOption","getPagination","setPagination","root","rootMargin","threshold","bottomAnchorSelector","vmCollectionObj","loadedVMO","vmCollection","loadedVMObjects","menuContext","event","persist","preventDefault","currentTarget","ariaSelected","click","show","targetEvent","highlightListWidget","target","classList","add","unHighlightListWidget","remove","highlightUnhighlightList","eventData","isUndefined","targetElement","isHighlightFlag","contains","parentElement","isGlobalArea","length","newCallbackApis","clearSelection","selectNone","setSelection","targetVMO","subDef","subscribe","unsubscribe","selected","selectionModel","highlightTarget","processContextMenu","open","options","hide","selectedObjects","pSelected","processShowDropArea","handleDrag","item","getSourceObjects","uid","filter","obj","indexOf","push","type","fun","handleDrop","ownCellCommands","commands","commandsAnchor","showCellCommandsAlways","some","i","displayOption","processCellItem","index","listItemRole","context","listItemProps","handleDragAndDrop","drag","drop","draggable","processFetching","fetching","processNoResults","noResults","noResultsFound","e","viewModelCollection","totalFound","map"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport { AwServerVisibilityPopupCommandBar } from 'js/AwServerVisibilityCommandBarService';\nimport AwListItem from 'viewmodel/AwListItemViewModel';\nimport dragAndDropSvc from 'js/dragAndDropService';\nimport _ from 'lodash';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport domUtils from 'js/domUtils';\nimport eventBus from 'js/eventBus';\n\nconst eleRef = domUtils.DOMAPIs;\n\nexport const onMount = ( data ) => {\n    const listElement = data.dataprovider.getRootReference() && data.dataprovider.getRootReference().current;\n\n    if( listElement ) {\n        const list = new ariaList();\n        let ul = listElement.querySelector( '[role=\"listbox\"]' );\n        if( !ul ) { return; }\n\n        ul.setAttribute( 'aria-label', 'i18n.listAriaLabel' );\n        wcagSvc.updateArialabel( ul, '', 'UIElementsMessages' );\n\n        let childSelector = 'option';\n        list.init( ul, {}, childSelector );\n    }\n};\n\nexport const selectionUpdated = ( props ) => {\n    const {\n        dataprovider,\n        useVirtual\n    } = props;\n\n    let listElement = dataprovider.getRootReference();\n    if( !useVirtual && listElement && listElement.current ) {\n        const scrollContainer = eleRef.closest( listElement.current, '.aw-base-scrollPanel' );\n        const selectedElement = eleRef.get( '.aw-widgets-cellListItemSelected', listElement.current );\n        if( scrollContainer && selectedElement ) {\n            const scrollEleDim = scrollContainer.getBoundingClientRect();\n            const selectedEleDim = selectedElement.getBoundingClientRect();\n\n            if( selectedEleDim.top + selectedEleDim.height > scrollEleDim.bottom || selectedEleDim.bottom - selectedEleDim.height < scrollEleDim.top ) {\n                selectedElement.focus();\n            }\n        }\n    }\n};\n\n/**\n * render function for AwList\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awListRenderFunction = ( props ) => {\n    const {\n        actions,\n        commandContext = {},\n        ctx,\n        ...prop\n    } = props;\n    const {\n        dataprovider,\n        children,\n        showCheckbox,\n        listOptions,\n        itemOptions,\n        showContextMenu,\n        fixedCellHeight,\n        isGroupList,\n        // Given as \"true\" - cells appears on hover and selection of the item.\n        // Given as \"false\" - cells appears always.\n        hasFloatingCellCommands,\n        showDropArea,\n        dndHandler,\n        showDecorators,\n        doubleClickAction\n    } = prop;\n    const { contextPopup } = actions;\n    const { json } = dataprovider;\n\n    const anchor = json.contextMenuCommandsAnchor || 'aw_contextMenu2';\n\n    let scrollElement = dataprovider.getRootReference();\n    let paginationOption = dataprovider.getPagination();\n\n    if( !paginationOption ) {\n        dataprovider.setPagination( {\n            root: scrollElement,\n            rootMargin: '5px',\n            threshold: 1,\n            bottomAnchorSelector: '.page-bottom'\n        } );\n    }\n\n    let vmCollectionObj = dataprovider.vmCollectionObj;\n    let loadedVMO = vmCollectionObj.vmCollection.loadedVMObjects;\n\n    const menuContext = ( event ) => {\n        if( !showContextMenu ) { return; }\n        event.persist();\n        // don't show browser's context menu\n        event.preventDefault();\n        // activate selection if not already selected\n        if( event.currentTarget.ariaSelected !== 'true' ) {\n            event.currentTarget.click();\n        }\n        contextPopup.show( { targetEvent: event } );\n    };\n\n    let highlightListWidget = function( target ) {\n        if( target ) {\n            target.classList.add( 'aw-widgets-dropframe' );\n            target.classList.add( 'aw-theme-dropframe' );\n        }\n    };\n\n    let unHighlightListWidget = function( target ) {\n        if( target ) {\n            target.classList.remove( 'aw-theme-dropframe' );\n            target.classList.remove( 'aw-widgets-dropframe' );\n        }\n    };\n\n    const highlightUnhighlightList = ( eventData ) => {\n        if( !_.isUndefined( eventData ) && eventData.targetElement && eventData.targetElement.classList ) {\n            var isHighlightFlag = eventData.isHighlightFlag;\n            var target = eventData.targetElement;\n            if( target ) {\n                if( target.classList.contains( 'aw-widgets-cellListItemContainer' ) ) {\n                    target = target.parentElement;\n                }\n                var isGlobalArea = eventData.isGlobalArea;\n                if( isGlobalArea ) { // OBJECT DRAG OVER GLOBAL AREA\n                    if( isHighlightFlag ) {\n                        if( target.classList.contains( 'aw-widgets-cellListContainer' ) || target.children[ 0 ].classList.contains( 'aw-widgets-cellListContainer' ) ) {\n                            highlightListWidget( target );\n                        }\n                    } else {\n                        if( target.classList.contains( 'aw-widgets-cellListContainer' ) || target.classList.contains( 'aw-widgets-cellListItem' ) || target.children.length > 0 && target\n                            .children[ 0 ].classList.contains( 'aw-widgets-cellListContainer' ) ) {\n                            unHighlightListWidget( target );\n                        }\n                    }\n                } else { // OBJECT DRAG OVER APPLICABLE AREA\n                    if( isHighlightFlag ) {\n                        if( target.classList.contains( 'aw-widgets-cellListContainer' ) || target.classList.contains( 'aw-widgets-cellListItem' ) || target.children.length > 0 && target\n                            .children[ 0 ].classList.contains( 'aw-widgets-cellListContainer' ) ) {\n                            highlightListWidget( target );\n                        }\n                    } else {\n                        unHighlightListWidget( target );\n                    }\n                }\n            }\n        }\n    };\n\n    let newCallbackApis = {\n        /**\n         * Use the given ViewModelObject(s) .\n         */\n        clearSelection: function() {\n            // Handle clear previous selection\n            dataprovider.selectNone();\n        },\n        /**\n         * Use the given ViewModelObject ...\n         *\n         * @param {ViewModelObject} targetVMO - The 'target' ViewModelObject being dropped onto.\n         */\n        setSelection: function( targetVMO ) {\n            // Handle select result\n            var subDef = null;\n\n            subDef = eventBus.subscribe( 'cdm.relatedModified', function() {\n                eventBus.unsubscribe( subDef );\n\n                if( targetVMO ) { targetVMO.selected = true; }\n\n                // Handle select result\n                if( dataprovider ) { dataprovider.selectionModel.setSelection( [ targetVMO ] ); }\n            } );\n        },\n        highlightTarget: highlightUnhighlightList\n    };\n\n    const processContextMenu = () => {\n        return showContextMenu && contextPopup.open ? <AwPopup {...contextPopup.options}>\n            <AwServerVisibilityPopupCommandBar\n                anchor={anchor}\n                context={commandContext}\n                childCommandClickCallback={()=> contextPopup.hide()}\n                mselected={dataprovider.selectedObjects}\n                pselected={commandContext.pSelected}\n            >\n            </AwServerVisibilityPopupCommandBar>\n        </AwPopup> : null;\n    };\n\n    const processShowDropArea = () => {\n        return showDropArea && dndHandler ? <div className='aw-widgets-emptyCell'></div> : null;\n    };\n\n    const handleDrag = ( event, item ) => {\n        let target = eleRef.closest( event.target, '.aw-widgets-cellListItem' ) || eleRef.closest( event.target, '.aw-widgets-droppable' );\n        let targetVMO = [];\n        if( target && item ) {\n            targetVMO = dragAndDropSvc.getSourceObjects( dataprovider, item.uid ).filter( function( obj ) { return targetVMO.indexOf( obj ) === -1; } );\n        }\n        if( !targetVMO.length && item ) {\n            targetVMO.push( item );\n        }\n        if( dndHandler && dndHandler[ event.type ] ) {\n            let fun = dndHandler[ event.type ];\n            fun( event, { targetElement: target, targetVMO: targetVMO }, newCallbackApis, dataprovider );\n        }\n    };\n\n    const handleDrop = ( event, item ) => {\n        let target = eleRef.closest( event.target, '.aw-widgets-cellListItem' ) || eleRef.closest( event.target, '.aw-widgets-droppable' );\n        let targetVMO = [];\n        if( target && item ) {\n            targetVMO = [ item ];\n        }\n        if( showDropArea !== 'false' && showDropArea !== false && dndHandler && dndHandler[ event.type ] ) {\n            let fun = dndHandler[ event.type ];\n            fun( event, { targetElement: target, targetVMO: targetVMO }, newCallbackApis, dataprovider );\n        }\n    };\n\n    const ownCellCommands = () => dataprovider.commands || dataprovider.json.commandsAnchor;\n\n    // cell commands or list commands\n    const showCellCommandsAlways = () => dataprovider.json.commandsAnchor && hasFloatingCellCommands === false || dataprovider.commands && _.some( dataprovider.commands, i => i.displayOption ===\n        'ALWAYS' );\n\n    const processCellItem = ( item, index ) => {\n        const listItemRole = 'option';\n        const context = commandContext;\n        const listItemProps = {\n            item,\n            index,\n            dataprovider,\n            ownCellCommands: ownCellCommands(),\n            showCellCommandsAlways: showCellCommandsAlways(),\n            showCheckbox,\n            listOptions,\n            itemOptions,\n            fixedCellHeight,\n            isGroupList,\n            hasFloatingCellCommands,\n            menuContext,\n            listItemRole,\n            handleDragAndDrop: { drag: handleDrag, drop: handleDrop, draggable: true },\n            showDecorators,\n            context,\n            doubleClickAction\n        };\n\n        return <AwListItem {...listItemProps} key={item.uid ? item.uid : index}>{children}</AwListItem>;\n    };\n\n    const processFetching = () => {\n        return vmCollectionObj.fetching ? <li className='aw-jswidgets-loadingItem'><div className='aw-jswidgets-loading'>&nbsp;</div></li> : null;\n    };\n\n    const processNoResults = () => {\n        return dataprovider.noResults ? <div className='aw-widgets-noResultsLabel'>{dataprovider.noResultsFound}</div> : null;\n    };\n\n    return (\n        <div onDragOver={ e => handleDrop( e )}\n            onDragEnter={e => handleDrop( e )}\n            onDragLeave={e => handleDrop( e )}\n            onDrop={e => handleDrop( e )}\n            className='aw-base-scrollPanel' ref={scrollElement}>\n            { processContextMenu() }\n\n            <ul role='listbox' tabIndex={dataprovider.viewModelCollection.totalFound > 0 ? 0 : -1} className='aw-widgets-cellListWidget sw-column flex-shrink'>\n                { loadedVMO.length > 0 && loadedVMO.map( processCellItem ) }\n                { processFetching() }\n            </ul>\n\n            <div className='page-bottom' ></div>\n\n            { processNoResults() }\n\n            { processShowDropArea() }\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}