{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwTabContainer from'viewmodel/AwTabContainerViewModel';import AwTab from'viewmodel/AwTabViewModel';import AwInclude from'viewmodel/AwIncludeViewModel';import{ExistWhen}from'js/hocCollection';const DivExistWhen=ExistWhen('div');const AwIncludeExistWhen=ExistWhen(AwInclude);/*\nctx imports\n*/import{getContext as context}from'js/AwSelectionSummaryService';import{getVisibleTabs as visibleTabs}from'js/AwSelectionSummaryService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ctxImportObj={context,visibleTabs};/*\ndynamic import\n */registerDynImportEntry('js/AwSelectionSummaryService',()=>import('js/AwSelectionSummaryService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"actions\":{\"getTabToActivateAndVisibleTabs\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"getTabToActivateAndVisibleTabs\",\"inputData\":{\"data\":\"{{data}}\",\"props\":\"{{props}}\",\"allVisibleTabs\":\"{{data.ctx.visibleTabs}}\"},\"outputData\":{\"summaryContext\":\"summaryContext\"},\"deps\":\"js/AwSelectionSummaryService\"},\"syncSublocationState\":{\"actionType\":\"JSFunction\",\"method\":\"syncSublocationState\",\"inputData\":{\"activeTab\":\"{{data.summaryContext.activeTab}}\",\"sublocationState\":\"{{props.context.pageContext.sublocationState}}\"},\"deps\":\"js/AwSelectionSummaryService\"},\"clearSublocationState\":{\"actionType\":\"JSFunction\",\"method\":\"clearSublocationState\",\"inputData\":{\"sublocationState\":\"{{props.context.pageContext.sublocationState}}\"},\"deps\":\"js/AwSelectionSummaryService\"}},\"lifecycleHooks\":{\"onMount\":\"getTabToActivateAndVisibleTabs\",\"onUpdate\":[{\"action\":\"syncSublocationState\",\"observers\":[\"viewModel.data.summaryContext.activeTab.tabKey\",\"viewModel.data.summaryContext.activeTab.view\"]},{\"action\":\"getTabToActivateAndVisibleTabs\",\"observers\":[\"viewModel.ctx.visibleTabs\",\"props.selection.uid\",\"props.selection[0].uid\",\"props.selection.length\",\"props.context.pageContext.sublocationState.secondaryActiveTabId\"]}],\"onUnmount\":\"clearSublocationState\"},\"ctx\":{\"context\":{\"parser\":{\"method\":\"getContext\",\"deps\":\"js/AwSelectionSummaryService\"}},\"visibleTabs\":{\"parser\":{\"method\":\"getVisibleTabs\",\"deps\":\"js/AwSelectionSummaryService\"}}},\"props\":{\"selection\":{\"type\":\"object\"},\"context\":{\"type\":\"object\"},\"selection-data\":{\"type\":\"object\"},\"tabs-config\":{\"type\":\"object\"},\"ctx-parameters\":{\"type\":\"object\"},\"additional-parameters\":{\"type\":\"object\"}},\"_viewModelId\":\"AwSelectionSummaryInternal\",\"_uniqueViewModelId\":\"AwSelectionSummaryInternal\"};/*\n<div class='aw-xrt-summaryXrt' exist-when=\"data.summaryContext && data.summaryContext.activeTab && data.summaryContext.visibleTabs.length > 0\">\n    <div class='aw-xrt-tabsContainer' exist-when=\"(data.summaryContext && data.summaryContext.activeTab && data.summaryContext.visibleTabs) && ((data.summaryContext.activeTab.tabContent === undefined && data.summaryContext.visibleTabs.length > 1) || (data.summaryContext.activeTab.tabContent !== undefined))\">\n        <aw-tab-container tab-container-model=\"data.summaryContext.visibleTabs\" callback=\"data.summaryContext.api\" tab-set-id=\"{{props.context.tabSetId ? props.context.tabSetId : 'secondary'}}\">\n            <aw-tab tab-model='tab' aw-repeat='tab: data.summaryContext.visibleTabs'></aw-tab>\n        </aw-tab-container>\n    </div>\n    <div class='aw-widgets-multiSelectContainer'>\n        <aw-include name=\"{{data.summaryContext.activeTab.view}}\" sub-panel-context=\"props.ctx.context[0]\" exist-when=\"data.summaryContext && data.summaryContext.activeTab && data.summaryContext.activeTab.view\"></aw-include>\n    </div>\n</div>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsxs(DivExistWhen,{className:\"aw-xrt-summaryXrt\",existWhen:AwParseService.instance(\"data.summaryContext && data.summaryContext.activeTab && data.summaryContext.visibleTabs.length > 0\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:[/*#__PURE__*/_jsx(DivExistWhen,{className:\"aw-xrt-tabsContainer\",existWhen:AwParseService.instance(\"(data.summaryContext && data.summaryContext.activeTab && data.summaryContext.visibleTabs) && ((data.summaryContext.activeTab.tabContent === undefined && data.summaryContext.visibleTabs.length > 1) || (data.summaryContext.activeTab.tabContent !== undefined))\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwTabContainer,{tabContainerModel:AwParseService.instance(\"data.summaryContext.visibleTabs\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),callback:AwParseService.instance(\"data.summaryContext.api\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),tabSetId:AwParseService.instance(\"props.context.tabSetId ? props.context.tabSetId : 'secondary'\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:Object.entries(AwParseService.instance(\"data.summaryContext.visibleTabs\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})||[]).map(_ref=>{let[$index,tab]=_ref;return/*#__PURE__*/_jsx(AwTab,{tabModel:AwParseService.instance(\"tab\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports,tab,$index})},$index);})})}),/*#__PURE__*/_jsx(\"div\",{className:\"aw-widgets-multiSelectContainer\",children:/*#__PURE__*/_jsx(AwIncludeExistWhen,{viewId:AwParseService.instance(\"data.summaryContext.activeTab.view\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),viewPath:AwParseService.instance(\"viewPath\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),name:AwParseService.instance(\"data.summaryContext.activeTab.view\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),subPanelContext:AwParseService.instance(\"props.ctx.context[0]\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"data.summaryContext && data.summaryContext.activeTab && data.summaryContext.activeTab.view\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})})]});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}