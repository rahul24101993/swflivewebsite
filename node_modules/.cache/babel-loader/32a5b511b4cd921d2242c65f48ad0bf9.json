{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/* eslint-env es6 */\n\n/**\n * This utility module provides low-level support for JS Injection.\n *\n * NOTE: better to install it in bootstrap step\n *\n * @module js/splmStatsJsService\n */\nlet _procs = [];\nlet _enabled = false;\nlet _setTimeout = null;\nlet _appendChildFn = null;\n/**\n * install JS service\n */\n\nexport const install = function () {\n  if (!_enabled) {\n    _setTimeout = window.setTimeout;\n\n    window.setTimeout = function () {\n      const _realFunc = arguments[0];\n      arguments[0] = wrapFunction(null, _realFunc);\n      return _setTimeout.apply(this, arguments);\n    }; // try to fix webpack script load issue\n\n\n    _appendChildFn = document.head.appendChild;\n\n    document.head.appendChild = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (enabled() && _procs.length > 0) {\n        const elem = args[0]; // restirct it to only onload script exist\n\n        if (elem.tagName === 'SCRIPT' && elem.src && elem.onload) {\n          // wrap onLoad script\n          const _onloadFn = elem.onload;\n\n          const _onerrorFn = elem.onerror || (() => {});\n\n          elem.onload = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            if (enabled() && _procs.length > 0) {\n              const endTime = window.performance.now(); // console.log( `Done: ${elem.src}` );\n\n              const res = _onloadFn.apply(null, args);\n\n              try {\n                _procs.forEach(function (proc) {\n                  proc.done({\n                    name: name,\n                    startTime: endTime,\n                    endTime: endTime\n                  });\n                });\n              } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n              }\n\n              return res;\n            }\n\n            return _onloadFn.apply(null, args);\n          };\n\n          elem.onerror = function () {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n\n            if (enabled() && _procs.length > 0) {\n              const endTime = window.performance.now(); // console.log( `Done: ${elem.src}` );\n\n              const res = _onerrorFn.apply(null, args);\n\n              try {\n                _procs.forEach(function (proc) {\n                  proc.done({\n                    name: name,\n                    startTime: endTime,\n                    endTime: endTime\n                  });\n                });\n              } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n              }\n\n              return res;\n            }\n\n            return _onerrorFn.apply(null, args);\n          };\n\n          try {\n            _procs.forEach(function (proc) {\n              proc.start();\n            });\n          } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n          }\n\n          return _appendChildFn.apply(document.head, args);\n        }\n      }\n\n      return _appendChildFn.apply(document.head, args);\n    };\n\n    _enabled = true;\n  }\n};\n/**\n * Wrapping JS function with plStats injection\n *\n * @param {Object} thisArg - Explicit passing of the \"this\" object for whatever function we are replacing\n * @param {Function} func - Function we are replacing\n * @param {String} name - the name (if any) of the function/object we are replacing\n *\n * @returns {Object} result - The result of whatever function we are replacing. Must be careful to return this value for functions (not setTimeout) that\n * are expecting a return value\n */\n\nexport const wrapFunction = function (thisArg, func, name) {\n  return function _splmStatsJsWrapperFunction() {\n    if (!func || !func.apply) {\n      return undefined;\n    }\n\n    if (enabled() && _procs.length > 0) {\n      const startTime = window.performance.now();\n\n      try {\n        _procs.forEach(function (proc) {\n          proc.start();\n        });\n      } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n      }\n\n      const res = func.apply(thisArg, arguments);\n      const endTime = window.performance.now();\n\n      try {\n        _procs.forEach(function (proc) {\n          proc.done({\n            name: name,\n            startTime: startTime,\n            endTime: endTime\n          });\n        });\n      } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n      }\n\n      return res;\n    }\n\n    return func.apply(thisArg, arguments);\n  };\n};\n/**\n * @returns {Boolean} Has JSService already underwent wrapping? If so we dont want to do it again\n */\n\nexport const enabled = function () {\n  return _enabled;\n};\n/**\n * Angular caches setTimeout after it is initialized so this doesn't do anything\n */\n\nexport const uninstall = function () {\n  if (_enabled) {\n    window.setTimeout = _setTimeout;\n    document.head.appendChild = _appendChildFn;\n    _setTimeout = null;\n    _enabled = false;\n  }\n};\nexport const addProc = function (proc) {\n  _procs.push(proc);\n};\nexport const removeProc = function (proc) {\n  _procs = _procs.filter(procObj => proc !== procObj);\n};\nexport default {\n  install,\n  wrapFunction,\n  enabled,\n  uninstall,\n  addProc,\n  removeProc\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/plstats/src/js/splmStatsJsService.js"],"names":["_procs","_enabled","_setTimeout","_appendChildFn","install","window","_realFunc","arguments","wrapFunction","document","args","enabled","elem","_onloadFn","_onerrorFn","endTime","res","proc","name","startTime","func","uninstall","addProc","removeProc","procObj"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-env es6 */\n\n/**\n * This utility module provides low-level support for JS Injection.\n *\n * NOTE: better to install it in bootstrap step\n *\n * @module js/splmStatsJsService\n */\n\nlet _procs = [];\n\nlet _enabled = false;\n\nlet _setTimeout = null;\n\nlet _appendChildFn = null;\n\n/**\n * install JS service\n */\nexport const install = function() {\n    if( !_enabled ) {\n        _setTimeout = window.setTimeout;\n        window.setTimeout = function() {\n            const _realFunc = arguments[ 0 ];\n            arguments[ 0 ] = wrapFunction( null, _realFunc );\n            return _setTimeout.apply( this, arguments );\n        };\n\n        // try to fix webpack script load issue\n        _appendChildFn = document.head.appendChild;\n        document.head.appendChild = ( ...args ) => {\n            if( enabled() && _procs.length > 0 ) {\n                const elem = args[ 0 ];\n                // restirct it to only onload script exist\n                if( elem.tagName === 'SCRIPT' && elem.src && elem.onload ) {\n                    // wrap onLoad script\n                    const _onloadFn = elem.onload;\n                    const _onerrorFn = elem.onerror || ( () => {} );\n\n                    elem.onload = ( ...args ) => {\n                        if( enabled() && _procs.length > 0 ) {\n                            const endTime = window.performance.now();\n                            // console.log( `Done: ${elem.src}` );\n                            const res = _onloadFn.apply( null, args );\n                            try {\n                                _procs.forEach( function( proc ) {\n                                    proc.done( {\n                                        name: name,\n                                        startTime: endTime,\n                                        endTime: endTime\n                                    } );\n                                } );\n                            } catch ( ex ) {\n                                // TODO: Do nothing for now, will fill it up before EOD 1905\n                            }\n                            return res;\n                        }\n                        return _onloadFn.apply( null, args );\n                    };\n\n                    elem.onerror = ( ...args ) => {\n                        if( enabled() && _procs.length > 0 ) {\n                            const endTime = window.performance.now();\n                            // console.log( `Done: ${elem.src}` );\n                            const res = _onerrorFn.apply( null, args );\n                            try {\n                                _procs.forEach( function( proc ) {\n                                    proc.done( {\n                                        name: name,\n                                        startTime: endTime,\n                                        endTime: endTime\n                                    } );\n                                } );\n                            } catch ( ex ) {\n                                // TODO: Do nothing for now, will fill it up before EOD 1905\n                            }\n                            return res;\n                        }\n                        return _onerrorFn.apply( null, args );\n                    };\n\n                    try {\n                        _procs.forEach( function( proc ) {\n                            proc.start();\n                        } );\n                    } catch ( ex ) {\n                        // TODO: Do nothing for now, will fill it up before EOD 1905\n                    }\n\n                    return _appendChildFn.apply( document.head, args );\n                }\n            }\n            return _appendChildFn.apply( document.head, args );\n        };\n\n        _enabled = true;\n    }\n};\n\n/**\n * Wrapping JS function with plStats injection\n *\n * @param {Object} thisArg - Explicit passing of the \"this\" object for whatever function we are replacing\n * @param {Function} func - Function we are replacing\n * @param {String} name - the name (if any) of the function/object we are replacing\n *\n * @returns {Object} result - The result of whatever function we are replacing. Must be careful to return this value for functions (not setTimeout) that\n * are expecting a return value\n */\nexport const wrapFunction = function( thisArg, func, name ) {\n    return function _splmStatsJsWrapperFunction() {\n        if( !func || !func.apply ) {\n            return undefined;\n        }\n\n        if( enabled() && _procs.length > 0 ) {\n            const startTime = window.performance.now();\n            try {\n                _procs.forEach( function( proc ) {\n                    proc.start();\n                } );\n            } catch ( ex ) {\n                // TODO: Do nothing for now, will fill it up before EOD 1905\n            }\n            const res = func.apply( thisArg, arguments );\n            const endTime = window.performance.now();\n\n            try {\n                _procs.forEach( function( proc ) {\n                    proc.done( {\n                        name: name,\n                        startTime: startTime,\n                        endTime: endTime\n                    } );\n                } );\n            } catch ( ex ) {\n                // TODO: Do nothing for now, will fill it up before EOD 1905\n            }\n\n            return res;\n        }\n        return func.apply( thisArg, arguments );\n    };\n};\n\n/**\n * @returns {Boolean} Has JSService already underwent wrapping? If so we dont want to do it again\n */\nexport const enabled = function() {\n    return _enabled;\n};\n\n/**\n * Angular caches setTimeout after it is initialized so this doesn't do anything\n */\nexport const uninstall = function() {\n    if( _enabled ) {\n        window.setTimeout = _setTimeout;\n        document.head.appendChild = _appendChildFn;\n        _setTimeout = null;\n        _enabled = false;\n    }\n};\n\nexport const addProc = function( proc ) {\n    _procs.push( proc );\n};\n\nexport const removeProc = function( proc ) {\n    _procs = _procs.filter( procObj => proc !== procObj );\n};\n\nexport default {\n    install,\n    wrapFunction,\n    enabled,\n    uninstall,\n    addProc,\n    removeProc\n};\n"]},"metadata":{},"sourceType":"module"}