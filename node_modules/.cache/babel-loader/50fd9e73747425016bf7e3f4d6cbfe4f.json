{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyTriStateValService.js\";\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\n/**\n *\n * @param {String} link url to open a new tab\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loadTriStateInfo = data => {\n  let lovEntries = [];\n  lovEntries.push({\n    propDisplayValue: data.propertyRadioTrueText,\n    propInternalValue: true\n  }, {\n    propDisplayValue: data.propertyRadioFalseText,\n    propInternalValue: false\n  });\n  let result = {\n    triStateValues: lovEntries,\n    totalFound: lovEntries.length\n  };\n  return result;\n};\n/**\n * render function for AwPropertyTriStateVal\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nexport const awPropertyTriStateValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  let fielddata = { ...prop.fielddata\n  };\n  fielddata.hasLov = true;\n  fielddata.isSelectOnly = true;\n  fielddata.propertyLabelDisplay = 'NO_PROPERTY_LABEL';\n  fielddata.dataProvider = viewModel.dataProviders.triStateProvider;\n  let finalProps = { ...prop,\n    fielddata\n  };\n  let vmData = { ...viewModel.getData()\n  };\n\n  if (vmData.propertyRadioTrueText !== prop.fielddata.propertyRadioTrueText && vmData.propertyRadioFalseText !== prop.fielddata.propertyRadioFalseText) {\n    vmData.propertyRadioTrueText = prop.fielddata.propertyRadioTrueText;\n    vmData.propertyRadioFalseText = prop.fielddata.propertyRadioFalseText;\n    viewModel.dispatch({\n      path: 'data',\n      value: vmData\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...finalProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyTriStateValService.js"],"names":["loadTriStateInfo","data","lovEntries","propDisplayValue","propInternalValue","result","triStateValues","totalFound","length","awPropertyTriStateValRenderFunction","props","prop","fielddata","viewModel","finalProps","vmData","path","value"],"mappings":";AAAA,OAAA,gBAAA,MAAA,qCAAA;AAEA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,gBAAgB,GAAKC,IAAF,IAAY;EACxC,IAAIC,UAAU,GAAd,EAAA;EACAA,UAAU,CAAVA,IAAAA,CAAiB;IACbC,gBAAgB,EAAEF,IAAI,CADT,qBAAA;IAEbG,iBAAiB,EAAE;EAFN,CAAjBF,EAGG;IACCC,gBAAgB,EAAEF,IAAI,CADvB,sBAAA;IAECG,iBAAiB,EAAE;EAFpB,CAHHF;EAOA,IAAIG,MAAM,GAAG;IACTC,cAAc,EADL,UAAA;IAETC,UAAU,EAAEL,UAAU,CAACM;EAFd,CAAb;EAIA,OAAA,MAAA;AAbG,CAAA;AAgBP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,mCAAmC,GAAKC,KAAF,IAAa;EAC5D,MAAM;IAAA,SAAA;IAAA,MAAA;IAAA,OAAA;IAAA,IAAA;IAAA,MAAA;IAAA,KAAA;IAAA,QAAA;IAAA,QAAA;IASF,GAAGC;EATD,IAAN,KAAA;EAYA,IAAIC,SAAS,GAAG,EAAE,GAAGD,IAAI,CAACC;EAAV,CAAhB;EACAA,SAAS,CAATA,MAAAA,GAAAA,IAAAA;EACAA,SAAS,CAATA,YAAAA,GAAAA,IAAAA;EACAA,SAAS,CAATA,oBAAAA,GAAAA,mBAAAA;EACAA,SAAS,CAATA,YAAAA,GAAyBC,SAAS,CAATA,aAAAA,CAAzBD,gBAAAA;EACA,IAAIE,UAAU,GAAG,EAAE,GAAF,IAAA;IAAWF;EAAX,CAAjB;EACA,IAAIG,MAAM,GAAG,EAAE,GAAGF,SAAS,CAATA,OAAAA;EAAL,CAAb;;EACA,IAAIE,MAAM,CAANA,qBAAAA,KAAiCJ,IAAI,CAAJA,SAAAA,CAAjCI,qBAAAA,IACAA,MAAM,CAANA,sBAAAA,KAAkCJ,IAAI,CAAJA,SAAAA,CADtC,sBAAA,EAC8E;IAC1EI,MAAM,CAANA,qBAAAA,GAA+BJ,IAAI,CAAJA,SAAAA,CAA/BI,qBAAAA;IACAA,MAAM,CAANA,sBAAAA,GAAgCJ,IAAI,CAAJA,SAAAA,CAAhCI,sBAAAA;IACAF,SAAS,CAATA,QAAAA,CAAoB;MAAEG,IAAI,EAAN,MAAA;MAAgBC,KAAK,EAAEF;IAAvB,CAApBF;EACH;;EACD,OAAA,aACI,OAAA,CAAA,gBAAA,EAAA,EAAA,GAAsBC;EAAtB,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADJ,IACI,CADJ;AA1BG,CAAA","sourcesContent":["import AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\n\n/**\n *\n * @param {String} link url to open a new tab\n */\nexport const loadTriStateInfo = ( data ) => {\n    let lovEntries = [];\n    lovEntries.push( {\n        propDisplayValue: data.propertyRadioTrueText,\n        propInternalValue: true\n    }, {\n        propDisplayValue: data.propertyRadioFalseText,\n        propInternalValue: false\n    } );\n    let result = {\n        triStateValues: lovEntries,\n        totalFound: lovEntries.length\n    };\n    return result;\n};\n\n/**\n * render function for AwPropertyTriStateVal\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awPropertyTriStateValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    let fielddata = { ...prop.fielddata };\n    fielddata.hasLov = true;\n    fielddata.isSelectOnly = true;\n    fielddata.propertyLabelDisplay = 'NO_PROPERTY_LABEL';\n    fielddata.dataProvider = viewModel.dataProviders.triStateProvider;\n    let finalProps = { ...prop, fielddata };\n    let vmData = { ...viewModel.getData() };\n    if( vmData.propertyRadioTrueText !== prop.fielddata.propertyRadioTrueText &&\n        vmData.propertyRadioFalseText !== prop.fielddata.propertyRadioFalseText ) {\n        vmData.propertyRadioTrueText = prop.fielddata.propertyRadioTrueText;\n        vmData.propertyRadioFalseText = prop.fielddata.propertyRadioFalseText;\n        viewModel.dispatch( { path: 'data', value: vmData } );\n    }\n    return (\n        <AwPropertyLovVal {...finalProps} ></AwPropertyLovVal>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}