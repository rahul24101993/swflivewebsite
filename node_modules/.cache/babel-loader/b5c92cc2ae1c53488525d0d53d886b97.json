{"ast":null,"code":"// Copyright (c) 2022 Siemens\n\n/**\n * This service provides keyboard interaction for list.\n *\n * @module js/ariaList\n */\n\n/* eslint-disable require-jsdoc */\nimport keyCode from 'js/keyCode';\nimport _ from 'lodash';\nconst ARIA_SELECTED = 'aria-selected';\nconst LIST_SELECTOR = '.aw-widgets-cellListItem';\nconst ARRAY_LIST_SELECTOR = '.aw-jswidgets-arrayValueCellListItem';\n\nfunction ariaList() {}\n\nariaList.prototype.init = function (node, options, childSelector) {\n  this.ROLE_OPTION = `[role=\"${childSelector}\"]`;\n  this.childSelector = childSelector;\n  this.node = node;\n  this.options = options;\n  this.options.autoScroll = this.options.autoScroll !== false;\n  this.options.listSelector = options.listSelector || LIST_SELECTOR;\n  this.activeDescendant = null;\n  this.resources = [];\n\n  this.handleFocusChange = function () {};\n\n  this.registerEvents();\n};\n\nariaList.prototype.clean = function () {\n  this.resources.forEach(remove => {\n    remove();\n  });\n};\n\nariaList.prototype.registerEvents = function () {\n  if (!this.node) {\n    return;\n  }\n\n  this._setupFocus = this.setupFocus.bind(this);\n  this._setupBlur = this.setupBlur.bind(this);\n  this._checkKeyPress = this.checkKeyPress.bind(this);\n  this._checkClickItem = this.checkClickItem.bind(this);\n  this.node.addEventListener('focus', this._setupFocus);\n  this.node.addEventListener('blur', this._setupBlur);\n  this.node.addEventListener('keydown', this._checkKeyPress);\n  this.node.addEventListener('click', this._checkClickItem);\n  this.resources.push(() => {\n    this.node.removeEventListener('focus', this._setupFocus);\n    this.node.removeEventListener('blur', this._setupBlur);\n    this.node.removeEventListener('keydown', this._checkKeyPress);\n    this.node.removeEventListener('click', this._checkClickItem);\n  });\n};\n\nariaList.prototype.setupFocus = function () {\n  // with no elements in list. we still have activeDescent non-null.\n  //This will ensure it will try to set-up when we have some listItems.\n  if (this.activeDescendant && this.node.getAttribute('tabindex') !== '0') {\n    this.focusItem(this.activeDescendant);\n    return;\n  } // if any pre-selection exist\n\n\n  let preSelectedItem = this.node.querySelector(`li${this.ROLE_OPTION}[${ARIA_SELECTED}=\"true\"]`);\n\n  if (preSelectedItem) {\n    this.activeDescendant = preSelectedItem;\n    this.focusItem(this.activeDescendant);\n  } else {\n    this.focusFirstItem();\n  }\n};\n\nariaList.prototype.checkContextMenu = function (evt) {\n  evt.preventDefault();\n  this.options && this.options.apis && this.options.apis.handleContextMenu(evt);\n};\n\nariaList.prototype.setupBlur = function () {\n  if (this.activeDescendant) {\n    this.activeDescendant = null;\n  }\n};\n\nariaList.prototype.focusFirstItem = function () {\n  var firstItem = this.node.querySelector(this.ROLE_OPTION);\n  firstItem && this.focusItem(firstItem);\n};\n\nariaList.prototype.focusLastItem = function () {\n  var itemList = this.node.querySelectorAll(this.ROLE_OPTION);\n  itemList.length && this.focusItem(itemList[itemList.length - 1]);\n};\n\nariaList.prototype.focusNextItem = function (currentItem) {\n  let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var itemList = this.node.querySelectorAll(this.ROLE_OPTION);\n  var nextItem = next ? currentItem.nextElementSibling : currentItem.previousElementSibling; // if valid nextItem\n\n  if (nextItem && _.indexOf(itemList, nextItem) !== -1) {\n    this.focusItem(nextItem);\n  } else {\n    //Group List logic starts here\n    const currentItemIndx = _.indexOf(itemList, currentItem);\n\n    if (next && currentItemIndx > -1 && itemList.length > currentItemIndx + 1) {\n      this.focusItem(itemList[currentItemIndx + 1]);\n    } else if (!next && currentItemIndx - 1 > -1) {\n      this.focusItem(itemList[currentItemIndx - 1]);\n    }\n  }\n};\n\nariaList.prototype.isFocusableListItem = function (evt) {\n  return _.isEqual(evt.target.closest(this.options.listSelector), document.activeElement);\n};\n\nariaList.prototype.checkClickItem = function (evt) {\n  if (!this.isFocusableListItem(evt)) {\n    return;\n  }\n\n  let element = evt.target.closest(this.options.listSelector);\n  this.focusItem(element, true);\n\n  if (this.options.setAriaAttributes) {\n    this.toggleSelectItem(element);\n  }\n};\n\nariaList.prototype.toggleSelectItem = function (element) {\n  let existingSelectedItem = this.node.querySelector(`li${this.ROLE_OPTION}[${ARIA_SELECTED}=\"true\"]`);\n\n  if (existingSelectedItem && !_.isEqual(existingSelectedItem, element)) {\n    existingSelectedItem.setAttribute(ARIA_SELECTED, 'false');\n  }\n\n  element.setAttribute(ARIA_SELECTED, element.getAttribute(ARIA_SELECTED) === 'true' ? 'false' : 'true');\n};\n\nariaList.prototype.handleEnterKey = function (evt, ctrlKey, nextItem) {\n  // only valid based on options\n  // eg: input with dropdown, the input box already taken enter key, so drop down should pick a alternative\n  if (evt.target.getAttribute('role') === this.childSelector && !this.options.useCtrl || this.options.useCtrl && ctrlKey) {\n    evt.preventDefault();\n\n    if (this.options.setAriaAttributes) {\n      this.toggleSelectItem(nextItem);\n    } //selection of item should be retained if the tabIndex is still 0. Else follow existing behavior.\n\n\n    var selectItem;\n\n    if (evt.target.tabIndex === 0) {\n      selectItem = evt.target;\n    } else {\n      selectItem = nextItem;\n    }\n\n    this.options && this.options.apis && this.options.apis.selectItem(evt, selectItem);\n  }\n};\n\nariaList.prototype.handleTabKey = function (evt, shiftKey) {\n  // 1. aw-numeric tab  - ARRAY_LIST_SELECTOR\n  // tab key skipped focus once no element left selected.\n  // if tabindex is set on node, but no element selected, next focus should be on input element\n  // shift key to be false for a forward tabflow.\n  if (this.options.listSelector === ARRAY_LIST_SELECTOR && this.node.querySelectorAll(this.ROLE_OPTION).length > 0 && this.node.querySelectorAll('li.aw-state-selected').length === 0 && !shiftKey) {\n    evt.preventDefault();\n\n    if (this.node.parentNode && this.node.parentNode.nextElementSibling) {\n      this.node.parentNode.nextElementSibling.focus();\n    }\n  }\n}; // eslint-disable-next-line complexity\n\n\nariaList.prototype.checkKeyPress = function (evt) {\n  if (!this.isFocusableListItem(evt)) {\n    return;\n  }\n\n  var key = evt.key || evt.code;\n  var ctrlKey = evt.ctrlKey || evt.metaKey;\n  var shiftKey = evt.shiftKey || evt.metaKey; // once you remove the last element in the list, activeDescendant should be set to null since its already removed from the actual list.\n\n  if (!_.includes(this.node.querySelectorAll(this.ROLE_OPTION), this.activeDescendant)) {\n    this.activeDescendant = null;\n  }\n\n  var nextItem = this.activeDescendant || this.node.querySelector(`li${this.ROLE_OPTION}[${ARIA_SELECTED}=\"true\"]`); // if no pre - selections, we select the first one and return directly\n\n  if (!nextItem) {\n    this.setupFocus();\n    return;\n  }\n\n  switch (key) {\n    case keyCode.PAGE_UP:\n    case keyCode.PAGE_DOWN:\n    case keyCode.UP:\n    case keyCode.ARROW_UP:\n    case keyCode.DOWN:\n    case keyCode.ARROW_DOWN:\n    case keyCode.LEFT:\n    case keyCode.ARROW_LEFT:\n    case keyCode.RIGHT:\n    case keyCode.ARROW_RIGHT:\n      evt.preventDefault();\n\n      if (key === keyCode.PAGE_UP || key === keyCode.UP || key === keyCode.ARROW_UP || key === keyCode.LEFT || key === keyCode.ARROW_LEFT) {\n        this.focusNextItem(nextItem, false);\n      } else {\n        this.focusNextItem(nextItem);\n      }\n\n      break;\n\n    case keyCode.HOME:\n      evt.preventDefault();\n      this.focusFirstItem();\n      break;\n\n    case keyCode.END:\n      evt.preventDefault();\n      this.focusLastItem();\n      break;\n\n    case keyCode.SPACE:\n    case keyCode.RETURN:\n    case keyCode.ENTER:\n      this.handleEnterKey(evt, ctrlKey, nextItem);\n      break;\n\n    case keyCode.TAB:\n      // tabstop fix\n      this.handleTabKey(evt, shiftKey);\n      break;\n\n    case keyCode.CONTEXTMENU:\n      this.checkContextMenu(evt);\n      break;\n\n    default:\n      break;\n  }\n};\n\nariaList.prototype.roveTabIndex = function (activeElement) {\n  if (!activeElement) {\n    return;\n  }\n\n  activeElement.setAttribute('tabindex', -1);\n};\n\nariaList.prototype.focusItem = function (element, isMouseClick) {\n  this.roveTabIndex(this.activeDescendant); //Set tabindex='-1' on the element that needs JS focus\n\n  element.setAttribute('tabindex', 0);\n  element.focus();\n  this.setHandleFocusChangeOnItem(element);\n  this.activeDescendant = element;\n\n  if (this.options.autoScroll && !isMouseClick) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n      inline: 'nearest'\n    });\n  }\n\n  this.handleFocusChange(null, element); //Remove tabindex from parent(ul) as one of the child elements(li) now have tabindex set\n\n  if (this.node.getAttribute('tabindex') === '0') {\n    this.node.setAttribute('tabindex', -1);\n  }\n};\n\nariaList.prototype.setHandleFocusChange = function (focusChangeHandler) {\n  this.handleFocusChange = focusChangeHandler;\n};\n\nariaList.prototype.setHandleFocusChangeOnItem = function (element) {\n  let handleFocusChangeOnItem = () => {\n    this.handleFocusChange(null, element);\n  };\n\n  let handleBlurOnItem = () => {\n    setTimeout(() => {\n      // timeout is required to get the next focused element\n      this.options && this.options.apis && this.options.apis.handleBlurOnItem && this.options.apis.handleBlurOnItem(element, document.activeElement);\n    });\n  };\n\n  if (this.activeDescendant) {\n    this.activeDescendant.removeEventListener('focus', handleFocusChangeOnItem);\n    this.activeDescendant.removeEventListener('blur', handleBlurOnItem);\n  }\n\n  element.addEventListener('focus', handleFocusChangeOnItem);\n  element.addEventListener('blur', handleBlurOnItem);\n};\n\nexport default ariaList;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uiwidget/src/js/ariaList.js"],"names":["ARIA_SELECTED","LIST_SELECTOR","ARRAY_LIST_SELECTOR","ariaList","childSelector","options","remove","preSelectedItem","ROLE_OPTION","evt","firstItem","itemList","next","nextItem","currentItem","_","currentItemIndx","document","element","existingSelectedItem","selectItem","key","ctrlKey","shiftKey","keyCode","activeElement","behavior","block","inline","handleFocusChangeOnItem","handleBlurOnItem","setTimeout"],"mappings":"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","sourcesContent":["// Copyright (c) 2022 Siemens\n\n/**\n * This service provides keyboard interaction for list.\n *\n * @module js/ariaList\n */\n\n/* eslint-disable require-jsdoc */\nimport keyCode from 'js/keyCode';\nimport _ from 'lodash';\n\nconst ARIA_SELECTED = 'aria-selected';\nconst LIST_SELECTOR = '.aw-widgets-cellListItem';\nconst ARRAY_LIST_SELECTOR = '.aw-jswidgets-arrayValueCellListItem';\n\nfunction ariaList() {}\n\nariaList.prototype.init = function( node, options, childSelector ) {\n    this.ROLE_OPTION = `[role=\"${childSelector}\"]`;\n    this.childSelector = childSelector;\n    this.node = node;\n    this.options = options;\n    this.options.autoScroll = this.options.autoScroll !== false;\n    this.options.listSelector = options.listSelector || LIST_SELECTOR;\n    this.activeDescendant = null;\n    this.resources = [];\n    this.handleFocusChange = function() {};\n    this.registerEvents();\n};\n\nariaList.prototype.clean = function() {\n    this.resources.forEach( ( remove ) => { remove(); } );\n};\n\nariaList.prototype.registerEvents = function() {\n    if( !this.node ) { return; }\n    this._setupFocus = this.setupFocus.bind( this );\n    this._setupBlur = this.setupBlur.bind( this );\n    this._checkKeyPress = this.checkKeyPress.bind( this );\n    this._checkClickItem = this.checkClickItem.bind( this );\n    this.node.addEventListener( 'focus', this._setupFocus );\n    this.node.addEventListener( 'blur', this._setupBlur );\n    this.node.addEventListener( 'keydown', this._checkKeyPress );\n    this.node.addEventListener( 'click', this._checkClickItem );\n    this.resources.push( () => {\n        this.node.removeEventListener( 'focus', this._setupFocus );\n        this.node.removeEventListener( 'blur', this._setupBlur );\n        this.node.removeEventListener( 'keydown', this._checkKeyPress );\n        this.node.removeEventListener( 'click', this._checkClickItem );\n    } );\n};\n\nariaList.prototype.setupFocus = function() {\n    // with no elements in list. we still have activeDescent non-null.\n    //This will ensure it will try to set-up when we have some listItems.\n    if( this.activeDescendant && this.node.getAttribute( 'tabindex' ) !== '0' ) {\n        this.focusItem( this.activeDescendant );\n        return;\n    }\n\n    // if any pre-selection exist\n    let preSelectedItem = this.node.querySelector( `li${this.ROLE_OPTION}[${ARIA_SELECTED}=\"true\"]` );\n    if( preSelectedItem ) {\n        this.activeDescendant = preSelectedItem;\n        this.focusItem( this.activeDescendant );\n    } else {\n        this.focusFirstItem();\n    }\n};\n\nariaList.prototype.checkContextMenu = function( evt ) {\n    evt.preventDefault();\n    this.options && this.options.apis && this.options.apis.handleContextMenu( evt );\n};\n\nariaList.prototype.setupBlur = function() {\n    if( this.activeDescendant ) {\n        this.activeDescendant = null;\n    }\n};\n\nariaList.prototype.focusFirstItem = function() {\n    var firstItem = this.node.querySelector( this.ROLE_OPTION );\n    firstItem && this.focusItem( firstItem );\n};\nariaList.prototype.focusLastItem = function() {\n    var itemList = this.node.querySelectorAll( this.ROLE_OPTION );\n    itemList.length && this.focusItem( itemList[ itemList.length - 1 ] );\n};\nariaList.prototype.focusNextItem = function( currentItem, next = true ) {\n    var itemList = this.node.querySelectorAll( this.ROLE_OPTION );\n    var nextItem = next ? currentItem.nextElementSibling : currentItem.previousElementSibling;\n    // if valid nextItem\n    if( nextItem && _.indexOf( itemList, nextItem ) !== -1 ) {\n        this.focusItem( nextItem );\n    } else {\n        //Group List logic starts here\n        const currentItemIndx = _.indexOf( itemList, currentItem );\n        if( next && currentItemIndx > -1 && itemList.length > currentItemIndx + 1 ) {\n            this.focusItem( itemList[ currentItemIndx + 1 ] );\n        } else if( !next && currentItemIndx - 1 > -1 ) {\n            this.focusItem( itemList[ currentItemIndx - 1 ] );\n        }\n    }\n};\n\nariaList.prototype.isFocusableListItem = function( evt ) {\n    return _.isEqual( evt.target.closest( this.options.listSelector ), document.activeElement );\n};\n\nariaList.prototype.checkClickItem = function( evt ) {\n    if( !this.isFocusableListItem( evt ) ) {\n        return;\n    }\n\n    let element = evt.target.closest( this.options.listSelector );\n    this.focusItem( element, true );\n\n    if( this.options.setAriaAttributes ) {\n        this.toggleSelectItem( element );\n    }\n};\nariaList.prototype.toggleSelectItem = function( element ) {\n    let existingSelectedItem = this.node.querySelector( `li${this.ROLE_OPTION}[${ARIA_SELECTED}=\"true\"]` );\n    if( existingSelectedItem && !_.isEqual( existingSelectedItem, element ) ) {\n        existingSelectedItem.setAttribute( ARIA_SELECTED, 'false' );\n    }\n    element.setAttribute( ARIA_SELECTED, element.getAttribute( ARIA_SELECTED ) === 'true' ? 'false' : 'true' );\n};\n\nariaList.prototype.handleEnterKey = function( evt, ctrlKey, nextItem ) {\n    // only valid based on options\n    // eg: input with dropdown, the input box already taken enter key, so drop down should pick a alternative\n    if( evt.target.getAttribute( 'role' ) === this.childSelector && !this.options.useCtrl || this.options.useCtrl && ctrlKey ) {\n        evt.preventDefault();\n        if( this.options.setAriaAttributes ) {\n            this.toggleSelectItem( nextItem );\n        }\n        //selection of item should be retained if the tabIndex is still 0. Else follow existing behavior.\n        var selectItem;\n        if( evt.target.tabIndex === 0 ) {\n            selectItem = evt.target;\n        } else {\n            selectItem = nextItem;\n        }\n        this.options && this.options.apis && this.options.apis.selectItem( evt, selectItem );\n    }\n};\n\nariaList.prototype.handleTabKey = function( evt, shiftKey ) {\n    // 1. aw-numeric tab  - ARRAY_LIST_SELECTOR\n    // tab key skipped focus once no element left selected.\n    // if tabindex is set on node, but no element selected, next focus should be on input element\n    // shift key to be false for a forward tabflow.\n    if( this.options.listSelector === ARRAY_LIST_SELECTOR &&\n        this.node.querySelectorAll( this.ROLE_OPTION ).length > 0 &&\n        this.node.querySelectorAll( 'li.aw-state-selected' ).length === 0 && !shiftKey ) {\n        evt.preventDefault();\n        if( this.node.parentNode &&\n            this.node.parentNode.nextElementSibling ) {\n            this.node.parentNode.nextElementSibling.focus();\n        }\n    }\n};\n\n// eslint-disable-next-line complexity\nariaList.prototype.checkKeyPress = function( evt ) {\n    if( !this.isFocusableListItem( evt ) ) {\n        return;\n    }\n\n    var key = evt.key || evt.code;\n    var ctrlKey = evt.ctrlKey || evt.metaKey;\n    var shiftKey = evt.shiftKey || evt.metaKey;\n\n    // once you remove the last element in the list, activeDescendant should be set to null since its already removed from the actual list.\n    if( !_.includes( this.node.querySelectorAll( this.ROLE_OPTION ), this.activeDescendant ) ) {\n        this.activeDescendant = null;\n    }\n    var nextItem = this.activeDescendant || this.node.querySelector( `li${this.ROLE_OPTION}[${ARIA_SELECTED}=\"true\"]` );\n\n    // if no pre - selections, we select the first one and return directly\n    if( !nextItem ) {\n        this.setupFocus();\n        return;\n    }\n\n    switch ( key ) {\n        case keyCode.PAGE_UP:\n        case keyCode.PAGE_DOWN:\n        case keyCode.UP:\n        case keyCode.ARROW_UP:\n        case keyCode.DOWN:\n        case keyCode.ARROW_DOWN:\n        case keyCode.LEFT:\n        case keyCode.ARROW_LEFT:\n        case keyCode.RIGHT:\n        case keyCode.ARROW_RIGHT:\n            evt.preventDefault();\n            if( key === keyCode.PAGE_UP || key === keyCode.UP || key === keyCode.ARROW_UP || key === keyCode.LEFT || key === keyCode.ARROW_LEFT ) {\n                this.focusNextItem( nextItem, false );\n            } else {\n                this.focusNextItem( nextItem );\n            }\n            break;\n        case keyCode.HOME:\n            evt.preventDefault();\n            this.focusFirstItem();\n            break;\n        case keyCode.END:\n            evt.preventDefault();\n            this.focusLastItem();\n            break;\n        case keyCode.SPACE:\n        case keyCode.RETURN:\n        case keyCode.ENTER:\n            this.handleEnterKey( evt, ctrlKey, nextItem );\n            break;\n        case keyCode.TAB: // tabstop fix\n            this.handleTabKey( evt, shiftKey );\n            break;\n        case keyCode.CONTEXTMENU:\n            this.checkContextMenu( evt );\n            break;\n        default:\n            break;\n    }\n};\n\nariaList.prototype.roveTabIndex = function( activeElement ) {\n    if( !activeElement ) { return; }\n    activeElement.setAttribute( 'tabindex', -1 );\n};\n\nariaList.prototype.focusItem = function( element, isMouseClick ) {\n    this.roveTabIndex( this.activeDescendant );\n    //Set tabindex='-1' on the element that needs JS focus\n    element.setAttribute( 'tabindex', 0 );\n    element.focus();\n\n    this.setHandleFocusChangeOnItem( element );\n    this.activeDescendant = element;\n\n    if( this.options.autoScroll && !isMouseClick ) {\n        element.scrollIntoView( { behavior: 'smooth', block: 'center', inline: 'nearest' } );\n    }\n    this.handleFocusChange( null, element );\n\n    //Remove tabindex from parent(ul) as one of the child elements(li) now have tabindex set\n    if( this.node.getAttribute( 'tabindex' ) === '0' ) {\n        this.node.setAttribute( 'tabindex', -1 );\n    }\n};\nariaList.prototype.setHandleFocusChange = function( focusChangeHandler ) {\n    this.handleFocusChange = focusChangeHandler;\n};\n\nariaList.prototype.setHandleFocusChangeOnItem = function( element ) {\n    let handleFocusChangeOnItem = () => {\n        this.handleFocusChange( null, element );\n    };\n\n    let handleBlurOnItem = () => {\n        setTimeout( () => {\n            // timeout is required to get the next focused element\n            this.options && this.options.apis && this.options.apis.handleBlurOnItem && this.options.apis.handleBlurOnItem( element, document.activeElement );\n        } );\n    };\n\n    if( this.activeDescendant ) {\n        this.activeDescendant.removeEventListener( 'focus', handleFocusChangeOnItem );\n        this.activeDescendant.removeEventListener( 'blur', handleBlurOnItem );\n    }\n\n    element.addEventListener( 'focus', handleFocusChangeOnItem );\n    element.addEventListener( 'blur', handleBlurOnItem );\n};\n\nexport default ariaList;\n"]},"metadata":{},"sourceType":"module"}