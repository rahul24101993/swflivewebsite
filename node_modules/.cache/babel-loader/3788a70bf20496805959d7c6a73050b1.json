{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\ExtendedTooltipDefaultService.js\";\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const awExtTooltipRenderFunction = _ref => {\n  let {\n    prop,\n    viewModel\n  } = _ref;\n  const {\n    data\n  } = viewModel;\n  let {\n    description,\n    tooltip\n  } = data.command; // command tooltip maybe object\n\n  tooltip = _.isObject(tooltip) ? tooltip.value : tooltip;\n\n  const getContent = () => {\n    let result = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-bold\",\n      children: tooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 22\n    }, this);\n\n    if (description) {\n      result = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-extended-tooltipTitle\",\n          children: tooltip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-line\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), \" \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n\n    return result;\n  };\n\n  return getContent();\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/ExtendedTooltipDefaultService.js"],"names":["awExtTooltipRenderFunction","viewModel","data","tooltip","_","getContent","result"],"mappings":";AAAA,OAAA,CAAA,MAAA,QAAA;;;AAEA,OAAO,MAAMA,0BAA0B,GAAG,IAAA,IAA2B;EAAA,IAAzB;IAAA,IAAA;IAAQC;EAAR,IAAyB,IAAA;EACjE,MAAM;IAAEC;EAAF,IAAN,SAAA;EACA,IAAI;IAAA,WAAA;IAAeC;EAAf,IAA2BD,IAAI,CAF8B,OAEjE,CAFiE,CAIjE;;EACAC,OAAO,GAAGC,CAAC,CAADA,QAAAA,CAAAA,OAAAA,IAAwBD,OAAO,CAA/BC,KAAAA,GAAVD,OAAAA;;EAEA,MAAME,UAAU,GAAG,MAAM;IACrB,IAAIC,MAAM,GAAA,aAAG,OAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAd,WAAA;MAAA,QAAA,EAA4BH;IAA5B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAb,IAAa,CAAb;;IACA,IAAA,WAAA,EAAkB;MACdG,MAAM,GAAA,aAAG,OAAA,CAAA,SAAA,EAAA;QAAA,QAAA,EAAA,CAAA,aACL,OAAA,CAAA,KAAA,EAAA;UAAK,SAAS,EAAd,0BAAA;UAAA,QAAA,EAA2CH;QAA3C,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA,EAAA;UAAA,YAAA,EAAA;QAAA,CAAA,EADK,IACL,CADK,EAAA,aAEL,OAAA,CAAA,KAAA,EAAA;UAAK,SAAS,EAAd,UAAA;UAAA,QAAA,EAAA,CAAA,aACI,OAAA,CAAA,IAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA,EAAA;YAAA,YAAA,EAAA;UAAA,CAAA,EADJ,IACI,CADJ,EAAA,GAAA,EAAA,WAAA;QAAA,CAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA,EAAA;UAAA,YAAA,EAAA;QAAA,CAAA,EAFK,IAEL,CAFK;MAAA,CAAA,EAAA,KAAA,CAAA,EAATG,IAAS,CAATA;IAMH;;IACD,OAAA,MAAA;EAVJ,CAAA;;EAaA,OAAOD,UAAP,EAAA;AApBG,CAAA","sourcesContent":["import _ from 'lodash';\n\nexport const awExtTooltipRenderFunction = ( { prop, viewModel } ) => {\n    const { data } = viewModel;\n    let { description, tooltip } = data.command;\n\n    // command tooltip maybe object\n    tooltip = _.isObject( tooltip ) ? tooltip.value : tooltip;\n\n    const getContent = () => {\n        let result = <div className='font-bold'>{tooltip}</div>;\n        if( description ) {\n            result = <>\n                <div className='aw-extended-tooltipTitle'>{tooltip}</div>\n                <div className='new-line'>\n                    <br/> { description }\n                </div>\n            </>;\n        }\n        return result;\n    };\n\n    return getContent();\n};\n"]},"metadata":{},"sourceType":"module"}