{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/**\n * Commands map service\n *\n * @module js/commandsMapService\n */import logger from'js/logger';let exports={};/**\n * Returns command handler overlay object for a given command id from factory.\n *\n * @param {Object} commandJsonObj - command JSON object which is give in declarative view model\n * @param {String} commandId - command id\n *\n * @return {Object} command handler overlay object for given command id.\n */export let getCommandOverlay=function(){logger.error('commandsMapService#getCommandOverlay is not supported, Use commandService.getCommand instead');return{};};/**\n * Returns True if this type is child of the give type.\n *\n * TODO: This should be a utility somewhere in CDM - has nothing to do with commands\n *\n * @param {String} typeName - name of class\n * @param {Object} modelType - view model object's model type.\n *\n * @return {Boolean} true if this type is child of the give type.\n */export let isInstanceOf=function(typeName,modelType){return modelType&&(typeName===modelType.name||modelType.typeHierarchyArray&&modelType.typeHierarchyArray.indexOf(typeName)>-1);};exports={getCommandOverlay,isInstanceOf};export default exports;","map":null,"metadata":{},"sourceType":"module"}