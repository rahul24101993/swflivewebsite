{"ast":null,"code":"// Copyright (c) 2022 Siemens\n\n/**\n * Defines Service which provides access to the SubLocationService from native code\n *\n * @module js/postLoginPipeline.service\n */\nimport _ from 'lodash';\nimport localStrg from 'js/localStorage';\nvar exports = {};\n/**\n * get the Post Login Stages from server\n *\n * @return all the Post Login Stages\n */\n\nexport let getPostLoginStages = function () {\n  var postLoginStages = [];\n  var postLoginStagesString = localStrg.get('postLoginStagesKey');\n\n  if (postLoginStagesString && postLoginStagesString.length > 0) {\n    postLoginStages = JSON.parse(postLoginStagesString);\n  }\n\n  return postLoginStages;\n};\n/**\n *\n * Reset Post Login Stages while signing in\n *\n */\n\nexport let resetPostLoginStages = function () {\n  var postLoginStagesString = localStrg.get('postLoginStagesKey');\n\n  if (postLoginStagesString && postLoginStagesString.length > 0) {\n    localStrg.removeItem('postLoginStagesKey');\n  }\n};\n/**\n * sorts the post login stages\n *\n * @param {list} get the list of step Definition from each contribution\n *\n * @return sorted pipeline steps\n */\n\nexport let sortPostLoginPipeline = function (contributors) {\n  var postLoginStages = exports.getPostLoginStages();\n  var pipeLineStepsUnsorted = [];\n\n  _.forEach(contributors, function (contrib) {\n    var step = contrib.getPipelineStepDefinition();\n\n    for (var stageIndex = 0; stageIndex < postLoginStages.length; stageIndex++) {\n      if (step.name === postLoginStages[stageIndex].name) {\n        step.priority = stageIndex;\n        step.status = postLoginStages[stageIndex].status;\n        pipeLineStepsUnsorted.push(step);\n        break;\n      }\n    }\n  });\n\n  var pipeLineSteps = [];\n\n  if (pipeLineStepsUnsorted.length > 0) {\n    pipeLineSteps = _.sortBy(pipeLineStepsUnsorted, function (step) {\n      return step.priority;\n    });\n  }\n\n  return pipeLineSteps;\n};\n/**\n * Check for Post Login Authenticated Stages\n *\n * @return {Object} with a boolean flag if all post login stages are authenticated\n */\n\nexport let checkPostLoginAuthenticatedStages = function () {\n  var allStagesAuthenticated = true;\n  var postLoginStageString = localStrg.get('postLoginStagesKey');\n\n  if (postLoginStageString && postLoginStageString.length > 0) {\n    var postLoginStages = JSON.parse(postLoginStageString);\n\n    for (var stageIndex = 0; stageIndex < postLoginStages.length; stageIndex++) {\n      if (!postLoginStages[stageIndex].status) {\n        allStagesAuthenticated = false;\n        break;\n      }\n    }\n  }\n\n  return allStagesAuthenticated;\n};\nexports = {\n  getPostLoginStages,\n  resetPostLoginStages,\n  sortPostLoginPipeline,\n  checkPostLoginAuthenticatedStages\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/postLoginPipeline.service.js"],"names":["exports","getPostLoginStages","postLoginStages","postLoginStagesString","localStrg","JSON","resetPostLoginStages","sortPostLoginPipeline","pipeLineStepsUnsorted","_","step","contrib","stageIndex","pipeLineSteps","checkPostLoginAuthenticatedStages","allStagesAuthenticated","postLoginStageString"],"mappings":"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","sourcesContent":["// Copyright (c) 2022 Siemens\n\n/**\n * Defines Service which provides access to the SubLocationService from native code\n *\n * @module js/postLoginPipeline.service\n */\nimport _ from 'lodash';\nimport localStrg from 'js/localStorage';\n\nvar exports = {};\n\n/**\n * get the Post Login Stages from server\n *\n * @return all the Post Login Stages\n */\nexport let getPostLoginStages = function() {\n    var postLoginStages = [];\n    var postLoginStagesString = localStrg.get( 'postLoginStagesKey' );\n\n    if( postLoginStagesString && postLoginStagesString.length > 0 ) {\n        postLoginStages = JSON.parse( postLoginStagesString );\n    }\n\n    return postLoginStages;\n};\n\n/**\n *\n * Reset Post Login Stages while signing in\n *\n */\nexport let resetPostLoginStages = function() {\n    var postLoginStagesString = localStrg.get( 'postLoginStagesKey' );\n    if( postLoginStagesString && postLoginStagesString.length > 0 ) {\n        localStrg.removeItem( 'postLoginStagesKey' );\n    }\n};\n\n/**\n * sorts the post login stages\n *\n * @param {list} get the list of step Definition from each contribution\n *\n * @return sorted pipeline steps\n */\nexport let sortPostLoginPipeline = function( contributors ) {\n    var postLoginStages = exports.getPostLoginStages();\n    var pipeLineStepsUnsorted = [];\n\n    _.forEach( contributors, function( contrib ) {\n        var step = contrib.getPipelineStepDefinition();\n        for( var stageIndex = 0; stageIndex < postLoginStages.length; stageIndex++ ) {\n            if( step.name === postLoginStages[ stageIndex ].name ) {\n                step.priority = stageIndex;\n                step.status = postLoginStages[ stageIndex ].status;\n                pipeLineStepsUnsorted.push( step );\n                break;\n            }\n        }\n    } );\n\n    var pipeLineSteps = [];\n    if( pipeLineStepsUnsorted.length > 0 ) {\n        pipeLineSteps = _.sortBy( pipeLineStepsUnsorted, function( step ) {\n            return step.priority;\n        } );\n    }\n\n    return pipeLineSteps;\n};\n\n/**\n * Check for Post Login Authenticated Stages\n *\n * @return {Object} with a boolean flag if all post login stages are authenticated\n */\nexport let checkPostLoginAuthenticatedStages = function() {\n    var allStagesAuthenticated = true;\n    var postLoginStageString = localStrg.get( 'postLoginStagesKey' );\n\n    if( postLoginStageString && postLoginStageString.length > 0 ) {\n        var postLoginStages = JSON.parse( postLoginStageString );\n\n        for( var stageIndex = 0; stageIndex < postLoginStages.length; stageIndex++ ) {\n            if( !postLoginStages[ stageIndex ].status ) {\n                allStagesAuthenticated = false;\n                break;\n            }\n        }\n    }\n    return allStagesAuthenticated;\n};\n\nexports = {\n    getPostLoginStages,\n    resetPostLoginStages,\n    sortPostLoginPipeline,\n    checkPostLoginAuthenticatedStages\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}