{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * Utility to traverse DOM Element in PL Table\n *\n * @module js/splmTableTraversal\n */\nimport Const from 'js/splmTableConstants';\nimport util from 'js/splmTableUtils';\n/**\n * Instances of this class represent a traverse utilty in table\n *\n * @class SPLMTableTraversal\n * @param {DOMElement} tableElement - HTML DOM Element for table\n * @param {Number} pinColumnCount - The number of pin column count\n */\n\nvar SPLMTableTraversal = function (tableElement) {\n  var _table = tableElement;\n  var _elem = _table;\n  var self = this; // Helper traverse method\n\n  self.getWidth = function () {\n    return util.numericProperty(_elem.style.width) || util.numericProperty(_elem.style.minWidth) || 0;\n  };\n\n  self.getElement = function () {\n    return _elem;\n  };\n\n  self.toHeader = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_ROW)[0];\n    return this;\n  };\n\n  self.toCanvas = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_CANVAS)[0];\n    return this;\n  };\n\n  self.toContentRow = function (rowIdx) {\n    _elem = self.getContentRowElements()[rowIdx];\n    return this;\n  };\n\n  self.getContentRowElements = function () {\n    return _elem.getElementsByClassName(Const.CLASS_ROW);\n  };\n\n  self.getHeaderCellElements = function () {\n    return _elem.getElementsByClassName(Const.CLASS_HEADER_CELL);\n  };\n\n  self.getContentCellElements = function () {\n    return _elem.getElementsByClassName(Const.CLASS_CELL);\n  };\n\n  self.toHeaderCell = function (columnIdx) {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_CELL)[columnIdx];\n    return this;\n  };\n\n  self.toHeaderCellContent = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_CELL_CONTENT)[0];\n    return this;\n  };\n\n  self.toMenuItem = function (itemIdx) {\n    _elem = _elem.getElementsByClassName(Const.CLASS_AW_CELL_LIST_ITEM)[itemIdx];\n    return this;\n  };\n\n  self.getMenuItemElements = function () {\n    return _elem.getElementsByClassName(Const.CLASS_AW_CELL_LIST_ITEM);\n  };\n\n  self.toContentCell = function (columnIdx) {\n    var cells = _elem.getElementsByClassName(Const.CLASS_CELL);\n\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].columnDef.index === columnIdx) {\n        _elem = cells[i];\n        return this;\n      }\n    }\n\n    _elem = null;\n    return this;\n  };\n\n  self.getAwIconElement = function () {\n    return _elem.getElementsByTagName(Const.ELEMENT_AW_ICON)[0];\n  };\n\n  self.getTreeNodeToggleCommandElement = function () {\n    return _elem.getElementsByClassName(Const.CLASS_WIDGET_TREE_NODE_TOGGLE_CMD)[0];\n  };\n\n  self.getTreeCommandCellElement = function (rowElement) {\n    return rowElement.getElementsByClassName(Const.CLASS_AW_TREE_COMMAND_CELL)[0];\n  };\n\n  self.toSortIndicator = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_CELL_SORT_ICON)[0];\n    return this;\n  };\n\n  self.toColumnSplitter = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_CELL_SPLITTER)[0];\n    return this;\n  };\n\n  self.toStringEditBox = function () {\n    _elem = _elem.getElementsByTagName(Const.ELEMENT_STRING_EDIT_BOX)[0];\n    return this;\n  };\n\n  self.toScrollContents = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_SCROLL_CONTENTS)[0];\n    return this;\n  };\n\n  self.toHeaderRow = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_ROW)[0];\n    return this;\n  };\n\n  self.toSortIcon = function () {\n    _elem = _elem.getElementsByClassName(Const.CLASS_HEADER_CELL_SORT_ICON)[0];\n    return this;\n  };\n\n  self.getCellCommandButtonElements = function () {\n    var cmdBarElem = _elem.getElementsByClassName(Const.CLASS_CELL_COMMAND_BAR)[0];\n\n    return cmdBarElem.getElementsByTagName('button');\n  }; // Root traverse method\n\n\n  self.queryPinContainerFromTable = function () {\n    _elem = _table.getElementsByClassName(Const.CLASS_PIN_CONTAINER)[0];\n    return this;\n  };\n\n  self.queryScrollContainerFromTable = function () {\n    _elem = _table.getElementsByClassName(Const.CLASS_SCROLL_CONTAINER)[0];\n    return this;\n  };\n\n  self.queryPinContentFromTable = function () {\n    return self.queryPinContainerFromTable().toScrollContents();\n  };\n\n  self.queryScrollContentFromTable = function () {\n    return self.queryScrollContainerFromTable().toScrollContents();\n  };\n\n  self.queryHeaderCellContentFromTable = function (columnIdx) {\n    return self.queryHeaderCellFromTable(columnIdx).toHeaderCellContent();\n  };\n\n  self.queryHeaderCellFromTable = function (columnIdx) {\n    var pinColumnCount = util.getTableController(_table).getPinColumnCount();\n\n    if (columnIdx < pinColumnCount) {\n      return self.queryPinContainerFromTable().toHeader().toHeaderCell(columnIdx);\n    }\n\n    return self.queryScrollContainerFromTable().toHeader().toHeaderCell(columnIdx - pinColumnCount);\n  };\n\n  self.queryFirstRowCellFromTable = function (columnIdx) {\n    var firstRowIdx = 0;\n    return self.queryContentCellFromTable(firstRowIdx, columnIdx);\n  };\n\n  self.queryRowColumnCellElementsFromTable = function (columnIdx) {\n    var idx = 0;\n    var rowElems = null;\n    var res = [];\n    var pinColumnCount = util.getTableController(_table).getPinColumnCount();\n\n    if (columnIdx < pinColumnCount) {\n      idx = columnIdx;\n      rowElems = self.getPinContentRowElementsFromTable();\n    } else {\n      idx = columnIdx - pinColumnCount;\n      rowElems = self.getScrollContentRowElementsFromTable();\n    }\n\n    for (var i = 0; i < rowElems.length; i++) {\n      res.push(rowElems[i].getElementsByClassName(Const.CLASS_CELL)[idx]);\n    }\n\n    return res;\n  };\n\n  self.queryAllRowCellElementsFromTable = function () {\n    var rowElements = [];\n    var pinnedElements = self.getPinContentRowElementsFromTable();\n\n    for (var i = 0; i < pinnedElements.length; i++) {\n      rowElements.push(pinnedElements[i]);\n    }\n\n    var scrollContentElements = self.getScrollContentRowElementsFromTable();\n\n    for (var j = 0; j < scrollContentElements.length; j++) {\n      rowElements.push(scrollContentElements[j]);\n    }\n\n    return rowElements;\n  };\n\n  self.queryContentCellFromTable = function (rowIdx, columnIdx) {\n    var pinColumnCount = util.getTableController(_table).getPinColumnCount();\n\n    if (columnIdx < pinColumnCount) {\n      return self.queryPinContainerFromTable().toContentRow(rowIdx).toContentCell(columnIdx);\n    }\n\n    return self.queryScrollContainerFromTable().toContentRow(rowIdx).toContentCell(columnIdx);\n  };\n\n  self.queryTableMenu = function (id) {\n    _elem = document.getElementById(id + '_menu');\n    return this;\n  };\n\n  self.queryResizeGripFromTable = function () {\n    _elem = _table.getElementsByClassName(Const.CLASS_COLUMN_RESIZE_GRIP)[0];\n    return this;\n  };\n\n  self.queryContextMenuFromTable = function () {\n    _elem = document.getElementsByClassName(Const.CLASS_AW_POPUP)[0];\n    return this;\n  };\n\n  self.getContentCellElementsFromTable = function () {\n    _elem = _table;\n    return self.getContentCellElements();\n  }; // Get element method\n\n\n  self.getRootElement = function (className) {\n    if (!className) {\n      className = Const.CLASS_AW_ROOT_ELEMENT;\n    }\n\n    var rootElem = document.getElementsByClassName(className)[0];\n\n    if (!rootElem) {\n      rootElem = document;\n    }\n\n    return rootElem;\n  };\n\n  self.getHeaderCellElementsFromTable = function () {\n    return _table.getElementsByClassName(Const.CLASS_HEADER_CELL) || [];\n  };\n\n  self.getHeaderRowWidthFromTable = function () {\n    return self.queryPinContainerFromTable().toHeader().getWidth() + self.queryScrollContainerFromTable().toHeader().getWidth();\n  };\n\n  self.getContentRowWidthFromTable = function () {\n    return self.queryPinContainerFromTable().toContentRow(0).getWidth() + self.queryScrollContainerFromTable().toContentRow(0).getWidth();\n  };\n\n  self.getScrollCanvasElementFromTable = function () {\n    return self.queryScrollContainerFromTable().toCanvas().getElement();\n  };\n\n  self.getPinCanvasElementFromTable = function () {\n    return self.queryPinContainerFromTable().toCanvas().getElement();\n  };\n\n  self.getPropertyValueLinkElement = function (index, cell) {\n    index = index || 0;\n    var elem1 = cell || _elem;\n    return elem1.getElementsByClassName(Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS)[index];\n  };\n\n  self.getCellTextElementFromTableCell = function (cellElement, index) {\n    index = index || 0;\n    var elem = cellElement || _elem;\n    return elem.getElementsByClassName(Const.CLASS_WIDGET_TABLE_CELL_TEXT)[index];\n  };\n\n  self.getTableContainerElementFromTable = function () {\n    return _table.getElementsByClassName(Const.CLASS_TABLE_CONTAINER)[0];\n  };\n\n  self.getPinContainerElementFromTable = function () {\n    return self.queryPinContainerFromTable().getElement();\n  };\n\n  self.getScrollContainerElementFromTable = function () {\n    return self.queryScrollContainerFromTable().getElement();\n  };\n\n  self.getPinContentElementFromTable = function () {\n    return self.queryPinContentFromTable().getElement();\n  };\n\n  self.getScrollContentElementFromTable = function () {\n    return self.queryScrollContentFromTable().getElement();\n  };\n\n  self.getPinContentRowElementsFromTable = function () {\n    return self.queryPinContentFromTable().getContentRowElements();\n  };\n\n  self.getScrollContentRowElementsFromTable = function () {\n    return self.queryScrollContentFromTable().getContentRowElements();\n  };\n\n  self.getPinHeaderElementFromTable = function () {\n    return self.queryPinContainerFromTable().toHeaderRow().getElement();\n  };\n\n  self.getScrollHeaderElementFromTable = function () {\n    return self.queryScrollContainerFromTable().toHeaderRow().getElement();\n  };\n\n  self.getPinContentRowElementFromTable = function (rowIdx) {\n    return self.getPinContentRowElementsFromTable()[rowIdx];\n  };\n\n  self.getScrollContentRowElementFromTable = function (rowIdx) {\n    return self.getScrollContentRowElementsFromTable()[rowIdx];\n  };\n\n  self.getContentCellFromTable = function (rowIdx, colIdx) {\n    return self.queryContentCellFromTable(rowIdx, colIdx).getElement();\n  };\n\n  self.getHeaderCellElementFromTable = function (colIdx) {\n    return self.queryHeaderCellContentFromTable(colIdx).getElement();\n  };\n\n  self.getHeaderCellSortIconElementFromTable = function (colIdx) {\n    return self.queryHeaderCellContentFromTable(colIdx).toSortIcon().getElement();\n  };\n\n  return self;\n}; // NOTE: Not all sub-modules needs this way to register itself to _t, the rule is:\n// If the sub-module is used heavily by DomCtrl and outer function - us this approach\n// If the sub-module is only used by outter function - register it in splmTableNative\n//_t.Trv = SPLMTableTraversal;\n\n\n_c = SPLMTableTraversal;\nexport default SPLMTableTraversal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SPLMTableTraversal\");","map":{"version":3,"names":["Const","util","SPLMTableTraversal","tableElement","_table","_elem","self","getWidth","numericProperty","style","width","minWidth","getElement","toHeader","getElementsByClassName","CLASS_HEADER_ROW","toCanvas","CLASS_CANVAS","toContentRow","rowIdx","getContentRowElements","CLASS_ROW","getHeaderCellElements","CLASS_HEADER_CELL","getContentCellElements","CLASS_CELL","toHeaderCell","columnIdx","toHeaderCellContent","CLASS_HEADER_CELL_CONTENT","toMenuItem","itemIdx","CLASS_AW_CELL_LIST_ITEM","getMenuItemElements","toContentCell","cells","i","length","columnDef","index","getAwIconElement","getElementsByTagName","ELEMENT_AW_ICON","getTreeNodeToggleCommandElement","CLASS_WIDGET_TREE_NODE_TOGGLE_CMD","getTreeCommandCellElement","rowElement","CLASS_AW_TREE_COMMAND_CELL","toSortIndicator","CLASS_HEADER_CELL_SORT_ICON","toColumnSplitter","CLASS_HEADER_CELL_SPLITTER","toStringEditBox","ELEMENT_STRING_EDIT_BOX","toScrollContents","CLASS_SCROLL_CONTENTS","toHeaderRow","toSortIcon","getCellCommandButtonElements","cmdBarElem","CLASS_CELL_COMMAND_BAR","queryPinContainerFromTable","CLASS_PIN_CONTAINER","queryScrollContainerFromTable","CLASS_SCROLL_CONTAINER","queryPinContentFromTable","queryScrollContentFromTable","queryHeaderCellContentFromTable","queryHeaderCellFromTable","pinColumnCount","getTableController","getPinColumnCount","queryFirstRowCellFromTable","firstRowIdx","queryContentCellFromTable","queryRowColumnCellElementsFromTable","idx","rowElems","res","getPinContentRowElementsFromTable","getScrollContentRowElementsFromTable","push","queryAllRowCellElementsFromTable","rowElements","pinnedElements","scrollContentElements","j","queryTableMenu","id","document","getElementById","queryResizeGripFromTable","CLASS_COLUMN_RESIZE_GRIP","queryContextMenuFromTable","CLASS_AW_POPUP","getContentCellElementsFromTable","getRootElement","className","CLASS_AW_ROOT_ELEMENT","rootElem","getHeaderCellElementsFromTable","getHeaderRowWidthFromTable","getContentRowWidthFromTable","getScrollCanvasElementFromTable","getPinCanvasElementFromTable","getPropertyValueLinkElement","cell","elem1","CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS","getCellTextElementFromTableCell","cellElement","elem","CLASS_WIDGET_TABLE_CELL_TEXT","getTableContainerElementFromTable","CLASS_TABLE_CONTAINER","getPinContainerElementFromTable","getScrollContainerElementFromTable","getPinContentElementFromTable","getScrollContentElementFromTable","getPinHeaderElementFromTable","getScrollHeaderElementFromTable","getPinContentRowElementFromTable","getScrollContentRowElementFromTable","getContentCellFromTable","colIdx","getHeaderCellElementFromTable","getHeaderCellSortIconElementFromTable"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/splmTableTraversal.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * Utility to traverse DOM Element in PL Table\n *\n * @module js/splmTableTraversal\n */\n\nimport Const from 'js/splmTableConstants';\nimport util from 'js/splmTableUtils';\n\n/**\n * Instances of this class represent a traverse utilty in table\n *\n * @class SPLMTableTraversal\n * @param {DOMElement} tableElement - HTML DOM Element for table\n * @param {Number} pinColumnCount - The number of pin column count\n */\nvar SPLMTableTraversal = function( tableElement ) {\n    var _table = tableElement;\n\n    var _elem = _table;\n    var self = this;\n\n    // Helper traverse method\n    self.getWidth = function() {\n        return util.numericProperty( _elem.style.width ) || util.numericProperty( _elem.style.minWidth ) || 0;\n    };\n\n    self.getElement = function() {\n        return _elem;\n    };\n\n    self.toHeader = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_ROW )[ 0 ];\n        return this;\n    };\n\n    self.toCanvas = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_CANVAS )[ 0 ];\n        return this;\n    };\n\n    self.toContentRow = function( rowIdx ) {\n        _elem = self.getContentRowElements()[ rowIdx ];\n        return this;\n    };\n\n    self.getContentRowElements = function() {\n        return _elem.getElementsByClassName( Const.CLASS_ROW );\n    };\n\n    self.getHeaderCellElements = function() {\n        return _elem.getElementsByClassName( Const.CLASS_HEADER_CELL );\n    };\n\n    self.getContentCellElements = function() {\n        return _elem.getElementsByClassName( Const.CLASS_CELL );\n    };\n\n    self.toHeaderCell = function( columnIdx ) {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_CELL )[ columnIdx ];\n        return this;\n    };\n\n    self.toHeaderCellContent = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_CELL_CONTENT )[ 0 ];\n        return this;\n    };\n\n    self.toMenuItem = function( itemIdx ) {\n        _elem = _elem.getElementsByClassName( Const.CLASS_AW_CELL_LIST_ITEM )[ itemIdx ];\n        return this;\n    };\n\n    self.getMenuItemElements = function() {\n        return _elem.getElementsByClassName( Const.CLASS_AW_CELL_LIST_ITEM );\n    };\n\n    self.toContentCell = function( columnIdx ) {\n        var cells = _elem.getElementsByClassName( Const.CLASS_CELL );\n        for( var i = 0; i < cells.length; i++ ) {\n            if( cells[ i ].columnDef.index === columnIdx ) {\n                _elem = cells[ i ];\n                return this;\n            }\n        }\n        _elem = null;\n        return this;\n    };\n\n    self.getAwIconElement = function() {\n        return _elem.getElementsByTagName( Const.ELEMENT_AW_ICON )[ 0 ];\n    };\n\n    self.getTreeNodeToggleCommandElement = function() {\n        return _elem.getElementsByClassName( Const.CLASS_WIDGET_TREE_NODE_TOGGLE_CMD )[ 0 ];\n    };\n\n    self.getTreeCommandCellElement = function( rowElement ) {\n        return rowElement.getElementsByClassName( Const.CLASS_AW_TREE_COMMAND_CELL )[ 0 ];\n    };\n\n    self.toSortIndicator = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_CELL_SORT_ICON )[ 0 ];\n        return this;\n    };\n\n    self.toColumnSplitter = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_CELL_SPLITTER )[ 0 ];\n        return this;\n    };\n\n    self.toStringEditBox = function() {\n        _elem = _elem.getElementsByTagName( Const.ELEMENT_STRING_EDIT_BOX )[ 0 ];\n        return this;\n    };\n\n    self.toScrollContents = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_SCROLL_CONTENTS )[ 0 ];\n        return this;\n    };\n\n    self.toHeaderRow = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_ROW )[ 0 ];\n        return this;\n    };\n\n    self.toSortIcon = function() {\n        _elem = _elem.getElementsByClassName( Const.CLASS_HEADER_CELL_SORT_ICON )[ 0 ];\n        return this;\n    };\n\n    self.getCellCommandButtonElements = function() {\n        var cmdBarElem = _elem.getElementsByClassName( Const.CLASS_CELL_COMMAND_BAR )[ 0 ];\n        return cmdBarElem.getElementsByTagName( 'button' );\n    };\n\n    // Root traverse method\n    self.queryPinContainerFromTable = function() {\n        _elem = _table.getElementsByClassName( Const.CLASS_PIN_CONTAINER )[ 0 ];\n        return this;\n    };\n\n    self.queryScrollContainerFromTable = function() {\n        _elem = _table.getElementsByClassName( Const.CLASS_SCROLL_CONTAINER )[ 0 ];\n        return this;\n    };\n\n    self.queryPinContentFromTable = function() {\n        return self.queryPinContainerFromTable().toScrollContents();\n    };\n\n    self.queryScrollContentFromTable = function() {\n        return self.queryScrollContainerFromTable().toScrollContents();\n    };\n\n    self.queryHeaderCellContentFromTable = function( columnIdx ) {\n        return self.queryHeaderCellFromTable( columnIdx ).toHeaderCellContent();\n    };\n\n    self.queryHeaderCellFromTable = function( columnIdx ) {\n        var pinColumnCount = util.getTableController( _table ).getPinColumnCount();\n        if( columnIdx < pinColumnCount ) {\n            return self.queryPinContainerFromTable().toHeader().toHeaderCell( columnIdx );\n        }\n        return self.queryScrollContainerFromTable().toHeader().toHeaderCell( columnIdx - pinColumnCount );\n    };\n\n    self.queryFirstRowCellFromTable = function( columnIdx ) {\n        var firstRowIdx = 0;\n        return self.queryContentCellFromTable( firstRowIdx, columnIdx );\n    };\n\n    self.queryRowColumnCellElementsFromTable = function( columnIdx ) {\n        var idx = 0;\n        var rowElems = null;\n        var res = [];\n        var pinColumnCount = util.getTableController( _table ).getPinColumnCount();\n        if( columnIdx < pinColumnCount ) {\n            idx = columnIdx;\n            rowElems = self.getPinContentRowElementsFromTable();\n        } else {\n            idx = columnIdx - pinColumnCount;\n            rowElems = self.getScrollContentRowElementsFromTable();\n        }\n\n        for( var i = 0; i < rowElems.length; i++ ) {\n            res.push( rowElems[ i ].getElementsByClassName( Const.CLASS_CELL )[ idx ] );\n        }\n\n        return res;\n    };\n\n    self.queryAllRowCellElementsFromTable = function() {\n        var rowElements = [];\n        var pinnedElements = self.getPinContentRowElementsFromTable();\n        for( var i = 0; i < pinnedElements.length; i++ ) {\n            rowElements.push( pinnedElements[ i ] );\n        }\n        var scrollContentElements = self.getScrollContentRowElementsFromTable();\n        for( var j = 0; j < scrollContentElements.length; j++ ) {\n            rowElements.push( scrollContentElements[ j ] );\n        }\n        return rowElements;\n    };\n\n    self.queryContentCellFromTable = function( rowIdx, columnIdx ) {\n        var pinColumnCount = util.getTableController( _table ).getPinColumnCount();\n        if( columnIdx < pinColumnCount ) {\n            return self.queryPinContainerFromTable().toContentRow( rowIdx ).toContentCell( columnIdx );\n        }\n        return self.queryScrollContainerFromTable().toContentRow( rowIdx ).toContentCell( columnIdx );\n    };\n\n    self.queryTableMenu = function( id ) {\n        _elem = document.getElementById( id + '_menu' );\n        return this;\n    };\n\n    self.queryResizeGripFromTable = function() {\n        _elem = _table.getElementsByClassName( Const.CLASS_COLUMN_RESIZE_GRIP )[ 0 ];\n        return this;\n    };\n\n    self.queryContextMenuFromTable = function() {\n        _elem = document.getElementsByClassName( Const.CLASS_AW_POPUP )[ 0 ];\n        return this;\n    };\n\n    self.getContentCellElementsFromTable = function() {\n        _elem = _table;\n        return self.getContentCellElements();\n    };\n\n    // Get element method\n    self.getRootElement = function( className ) {\n        if( !className ) {\n            className = Const.CLASS_AW_ROOT_ELEMENT;\n        }\n\n        var rootElem = document.getElementsByClassName( className )[ 0 ];\n        if( !rootElem ) {\n            rootElem = document;\n        }\n        return rootElem;\n    };\n\n    self.getHeaderCellElementsFromTable = function() {\n        return _table.getElementsByClassName( Const.CLASS_HEADER_CELL ) || [];\n    };\n\n    self.getHeaderRowWidthFromTable = function() {\n        return self.queryPinContainerFromTable().toHeader().getWidth() + self.queryScrollContainerFromTable().toHeader().getWidth();\n    };\n\n    self.getContentRowWidthFromTable = function() {\n        return self.queryPinContainerFromTable().toContentRow( 0 ).getWidth() + self.queryScrollContainerFromTable().toContentRow( 0 ).getWidth();\n    };\n\n    self.getScrollCanvasElementFromTable = function() {\n        return self.queryScrollContainerFromTable().toCanvas().getElement();\n    };\n\n    self.getPinCanvasElementFromTable = function() {\n        return self.queryPinContainerFromTable().toCanvas().getElement();\n    };\n\n    self.getPropertyValueLinkElement = function( index, cell ) {\n        index = index || 0;\n        var elem1 = cell || _elem;\n        return elem1.getElementsByClassName( Const.CLASS_WIDGET_TABLE_PROPERTY_VALUE_LINKS )[ index ];\n    };\n\n    self.getCellTextElementFromTableCell = function( cellElement, index ) {\n        index = index || 0;\n        var elem = cellElement || _elem;\n        return elem.getElementsByClassName( Const.CLASS_WIDGET_TABLE_CELL_TEXT )[ index ];\n    };\n\n    self.getTableContainerElementFromTable = function() {\n        return _table.getElementsByClassName( Const.CLASS_TABLE_CONTAINER )[ 0 ];\n    };\n\n    self.getPinContainerElementFromTable = function() {\n        return self.queryPinContainerFromTable().getElement();\n    };\n\n    self.getScrollContainerElementFromTable = function() {\n        return self.queryScrollContainerFromTable().getElement();\n    };\n\n    self.getPinContentElementFromTable = function() {\n        return self.queryPinContentFromTable().getElement();\n    };\n\n    self.getScrollContentElementFromTable = function() {\n        return self.queryScrollContentFromTable().getElement();\n    };\n\n    self.getPinContentRowElementsFromTable = function() {\n        return self.queryPinContentFromTable().getContentRowElements();\n    };\n\n    self.getScrollContentRowElementsFromTable = function() {\n        return self.queryScrollContentFromTable().getContentRowElements();\n    };\n\n    self.getPinHeaderElementFromTable = function() {\n        return self.queryPinContainerFromTable().toHeaderRow().getElement();\n    };\n\n    self.getScrollHeaderElementFromTable = function() {\n        return self.queryScrollContainerFromTable().toHeaderRow().getElement();\n    };\n\n    self.getPinContentRowElementFromTable = function( rowIdx ) {\n        return self.getPinContentRowElementsFromTable()[ rowIdx ];\n    };\n\n    self.getScrollContentRowElementFromTable = function( rowIdx ) {\n        return self.getScrollContentRowElementsFromTable()[ rowIdx ];\n    };\n\n    self.getContentCellFromTable = function( rowIdx, colIdx ) {\n        return self.queryContentCellFromTable( rowIdx, colIdx ).getElement();\n    };\n\n    self.getHeaderCellElementFromTable = function( colIdx ) {\n        return self.queryHeaderCellContentFromTable( colIdx ).getElement();\n    };\n\n    self.getHeaderCellSortIconElementFromTable = function( colIdx ) {\n        return self.queryHeaderCellContentFromTable( colIdx ).toSortIcon().getElement();\n    };\n\n    return self;\n};\n\n// NOTE: Not all sub-modules needs this way to register itself to _t, the rule is:\n// If the sub-module is used heavily by DomCtrl and outer function - us this approach\n// If the sub-module is only used by outter function - register it in splmTableNative\n//_t.Trv = SPLMTableTraversal;\nexport default SPLMTableTraversal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}