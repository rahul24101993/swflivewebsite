{"ast":null,"code":"/**\n * @module js/helloAuthenticatorService\n */ /**\n * @return {Object} authenticator\n */export function getAuthenticator(){var exports={};/**\n     * This function determines if authentication is required. If already authenticated, none is required.\n     *\n     * @return {Promise} if promise is resolved, then no authentication is required. if promise fails, then the authenticate function will be called.\n     */exports.checkIfSessionAuthenticated=function(){return Promise.resolve();};/**\n     * authenticator specific function to carry out authentication. In the interactive case, we just resolve\n     * directly to continue the pipeline.\n     *\n     * @return {Promise} promise\n     */exports.authenticate=function(){return Promise.resolve();};/**\n     * this is called during the authentication process. It gets invoked after the authentication is\n     * completed/ready. It is a spot to do any session level initialization.\n     *\n     * @return {Promise} promise to be resolved after the authenticator does self initialization\n     */exports.postAuthInitialization=function(){return Promise.resolve();};/**\n     * triggers the authenticator sign out logic. Returns a promise invoked upon completion\n     *\n     * @return {Promise} promise to be invoked upon completion of the signout tasks\n     */exports.signOut=function(){return Promise.resolve();};return exports;}","map":null,"metadata":{},"sourceType":"module"}