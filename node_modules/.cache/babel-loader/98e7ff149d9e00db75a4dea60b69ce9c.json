{"ast":null,"code":"import AwStateService from 'js/awStateService';\nimport keyboardService from 'js/keyboardService';\nimport appCtxService from 'js/appCtxService';\nimport localeService from 'js/localeService';\nimport AwPromiseService from 'js/awPromiseService';\nimport propertyPolicyService from 'soa/kernel/propertyPolicyService';\nimport preferenceService from 'soa/preferenceService';\nimport logger from 'js/logger';\nlet _locationContext = 'locationContext';\nlet _contextName = 'location.titles';\nlet _contextProperties = ['browserTitle', 'browserSubTitle', 'headerTitle', 'showsearchbox'];\n\nlet _context;\n\nlet exports;\n\nconst populateContextProperties = () => {\n  let contextProps = {};\n  var promises = [];\n\n  _contextProperties.forEach(function (key) {\n    var property = AwStateService.instance.current.data[key];\n\n    if (property) {\n      if (typeof property === 'string') {\n        contextProps[key] = property;\n        promises.push(AwPromiseService.instance.when(contextProps));\n      } else {\n        promises.push(localeService.getLocalizedText(property.source, property.key).then(function (result) {\n          contextProps[key] = result;\n          return contextProps;\n        }));\n      }\n    }\n  });\n\n  return AwPromiseService.instance.all(promises).then(function () {\n    appCtxService.updateCtx(_contextName, contextProps);\n    return contextProps;\n  });\n};\n/**\n * The policy is unregistered when the location is removed.\n */\n\n\nconst unregisterPropertyPolicy = propertyPolicyId => {\n  if (propertyPolicyId) {\n    propertyPolicyService.unregister(propertyPolicyId);\n  }\n};\n\nexport const initializePage = async (locationPanelStyle, overriddenHeaderTitle) => {\n  //let subLocationTabs = []; // revisitMe\n  _context = AwStateService.instance.current.parent.replace(/_/g, '.');\n  keyboardService.registerKeyDownEvent();\n  appCtxService.registerCtx(_locationContext, {\n    'ActiveWorkspace:Location': _context\n  });\n  let prefs = (await preferenceService.queryAll()) || [];\n  return populateContextProperties().then(contextProps => {\n    /**\n     * The property policy for this location. Extracted from the state data. The policy can be embedded\n     * directly as an object or it can be a string path to the json file. The policy is registered when the\n     * location is activated and unregistered when the location is removed.\n     */\n    var propertyPolicy = AwStateService.instance.current.data.propertyPolicy;\n\n    if (propertyPolicy) {\n      return propertyPolicyService.registerPolicyAsync(propertyPolicy).then(function (propertyPolicyId) {\n        return {\n          pageContext: Object.assign(contextProps, {\n            propertyPolicyId: propertyPolicyId,\n            prefs,\n            locationPanelStyle,\n            overriddenHeaderTitle\n          })\n        };\n      });\n    }\n\n    return Promise.resolve({\n      pageContext: { ...contextProps,\n        prefs,\n        locationPanelStyle,\n        overriddenHeaderTitle\n      }\n    });\n  });\n};\nexport const cleanupPage = propertyPolicyId => {\n  appCtxService.unRegisterCtx(_locationContext);\n  appCtxService.unRegisterCtx(_contextName);\n  keyboardService.unRegisterKeyDownEvent();\n  unregisterPropertyPolicy(propertyPolicyId);\n};\nexport const updateContextProperties = (data, eventData) => {\n  let updatedContextProps = {\n    browserTitle: data.browserTitle,\n    browserSubTitle: data.browserSubTitle,\n    headerTitle: data.headerTitle\n  };\n\n  _contextProperties.forEach(function (prop) {\n    if (eventData.value[prop]) {\n      updatedContextProps[prop] = eventData.value[prop];\n    }\n  });\n\n  return updatedContextProps;\n};\nexport const getSublocationTabsAndApi = sublocationTabs => {\n  return {\n    sublocationTabs: sublocationTabs.filter(tab => tab.displayTab === true),\n    tabCallbackApi: tabCallbackApi\n  };\n};\n\nconst tabCallbackApi = (pageId, tabTitle, sublocationTabs) => {\n  var tabToSelect;\n\n  if (tabTitle) {\n    tabToSelect = sublocationTabs.filter(function (tab) {\n      return tab.name === tabTitle;\n    })[0];\n  } else {\n    // Should only happen when api is called before tapTitle is loaded from i18n file\n    tabToSelect = sublocationTabs.filter(function (tab) {\n      return tab.pageId === pageId;\n    })[0];\n  }\n\n  if (tabToSelect) {\n    // When the tab widget is forced to update after the state has already changed it will still trigger callback\n    if (tabToSelect.state !== AwStateService.instance.current.name) {\n      // Switch to the new state\n      if (tabToSelect.params) {\n        AwStateService.instance.go(tabToSelect.state, tabToSelect.params);\n      } else {\n        AwStateService.instance.go(tabToSelect.state);\n      }\n    }\n  } else {\n    logger.error('Missing tab was selected: ' + tabTitle);\n  }\n};\n\nexport const handleStateChange = sublocationTabs => {\n  const activeTab = sublocationTabs.filter(tab => tab.selectedTab)[0];\n\n  if (activeTab && activeTab.state !== AwStateService.instance.current.name) {\n    return sublocationTabs.map(tab => {\n      if (tab.state === AwStateService.instance.current.name) {\n        tab.selectedTab = true;\n      } else {\n        tab.selectedTab = false;\n      }\n\n      return tab;\n    });\n  }\n\n  return sublocationTabs;\n};\nexports = {\n  initializePage,\n  cleanupPage,\n  updateContextProperties,\n  getSublocationTabsAndApi,\n  handleStateChange\n};\nexport default exports;","map":{"version":3,"names":["AwStateService","keyboardService","appCtxService","localeService","AwPromiseService","propertyPolicyService","preferenceService","logger","_locationContext","_contextName","_contextProperties","_context","exports","populateContextProperties","contextProps","promises","forEach","key","property","instance","current","data","push","when","getLocalizedText","source","then","result","all","updateCtx","unregisterPropertyPolicy","propertyPolicyId","unregister","initializePage","locationPanelStyle","overriddenHeaderTitle","parent","replace","registerKeyDownEvent","registerCtx","prefs","queryAll","propertyPolicy","registerPolicyAsync","pageContext","Object","assign","Promise","resolve","cleanupPage","unRegisterCtx","unRegisterKeyDownEvent","updateContextProperties","eventData","updatedContextProps","browserTitle","browserSubTitle","headerTitle","prop","value","getSublocationTabsAndApi","sublocationTabs","filter","tab","displayTab","tabCallbackApi","pageId","tabTitle","tabToSelect","name","state","params","go","error","handleStateChange","activeTab","selectedTab","map"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pagelevelcomponents/src/js/AwDefaultLocationService.js"],"sourcesContent":["import AwStateService from 'js/awStateService';\nimport keyboardService from 'js/keyboardService';\nimport appCtxService from 'js/appCtxService';\nimport localeService from 'js/localeService';\nimport AwPromiseService from 'js/awPromiseService';\nimport propertyPolicyService from 'soa/kernel/propertyPolicyService';\nimport preferenceService from 'soa/preferenceService';\nimport logger from 'js/logger';\n\nlet _locationContext = 'locationContext';\nlet _contextName = 'location.titles';\nlet _contextProperties = [ 'browserTitle', 'browserSubTitle', 'headerTitle', 'showsearchbox' ];\nlet _context;\nlet exports;\n\nconst populateContextProperties = () => {\n    let contextProps = {};\n    var promises = [];\n    _contextProperties.forEach( function( key ) {\n        var property = AwStateService.instance.current.data[ key ];\n        if( property ) {\n            if( typeof property === 'string' ) {\n                contextProps[ key ] = property;\n                promises.push( AwPromiseService.instance.when( contextProps ) );\n            } else {\n                promises.push( localeService.getLocalizedText( property.source, property.key )\n                    .then( function( result ) {\n                        contextProps[ key ] = result;\n                        return contextProps;\n                    } ) );\n            }\n        }\n    } );\n\n    return AwPromiseService.instance.all( promises ).then( function() {\n        appCtxService.updateCtx( _contextName, contextProps );\n        return contextProps;\n    } );\n};\n\n/**\n * The policy is unregistered when the location is removed.\n */\nconst unregisterPropertyPolicy = ( propertyPolicyId ) => {\n    if( propertyPolicyId ) {\n        propertyPolicyService.unregister( propertyPolicyId );\n    }\n};\nexport const initializePage = async( locationPanelStyle, overriddenHeaderTitle ) => {\n    //let subLocationTabs = []; // revisitMe\n    _context = AwStateService.instance.current.parent.replace( /_/g, '.' );\n    keyboardService.registerKeyDownEvent();\n    appCtxService.registerCtx( _locationContext, {\n        'ActiveWorkspace:Location': _context\n    } );\n    let prefs = await preferenceService.queryAll() || [];\n    return populateContextProperties().then( ( contextProps ) => {\n        /**\n         * The property policy for this location. Extracted from the state data. The policy can be embedded\n         * directly as an object or it can be a string path to the json file. The policy is registered when the\n         * location is activated and unregistered when the location is removed.\n         */\n        var propertyPolicy = AwStateService.instance.current.data.propertyPolicy;\n        if( propertyPolicy ) {\n            return propertyPolicyService.registerPolicyAsync( propertyPolicy ).then( function( propertyPolicyId ) {\n                return { pageContext: Object.assign( contextProps, { propertyPolicyId: propertyPolicyId, prefs, locationPanelStyle, overriddenHeaderTitle } ) };\n            } );\n        }\n        return Promise.resolve( { pageContext: { ...contextProps, prefs, locationPanelStyle, overriddenHeaderTitle } } );\n    } );\n};\n\nexport const cleanupPage = ( propertyPolicyId ) => {\n    appCtxService.unRegisterCtx( _locationContext );\n    appCtxService.unRegisterCtx( _contextName );\n    keyboardService.unRegisterKeyDownEvent();\n    unregisterPropertyPolicy( propertyPolicyId );\n};\n\nexport const updateContextProperties = ( data, eventData ) => {\n    let updatedContextProps = {\n        browserTitle: data.browserTitle,\n        browserSubTitle: data.browserSubTitle,\n        headerTitle: data.headerTitle\n    };\n    _contextProperties.forEach( function( prop ) {\n        if( eventData.value[ prop ] ) {\n            updatedContextProps[ prop ] = eventData.value[ prop ];\n        }\n    } );\n    return updatedContextProps;\n};\n\nexport const getSublocationTabsAndApi = ( sublocationTabs ) => {\n    return {\n        sublocationTabs: sublocationTabs.filter( tab => tab.displayTab === true ),\n        tabCallbackApi: tabCallbackApi\n    };\n};\n\nconst tabCallbackApi = ( pageId, tabTitle, sublocationTabs ) => {\n    var tabToSelect;\n    if( tabTitle ) {\n        tabToSelect = sublocationTabs.filter( function( tab ) {\n            return tab.name === tabTitle;\n        } )[ 0 ];\n    } else {\n        // Should only happen when api is called before tapTitle is loaded from i18n file\n        tabToSelect = sublocationTabs.filter( function( tab ) {\n            return tab.pageId === pageId;\n        } )[ 0 ];\n    }\n    if( tabToSelect ) {\n        // When the tab widget is forced to update after the state has already changed it will still trigger callback\n        if( tabToSelect.state !== AwStateService.instance.current.name ) {\n            // Switch to the new state\n            if( tabToSelect.params ) {\n                AwStateService.instance.go( tabToSelect.state, tabToSelect.params );\n            } else {\n                AwStateService.instance.go( tabToSelect.state );\n            }\n        }\n    } else {\n        logger.error( 'Missing tab was selected: ' + tabTitle );\n    }\n};\n\nexport const handleStateChange = ( sublocationTabs ) => {\n    const activeTab = sublocationTabs.filter( tab => tab.selectedTab )[ 0 ];\n    if( activeTab && activeTab.state !== AwStateService.instance.current.name ) {\n        return sublocationTabs.map( tab => {\n            if( tab.state === AwStateService.instance.current.name ) {\n                tab.selectedTab = true;\n            } else {\n                tab.selectedTab = false;\n            }\n            return tab;\n        } );\n    }\n    return sublocationTabs;\n};\n\n\nexports = {\n    initializePage,\n    cleanupPage,\n    updateContextProperties,\n    getSublocationTabsAndApi,\n    handleStateChange\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}