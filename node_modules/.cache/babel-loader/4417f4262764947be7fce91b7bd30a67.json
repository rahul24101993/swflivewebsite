{"ast":null,"code":"/* eslint-disable max-lines */\n// Copyright (c) 2020 Siemens\n\n/**\n * Note: This module does not return an API object. The API is only available when the service defined this module is\n * injected by AngularJS.\n *\n * @module js/aw.searchFilter.service\n * @requires js/filterPanelUtils\n */\nimport AwStateService from 'js/awStateService';\nimport AwPromiseService from 'js/awPromiseService';\nimport localeService from 'js/localeService';\nimport appCtxService from 'js/appCtxService';\nimport filterPanelUtils from 'js/filterPanelUtils';\nimport cdm from 'soa/kernel/clientDataModel';\nimport _ from 'lodash';\nimport analyticsSvc from 'js/analyticsService';\nimport cmm from 'soa/kernel/clientMetaModel';\nimport eventBus from 'js/eventBus';\nvar localTextBundle = {};\nvar _local = 'local';\nvar OWNING_SITE = 'OwningSite.owning_site';\nexport let _dateFilterMarker = '_0Z0_';\nexport let _dateFilterLevels = ['year', 'year_month', 'week', 'year_month_day'];\nexport let _filterSeparator = '~';\nconst _filterSeparatorOption1 = '~';\nconst _filterSeparatorOption2 = '##';\nexport let _filterValueSeparator = appCtxService.ctx.preferences && appCtxService.ctx.preferences.AW_FacetValue_Separator && appCtxService.ctx.preferences.AW_FacetValue_Separator[0] ? appCtxService.ctx.preferences.AW_FacetValue_Separator[0] : '^';\n\nconst removeSelectedFiltersFromCategory = category => {\n  if (category && category.filterValues && category.filterValues.length > 0) {\n    for (let filterIndex = 0; filterIndex < category.filterValues.length; filterIndex++) {\n      category.filterValues[filterIndex].selected.dbValue = false;\n      category.filterValues[filterIndex].selected.value = false;\n    }\n  }\n\n  return category;\n};\n\nexport let clearNumericRangeInfoFromCategory = category => {\n  if (category) {\n    delete category.numericRangeString;\n    delete category.numericrange;\n  }\n\n  return category;\n};\nexport let clearDateRangeInfoFromCategory = category => {\n  if (category) {\n    delete category.dateRangeString;\n    category.daterange.endDate.value = -62135579040000;\n    category.daterange.endDate.dbValue = -62135579040000;\n    category.daterange.startDate.value = -62135579040000;\n    category.daterange.startDate.dbValue = -62135579040000;\n  }\n\n  return category;\n};\nexport let clearAllSelectedFiltersAndRanges = (categories, activeFilters, positivePendingFilters) => {\n  if (categories && categories.length > 0 && activeFilters && activeFilters.length > 0) {\n    let categoriesToRemoveSelectionsAndRangesFrom = new Set();\n\n    for (let activeFilterIndex = 0; activeFilterIndex < activeFilters.length; activeFilterIndex++) {\n      let categoryName = activeFilters[activeFilterIndex].name;\n      let dateMarkerIndex = categoryName && categoryName.length > 0 ? categoryName.indexOf(_dateFilterMarker) : -1;\n      categoryName = categoryName && dateMarkerIndex > -1 ? categoryName.substring(0, dateMarkerIndex) : categoryName;\n\n      if (categoryName && categoryName.length > 0) {\n        categoriesToRemoveSelectionsAndRangesFrom.add(categoryName);\n      }\n    }\n\n    if (positivePendingFilters && positivePendingFilters.length > 0) {\n      for (let positivePendingFilterIndex = 0; positivePendingFilterIndex < positivePendingFilters.length; positivePendingFilterIndex++) {\n        let categoryName = positivePendingFilters[positivePendingFilterIndex].name;\n        let dateMarkerIndex = categoryName.indexOf(_dateFilterMarker);\n        categoryName = categoryName && dateMarkerIndex > -1 ? categoryName.substring(0, dateMarkerIndex) : categoryName;\n\n        if (categoryName && categoryName.length > 0) {\n          categoriesToRemoveSelectionsAndRangesFrom.add(categoryName);\n        }\n      }\n    }\n\n    for (let categoryIndex = 0; categoryIndex < categories.length; categoryIndex++) {\n      let categoryName = categories[categoryIndex].internalName;\n\n      if (categoryName && categoriesToRemoveSelectionsAndRangesFrom.has(categoryName)) {\n        let eachCategory = categories[categoryIndex];\n        eachCategory = removeSelectedFiltersFromCategory(eachCategory);\n\n        switch (eachCategory.type) {\n          case 'DateFilter':\n            eachCategory = clearDateRangeInfoFromCategory(eachCategory);\n            break;\n\n          case 'NumericFilter':\n            eachCategory = clearNumericRangeInfoFromCategory(eachCategory);\n            break;\n\n          default:\n            break;\n        }\n\n        categories[categoryIndex] = eachCategory;\n      }\n    }\n  }\n\n  return categories;\n};\n\nconst getOnlyFilterValuesFromActiveFilterMap = activeFilterMapValue => {\n  let values = [];\n\n  if (activeFilterMapValue && activeFilterMapValue.length > 0) {\n    for (let index = 0; index < activeFilterMapValue.length; index++) {\n      switch (activeFilterMapValue[index].searchFilterType) {\n        case 'DateFilter':\n          {\n            if (activeFilterMapValue[index].startDateValue.includes(filterPanelUtils.BEGINNING_OF_TIME)) {\n              values.push(filterPanelUtils.INTERNAL_DATE_FILTER + '*' + '_TO_' + activeFilterMapValue[index].endDateValue);\n            } else if (activeFilterMapValue[index].startDateValue.includes(filterPanelUtils.ENDING_OF_TIME)) {\n              values.push(filterPanelUtils.INTERNAL_DATE_FILTER + activeFilterMapValue[index].startDateValue + '_TO_' + '*');\n            } else {\n              values.push(filterPanelUtils.INTERNAL_DATE_FILTER + activeFilterMapValue[index].startDateValue + '_TO_' + activeFilterMapValue[index].endDateValue);\n            }\n\n            break;\n          }\n\n        case 'NumericFilter':\n          {\n            if (activeFilterMapValue[index].stringValue && activeFilterMapValue[index].stringValue.length > 0 && activeFilterMapValue[index].startEndRange !== 'NumericRange' && activeFilterMapValue[index].startEndRange !== 'NumericRangeBlankStart' && activeFilterMapValue[index].startEndRange !== 'NumericRangeBlankEnd') {\n              values.push(filterPanelUtils.INTERNAL_NUMERIC_FILTER + activeFilterMapValue[index].stringValue);\n            } else {\n              if (activeFilterMapValue[index].startNumericValue > 0 && activeFilterMapValue[index].endNumericValue > 0) {\n                values.push(filterPanelUtils.INTERNAL_NUMERIC_RANGE + activeFilterMapValue[index].startNumericValue + '_TO_' + activeFilterMapValue[index].endNumericValue);\n              } else if (activeFilterMapValue[index].startNumericValue > 0) {\n                values.push(filterPanelUtils.INTERNAL_NUMERIC_RANGE + activeFilterMapValue[index].startNumericValue + '_TO_');\n              } else {\n                values.push(filterPanelUtils.INTERNAL_NUMERIC_RANGE + '_TO_' + activeFilterMapValue[index].endNumericValue);\n              }\n            }\n\n            break;\n          }\n\n        case 'RadioFilter':\n        case 'StringFilter':\n          values.push(activeFilterMapValue[index].stringValue);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return values.sort();\n};\n\nexport let getPendingFiltersMap = (selectedFiltersMap, activeFilterMap) => {\n  let positivePendingFilterMap = {};\n  let negativePendingFilterMap = {};\n  const orderedSelectedFiltersMap = Object.keys(selectedFiltersMap).sort().reduce((obj, key) => {\n    obj[key] = selectedFiltersMap[key];\n    return obj;\n  }, {});\n  const orderedActiveFiltersMap = Object.keys(activeFilterMap).sort().reduce((obj, key) => {\n    obj[key] = activeFilterMap[key];\n    return obj;\n  }, {});\n\n  for (const [orderedSelectedFiltersMapKey, orderedSelectedFiltersMapValue] of Object.entries(orderedSelectedFiltersMap)) {\n    if (!orderedActiveFiltersMap[orderedSelectedFiltersMapKey]) {\n      positivePendingFilterMap[orderedSelectedFiltersMapKey] = orderedSelectedFiltersMap[orderedSelectedFiltersMapKey];\n    } else if (orderedActiveFiltersMap[orderedSelectedFiltersMapKey]) {\n      let activeFiltersWithJustFilterValues = getOnlyFilterValuesFromActiveFilterMap(orderedActiveFiltersMap[orderedSelectedFiltersMapKey]);\n\n      let positivePendingFiltersWithJustValues = _.difference(orderedSelectedFiltersMapValue, activeFiltersWithJustFilterValues);\n\n      let negativePendingFiltersWithJustValues = _.difference(activeFiltersWithJustFilterValues, orderedSelectedFiltersMapValue);\n\n      if (positivePendingFiltersWithJustValues && positivePendingFiltersWithJustValues.length > 0) {\n        // these are positive filters, meaning they are filters which got selected.\n        positivePendingFilterMap[orderedSelectedFiltersMapKey] = positivePendingFiltersWithJustValues;\n      }\n\n      if (negativePendingFiltersWithJustValues && negativePendingFiltersWithJustValues.length > 0) {\n        // these are negative filters, meaning they are filters which got deselected.\n        negativePendingFilterMap[orderedSelectedFiltersMapKey] = negativePendingFiltersWithJustValues;\n      }\n    }\n  }\n\n  for (const [orderedActiveFiltersMapKey, orderedActiveFiltersMapValue] of Object.entries(orderedActiveFiltersMap)) {\n    if (!orderedSelectedFiltersMap[orderedActiveFiltersMapKey]) {\n      negativePendingFilterMap[orderedActiveFiltersMapKey] = orderedActiveFiltersMap[orderedActiveFiltersMapKey];\n    }\n  }\n\n  return {\n    positivePendingFilterMap: positivePendingFilterMap,\n    negativePendingFilterMap: negativePendingFilterMap\n  };\n};\nexport let removeDependentDateFilters = searchFilterMap => {\n  let searchFilterMapWithNonRedundantDateCategories = _.cloneDeep(searchFilterMap);\n\n  let keys = Object.keys(searchFilterMapWithNonRedundantDateCategories);\n  let mapWithKeyAsCategoryNameAndValueAsLevelsOfDate = {};\n\n  if (keys && keys.length > 0) {\n    for (let index = 0; index < keys.length; index++) {\n      if (keys[index].includes(_dateFilterMarker) && keys[index].substr(keys[index].length - 4, 4) === _dateFilterLevels[0]) {\n        let indexOfYear = keys[index].indexOf(_dateFilterMarker);\n        let catName = keys[index].substr(0, indexOfYear);\n\n        if (mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName]) {\n          let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName];\n          existingLevels.push(1);\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = existingLevels;\n        } else {\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = [1];\n        }\n      } else if (keys[index].includes(_dateFilterMarker) && keys[index].substr(keys[index].length - 10, 10) === _dateFilterLevels[1]) {\n        let indexOfYear = keys[index].indexOf(_dateFilterMarker);\n        let catName = keys[index].substr(0, indexOfYear);\n\n        if (mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName]) {\n          let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName];\n          existingLevels.push(2);\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = existingLevels;\n        } else {\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = [2];\n        }\n      } else if (keys[index].includes(_dateFilterMarker) && keys[index].substr(keys[index].length - 4, 4) === _dateFilterLevels[2]) {\n        let indexOfYear = keys[index].indexOf(_dateFilterMarker);\n        let catName = keys[index].substr(0, indexOfYear);\n\n        if (mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName]) {\n          let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName];\n          existingLevels.push(3);\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = existingLevels;\n        } else {\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = [3];\n        }\n      } else if (keys[index].includes(_dateFilterMarker) && keys[index].substr(keys[index].length - 14, 14) === _dateFilterLevels[3]) {\n        let indexOfYear = keys[index].indexOf(_dateFilterMarker);\n        let catName = keys[index].substr(0, indexOfYear);\n\n        if (mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName]) {\n          let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName];\n          existingLevels.push(4);\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = existingLevels;\n        } else {\n          mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[catName] = [4];\n        }\n      }\n    }\n\n    for (let [key, value] of Object.entries(mapWithKeyAsCategoryNameAndValueAsLevelsOfDate)) {\n      let minLevel = 0;\n      const dateLevelOne = key + _dateFilterMarker + _dateFilterLevels[0];\n      const dateLevelTwo = key + _dateFilterMarker + _dateFilterLevels[1];\n      const dateLevelThree = key + _dateFilterMarker + _dateFilterLevels[2];\n      const dateLevelFour = key + _dateFilterMarker + _dateFilterLevels[3];\n      let isMissingSomeDateLevel = false;\n\n      if (value && value.length > 0) {\n        value.sort();\n\n        for (let index2 = 0; index2 < value.length; index2++) {\n          if (value[index2] === index2 + 1) {\n            minLevel++;\n          } else {\n            isMissingSomeDateLevel = true;\n            break;\n          }\n        }\n      }\n\n      if (isMissingSomeDateLevel) {\n        switch (minLevel) {\n          case 0:\n            {\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelOne]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelOne];\n              }\n\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelTwo]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelTwo];\n              }\n\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelThree]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelThree];\n              }\n\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelFour]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelFour];\n              }\n\n              break;\n            }\n\n          case 1:\n            {\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelTwo]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelTwo];\n              }\n\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelThree]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelThree];\n              }\n\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelFour]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelFour];\n              }\n\n              break;\n            }\n\n          case 2:\n            {\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelThree]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelThree];\n              }\n\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelFour]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelFour];\n              }\n\n              break;\n            }\n\n          case 3:\n            {\n              if (searchFilterMapWithNonRedundantDateCategories[dateLevelFour]) {\n                delete searchFilterMapWithNonRedundantDateCategories[dateLevelFour];\n              }\n\n              break;\n            }\n\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  return searchFilterMapWithNonRedundantDateCategories;\n};\nexport let removeDependentClassificationFilters = filterValue => {\n  let value = filterValue.internalName;\n  let stringValue = '';\n  let values = value.split('/');\n\n  if (values && values.length > 0) {\n    let level = parseInt(values[0]);\n\n    if (level === 0) {\n      return [];\n    } else if (level > 0) {\n      let currentLevel = level;\n      level -= 1;\n      stringValue = level.toString();\n\n      for (let index = 1; index < currentLevel + 1; index++) {\n        stringValue += '/' + values[index];\n      }\n\n      return [stringValue];\n    }\n  }\n\n  return [];\n};\nexport let chooseFilterSeparator = function (filters) {\n  let conflictFound = false;\n\n  _.forEach(filters, (value, key) => {\n    if (_.indexOf(value[0], _filterSeparatorOption1) > -1) {\n      conflictFound = true;\n      return false;\n    }\n  });\n\n  if (conflictFound) {\n    _filterSeparator = _filterSeparatorOption2;\n  } else {\n    _filterSeparator = _filterSeparatorOption1;\n  }\n};\nexport const sortFilterMapKeys = filters => {\n  let sortedFilterMap = {};\n  let keys = Object.keys(filters);\n  keys.sort();\n\n  for (let index = 0; index < keys.length; index++) {\n    let values = filters[keys[index]];\n    values.sort();\n    sortedFilterMap[keys[index]] = values;\n  }\n\n  return sortedFilterMap;\n};\nexport const processFilterValues = filterVals => {\n  for (let index = 0; index < filterVals.length; index++) {\n    let eachValue = filterVals[index];\n    eachValue = getDisplayNameForSpecialKeyWord(eachValue);\n    filterVals[index] = eachValue;\n  }\n\n  return filterVals;\n};\nexport let buildFilterString = function (filters) {\n  chooseFilterSeparator(filters);\n  filters = sortFilterMapKeys(filters);\n  return _.map(filters, function (value, key) {\n    value = processFilterValues(value);\n    return key + '=' + value.join(_filterValueSeparator);\n  }).join(_filterSeparator);\n};\nexport let isHierarchicalChildFilter = function (filterString) {\n  var isChildFilter = false;\n\n  if (filterString) {\n    var nodes = filterString.split(filterPanelUtils.HIERARCHICAL_FACET_SEPARATOR);\n\n    if (nodes && nodes.length > 2 && !isNaN(nodes[0])) {\n      var level = parseInt(nodes[0], 10);\n\n      if (level > 0) {\n        isChildFilter = true;\n      }\n    }\n  }\n\n  return isChildFilter;\n};\nexport let parseHierarchicalChildFilters = function (filterString, keepIdentifier) {\n  var filterValues = [];\n  var nodes = filterString.split(filterPanelUtils.HIERARCHICAL_FACET_SEPARATOR);\n\n  if (!isNaN(nodes[0])) {\n    var level = parseInt(nodes[0], 10);\n\n    for (var i = 0; i <= level; i++) {\n      var filterValue = i.toString();\n\n      for (var j = 1; j <= i + 1; j++) {\n        filterValue += filterPanelUtils.HIERARCHICAL_FACET_SEPARATOR + nodes[j];\n      }\n\n      if (keepIdentifier) {\n        filterValues.push(filterPanelUtils.INTERNAL_OBJECT_FILTER + filterValue);\n      } else {\n        filterValues.push(filterValue);\n      }\n    }\n  }\n\n  return filterValues;\n};\nexport let getFilters = function (groupByCategory, sort, checkHierarchy, keepHierarchyIdentifier, isShapeOrSavedSearch) {\n  var filterMap = {};\n\n  if (AwStateService.instance.params.filter) {\n    // Build the filter map\n    AwStateService.instance.params.filter.split(_filterSeparator).map(function (filterVal) {\n      var separatorIndex = filterVal.search('=');\n      var key = filterVal.slice(0, separatorIndex);\n      var valuePart = filterVal.slice(separatorIndex + 1);\n      var filterPair = [];\n      filterPair[0] = key;\n      filterPair[1] = valuePart;\n\n      if (filterPair.length === 2 && filterPair[1] !== '') {\n        var realFilter = filterPanelUtils.getRealFilterWithNoFilterType(filterPair[1]);\n\n        if (checkHierarchy && isHierarchicalChildFilter(realFilter) && checkIfObjectFilterType(filterPair[0])) {\n          filterMap[filterPair[0]] = parseHierarchicalChildFilters(realFilter, keepHierarchyIdentifier);\n        } else if (isShapeOrSavedSearch) {\n          if (filterPair[0] !== 'ShapeSearchProvider' && filterPair[0] !== 'Geolus Criteria' && filterPair[0] !== 'SS1shapeBeginFilter' && filterPair[0] !== 'SS1shapeEndFilter' && filterPair[0] !== 'SS1partShapeFilter' && filterPair[0] !== 'UpdatedResults.updated_results') {\n            filterMap[filterPair[0]] = filterPair[1].split(_filterValueSeparator);\n          }\n        } else {\n          filterMap[filterPair[0]] = filterPair[1].split(_filterValueSeparator);\n        }\n      }\n    });\n  }\n\n  if (groupByCategory) {\n    return groupByCategory(filterMap);\n  }\n\n  return sort ? getSortedFilterMap(filterMap) : filterMap;\n};\nexport let getFilterMapWithPrefilters = () => {\n  var filterMap = {};\n\n  if (AwStateService.instance.params.filter) {\n    AwStateService.instance.params.filter.split(_filterSeparator).map(function (filterVal) {\n      var separatorIndex = filterVal.search('=');\n      var key = filterVal.slice(0, separatorIndex);\n      var valuePart = filterVal.slice(separatorIndex + 1);\n      var filterPair = [];\n      filterPair[0] = key;\n      filterPair[1] = valuePart;\n\n      if (filterPair.length === 2 && filterPair[1] !== '') {\n        filterMap[filterPair[0]] = filterPair[1].split(_filterValueSeparator);\n      }\n    });\n  }\n\n  return filterMap;\n};\nexport let checkIfObjectFilterType = function (filterCategoryName) {\n  var isObjectFilterType = false;\n  var responseFilterMap = appCtxService.getCtx('searchResponseInfo.searchFilterMap');\n\n  if (responseFilterMap && filterCategoryName && responseFilterMap[filterCategoryName]) {\n    var filters = [];\n    filters = responseFilterMap[filterCategoryName];\n\n    if (filters && filters.length > 0) {\n      if (filters[0].searchFilterType === 'ObjectFilter') {\n        isObjectFilterType = true;\n      }\n    }\n  }\n\n  return isObjectFilterType;\n};\nexport let getSortedFilterMap = function (params) {\n  return _.reduce(params, function (acc, nxt, key) {\n    var trueKey = key.split(_dateFilterMarker)[0];\n\n    if (trueKey !== key) {\n      _.forEach(nxt, function (nxtValue) {\n        var decoratedNxt = {};\n        decoratedNxt.property = key;\n        decoratedNxt.filter = nxtValue;\n\n        if (acc[trueKey]) {\n          acc[trueKey].push(decoratedNxt);\n        } else {\n          acc[trueKey] = [];\n          acc[trueKey].push(decoratedNxt);\n        }\n      });\n    } else {\n      if (acc[key]) {\n        acc[key] = acc[key].concat(nxt);\n      } else {\n        acc[key] = nxt;\n      }\n    }\n\n    return acc;\n  }, {});\n};\nexport let buildSearchFiltersInt = function (searchContext, filterMap) {\n  _.forEach(filterMap, function (value, key) {\n    // If it's a valid filter\n    // get filter type\n    var filterType = 'StringFilter';\n\n    if (key === OWNING_SITE) {\n      filterType = 'RadioFilter';\n      searchContext.activeFilterMap[key] = value.map(function (v1) {\n        var filter = {};\n        filter.searchFilterType = 'RadioFilter';\n        filter.stringValue = v1;\n        return filter;\n      });\n    } else {\n      // Map is used directly by data provider\n      searchContext.activeFilterMap[key] = value.map(function (v1) {\n        var filter = {};\n\n        if (_.startsWith(v1, filterPanelUtils.INTERNAL_DATE_FILTER)) {\n          filter = filterPanelUtils.getDateRangeFilter(v1.substring(12, v1.length));\n        } else if (_.startsWith(v1, filterPanelUtils.INTERNAL_NUMERIC_RANGE)) {\n          filter = filterPanelUtils.getNumericRangeFilter(v1.substring(14, v1.length));\n        } else if (_.startsWith(v1, filterPanelUtils.INTERNAL_NUMERIC_FILTER)) {\n          filter.searchFilterType = 'NumericFilter';\n          var numericValue = parseFloat(v1.substring(15, v1.length));\n\n          if (!isNaN(numericValue)) {\n            filter.startNumericValue = numericValue;\n            filter.endNumericValue = numericValue;\n          }\n\n          filter.stringValue = v1.substring(15, v1.length);\n        } else if (_.startsWith(v1, filterPanelUtils.INTERNAL_OBJECT_FILTER)) {\n          // SOA handles object filters differently in aw4.0.\n          // So we need to pass \"StringFilter\" until server side is changed to be the same as aw3.4\n          // filter.searchFilterType = \"ObjectFilter\";\n          filter.searchFilterType = 'StringFilter';\n          filter.stringValue = v1.substring(14, v1.length);\n        } else if (v1 === '$TODAY' || v1 === '$THIS_WEEK' || v1 === '$THIS_MONTH') {\n          // For special Solr filters like TODAY, THIS_WEEK or THIS_MONTH, mark the filter as DateFilter but keep string values\n          filter.searchFilterType = 'DateFilter';\n          filter.stringValue = v1;\n        } else {\n          filter.searchFilterType = 'StringFilter';\n          filter.stringValue = v1;\n        }\n\n        filterType = filter.searchFilterType;\n        return filter;\n      });\n    } // Array to maintain the order\n\n\n    searchContext.activeFilters.push({\n      name: key,\n      values: value,\n      type: filterType\n    });\n  });\n};\nexport let buildSearchFilters = function (context) {\n  // Initialize the search context if necessary\n  let searchContext = {}; // Filter map and filter array are both required\n  // Input to performSearch needs filter map\n\n  searchContext.activeFilterMap = context && context.search && context.search.activeFilterMap ? _.cloneDeep(context.search.activeFilterMap) : {}; // But order matters in some cases and so array is needed\n\n  searchContext.activeFilters = []; // Build up filter map and array\n\n  buildSearchFiltersInt(searchContext, getFilters());\n  return searchContext;\n};\nexport let buildSearchFiltersFromSearchState = function (activeSelectedFiltersMap) {\n  let activeFiltersMap = {\n    activeFilterMap: {},\n    activeFilters: []\n  }; // Build up filter map and array\n\n  buildSearchFiltersInt(activeFiltersMap, activeSelectedFiltersMap);\n  return activeFiltersMap;\n};\nexport let getFilterStringFromActiveFilterMap = function (searchFilterMap, searchFilterCategories) {\n  var searchParams = getFilters(false);\n  var displayString = '';\n\n  _.map(searchParams, function (value, property) {\n    var trueProperty = property.split(_dateFilterMarker)[0]; // If it's a valid filter\n\n    var index = _.findIndex(searchFilterCategories, function (o) {\n      return o.internalName === trueProperty;\n    }); // Get the filter name first\n\n\n    var filterName = '';\n\n    if (index > -1) {\n      filterName = searchFilterCategories[index].displayName;\n    } else if (!searchFilterCategories || searchFilterCategories && searchFilterCategories.length < 1) {\n      filterName = getCategoryDisplayName(property);\n    } else {\n      return '';\n    } // Get display name for all the filter values\n\n\n    var filterValues = '';\n\n    _.forEach(searchParams[property], function (filter) {\n      var filterValue = getBreadCrumbDisplayValue(searchFilterMap[property], filterPanelUtils.getRealFilterWithNoFilterType(filter), searchFilterMap[property]);\n      filterValues += filterValues === '' ? filterValue : ', ' + filterValue;\n    });\n\n    if (filterValues !== '') {\n      var individualFilterString = filterName + '=' + filterValues;\n      displayString += displayString === '' ? individualFilterString : ', ' + individualFilterString;\n    }\n  });\n\n  return displayString;\n};\nexport let convertFilterMapToSavedSearchFilterMap = function () {\n  let searchContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  //var searchContext = appCtxService.getCtx( 'search' );\n  var activeFilterMap = searchContext.activeFilterMap;\n  var activeFilters = searchContext.activeFilters;\n  var searchStringFilterMap = {};\n\n  if (activeFilterMap) {\n    _.forEach(activeFilterMap, function (value, key) {\n      var filters = [];\n\n      for (var indx = 0; indx < value.length; indx++) {\n        var filter = {}; // Saved search object only store SearchStringFilter types\n\n        filter.searchFilterType = 'SearchStringFilter';\n        filter.startNumericValue = 0;\n        filter.endNumericValue = 0;\n        filter.startDateValue = 0;\n        filter.endDateValue = 0; // Handle date range filters and numeric range filters\n\n        if (value[indx].searchFilterType === 'DateFilter' && !value[indx].stringValue) {\n          var dateParts1 = value[indx].startDateValue.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/);\n          var dateParts2 = value[indx].endDateValue.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/);\n\n          if (dateParts1 && dateParts2) {\n            var fromDate = new Date(dateParts1);\n            var toDate = new Date(dateParts2);\n            filter.stringValue = filterPanelUtils.getDateRangeString(fromDate, new Date(toDate));\n          } else {\n            continue;\n          }\n        } else if (value[indx].searchFilterType === 'NumericFilter') {\n          if (!value[indx].stringValue) {\n            filter.stringValue = filterPanelUtils.getNumericRangeString(value[indx].startNumericValue, value[indx].endNumericValue);\n          } else {\n            filter.stringValue = filterPanelUtils.INTERNAL_NUMERIC_FILTER.concat(value[indx].stringValue);\n          }\n        } else {\n          filter = processConvertFilterMapToSavedSearchFilterMap(value, indx, key, filter, activeFilters);\n        }\n\n        filters.push(filter);\n      }\n\n      searchStringFilterMap[key] = filters;\n    });\n  }\n\n  return searchStringFilterMap;\n};\n/**\n * processConvertFilterMapToSavedSearchFilterMap\n * @param {Object} value Value\n * @param {Integer} indx  The index\n * @param {Integer} key  Key\n * @param {Object} filter  The filter object\n * @param {ObjectArray} activeFilters The array of active filters\n * @returns {Object} filter\n */\n\nexport let processConvertFilterMapToSavedSearchFilterMap = function (value, indx, key, filter, activeFilters) {\n  // Currently NumericFilters are also being treated as String Filters\n  // verify this filter is numeric filter by checking against activeFilters data structure\n  var numericFilterIndex = _.findIndex(activeFilters, function (object) {\n    if (object.name === key && object.values) {\n      return _.startsWith(object.values[0], filterPanelUtils.INTERNAL_NUMERIC_FILTER) || _.startsWith(object.values[0], filterPanelUtils.INTERNAL_NUMERIC_RANGE);\n    }\n  });\n\n  if (numericFilterIndex > -1) {\n    filter.stringValue = filterPanelUtils.INTERNAL_NUMERIC_FILTER.concat(value[indx].stringValue);\n  } else {\n    filter.stringValue = value[indx].stringValue;\n  }\n\n  return filter;\n};\nexport let getFilterDisplayValue = function (values, value) {\n  var dispValue = '';\n  var filterValue = '';\n  var dArray = [];\n\n  if (_.startsWith(value, filterPanelUtils.INTERNAL_DATE_FILTER)) {\n    filterValue = value.replace(filterPanelUtils.INTERNAL_DATE_FILTER, '');\n    dArray = filterValue.split('_TO_');\n\n    if (dArray.length > 1) {\n      var startDate = new Date(dArray[0]);\n      var endDate = new Date(dArray[1]);\n      var dateRange = filterPanelUtils.getDateRangeDisplayString(startDate, endDate);\n      dispValue = dateRange.displayName;\n    }\n  } else if (_.startsWith(value, filterPanelUtils.INTERNAL_NUMERIC_RANGE)) {\n    filterValue = value.replace(filterPanelUtils.INTERNAL_NUMERIC_RANGE, '');\n    dArray = filterValue.split('_TO_');\n\n    if (dArray.length > 1) {\n      var numericRange = filterPanelUtils.getNumericRangeDisplayString(dArray[0], dArray[1]);\n      dispValue = numericRange.displayName;\n    }\n  } else {\n    var ind = _.findIndex(values, function (o) {\n      return o.stringValue === value;\n    });\n\n    if (ind > -1) {\n      if (_.endsWith(values[ind].stringValue, '$NONE')) {\n        dispValue = localTextBundle.noFilterValue;\n      } else {\n        dispValue = values[ind].stringDisplayValue;\n      }\n    }\n  }\n\n  return dispValue;\n};\nexport let getUserValue = function () {\n  let userName = appCtxService.getCtx('user').props.user_name.dbValue;\n  let userId = appCtxService.getCtx('user').props.userid.dbValue;\n  return userName + ' ( ' + userId + ' )';\n};\nexport const getDisplayNameForSpecialKeyWord = value => {\n  if (value === '$ME') {\n    return getUserValue();\n  }\n\n  if (value === '$TODAY') {\n    return getLocalTextBundle().searchFilterVariableToday;\n  }\n\n  if (value === '$THIS_WEEK') {\n    return getLocalTextBundle().searchFilterVariableThisWeek;\n  }\n\n  if (value === '$THIS_MONTH') {\n    return getLocalTextBundle().searchFilterVariableThisMonth;\n  }\n\n  if (value === '$MY_GROUP') {\n    return getLocalTextBundle().searchFilterVariableMyGroup;\n  }\n\n  return value;\n};\nexport let getSpecialDisplayName = function (value) {\n  if (value === '$ME') {\n    return getUserValue();\n  }\n\n  if (value === '$TODAY') {\n    return getLocalTextBundle().searchFilterVariableToday;\n  }\n\n  if (value === '$THIS_WEEK') {\n    return getLocalTextBundle().searchFilterVariableThisWeek;\n  }\n\n  if (value === '$THIS_MONTH') {\n    return getLocalTextBundle().searchFilterVariableThisMonth;\n  }\n\n  if (value === '$MY_GROUP') {\n    return getLocalTextBundle().searchFilterVariableMyGroup;\n  }\n\n  return '';\n};\nexport let getLocalTextBundle = function () {\n  return localTextBundle;\n};\nexport let getBreadCrumbDisplayValue = function (values, value, searchFilters) {\n  var dispValue = getSpecialDisplayName(value);\n\n  if (dispValue === '') {\n    if (_.startsWith(value, filterPanelUtils.INTERNAL_DATE_FILTER)) {\n      var startDate = filterPanelUtils.getDate(processDateStringOffset(values[0].startDateValue));\n      var endDate = filterPanelUtils.getDate(processDateStringOffset(values[0].endDateValue));\n      var dateRange = filterPanelUtils.getDateRangeDisplayString(startDate, endDate);\n      dispValue = dateRange.displayName;\n    } else if (_.startsWith(value, filterPanelUtils.INTERNAL_NUMERIC_RANGE)) {\n      var startRange = values[0].startNumericValue;\n      var endRange = values[0].endNumericValue;\n      var startEndRange = values[0].startEndRange;\n      var numericRange = filterPanelUtils.getNumericRangeDisplayString(startRange, endRange, startEndRange);\n      dispValue = numericRange.displayName;\n    } else {\n      var ind = _.findIndex(values, function (o) {\n        return o.stringValue === value;\n      });\n\n      if (ind > -1) {\n        // some \"$NONE\" stringValue actually has non-empty stringDisplayValue, so we don't want to display the default \"Unassigned\" in that case.\n        if (values[ind].stringDisplayValue) {\n          dispValue = values[ind].stringDisplayValue;\n        } else if (_.endsWith(value, '$NONE')) {\n          dispValue = localTextBundle.noFilterValue;\n        } else if (searchFilters) {\n          var theFilter = _.find(searchFilters, function (o) {\n            return o.stringValue === value;\n          });\n\n          if (theFilter && theFilter.stringDisplayValue) {\n            dispValue = theFilter.stringDisplayValue;\n          } else {\n            dispValue = value;\n          }\n        } else {\n          dispValue = value;\n        }\n      }\n    }\n  }\n\n  return dispValue;\n};\nexport let processDateStringOffset = function (dateString) {\n  if (dateString.length > 19) {\n    var offsetString = dateString.substring(19);\n\n    if (offsetString.length > 4 && offsetString.indexOf(':') === -1) {\n      var hour = offsetString.substring(0, offsetString.length - 2);\n      var min = offsetString.substring(offsetString.length - 2);\n      var newOffset = hour.concat(':', min);\n      dateString = dateString.replace(offsetString, newOffset);\n    }\n  }\n\n  return dateString;\n};\nexport let groupByCategory = function (params) {\n  return _.reduce(params, function (acc, nxt, key) {\n    var trueKey = key.split(_dateFilterMarker)[0];\n\n    if (trueKey !== key) {\n      _.forEach(nxt, function (aFilter) {\n        aFilter.startEndRange = key.substring(trueKey.length, key.length);\n      });\n    }\n\n    if (acc[trueKey]) {\n      acc[trueKey] = acc[trueKey].concat(nxt);\n    } else {\n      acc[trueKey] = nxt;\n    }\n\n    return acc;\n  }, {});\n};\nexport let setFilters = function (params) {\n  AwStateService.instance.go('.', {\n    filter: buildFilterString(params)\n  });\n};\nexport let addOrRemoveObjectFilter = function (newParams, category, filter, addRemoveOnly) {};\n\nlet removePrefilter = function (value) {\n  if (value && Array.isArray(value)) {\n    // remove prefix from prefilter\n    _.forEach(value, function (removePrefix, index, arr) {\n      if (removePrefix && !removePrefix.hasOwnProperty('property') && removePrefix.trim().length !== 0) {\n        arr[index] = arr[index].replace('AW_PreFilter_', '');\n      }\n    });\n  }\n};\n\nexport let addOrRemoveFilter = function (category, filter, addRemoveOnly, filterType) {};\nexport let getFilterExtension = function (filter) {\n  if (filter.startEndRange === '+1YEAR') {\n    return _dateFilterMarker + _dateFilterLevels[0];\n  }\n\n  if (filter.startEndRange === '+1MONTH') {\n    return _dateFilterMarker + _dateFilterLevels[1];\n  }\n\n  if (filter.startEndRange === '+7DAYS') {\n    return _dateFilterMarker + _dateFilterLevels[2];\n  }\n\n  if (filter.startEndRange === '+1DAY') {\n    return _dateFilterMarker + _dateFilterLevels[3];\n  }\n\n  return filter.startEndRange;\n};\nexport let doSearch = function (targetState, searchCriteria, filters) {\n  AwStateService.instance.go(targetState ? targetState : '.', {\n    filter: buildFilterString(filters),\n    searchCriteria: searchCriteria\n  });\n};\nexport let doSearchKeepFilter = function (targetState, searchCriteria, shapeSearchProviderActive, savedSearchUid) {\n  // If we are in Shape Search or Saved Search context we do not want to keep the filters related to\n  // either when we perform this search.\n  if (shapeSearchProviderActive === 'true' || savedSearchUid) {\n    AwStateService.instance.go(targetState ? targetState : '.', {\n      filter: buildFilterString(getFilters(false, undefined, undefined, undefined, true)),\n      searchCriteria: searchCriteria\n    });\n  } else {\n    AwStateService.instance.go(targetState ? targetState : '.', {\n      filter: buildFilterString(getFilters(false)),\n      searchCriteria: searchCriteria\n    });\n  }\n};\nexport let loadBreadcrumbClearTitle = function () {\n  return localeService.getLocalizedText('UIMessages', 'clearBreadCrumb');\n};\nexport let doShapeSearch = function (targetState, searchCriteria, filter) {\n  var ctx = appCtxService.getCtx('searchSearch');\n\n  if (ctx) {\n    delete ctx.savedSearchUid;\n    delete ctx.searchStringPrimary;\n\n    if (ctx.searchStringSecondary) {\n      delete ctx.searchStringSecondary;\n      eventBus.publish('search.clearSearchBox');\n    }\n\n    appCtxService.updateCtx('searchSearch', ctx);\n  }\n\n  var shapeSearchCtx = appCtxService.getCtx('shapeSearch');\n\n  if (!shapeSearchCtx) {\n    shapeSearchCtx = {};\n    appCtxService.registerCtx('shapeSearch', shapeSearchCtx);\n  }\n\n  var selectedCtx = appCtxService.getCtx('selected');\n\n  if (selectedCtx && selectedCtx.props && selectedCtx.props.awb0ArchetypeId && selectedCtx.props.awb0ArchetypeName) {\n    shapeSearchCtx.seedObjectItemId = selectedCtx.props.awb0ArchetypeId.uiValues[0];\n    shapeSearchCtx.seedObjectItemName = selectedCtx.props.awb0ArchetypeName.uiValues[0];\n  } else if (selectedCtx && selectedCtx.props) {\n    shapeSearchCtx.seedObjectItemId = selectedCtx.props.item_id.uiValues[0];\n    shapeSearchCtx.seedObjectItemName = selectedCtx.props.object_name.uiValues[0];\n  }\n\n  AwStateService.instance.go(targetState ? targetState : '.', {\n    filter: filter,\n    searchCriteria: searchCriteria\n  });\n  return shapeSearchCtx;\n};\nexport let loadBreadcrumbTitle = function (label, searchCriteria, totalResultCount, selectionModel) {\n  // If no label is provided return the loading message\n  if (!label || totalResultCount === undefined) {\n    return localeService.getLocalizedText('BaseMessages', 'LOADING_TEXT');\n  }\n\n  return AwPromiseService.instance.all({\n    label: typeof label === 'string' ? AwPromiseService.instance.when(label) : localeService.getLocalizedText(label.source, label.key),\n    selectionCountLabel: localeService.getLocalizedTextFromKey('XRTMessages.selectionCountLabel'),\n    noSearchResultsWithSearchBox: localeService.getLocalizedTextFromKey('UIMessages.noSearchResultsWithSearchBox'),\n    noSearchResults: localeService.getLocalizedTextFromKey('UIMessages.noSearchResults'),\n    resultsCountLabelWithSearchBox: localeService.getLocalizedTextFromKey('UIMessages.resultsCountLabelWithSearchBox'),\n    resultsCountLabel: localeService.getLocalizedTextFromKey('UIMessages.resultsCountLabel')\n  }).then(function (localizedText) {\n    // If no results return the no results message\n    if (totalResultCount === 0) {\n      if (searchCriteria) {\n        return localizedText.noSearchResults.format('', searchCriteria);\n      }\n\n      return localizedText.noSearchResults.format('', localizedText.label);\n    }\n\n    var resultsCountLabel;\n\n    if (searchCriteria) {\n      resultsCountLabel = localizedText.resultsCountLabel.format(totalResultCount, '', searchCriteria);\n    } else {\n      resultsCountLabel = localizedText.resultsCountLabel.format(totalResultCount, '', localizedText.label);\n    } // If not in multiselect mode return the result count message\n\n\n    if (!selectionModel || !selectionModel.multiSelectEnabled) {\n      return resultsCountLabel;\n    } // Otherwise return the selection count message\n\n\n    return localizedText.selectionCountLabel.format(selectionModel.getCurrentSelectedCount(), resultsCountLabel);\n  });\n};\nexport let isShapeSearchContext = function () {\n  let isShapeSearch = appCtxService.ctx.search && appCtxService.ctx.search.reqFilters;\n  isShapeSearch = isShapeSearch && appCtxService.ctx.search.reqFilters.ShapeSearchProvider && appCtxService.ctx.search.reqFilters.ShapeSearchProvider[0] === 'true';\n  return isShapeSearch;\n};\nexport let loadInContentBreadcrumbTitle = function (label, totalResultCount, selectionModel) {\n  // If no label is provided return the loading message\n  var totalFound = appCtxService.getCtx('search.totalFound');\n  var searchString = appCtxService.getCtx('search.criteria.searchString');\n  var searchInfoCtx = appCtxService.getCtx('searchInfo');\n  var ctxSearchSearch = appCtxService.ctx.searchSearch;\n\n  if (!label || totalFound === undefined) {\n    return localeService.getLocalizedText('BaseMessages', 'LOADING_TEXT');\n  }\n\n  return AwPromiseService.instance.all({\n    label: typeof label === 'string' ? AwPromiseService.instance.when(label) : localeService.getLocalizedText(label.source, label.key),\n    selectionCountLabel: localeService.getLocalizedTextFromKey('XRTMessages.selectionCountLabel'),\n    noSearchResultsWithInContentSearch: localeService.getLocalizedTextFromKey('UIMessages.noSearchResultsWithInContentSearch'),\n    thresholdExceeded: localeService.getLocalizedTextFromKey('UIMessages.thresholdExceeded'),\n    noSearchResultsWithoutInContentSearch: localeService.getLocalizedTextFromKey('UIMessages.noSearchResultsWithoutInContentSearch'),\n    noSearchResults: localeService.getLocalizedTextFromKey('UIMessages.noSearchResults'),\n    resultsCountLabel: localeService.getLocalizedTextFromKey('UIMessages.resultsCountLabel'),\n    shapesCountLabelPart1: localeService.getLocalizedTextFromKey('UIMessages.shapesCountLabelPart1'),\n    shapesCountLabelPart2: localeService.getLocalizedTextFromKey('UIMessages.shapesCountLabelPart2'),\n    oneShapeCountLabelPart1: localeService.getLocalizedTextFromKey('UIMessages.oneShapeCountLabelPart1'),\n    resultsCountLabelWithInContentSearch: localeService.getLocalizedTextFromKey('UIMessages.resultsCountLabelWithInContentSearch'),\n    resultsCountLabelWithoutInContentSearch: localeService.getLocalizedTextFromKey('UIMessages.resultsCountLabelWithoutInContentSearch')\n  }).then(function (localizedText) {\n    // If no results return the no results message\n    if (totalResultCount === 0) {\n      if (searchString) {\n        if (ctxSearchSearch && ctxSearchSearch.searchStringSecondary && searchString === ctxSearchSearch.searchStringPrimary + ' AND ' + ctxSearchSearch.searchStringSecondary) {\n          return localizedText.noSearchResultsWithInContentSearch.format(ctxSearchSearch.searchStringPrimary, ctxSearchSearch.searchStringSecondary);\n        }\n\n        if (searchInfoCtx && searchInfoCtx.thresholdExceeded === 'true') {\n          searchInfoCtx.noResultsFound = localizedText.thresholdExceeded.format(searchString);\n          return '';\n        }\n\n        return localizedText.noSearchResultsWithoutInContentSearch.format(searchString);\n      }\n\n      return localizedText.noSearchResults.format('', localizedText.label);\n    }\n\n    var resultsCountLabel;\n\n    if (searchString) {\n      resultsCountLabel = processLoadInContentBreadcrumbTitle(ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel);\n    } else {\n      resultsCountLabel = localizedText.resultsCountLabel.format(totalResultCount, '', localizedText.label);\n    } // If not in multiselect mode return the result count message\n\n\n    if (!selectionModel || !selectionModel.multiSelectEnabled) {\n      return resultsCountLabel;\n    } // Otherwise return the selection count message\n\n\n    return localizedText.selectionCountLabel.format(selectionModel.getCurrentSelectedCount(), resultsCountLabel);\n  });\n};\n/**\n * Process Localized text search results.\n * @function processLoadInContentBreadcrumbTitleShape\n * @param {Object} ctxSearchSearch searchString context object\n * @param {Object} searchString searchString context object\n * @param {Object} localizedText The localized text\n * @param {Object} totalResultCount Total Result count\n * @param {Object} resultsCountLabel Results Count Label\n * @return {Object} resultsCountLabel\n */\n\nexport let processLoadInContentBreadcrumbTitleShape = function (ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel) {\n  var shapeSearchCtx = appCtxService.getCtx('shapeSearch');\n  resultsCountLabel = {};\n  resultsCountLabel.seedObjectLink = shapeSearchCtx.seedObjectItemId + '/' + shapeSearchCtx.seedObjectItemName;\n\n  if (ctxSearchSearch.searchStringSecondary) {\n    if (totalResultCount > 1) {\n      resultsCountLabel.part1 = localizedText.shapesCountLabelPart1.format(totalResultCount);\n      resultsCountLabel.part2 = localizedText.shapesCountLabelPart2.format(ctxSearchSearch.searchStringSecondary);\n    } else {\n      resultsCountLabel.part1 = localizedText.oneShapeCountLabelPart1.format(totalResultCount);\n      resultsCountLabel.part2 = localizedText.shapesCountLabelPart2.format(ctxSearchSearch.searchStringSecondary);\n    }\n  } else {\n    if (totalResultCount > 1) {\n      resultsCountLabel.part1 = localizedText.shapesCountLabelPart1.format(totalResultCount);\n    } else {\n      resultsCountLabel.part1 = localizedText.oneShapeCountLabelPart1.format(totalResultCount);\n    }\n  }\n\n  return resultsCountLabel;\n};\n/**\n * Process Localized text search results.\n * @function processLoadInContentBreadcrumbTitle\n * @param {Object} ctxSearchSearch searchString context object\n * @param {String} searchString searchString\n * @param {Object} localizedText The localized text\n * @param {Object} totalResultCount Total Result count\n * @param {Object} resultsCountLabel Results Count Label\n * @return {Object} resultsCountLabel\n */\n\nexport let processLoadInContentBreadcrumbTitle = function (ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel) {\n  if (isShapeSearchContext()) {\n    resultsCountLabel = processLoadInContentBreadcrumbTitleShape(ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel);\n  } else if (ctxSearchSearch && ctxSearchSearch.searchStringSecondary && searchString === ctxSearchSearch.searchStringPrimary + ' AND ' + ctxSearchSearch.searchStringSecondary) {\n    // define a variable so that the line length does not exceed 207 max-len...\n    let labelText = localizedText.resultsCountLabelWithInContentSearch;\n    resultsCountLabel = labelText.format(totalResultCount, ctxSearchSearch.searchStringPrimary, ctxSearchSearch.searchStringSecondary);\n  } else {\n    resultsCountLabel = localizedText.resultsCountLabelWithoutInContentSearch.format(totalResultCount, searchString);\n  }\n\n  return resultsCountLabel;\n};\nexport let setFiltersFromCrumbs = function (crumbs, indexBreadCrumb) {\n  var newCrumbs = _.dropRightWhile(crumbs, function (c) {\n    return c.indexBreadCrumb > indexBreadCrumb;\n  });\n\n  var filterMap = {};\n\n  _.forEach(newCrumbs, function (c) {\n    if (filterMap[c.internalName]) {\n      filterMap[c.internalName].push(c.internalValue);\n    } else {\n      filterMap[c.internalName] = [c.internalValue];\n    }\n  });\n\n  var searchContext = appCtxService.getCtx('search');\n  var reqFilters = searchContext.reqFilters;\n\n  if (reqFilters) {\n    _.forEach(reqFilters, function (value, key) {\n      if (filterMap[key]) {\n        filterMap[key].push(value);\n      } else {\n        filterMap[key] = [value];\n      }\n    });\n  }\n\n  setFilters(filterMap);\n};\nexport let displayNoBreadCrumbProvider = function (breadcrumbConfig, label, totalResultCount, searchCriteria) {\n  var provider = {};\n  AwPromiseService.instance.all({\n    noCriteriaSpecifiedMessage: localeService.getLocalizedText(breadcrumbConfig.noCriteriaSpecifiedMessage.source, breadcrumbConfig.noCriteriaSpecifiedMessage.key),\n    noResultsFoundMessage: localeService.getLocalizedText(breadcrumbConfig.noResultsFoundMessage.source, breadcrumbConfig.noResultsFoundMessage.key),\n    resultsFoundMessage: localeService.getLocalizedText(breadcrumbConfig.resultsFoundMessage.source, breadcrumbConfig.resultsFoundMessage.key)\n  }).then(function (localizedText) {\n    if (!searchCriteria) {\n      provider.title = localizedText.noCriteriaSpecifiedMessage.format();\n    } else if (totalResultCount === undefined || totalResultCount === 0) {\n      provider.title = localizedText.noResultsFoundMessage.format(label);\n    } else {\n      provider.title = localizedText.resultsFoundMessage.format(label);\n    }\n  });\n  return provider;\n};\nexport let getBreadcrumbProvider = function () {\n  return {\n    crumbs: [],\n    clear: function () {\n      // Publish to AW analytics\n      var sanEvent = {\n        sanAnalyticsType: 'Commands',\n        sanCommandId: 'clearSearchFilter',\n        sanCommandTitle: 'Clear All Search Filters'\n      };\n      analyticsSvc.logCommands(sanEvent);\n      var searchContext = appCtxService.getCtx('search');\n      var reqFilters = searchContext.reqFilters;\n\n      if (reqFilters) {\n        setFilters(reqFilters);\n      } else {\n        setFilters([]);\n      }\n    },\n    onRemove: function (crumb) {\n      // Publish to analytics\n      var sanEvent = {\n        sanAnalyticsType: 'Commands',\n        sanCommandId: 'removeSearchFilterCrumb',\n        sanCommandTitle: 'Remove Crumb Filter',\n        sanCmdLocation: 'primarySearchPanel'\n      };\n      analyticsSvc.logCommands(sanEvent);\n    },\n    onSelect: function (crumb) {\n      // Publish to analytics\n      var sanEvent = {\n        sanAnalyticsType: 'Commands',\n        sanCommandId: 'clickSearchFilterCrumb',\n        sanCommandTitle: 'Click Search Filter Crumb',\n        sanCmdLocation: 'primarySearchPanel'\n      };\n      analyticsSvc.logCommands(sanEvent);\n      setFiltersFromCrumbs(this.crumbs, crumb.indexBreadCrumb);\n    }\n  };\n};\nexport let setBreadcrumbValue = function (newBreadcrumb) {\n  if (newBreadcrumb.internalValue && newBreadcrumb.internalValue !== '' && newBreadcrumb.internalValue === newBreadcrumb.value) {\n    var searchContext = appCtxService.getCtx('searchSearch');\n\n    if (searchContext && searchContext.originalInputCategories) {\n      var categoryId = _.findIndex(searchContext.originalInputCategories, function (aCat) {\n        return newBreadcrumb.internalName === aCat.internalName;\n      });\n\n      if (searchContext.originalInputCategories[categoryId] && searchContext.originalInputCategories[categoryId].filterValues) {\n        if (searchContext.originalInputCategories[categoryId].filterValues.parentnodes) {\n          var foundFilter = _.findIndex(searchContext.originalInputCategories[categoryId].filterValues.parentnodes, function (aFilter) {\n            return newBreadcrumb.internalValue === aFilter.stringValue;\n          });\n\n          newBreadcrumb.value = searchContext.originalInputCategories[categoryId].filterValues.parentnodes[foundFilter].stringDisplayValue;\n        }\n      }\n    }\n  }\n};\nexport let setBreadcrumbDisplayName = function (newBreadcrumb, categoriesDisplayed) {\n  var foundCategory = _.findIndex(categoriesDisplayed, function (aCategory) {\n    return aCategory === newBreadcrumb.displayName;\n  });\n\n  if (foundCategory < 0) {\n    categoriesDisplayed.push(newBreadcrumb.displayName);\n  } else {\n    newBreadcrumb.displayName = '';\n  }\n};\nexport let setBreadcrumbProviderTitle = function (provider, label, totalResultCount, selectionModel, secondarySearchEnabled) {\n  loadBreadcrumbClearTitle().then(function (result) {\n    provider.clearBreadCrumb = result;\n  }); // Load and set the title async\n\n  if (secondarySearchEnabled) {\n    loadInContentBreadcrumbTitle(label, totalResultCount, selectionModel).then(function (result) {\n      provider.title = result;\n    });\n  } else {\n    loadBreadcrumbTitle(label, totalResultCount, selectionModel).then(function (result) {\n      provider.title = result;\n    });\n  }\n};\nexport let buildBreadcrumbProvider = function (breadcrumbConfig, label, totalResultCount, selectionModel, searchFilterCategories, searchFilterMap, secondarySearchEnabled, searchCriteria) {\n  if (breadcrumbConfig && breadcrumbConfig.noBreadCrumb === 'true') {\n    return displayNoBreadCrumbProvider(breadcrumbConfig, label, totalResultCount, searchCriteria);\n  }\n\n  var provider = getBreadcrumbProvider(); // For each of the current search params\n\n  var searchParams = getFilters(false, true, true, true);\n  var categoriesDisplayed = [];\n  var indexBreadCrumb = -1;\n\n  _.forEach(searchParams, function (value) {\n    removePrefilter(value);\n  });\n\n  _.map(searchParams, function (value, property) {\n    // If it's a valid filter\n    var index = _.findIndex(searchFilterCategories, function (o) {\n      return o.internalName === property;\n    });\n\n    var newBreadcrumb = {};\n\n    _.forEach(searchParams[property], function (filter) {\n      var origProperty = property;\n      var origFilter = filterPanelUtils.getRealFilterWithNoFilterType(filter);\n      var filterType = filterPanelUtils.getFilterTypeFromFilterValue(filter);\n\n      if (filter.hasOwnProperty('property')) {\n        origProperty = filter.property;\n        origFilter = filter.filter;\n      }\n\n      if (index > -1) {\n        // Make a breadcrumb for it\n        newBreadcrumb = {\n          displayName: searchFilterCategories[index].displayName + ':',\n          displayNameHidden: searchFilterCategories[index].displayName + ':',\n          internalName: origProperty,\n          internalValue: origFilter,\n          filterType: filterType\n        };\n      } else if (!searchFilterCategories || searchFilterCategories && searchFilterCategories.length < 1) {\n        // Need still display the crumbs\n        var categoryDisplayName = getCategoryDisplayName(property);\n\n        if (!categoryDisplayName) {\n          return provider;\n        }\n\n        newBreadcrumb = {\n          displayName: categoryDisplayName + ':',\n          displayNameHidden: categoryDisplayName + ':',\n          internalName: property,\n          internalValue: origFilter,\n          filterType: filterType\n        };\n      } else {\n        return provider;\n      }\n\n      provider = processBreadCrumbsSearchFilters(provider, indexBreadCrumb, categoriesDisplayed, newBreadcrumb, searchFilterMap, origProperty, origFilter);\n    });\n  });\n\n  setBreadcrumbProviderTitle(provider, label, totalResultCount, selectionModel, secondarySearchEnabled);\n  return provider;\n};\n/**\n * Process Breadcrumbs with Search Filters.\n * @function processBreadCrumbsSearchFilters\n * @param {Object} provider The object newBreadCrumb\n * @param {Object} indexBreadCrumb The object newBreadCrumb\n * @param {Object} categoriesDisplayed The object newBreadCrumb\n * @param {Object} newBreadcrumb The object newBreadCrumb\n * @param {Object} searchFilterMap The search filter map\n * @param {Object} origProperty Original Property\n * @param {Object} origFilter Original filter\n * @return {Object} BreadCrumd Provider\n */\n\nexport let processBreadCrumbsSearchFilters = function (provider, indexBreadCrumb, categoriesDisplayed, newBreadcrumb, searchFilterMap, origProperty, origFilter) {\n  if (searchFilterMap) {\n    newBreadcrumb.value = getBreadCrumbDisplayValue(searchFilterMap[origProperty], origFilter);\n  }\n\n  if (newBreadcrumb.value && newBreadcrumb.value !== '') {\n    setBreadcrumbValue(newBreadcrumb);\n    setBreadcrumbDisplayName(newBreadcrumb, categoriesDisplayed);\n    ++indexBreadCrumb;\n    newBreadcrumb.indexBreadCrumb = indexBreadCrumb;\n    provider.crumbs.push(newBreadcrumb);\n  }\n\n  if (newBreadcrumb.internalName === OWNING_SITE) {\n    newBreadcrumb.filterType = 'RadioFilter';\n  }\n  /* the OwningSite.owning_site is a property which server side filters on to return local or remote objects.\n  This property does not exists in DB. It's a hardcoded value that server side expects and returns.*/\n\n\n  if (newBreadcrumb.internalName === OWNING_SITE && newBreadcrumb.internalValue === _local) {\n    newBreadcrumb.showRemoveButton = false;\n  } else {\n    newBreadcrumb.showRemoveButton = true;\n  }\n\n  return provider;\n}; // Return display name for a category\n\nexport let getCategoryDisplayName = function (property) {\n  var categoryDisplayName = ''; // first check if it can be found in the prior search.\n\n  var context = appCtxService.getCtx('searchSearch');\n\n  if (context && context.originalInputCategories && context.originalInputCategories.length > 0) {\n    var index = _.findIndex(context.originalInputCategories, function (o) {\n      return o.internalName === property;\n    });\n\n    if (index > -1) {\n      categoryDisplayName = context.originalInputCategories[index].displayName;\n      return categoryDisplayName;\n    }\n  }\n\n  var aTypeProperty = property.split('.');\n\n  if (aTypeProperty && aTypeProperty.length === 2) {\n    var type = cmm.getType(aTypeProperty[0]);\n\n    if (!type) {\n      // Category.category\n      var catName = aTypeProperty[1];\n      categoryDisplayName = catName[0].toUpperCase() + catName.slice(1).toLowerCase();\n    } else {\n      var propName = filterPanelUtils.getPropertyFromFilter(aTypeProperty[1]);\n      var pd = type.propertyDescriptorsMap[propName];\n\n      if (!pd) {\n        categoryDisplayName = aTypeProperty[1];\n      } else {\n        categoryDisplayName = pd.displayName;\n      }\n    }\n  }\n\n  return categoryDisplayName;\n};\nexport let loadConfiguration = function () {\n  localeService.getLocalizedTextFromKey('UIMessages.noFilterValue', true).then(result => localTextBundle.noFilterValue = result);\n  localeService.getLocalizedTextFromKey('SearchMessages.searchFilterVariableMyGroup', true).then(result => localTextBundle.searchFilterVariableMyGroup = result);\n  localeService.getLocalizedTextFromKey('SearchMessages.searchFilterVariableThisMonth', true).then(result => localTextBundle.searchFilterVariableThisMonth = result);\n  localeService.getLocalizedTextFromKey('SearchMessages.searchFilterVariableThisWeek', true).then(result => localTextBundle.searchFilterVariableThisWeek = result);\n  localeService.getLocalizedTextFromKey('dateTimeServiceMessages.currentText', true).then(result => localTextBundle.searchFilterVariableToday = result);\n};\nloadConfiguration();\nconst awSearchFilterService = {\n  _dateFilterMarker,\n  _dateFilterLevels,\n  _filterSeparator,\n  _filterValueSeparator,\n  chooseFilterSeparator,\n  buildFilterString,\n  isHierarchicalChildFilter,\n  parseHierarchicalChildFilters,\n  getFilters,\n  checkIfObjectFilterType,\n  getSortedFilterMap,\n  buildSearchFiltersInt,\n  buildSearchFilters,\n  getFilterStringFromActiveFilterMap,\n  convertFilterMapToSavedSearchFilterMap,\n  getFilterDisplayValue,\n  getSpecialDisplayName,\n  getLocalTextBundle,\n  getBreadCrumbDisplayValue,\n  processDateStringOffset,\n  groupByCategory,\n  setFilters,\n  addOrRemoveObjectFilter,\n  addOrRemoveFilter,\n  getFilterExtension,\n  doSearch,\n  doSearchKeepFilter,\n  isShapeSearchContext,\n  loadBreadcrumbClearTitle,\n  doShapeSearch,\n  loadBreadcrumbTitle,\n  loadInContentBreadcrumbTitle,\n  setFiltersFromCrumbs,\n  displayNoBreadCrumbProvider,\n  getBreadcrumbProvider,\n  setBreadcrumbValue,\n  setBreadcrumbDisplayName,\n  setBreadcrumbProviderTitle,\n  buildBreadcrumbProvider,\n  getCategoryDisplayName,\n  loadConfiguration,\n  processLoadInContentBreadcrumbTitleShape,\n  processLoadInContentBreadcrumbTitle,\n  processConvertFilterMapToSavedSearchFilterMap,\n  processBreadCrumbsSearchFilters,\n  buildSearchFiltersFromSearchState,\n  getFilterMapWithPrefilters,\n  getDisplayNameForSpecialKeyWord,\n  getUserValue,\n  sortFilterMapKeys,\n  processFilterValues,\n  removeDependentDateFilters,\n  getPendingFiltersMap,\n  clearAllSelectedFiltersAndRanges,\n  clearNumericRangeInfoFromCategory,\n  clearDateRangeInfoFromCategory,\n  removeDependentClassificationFilters\n};\nexport default awSearchFilterService;","map":{"version":3,"names":["AwStateService","AwPromiseService","localeService","appCtxService","filterPanelUtils","cdm","_","analyticsSvc","cmm","eventBus","localTextBundle","_local","OWNING_SITE","_dateFilterMarker","_dateFilterLevels","_filterSeparator","_filterSeparatorOption1","_filterSeparatorOption2","_filterValueSeparator","ctx","preferences","AW_FacetValue_Separator","removeSelectedFiltersFromCategory","category","filterValues","length","filterIndex","selected","dbValue","value","clearNumericRangeInfoFromCategory","numericRangeString","numericrange","clearDateRangeInfoFromCategory","dateRangeString","daterange","endDate","startDate","clearAllSelectedFiltersAndRanges","categories","activeFilters","positivePendingFilters","categoriesToRemoveSelectionsAndRangesFrom","Set","activeFilterIndex","categoryName","name","dateMarkerIndex","indexOf","substring","add","positivePendingFilterIndex","categoryIndex","internalName","has","eachCategory","type","getOnlyFilterValuesFromActiveFilterMap","activeFilterMapValue","values","index","searchFilterType","startDateValue","includes","BEGINNING_OF_TIME","push","INTERNAL_DATE_FILTER","endDateValue","ENDING_OF_TIME","stringValue","startEndRange","INTERNAL_NUMERIC_FILTER","startNumericValue","endNumericValue","INTERNAL_NUMERIC_RANGE","sort","getPendingFiltersMap","selectedFiltersMap","activeFilterMap","positivePendingFilterMap","negativePendingFilterMap","orderedSelectedFiltersMap","Object","keys","reduce","obj","key","orderedActiveFiltersMap","orderedSelectedFiltersMapKey","orderedSelectedFiltersMapValue","entries","activeFiltersWithJustFilterValues","positivePendingFiltersWithJustValues","difference","negativePendingFiltersWithJustValues","orderedActiveFiltersMapKey","orderedActiveFiltersMapValue","removeDependentDateFilters","searchFilterMap","searchFilterMapWithNonRedundantDateCategories","cloneDeep","mapWithKeyAsCategoryNameAndValueAsLevelsOfDate","substr","indexOfYear","catName","existingLevels","minLevel","dateLevelOne","dateLevelTwo","dateLevelThree","dateLevelFour","isMissingSomeDateLevel","index2","removeDependentClassificationFilters","filterValue","split","level","parseInt","currentLevel","toString","chooseFilterSeparator","filters","conflictFound","forEach","sortFilterMapKeys","sortedFilterMap","processFilterValues","filterVals","eachValue","getDisplayNameForSpecialKeyWord","buildFilterString","map","join","isHierarchicalChildFilter","filterString","isChildFilter","nodes","HIERARCHICAL_FACET_SEPARATOR","isNaN","parseHierarchicalChildFilters","keepIdentifier","i","j","INTERNAL_OBJECT_FILTER","getFilters","groupByCategory","checkHierarchy","keepHierarchyIdentifier","isShapeOrSavedSearch","filterMap","instance","params","filter","filterVal","separatorIndex","search","slice","valuePart","filterPair","realFilter","getRealFilterWithNoFilterType","checkIfObjectFilterType","getSortedFilterMap","getFilterMapWithPrefilters","filterCategoryName","isObjectFilterType","responseFilterMap","getCtx","acc","nxt","trueKey","nxtValue","decoratedNxt","property","concat","buildSearchFiltersInt","searchContext","filterType","v1","startsWith","getDateRangeFilter","getNumericRangeFilter","numericValue","parseFloat","buildSearchFilters","context","buildSearchFiltersFromSearchState","activeSelectedFiltersMap","activeFiltersMap","getFilterStringFromActiveFilterMap","searchFilterCategories","searchParams","displayString","trueProperty","findIndex","o","filterName","displayName","getCategoryDisplayName","getBreadCrumbDisplayValue","individualFilterString","convertFilterMapToSavedSearchFilterMap","searchStringFilterMap","indx","dateParts1","match","dateParts2","fromDate","Date","toDate","getDateRangeString","getNumericRangeString","processConvertFilterMapToSavedSearchFilterMap","numericFilterIndex","object","getFilterDisplayValue","dispValue","dArray","replace","dateRange","getDateRangeDisplayString","numericRange","getNumericRangeDisplayString","ind","endsWith","noFilterValue","stringDisplayValue","getUserValue","userName","props","user_name","userId","userid","getLocalTextBundle","searchFilterVariableToday","searchFilterVariableThisWeek","searchFilterVariableThisMonth","searchFilterVariableMyGroup","getSpecialDisplayName","searchFilters","getDate","processDateStringOffset","startRange","endRange","theFilter","find","dateString","offsetString","hour","min","newOffset","aFilter","setFilters","go","addOrRemoveObjectFilter","newParams","addRemoveOnly","removePrefilter","Array","isArray","removePrefix","arr","hasOwnProperty","trim","addOrRemoveFilter","getFilterExtension","doSearch","targetState","searchCriteria","doSearchKeepFilter","shapeSearchProviderActive","savedSearchUid","undefined","loadBreadcrumbClearTitle","getLocalizedText","doShapeSearch","searchStringPrimary","searchStringSecondary","publish","updateCtx","shapeSearchCtx","registerCtx","selectedCtx","awb0ArchetypeId","awb0ArchetypeName","seedObjectItemId","uiValues","seedObjectItemName","item_id","object_name","loadBreadcrumbTitle","label","totalResultCount","selectionModel","all","when","source","selectionCountLabel","getLocalizedTextFromKey","noSearchResultsWithSearchBox","noSearchResults","resultsCountLabelWithSearchBox","resultsCountLabel","then","localizedText","format","multiSelectEnabled","getCurrentSelectedCount","isShapeSearchContext","isShapeSearch","reqFilters","ShapeSearchProvider","loadInContentBreadcrumbTitle","totalFound","searchString","searchInfoCtx","ctxSearchSearch","searchSearch","noSearchResultsWithInContentSearch","thresholdExceeded","noSearchResultsWithoutInContentSearch","shapesCountLabelPart1","shapesCountLabelPart2","oneShapeCountLabelPart1","resultsCountLabelWithInContentSearch","resultsCountLabelWithoutInContentSearch","noResultsFound","processLoadInContentBreadcrumbTitle","processLoadInContentBreadcrumbTitleShape","seedObjectLink","part1","part2","labelText","setFiltersFromCrumbs","crumbs","indexBreadCrumb","newCrumbs","dropRightWhile","c","internalValue","displayNoBreadCrumbProvider","breadcrumbConfig","provider","noCriteriaSpecifiedMessage","noResultsFoundMessage","resultsFoundMessage","title","getBreadcrumbProvider","clear","sanEvent","sanAnalyticsType","sanCommandId","sanCommandTitle","logCommands","onRemove","crumb","sanCmdLocation","onSelect","setBreadcrumbValue","newBreadcrumb","originalInputCategories","categoryId","aCat","parentnodes","foundFilter","setBreadcrumbDisplayName","categoriesDisplayed","foundCategory","aCategory","setBreadcrumbProviderTitle","secondarySearchEnabled","result","clearBreadCrumb","buildBreadcrumbProvider","noBreadCrumb","origProperty","origFilter","getFilterTypeFromFilterValue","displayNameHidden","categoryDisplayName","processBreadCrumbsSearchFilters","showRemoveButton","aTypeProperty","getType","toUpperCase","toLowerCase","propName","getPropertyFromFilter","pd","propertyDescriptorsMap","loadConfiguration","awSearchFilterService"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/searchcore/src/js/aw.searchFilter.service.js"],"sourcesContent":["/* eslint-disable max-lines */\n// Copyright (c) 2020 Siemens\n\n/**\n * Note: This module does not return an API object. The API is only available when the service defined this module is\n * injected by AngularJS.\n *\n * @module js/aw.searchFilter.service\n * @requires js/filterPanelUtils\n */\nimport AwStateService from 'js/awStateService';\nimport AwPromiseService from 'js/awPromiseService';\nimport localeService from 'js/localeService';\nimport appCtxService from 'js/appCtxService';\nimport filterPanelUtils from 'js/filterPanelUtils';\nimport cdm from 'soa/kernel/clientDataModel';\nimport _ from 'lodash';\nimport analyticsSvc from 'js/analyticsService';\nimport cmm from 'soa/kernel/clientMetaModel';\nimport eventBus from 'js/eventBus';\n\nvar localTextBundle = {};\nvar _local = 'local';\nvar OWNING_SITE = 'OwningSite.owning_site';\n\nexport let _dateFilterMarker = '_0Z0_';\n\nexport let _dateFilterLevels = [ 'year', 'year_month', 'week', 'year_month_day' ];\n\nexport let _filterSeparator = '~';\n\nconst _filterSeparatorOption1 = '~';\n\nconst _filterSeparatorOption2 = '##';\n\nexport let _filterValueSeparator = appCtxService.ctx.preferences && appCtxService.ctx.preferences.AW_FacetValue_Separator && appCtxService.ctx.preferences.AW_FacetValue_Separator[ 0 ] ?\n    appCtxService.ctx.preferences.AW_FacetValue_Separator[ 0 ] : '^';\n\nconst removeSelectedFiltersFromCategory = ( category ) => {\n    if( category && category.filterValues && category.filterValues.length > 0 ) {\n        for( let filterIndex = 0; filterIndex < category.filterValues.length; filterIndex++ ) {\n            category.filterValues[ filterIndex ].selected.dbValue = false;\n            category.filterValues[ filterIndex ].selected.value = false;\n        }\n    }\n    return category;\n};\n\nexport let clearNumericRangeInfoFromCategory = ( category ) => {\n    if( category ) {\n        delete category.numericRangeString;\n        delete category.numericrange;\n    }\n    return category;\n};\n\nexport let clearDateRangeInfoFromCategory = ( category ) => {\n    if( category ) {\n        delete category.dateRangeString;\n        category.daterange.endDate.value = -62135579040000;\n        category.daterange.endDate.dbValue = -62135579040000;\n        category.daterange.startDate.value = -62135579040000;\n        category.daterange.startDate.dbValue = -62135579040000;\n    }\n    return category;\n};\n\nexport let clearAllSelectedFiltersAndRanges = ( categories, activeFilters, positivePendingFilters ) => {\n    if( categories && categories.length > 0 && activeFilters && activeFilters.length > 0 ) {\n        let categoriesToRemoveSelectionsAndRangesFrom = new Set();\n        for( let activeFilterIndex = 0; activeFilterIndex < activeFilters.length; activeFilterIndex++ ) {\n            let categoryName = activeFilters[ activeFilterIndex ].name;\n            let dateMarkerIndex = categoryName && categoryName.length > 0 ? categoryName.indexOf( _dateFilterMarker ) : -1;\n            categoryName = categoryName && dateMarkerIndex > -1 ? categoryName.substring( 0, dateMarkerIndex ) : categoryName;\n            if( categoryName && categoryName.length > 0 ) {\n                categoriesToRemoveSelectionsAndRangesFrom.add( categoryName );\n            }\n        }\n        if( positivePendingFilters && positivePendingFilters.length > 0 ) {\n            for( let positivePendingFilterIndex = 0; positivePendingFilterIndex < positivePendingFilters.length; positivePendingFilterIndex++ ) {\n                let categoryName = positivePendingFilters[ positivePendingFilterIndex ].name;\n                let dateMarkerIndex = categoryName.indexOf( _dateFilterMarker );\n                categoryName = categoryName && dateMarkerIndex > -1 ? categoryName.substring( 0, dateMarkerIndex ) : categoryName;\n                if( categoryName && categoryName.length > 0 ) {\n                    categoriesToRemoveSelectionsAndRangesFrom.add( categoryName );\n                }\n            }\n        }\n        for( let categoryIndex = 0; categoryIndex < categories.length; categoryIndex++ ) {\n            let categoryName = categories[ categoryIndex ].internalName;\n            if( categoryName && categoriesToRemoveSelectionsAndRangesFrom.has( categoryName ) ) {\n                let eachCategory = categories[ categoryIndex ];\n                eachCategory = removeSelectedFiltersFromCategory( eachCategory );\n                switch ( eachCategory.type ) {\n                    case 'DateFilter':\n                        eachCategory = clearDateRangeInfoFromCategory( eachCategory );\n                        break;\n                    case 'NumericFilter':\n                        eachCategory = clearNumericRangeInfoFromCategory( eachCategory );\n                        break;\n                    default:\n                        break;\n                }\n                categories[ categoryIndex ] = eachCategory;\n            }\n        }\n    }\n    return categories;\n};\n\nconst getOnlyFilterValuesFromActiveFilterMap = ( activeFilterMapValue ) => {\n    let values = [];\n    if( activeFilterMapValue && activeFilterMapValue.length > 0 ) {\n        for( let index = 0; index < activeFilterMapValue.length; index++ ) {\n            switch ( activeFilterMapValue[ index ].searchFilterType ) {\n                case 'DateFilter': {\n                    if( activeFilterMapValue[ index ].startDateValue.includes( filterPanelUtils.BEGINNING_OF_TIME ) ) {\n                        values.push( filterPanelUtils.INTERNAL_DATE_FILTER + '*' + '_TO_' + activeFilterMapValue[ index ].endDateValue );\n                    } else if( activeFilterMapValue[ index ].startDateValue.includes( filterPanelUtils.ENDING_OF_TIME ) ) {\n                        values.push( filterPanelUtils.INTERNAL_DATE_FILTER + activeFilterMapValue[ index ].startDateValue + '_TO_' + '*' );\n                    } else {\n                        values.push( filterPanelUtils.INTERNAL_DATE_FILTER + activeFilterMapValue[ index ].startDateValue + '_TO_' + activeFilterMapValue[ index ].endDateValue );\n                    }\n                    break;\n                }\n                case 'NumericFilter': {\n                    if( activeFilterMapValue[ index ].stringValue && activeFilterMapValue[ index ].stringValue.length > 0 &&\n                        activeFilterMapValue[ index ].startEndRange !== 'NumericRange' &&\n                        activeFilterMapValue[ index ].startEndRange !== 'NumericRangeBlankStart' &&\n                        activeFilterMapValue[ index ].startEndRange !== 'NumericRangeBlankEnd' ) {\n                        values.push( filterPanelUtils.INTERNAL_NUMERIC_FILTER + activeFilterMapValue[ index ].stringValue );\n                    } else {\n                        if( activeFilterMapValue[ index ].startNumericValue > 0 && activeFilterMapValue[ index ].endNumericValue > 0 ) {\n                            values.push( filterPanelUtils.INTERNAL_NUMERIC_RANGE + activeFilterMapValue[ index ].startNumericValue + '_TO_' + activeFilterMapValue[ index ].endNumericValue );\n                        } else if( activeFilterMapValue[ index ].startNumericValue > 0 ) {\n                            values.push( filterPanelUtils.INTERNAL_NUMERIC_RANGE + activeFilterMapValue[ index ].startNumericValue + '_TO_' );\n                        } else {\n                            values.push( filterPanelUtils.INTERNAL_NUMERIC_RANGE + '_TO_' + activeFilterMapValue[ index ].endNumericValue );\n                        }\n                    }\n                    break;\n                }\n                case 'RadioFilter':\n                case 'StringFilter':\n                    values.push( activeFilterMapValue[ index ].stringValue );\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    return values.sort();\n};\n\nexport let getPendingFiltersMap = ( selectedFiltersMap, activeFilterMap ) => {\n    let positivePendingFilterMap = {};\n    let negativePendingFilterMap = {};\n    const orderedSelectedFiltersMap = Object.keys( selectedFiltersMap ).sort().reduce(\n        ( obj, key ) => {\n            obj[ key ] = selectedFiltersMap[ key ];\n            return obj;\n        }, {}\n    );\n    const orderedActiveFiltersMap = Object.keys( activeFilterMap ).sort().reduce(\n        ( obj, key ) => {\n            obj[ key ] = activeFilterMap[ key ];\n            return obj;\n        }, {}\n    );\n    for( const [ orderedSelectedFiltersMapKey, orderedSelectedFiltersMapValue ] of Object.entries( orderedSelectedFiltersMap ) ) {\n        if( !orderedActiveFiltersMap[ orderedSelectedFiltersMapKey ] ) {\n            positivePendingFilterMap[ orderedSelectedFiltersMapKey ] = orderedSelectedFiltersMap[ orderedSelectedFiltersMapKey ];\n        } else if( orderedActiveFiltersMap[ orderedSelectedFiltersMapKey ] ) {\n            let activeFiltersWithJustFilterValues = getOnlyFilterValuesFromActiveFilterMap( orderedActiveFiltersMap[ orderedSelectedFiltersMapKey ] );\n            let positivePendingFiltersWithJustValues = _.difference( orderedSelectedFiltersMapValue, activeFiltersWithJustFilterValues );\n            let negativePendingFiltersWithJustValues = _.difference( activeFiltersWithJustFilterValues, orderedSelectedFiltersMapValue );\n            if( positivePendingFiltersWithJustValues && positivePendingFiltersWithJustValues.length > 0 ) {\n                // these are positive filters, meaning they are filters which got selected.\n                positivePendingFilterMap[ orderedSelectedFiltersMapKey ] = positivePendingFiltersWithJustValues;\n            }\n            if( negativePendingFiltersWithJustValues && negativePendingFiltersWithJustValues.length > 0 ) {\n                // these are negative filters, meaning they are filters which got deselected.\n                negativePendingFilterMap[ orderedSelectedFiltersMapKey ] = negativePendingFiltersWithJustValues;\n            }\n        }\n    }\n    for( const [ orderedActiveFiltersMapKey, orderedActiveFiltersMapValue ] of Object.entries( orderedActiveFiltersMap ) ) {\n        if( !orderedSelectedFiltersMap[ orderedActiveFiltersMapKey ] ) {\n            negativePendingFilterMap[ orderedActiveFiltersMapKey ] = orderedActiveFiltersMap[ orderedActiveFiltersMapKey ];\n        }\n    }\n    return {\n        positivePendingFilterMap: positivePendingFilterMap,\n        negativePendingFilterMap: negativePendingFilterMap\n    };\n};\n\nexport let removeDependentDateFilters = ( searchFilterMap ) => {\n    let searchFilterMapWithNonRedundantDateCategories = _.cloneDeep( searchFilterMap );\n    let keys = Object.keys( searchFilterMapWithNonRedundantDateCategories );\n    let mapWithKeyAsCategoryNameAndValueAsLevelsOfDate = {};\n    if( keys && keys.length > 0 ) {\n        for( let index = 0; index < keys.length; index++ ) {\n            if( keys[ index ].includes( _dateFilterMarker ) && keys[ index ].substr( keys[ index ].length - 4, 4 ) === _dateFilterLevels[ 0 ] ) {\n                let indexOfYear = keys[ index ].indexOf( _dateFilterMarker );\n                let catName = keys[ index ].substr( 0, indexOfYear );\n                if( mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] ) {\n                    let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ];\n                    existingLevels.push( 1 );\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = existingLevels;\n                } else {\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = [ 1 ];\n                }\n            } else if( keys[ index ].includes( _dateFilterMarker ) && keys[ index ].substr( keys[ index ].length - 10, 10 ) === _dateFilterLevels[ 1 ] ) {\n                let indexOfYear = keys[ index ].indexOf( _dateFilterMarker );\n                let catName = keys[ index ].substr( 0, indexOfYear );\n                if( mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] ) {\n                    let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ];\n                    existingLevels.push( 2 );\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = existingLevels;\n                } else {\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = [ 2 ];\n                }\n            } else if( keys[ index ].includes( _dateFilterMarker ) && keys[ index ].substr( keys[ index ].length - 4, 4 ) === _dateFilterLevels[ 2 ] ) {\n                let indexOfYear = keys[ index ].indexOf( _dateFilterMarker );\n                let catName = keys[ index ].substr( 0, indexOfYear );\n                if( mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] ) {\n                    let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ];\n                    existingLevels.push( 3 );\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = existingLevels;\n                } else {\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = [ 3 ];\n                }\n            } else if( keys[ index ].includes( _dateFilterMarker ) && keys[ index ].substr( keys[ index ].length - 14, 14 ) === _dateFilterLevels[ 3 ] ) {\n                let indexOfYear = keys[ index ].indexOf( _dateFilterMarker );\n                let catName = keys[ index ].substr( 0, indexOfYear );\n                if( mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] ) {\n                    let existingLevels = mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ];\n                    existingLevels.push( 4 );\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = existingLevels;\n                } else {\n                    mapWithKeyAsCategoryNameAndValueAsLevelsOfDate[ catName ] = [ 4 ];\n                }\n            }\n        }\n        for( let [ key, value ] of Object.entries( mapWithKeyAsCategoryNameAndValueAsLevelsOfDate ) ) {\n            let minLevel = 0;\n            const dateLevelOne = key + _dateFilterMarker + _dateFilterLevels[ 0 ];\n            const dateLevelTwo = key + _dateFilterMarker + _dateFilterLevels[ 1 ];\n            const dateLevelThree = key + _dateFilterMarker + _dateFilterLevels[ 2 ];\n            const dateLevelFour = key + _dateFilterMarker + _dateFilterLevels[ 3 ];\n            let isMissingSomeDateLevel = false;\n            if( value && value.length > 0 ) {\n                value.sort();\n                for( let index2 = 0; index2 < value.length; index2++ ) {\n                    if( value[ index2 ] === index2 + 1 ) {\n                        minLevel++;\n                    } else {\n                        isMissingSomeDateLevel = true;\n                        break;\n                    }\n                }\n            }\n            if( isMissingSomeDateLevel ) {\n                switch ( minLevel ) {\n                    case 0: {\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelOne ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelOne ];\n                        }\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelTwo ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelTwo ];\n                        }\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelThree ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelThree ];\n                        }\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ];\n                        }\n                        break;\n                    }\n                    case 1: {\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelTwo ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelTwo ];\n                        }\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelThree ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelThree ];\n                        }\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ];\n                        }\n                        break;\n                    }\n                    case 2: {\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelThree ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelThree ];\n                        }\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ];\n                        }\n                        break;\n                    }\n                    case 3: {\n                        if( searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ] ) {\n                            delete searchFilterMapWithNonRedundantDateCategories[ dateLevelFour ];\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n    return searchFilterMapWithNonRedundantDateCategories;\n};\n\nexport let removeDependentClassificationFilters = ( filterValue ) => {\n    let value = filterValue.internalName;\n    let stringValue = '';\n    let values = value.split( '/' );\n    if( values && values.length > 0 ) {\n        let level = parseInt( values[ 0 ] );\n        if( level === 0 ) {\n            return [];\n        } else if( level > 0 ) {\n            let currentLevel = level;\n            level -= 1;\n            stringValue = level.toString();\n            for( let index = 1; index < currentLevel + 1; index++ ) {\n                stringValue += '/' + values[ index ];\n            }\n            return [ stringValue ];\n        }\n    }\n    return [];\n};\n\nexport let chooseFilterSeparator = function( filters ) {\n    let conflictFound = false;\n    _.forEach( filters, ( value, key ) => {\n        if( _.indexOf( value[ 0 ], _filterSeparatorOption1 ) > -1 ) {\n            conflictFound = true;\n            return false;\n        }\n    } );\n    if( conflictFound ) {\n        _filterSeparator = _filterSeparatorOption2;\n    } else {\n        _filterSeparator = _filterSeparatorOption1;\n    }\n};\n\nexport const sortFilterMapKeys = ( filters ) => {\n    let sortedFilterMap = {};\n    let keys = Object.keys( filters );\n    keys.sort();\n    for( let index = 0; index < keys.length; index++ ) {\n        let values = filters[ keys[ index ] ];\n        values.sort();\n        sortedFilterMap[ keys[ index ] ] = values;\n    }\n    return sortedFilterMap;\n};\n\nexport const processFilterValues = ( filterVals ) => {\n    for( let index = 0; index < filterVals.length; index++ ) {\n        let eachValue = filterVals[ index ];\n        eachValue = getDisplayNameForSpecialKeyWord( eachValue );\n        filterVals[ index ] = eachValue;\n    }\n    return filterVals;\n};\n\nexport let buildFilterString = function( filters ) {\n    chooseFilterSeparator( filters );\n    filters = sortFilterMapKeys( filters );\n    return _.map( filters, function( value, key ) {\n        value = processFilterValues( value );\n        return key + '=' + value.join( _filterValueSeparator );\n    } ).join( _filterSeparator );\n};\n\nexport let isHierarchicalChildFilter = function( filterString ) {\n    var isChildFilter = false;\n    if( filterString ) {\n        var nodes = filterString.split( filterPanelUtils.HIERARCHICAL_FACET_SEPARATOR );\n        if( nodes && nodes.length > 2 && !isNaN( nodes[ 0 ] ) ) {\n            var level = parseInt( nodes[ 0 ], 10 );\n            if( level > 0 ) {\n                isChildFilter = true;\n            }\n        }\n    }\n    return isChildFilter;\n};\n\nexport let parseHierarchicalChildFilters = function( filterString, keepIdentifier ) {\n    var filterValues = [];\n    var nodes = filterString.split( filterPanelUtils.HIERARCHICAL_FACET_SEPARATOR );\n\n    if( !isNaN( nodes[ 0 ] ) ) {\n        var level = parseInt( nodes[ 0 ], 10 );\n        for( var i = 0; i <= level; i++ ) {\n            var filterValue = i.toString();\n            for( var j = 1; j <= i + 1; j++ ) {\n                filterValue += filterPanelUtils.HIERARCHICAL_FACET_SEPARATOR + nodes[ j ];\n            }\n            if( keepIdentifier ) {\n                filterValues.push( filterPanelUtils.INTERNAL_OBJECT_FILTER + filterValue );\n            } else {\n                filterValues.push( filterValue );\n            }\n        }\n    }\n    return filterValues;\n};\n\nexport let getFilters = function( groupByCategory, sort, checkHierarchy, keepHierarchyIdentifier, isShapeOrSavedSearch ) {\n    var filterMap = {};\n    if( AwStateService.instance.params.filter ) {\n        // Build the filter map\n        AwStateService.instance.params.filter.split( _filterSeparator ).map( function( filterVal ) {\n            var separatorIndex = filterVal.search( '=' );\n            var key = filterVal.slice( 0, separatorIndex );\n            var valuePart = filterVal.slice( separatorIndex + 1 );\n            var filterPair = [];\n            filterPair[ 0 ] = key;\n            filterPair[ 1 ] = valuePart;\n            if( filterPair.length === 2 && filterPair[ 1 ] !== '' ) {\n                var realFilter = filterPanelUtils.getRealFilterWithNoFilterType( filterPair[ 1 ] );\n                if( checkHierarchy && isHierarchicalChildFilter( realFilter ) && checkIfObjectFilterType( filterPair[ 0 ] ) ) {\n                    filterMap[ filterPair[ 0 ] ] = parseHierarchicalChildFilters( realFilter, keepHierarchyIdentifier );\n                } else if( isShapeOrSavedSearch ) {\n                    if( filterPair[ 0 ] !== 'ShapeSearchProvider' && filterPair[ 0 ] !== 'Geolus Criteria' && filterPair[ 0 ] !== 'SS1shapeBeginFilter' &&\n                        filterPair[ 0 ] !== 'SS1shapeEndFilter' && filterPair[ 0 ] !== 'SS1partShapeFilter' && filterPair[ 0 ] !== 'UpdatedResults.updated_results' ) {\n                        filterMap[ filterPair[ 0 ] ] = filterPair[ 1 ].split( _filterValueSeparator );\n                    }\n                } else {\n                    filterMap[ filterPair[ 0 ] ] = filterPair[ 1 ].split( _filterValueSeparator );\n                }\n            }\n        } );\n    }\n    if( groupByCategory ) {\n        return groupByCategory( filterMap );\n    }\n    return sort ? getSortedFilterMap( filterMap ) : filterMap;\n};\n\nexport let getFilterMapWithPrefilters = () => {\n    var filterMap = {};\n    if( AwStateService.instance.params.filter ) {\n        AwStateService.instance.params.filter.split( _filterSeparator ).map( function( filterVal ) {\n            var separatorIndex = filterVal.search( '=' );\n            var key = filterVal.slice( 0, separatorIndex );\n            var valuePart = filterVal.slice( separatorIndex + 1 );\n            var filterPair = [];\n            filterPair[ 0 ] = key;\n            filterPair[ 1 ] = valuePart;\n            if( filterPair.length === 2 && filterPair[ 1 ] !== '' ) {\n                filterMap[ filterPair[ 0 ] ] = filterPair[ 1 ].split( _filterValueSeparator );\n            }\n        } );\n    }\n    return filterMap;\n};\n\nexport let checkIfObjectFilterType = function( filterCategoryName ) {\n    var isObjectFilterType = false;\n    var responseFilterMap = appCtxService.getCtx( 'searchResponseInfo.searchFilterMap' );\n    if( responseFilterMap && filterCategoryName && responseFilterMap[ filterCategoryName ] ) {\n        var filters = [];\n        filters = responseFilterMap[ filterCategoryName ];\n        if( filters && filters.length > 0 ) {\n            if( filters[ 0 ].searchFilterType === 'ObjectFilter' ) {\n                isObjectFilterType = true;\n            }\n        }\n    }\n    return isObjectFilterType;\n};\n\nexport let getSortedFilterMap = function( params ) {\n    return _.reduce( params, function( acc, nxt, key ) {\n        var trueKey = key.split( _dateFilterMarker )[ 0 ];\n        if( trueKey !== key ) {\n            _.forEach( nxt, function( nxtValue ) {\n                var decoratedNxt = {};\n                decoratedNxt.property = key;\n                decoratedNxt.filter = nxtValue;\n                if( acc[ trueKey ] ) {\n                    acc[ trueKey ].push( decoratedNxt );\n                } else {\n                    acc[ trueKey ] = [];\n                    acc[ trueKey ].push( decoratedNxt );\n                }\n            } );\n        } else {\n            if( acc[ key ] ) {\n                acc[ key ] = acc[ key ].concat( nxt );\n            } else {\n                acc[ key ] = nxt;\n            }\n        }\n        return acc;\n    }, {} );\n};\n\nexport let buildSearchFiltersInt = function( searchContext, filterMap ) {\n    _.forEach( filterMap, function( value, key ) {\n        // If it's a valid filter\n        // get filter type\n        var filterType = 'StringFilter';\n\n        if( key === OWNING_SITE ) {\n            filterType = 'RadioFilter';\n            searchContext.activeFilterMap[ key ] = value.map( function( v1 ) {\n                var filter = {};\n                filter.searchFilterType = 'RadioFilter';\n                filter.stringValue = v1;\n                return filter;\n            } );\n        } else {\n            // Map is used directly by data provider\n            searchContext.activeFilterMap[ key ] = value.map( function( v1 ) {\n                var filter = {};\n\n                if( _.startsWith( v1, filterPanelUtils.INTERNAL_DATE_FILTER ) ) {\n                    filter = filterPanelUtils.getDateRangeFilter( v1.substring( 12, v1.length ) );\n                } else if( _.startsWith( v1, filterPanelUtils.INTERNAL_NUMERIC_RANGE ) ) {\n                    filter = filterPanelUtils.getNumericRangeFilter( v1.substring( 14,\n                        v1.length ) );\n                } else if( _.startsWith( v1, filterPanelUtils.INTERNAL_NUMERIC_FILTER ) ) {\n                    filter.searchFilterType = 'NumericFilter';\n                    var numericValue = parseFloat( v1.substring( 15, v1.length ) );\n                    if( !isNaN( numericValue ) ) {\n                        filter.startNumericValue = numericValue;\n                        filter.endNumericValue = numericValue;\n                    }\n                    filter.stringValue = v1.substring( 15, v1.length );\n                } else if( _.startsWith( v1, filterPanelUtils.INTERNAL_OBJECT_FILTER ) ) {\n                    // SOA handles object filters differently in aw4.0.\n                    // So we need to pass \"StringFilter\" until server side is changed to be the same as aw3.4\n                    // filter.searchFilterType = \"ObjectFilter\";\n                    filter.searchFilterType = 'StringFilter';\n                    filter.stringValue = v1.substring( 14, v1.length );\n                } else if( v1 === '$TODAY' || v1 === '$THIS_WEEK' || v1 === '$THIS_MONTH' ) {\n                    // For special Solr filters like TODAY, THIS_WEEK or THIS_MONTH, mark the filter as DateFilter but keep string values\n                    filter.searchFilterType = 'DateFilter';\n                    filter.stringValue = v1;\n                } else {\n                    filter.searchFilterType = 'StringFilter';\n                    filter.stringValue = v1;\n                }\n                filterType = filter.searchFilterType;\n                return filter;\n            } );\n        }\n\n        // Array to maintain the order\n        searchContext.activeFilters.push( {\n            name: key,\n            values: value,\n            type: filterType\n        } );\n    } );\n};\n\nexport let buildSearchFilters = function( context ) {\n    // Initialize the search context if necessary\n    let searchContext = {};\n\n    // Filter map and filter array are both required\n    // Input to performSearch needs filter map\n    searchContext.activeFilterMap = context && context.search && context.search.activeFilterMap ? _\n        .cloneDeep( context.search.activeFilterMap ) : {};\n\n    // But order matters in some cases and so array is needed\n    searchContext.activeFilters = [];\n\n    // Build up filter map and array\n    buildSearchFiltersInt( searchContext, getFilters() );\n\n    return searchContext;\n};\n\nexport let buildSearchFiltersFromSearchState = function( activeSelectedFiltersMap ) {\n    let activeFiltersMap = {\n        activeFilterMap: {},\n        activeFilters: []\n    };\n    // Build up filter map and array\n    buildSearchFiltersInt( activeFiltersMap, activeSelectedFiltersMap );\n    return activeFiltersMap;\n};\n\nexport let getFilterStringFromActiveFilterMap = function( searchFilterMap, searchFilterCategories ) {\n    var searchParams = getFilters( false );\n\n    var displayString = '';\n    _.map( searchParams, function( value, property ) {\n        var trueProperty = property.split( _dateFilterMarker )[ 0 ];\n        // If it's a valid filter\n        var index = _.findIndex( searchFilterCategories, function( o ) {\n            return o.internalName === trueProperty;\n        } );\n        // Get the filter name first\n        var filterName = '';\n        if( index > -1 ) {\n            filterName = searchFilterCategories[ index ].displayName;\n        } else if( !searchFilterCategories || searchFilterCategories && searchFilterCategories.length < 1 ) {\n            filterName = getCategoryDisplayName( property );\n        } else {\n            return '';\n        }\n\n        // Get display name for all the filter values\n        var filterValues = '';\n        _.forEach( searchParams[ property ], function( filter ) {\n            var filterValue = getBreadCrumbDisplayValue( searchFilterMap[ property ], filterPanelUtils.getRealFilterWithNoFilterType( filter ), searchFilterMap[\n                property ] );\n            filterValues += filterValues === '' ? filterValue : ', ' + filterValue;\n        } );\n        if( filterValues !== '' ) {\n            var individualFilterString = filterName + '=' + filterValues;\n            displayString += displayString === '' ? individualFilterString : ', ' +\n                individualFilterString;\n        }\n    } );\n    return displayString;\n};\n\nexport let convertFilterMapToSavedSearchFilterMap = function( searchContext = {} ) {\n    //var searchContext = appCtxService.getCtx( 'search' );\n    var activeFilterMap = searchContext.activeFilterMap;\n    var activeFilters = searchContext.activeFilters;\n    var searchStringFilterMap = {};\n    if( activeFilterMap ) {\n        _\n            .forEach( activeFilterMap,\n                function( value, key ) {\n                    var filters = [];\n                    for( var indx = 0; indx < value.length; indx++ ) {\n                        var filter = {};\n                        // Saved search object only store SearchStringFilter types\n                        filter.searchFilterType = 'SearchStringFilter';\n                        filter.startNumericValue = 0;\n                        filter.endNumericValue = 0;\n                        filter.startDateValue = 0;\n                        filter.endDateValue = 0;\n                        // Handle date range filters and numeric range filters\n                        if( value[ indx ].searchFilterType === 'DateFilter' &&\n                            !value[ indx ].stringValue ) {\n                            var dateParts1 = value[ indx ].startDateValue.match( /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/ );\n                            var dateParts2 = value[ indx ].endDateValue.match( /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/ );\n                            if( dateParts1 && dateParts2 ) {\n                                var fromDate = new Date( dateParts1 );\n                                var toDate = new Date( dateParts2 );\n                                filter.stringValue = filterPanelUtils.getDateRangeString( fromDate, new Date(\n                                    toDate ) );\n                            } else {\n                                continue;\n                            }\n                        } else if( value[ indx ].searchFilterType === 'NumericFilter' ) {\n                            if( !value[ indx ].stringValue ) {\n                                filter.stringValue = filterPanelUtils.getNumericRangeString(\n                                    value[ indx ].startNumericValue, value[ indx ].endNumericValue );\n                            } else {\n                                filter.stringValue = filterPanelUtils.INTERNAL_NUMERIC_FILTER.concat( value[ indx ].stringValue );\n                            }\n                        } else {\n                            filter = processConvertFilterMapToSavedSearchFilterMap( value, indx, key, filter, activeFilters );\n                        }\n                        filters.push( filter );\n                    }\n                    searchStringFilterMap[ key ] = filters;\n                } );\n    }\n    return searchStringFilterMap;\n};\n\n/**\n * processConvertFilterMapToSavedSearchFilterMap\n * @param {Object} value Value\n * @param {Integer} indx  The index\n * @param {Integer} key  Key\n * @param {Object} filter  The filter object\n * @param {ObjectArray} activeFilters The array of active filters\n * @returns {Object} filter\n */\nexport let processConvertFilterMapToSavedSearchFilterMap = function( value, indx, key, filter, activeFilters ) {\n    // Currently NumericFilters are also being treated as String Filters\n    // verify this filter is numeric filter by checking against activeFilters data structure\n    var numericFilterIndex = _.findIndex( activeFilters, function( object ) {\n        if( object.name === key && object.values ) {\n            return _.startsWith( object.values[ 0 ], filterPanelUtils.INTERNAL_NUMERIC_FILTER ) ||\n                _.startsWith( object.values[ 0 ], filterPanelUtils.INTERNAL_NUMERIC_RANGE );\n        }\n    } );\n    if( numericFilterIndex > -1 ) {\n        filter.stringValue = filterPanelUtils.INTERNAL_NUMERIC_FILTER.concat( value[ indx ].stringValue );\n    } else {\n        filter.stringValue = value[ indx ].stringValue;\n    }\n\n    return filter;\n};\n\nexport let getFilterDisplayValue = function( values, value ) {\n    var dispValue = '';\n    var filterValue = '';\n    var dArray = [];\n    if( _.startsWith( value, filterPanelUtils.INTERNAL_DATE_FILTER ) ) {\n        filterValue = value.replace( filterPanelUtils.INTERNAL_DATE_FILTER, '' );\n        dArray = filterValue.split( '_TO_' );\n        if( dArray.length > 1 ) {\n            var startDate = new Date( dArray[ 0 ] );\n            var endDate = new Date( dArray[ 1 ] );\n            var dateRange = filterPanelUtils.getDateRangeDisplayString( startDate, endDate );\n            dispValue = dateRange.displayName;\n        }\n    } else if( _.startsWith( value, filterPanelUtils.INTERNAL_NUMERIC_RANGE ) ) {\n        filterValue = value.replace( filterPanelUtils.INTERNAL_NUMERIC_RANGE, '' );\n        dArray = filterValue.split( '_TO_' );\n        if( dArray.length > 1 ) {\n            var numericRange = filterPanelUtils.getNumericRangeDisplayString( dArray[ 0 ],\n                dArray[ 1 ] );\n            dispValue = numericRange.displayName;\n        }\n    } else {\n        var ind = _.findIndex( values, function( o ) {\n            return o.stringValue === value;\n        } );\n        if( ind > -1 ) {\n            if( _.endsWith( values[ ind ].stringValue, '$NONE' ) ) {\n                dispValue = localTextBundle.noFilterValue;\n            } else {\n                dispValue = values[ ind ].stringDisplayValue;\n            }\n        }\n    }\n    return dispValue;\n};\n\nexport let getUserValue = function() {\n    let userName = appCtxService.getCtx( 'user' ).props.user_name.dbValue;\n    let userId = appCtxService.getCtx( 'user' ).props.userid.dbValue;\n    return userName + ' ( ' + userId + ' )';\n};\n\nexport const getDisplayNameForSpecialKeyWord = ( value ) => {\n    if( value === '$ME' ) {\n        return getUserValue();\n    }\n    if( value === '$TODAY' ) {\n        return getLocalTextBundle().searchFilterVariableToday;\n    }\n    if( value === '$THIS_WEEK' ) {\n        return getLocalTextBundle().searchFilterVariableThisWeek;\n    }\n    if( value === '$THIS_MONTH' ) {\n        return getLocalTextBundle().searchFilterVariableThisMonth;\n    }\n    if( value === '$MY_GROUP' ) {\n        return getLocalTextBundle().searchFilterVariableMyGroup;\n    }\n    return value;\n};\n\nexport let getSpecialDisplayName = function( value ) {\n    if( value === '$ME' ) {\n        return getUserValue();\n    }\n    if( value === '$TODAY' ) {\n        return getLocalTextBundle().searchFilterVariableToday;\n    }\n    if( value === '$THIS_WEEK' ) {\n        return getLocalTextBundle().searchFilterVariableThisWeek;\n    }\n    if( value === '$THIS_MONTH' ) {\n        return getLocalTextBundle().searchFilterVariableThisMonth;\n    }\n    if( value === '$MY_GROUP' ) {\n        return getLocalTextBundle().searchFilterVariableMyGroup;\n    }\n    return '';\n};\n\nexport let getLocalTextBundle = function() {\n    return localTextBundle;\n};\n\nexport let getBreadCrumbDisplayValue = function( values, value, searchFilters ) {\n    var dispValue = getSpecialDisplayName( value );\n    if( dispValue === '' ) {\n        if( _.startsWith( value, filterPanelUtils.INTERNAL_DATE_FILTER ) ) {\n            var startDate = filterPanelUtils.getDate( processDateStringOffset( values[ 0 ].startDateValue ) );\n            var endDate = filterPanelUtils.getDate( processDateStringOffset( values[ 0 ].endDateValue ) );\n            var dateRange = filterPanelUtils.getDateRangeDisplayString( startDate, endDate );\n            dispValue = dateRange.displayName;\n        } else if( _.startsWith( value, filterPanelUtils.INTERNAL_NUMERIC_RANGE ) ) {\n            var startRange = values[ 0 ].startNumericValue;\n            var endRange = values[ 0 ].endNumericValue;\n            var startEndRange = values[ 0 ].startEndRange;\n            var numericRange = filterPanelUtils.getNumericRangeDisplayString( startRange, endRange,\n                startEndRange );\n            dispValue = numericRange.displayName;\n        } else {\n            var ind = _.findIndex( values, function( o ) {\n                return o.stringValue === value;\n            } );\n            if( ind > -1 ) {\n                // some \"$NONE\" stringValue actually has non-empty stringDisplayValue, so we don't want to display the default \"Unassigned\" in that case.\n                if( values[ ind ].stringDisplayValue ) {\n                    dispValue = values[ ind ].stringDisplayValue;\n                } else if( _.endsWith( value, '$NONE' ) ) {\n                    dispValue = localTextBundle.noFilterValue;\n                } else if( searchFilters ) {\n                    var theFilter = _.find( searchFilters, function( o ) {\n                        return o.stringValue === value;\n                    } );\n                    if( theFilter && theFilter.stringDisplayValue ) {\n                        dispValue = theFilter.stringDisplayValue;\n                    } else {\n                        dispValue = value;\n                    }\n                } else {\n                    dispValue = value;\n                }\n            }\n        }\n    }\n\n    return dispValue;\n};\n\nexport let processDateStringOffset = function( dateString ) {\n    if( dateString.length > 19 ) {\n        var offsetString = dateString.substring( 19 );\n        if( offsetString.length > 4 && offsetString.indexOf( ':' ) === -1 ) {\n            var hour = offsetString.substring( 0, offsetString.length - 2 );\n            var min = offsetString.substring( offsetString.length - 2 );\n            var newOffset = hour.concat( ':', min );\n            dateString = dateString.replace( offsetString, newOffset );\n        }\n    }\n    return dateString;\n};\n\nexport let groupByCategory = function( params ) {\n    return _.reduce( params, function( acc, nxt, key ) {\n        var trueKey = key.split( _dateFilterMarker )[ 0 ];\n        if( trueKey !== key ) {\n            _.forEach( nxt, function( aFilter ) {\n                aFilter.startEndRange = key.substring( trueKey.length, key.length );\n            } );\n        }\n        if( acc[ trueKey ] ) {\n            acc[ trueKey ] = acc[ trueKey ].concat( nxt );\n        } else {\n            acc[ trueKey ] = nxt;\n        }\n        return acc;\n    }, {} );\n};\n\nexport let setFilters = function( params ) {\n    AwStateService.instance.go( '.', {\n        filter: buildFilterString( params )\n    } );\n};\n\nexport let addOrRemoveObjectFilter = function( newParams, category, filter, addRemoveOnly ) {};\n\nlet removePrefilter = function( value ) {\n    if( value && Array.isArray( value ) ) {\n        // remove prefix from prefilter\n        _.forEach( value, function( removePrefix, index, arr ) {\n            if( removePrefix && !removePrefix.hasOwnProperty( 'property' ) && removePrefix.trim().length !== 0 ) {\n                arr[ index ] = arr[ index ].replace( 'AW_PreFilter_', '' );\n            }\n        } );\n    }\n};\n\nexport let addOrRemoveFilter = function( category, filter, addRemoveOnly, filterType ) {};\n\nexport let getFilterExtension = function( filter ) {\n    if( filter.startEndRange === '+1YEAR' ) {\n        return _dateFilterMarker + _dateFilterLevels[ 0 ];\n    }\n    if( filter.startEndRange === '+1MONTH' ) {\n        return _dateFilterMarker + _dateFilterLevels[ 1 ];\n    }\n    if( filter.startEndRange === '+7DAYS' ) {\n        return _dateFilterMarker + _dateFilterLevels[ 2 ];\n    }\n    if( filter.startEndRange === '+1DAY' ) {\n        return _dateFilterMarker + _dateFilterLevels[ 3 ];\n    }\n    return filter.startEndRange;\n};\n\nexport let doSearch = function( targetState, searchCriteria, filters ) {\n    AwStateService.instance.go( targetState ? targetState : '.', {\n        filter: buildFilterString( filters ),\n        searchCriteria: searchCriteria\n    } );\n};\n\nexport let doSearchKeepFilter = function( targetState, searchCriteria, shapeSearchProviderActive, savedSearchUid ) {\n    // If we are in Shape Search or Saved Search context we do not want to keep the filters related to\n    // either when we perform this search.\n    if( shapeSearchProviderActive === 'true' || savedSearchUid ) {\n        AwStateService.instance.go( targetState ? targetState : '.', {\n            filter: buildFilterString( getFilters( false, undefined, undefined, undefined, true ) ),\n            searchCriteria: searchCriteria\n        } );\n    } else {\n        AwStateService.instance.go( targetState ? targetState : '.', {\n            filter: buildFilterString( getFilters( false ) ),\n            searchCriteria: searchCriteria\n        } );\n    }\n};\n\nexport let loadBreadcrumbClearTitle = function() {\n    return localeService.getLocalizedText( 'UIMessages', 'clearBreadCrumb' );\n};\n\nexport let doShapeSearch = function( targetState, searchCriteria, filter ) {\n    var ctx = appCtxService.getCtx( 'searchSearch' );\n    if( ctx ) {\n        delete ctx.savedSearchUid;\n        delete ctx.searchStringPrimary;\n        if( ctx.searchStringSecondary ) {\n            delete ctx.searchStringSecondary;\n            eventBus.publish( 'search.clearSearchBox' );\n        }\n        appCtxService.updateCtx( 'searchSearch', ctx );\n    }\n    var shapeSearchCtx = appCtxService.getCtx( 'shapeSearch' );\n    if( !shapeSearchCtx ) {\n        shapeSearchCtx = {};\n        appCtxService.registerCtx( 'shapeSearch', shapeSearchCtx );\n    }\n    var selectedCtx = appCtxService.getCtx( 'selected' );\n    if( selectedCtx && selectedCtx.props && selectedCtx.props.awb0ArchetypeId && selectedCtx.props.awb0ArchetypeName ) {\n        shapeSearchCtx.seedObjectItemId = selectedCtx.props.awb0ArchetypeId.uiValues[ 0 ];\n        shapeSearchCtx.seedObjectItemName = selectedCtx.props.awb0ArchetypeName.uiValues[ 0 ];\n    } else if( selectedCtx && selectedCtx.props ) {\n        shapeSearchCtx.seedObjectItemId = selectedCtx.props.item_id.uiValues[ 0 ];\n        shapeSearchCtx.seedObjectItemName = selectedCtx.props.object_name.uiValues[ 0 ];\n    }\n\n    AwStateService.instance.go( targetState ? targetState : '.', {\n        filter: filter,\n        searchCriteria: searchCriteria\n    } );\n    return shapeSearchCtx;\n};\n\nexport let loadBreadcrumbTitle = function( label, searchCriteria, totalResultCount, selectionModel ) {\n    // If no label is provided return the loading message\n    if( !label || totalResultCount === undefined ) {\n        return localeService.getLocalizedText( 'BaseMessages', 'LOADING_TEXT' );\n    }\n    return AwPromiseService.instance.all( {\n        label: typeof label === 'string' ? AwPromiseService.instance.when( label ) : localeService.getLocalizedText( label.source, label.key ),\n        selectionCountLabel: localeService.getLocalizedTextFromKey( 'XRTMessages.selectionCountLabel' ),\n        noSearchResultsWithSearchBox: localeService.getLocalizedTextFromKey( 'UIMessages.noSearchResultsWithSearchBox' ),\n        noSearchResults: localeService.getLocalizedTextFromKey( 'UIMessages.noSearchResults' ),\n        resultsCountLabelWithSearchBox: localeService.getLocalizedTextFromKey( 'UIMessages.resultsCountLabelWithSearchBox' ),\n        resultsCountLabel: localeService.getLocalizedTextFromKey( 'UIMessages.resultsCountLabel' )\n    } ).then(\n        function( localizedText ) {\n            // If no results return the no results message\n            if( totalResultCount === 0 ) {\n                if( searchCriteria ) {\n                    return localizedText.noSearchResults.format( '', searchCriteria );\n                }\n                return localizedText.noSearchResults.format( '', localizedText.label );\n            }\n            var resultsCountLabel;\n            if( searchCriteria ) {\n                resultsCountLabel = localizedText.resultsCountLabel.format(\n                    totalResultCount, '', searchCriteria );\n            } else {\n                resultsCountLabel = localizedText.resultsCountLabel.format(\n                    totalResultCount, '', localizedText.label );\n            }\n            // If not in multiselect mode return the result count message\n            if( !selectionModel || !selectionModel.multiSelectEnabled ) {\n                return resultsCountLabel;\n            }\n\n            // Otherwise return the selection count message\n            return localizedText.selectionCountLabel.format( selectionModel\n                .getCurrentSelectedCount(), resultsCountLabel );\n        } );\n};\n\nexport let isShapeSearchContext = function() {\n    let isShapeSearch = appCtxService.ctx.search && appCtxService.ctx.search.reqFilters;\n    isShapeSearch = isShapeSearch && appCtxService.ctx.search.reqFilters.ShapeSearchProvider && appCtxService.ctx.search.reqFilters.ShapeSearchProvider[ 0 ] === 'true';\n    return isShapeSearch;\n};\n\nexport let loadInContentBreadcrumbTitle = function( label, totalResultCount, selectionModel ) {\n    // If no label is provided return the loading message\n    var totalFound = appCtxService.getCtx( 'search.totalFound' );\n    var searchString = appCtxService.getCtx( 'search.criteria.searchString' );\n    var searchInfoCtx = appCtxService.getCtx( 'searchInfo' );\n    var ctxSearchSearch = appCtxService.ctx.searchSearch;\n    if( !label || totalFound === undefined ) {\n        return localeService.getLocalizedText( 'BaseMessages', 'LOADING_TEXT' );\n    }\n    return AwPromiseService.instance.all( {\n        label: typeof label === 'string' ? AwPromiseService.instance.when( label ) : localeService.getLocalizedText( label.source, label.key ),\n        selectionCountLabel: localeService.getLocalizedTextFromKey( 'XRTMessages.selectionCountLabel' ),\n        noSearchResultsWithInContentSearch: localeService.getLocalizedTextFromKey( 'UIMessages.noSearchResultsWithInContentSearch' ),\n        thresholdExceeded: localeService.getLocalizedTextFromKey( 'UIMessages.thresholdExceeded' ),\n        noSearchResultsWithoutInContentSearch: localeService.getLocalizedTextFromKey( 'UIMessages.noSearchResultsWithoutInContentSearch' ),\n        noSearchResults: localeService.getLocalizedTextFromKey( 'UIMessages.noSearchResults' ),\n        resultsCountLabel: localeService.getLocalizedTextFromKey( 'UIMessages.resultsCountLabel' ),\n        shapesCountLabelPart1: localeService.getLocalizedTextFromKey( 'UIMessages.shapesCountLabelPart1' ),\n        shapesCountLabelPart2: localeService.getLocalizedTextFromKey( 'UIMessages.shapesCountLabelPart2' ),\n        oneShapeCountLabelPart1: localeService.getLocalizedTextFromKey( 'UIMessages.oneShapeCountLabelPart1' ),\n        resultsCountLabelWithInContentSearch: localeService.getLocalizedTextFromKey( 'UIMessages.resultsCountLabelWithInContentSearch' ),\n        resultsCountLabelWithoutInContentSearch: localeService.getLocalizedTextFromKey( 'UIMessages.resultsCountLabelWithoutInContentSearch' )\n\n    } ).then(\n        function( localizedText ) {\n            // If no results return the no results message\n            if( totalResultCount === 0 ) {\n                if( searchString ) {\n                    if( ctxSearchSearch && ctxSearchSearch.searchStringSecondary && searchString === ctxSearchSearch.searchStringPrimary + ' AND ' + ctxSearchSearch.searchStringSecondary ) {\n                        return localizedText.noSearchResultsWithInContentSearch.format( ctxSearchSearch.searchStringPrimary, ctxSearchSearch.searchStringSecondary );\n                    }\n                    if( searchInfoCtx && searchInfoCtx.thresholdExceeded === 'true' ) {\n                        searchInfoCtx.noResultsFound = localizedText.thresholdExceeded.format( searchString );\n                        return '';\n                    }\n                    return localizedText.noSearchResultsWithoutInContentSearch.format( searchString );\n                }\n                return localizedText.noSearchResults.format( '', localizedText.label );\n            }\n            var resultsCountLabel;\n            if( searchString ) {\n                resultsCountLabel = processLoadInContentBreadcrumbTitle( ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel );\n            } else {\n                resultsCountLabel = localizedText.resultsCountLabel.format(\n                    totalResultCount, '', localizedText.label );\n            }\n            // If not in multiselect mode return the result count message\n            if( !selectionModel || !selectionModel.multiSelectEnabled ) {\n                return resultsCountLabel;\n            }\n\n            // Otherwise return the selection count message\n            return localizedText.selectionCountLabel.format( selectionModel\n                .getCurrentSelectedCount(), resultsCountLabel );\n        } );\n};\n/**\n * Process Localized text search results.\n * @function processLoadInContentBreadcrumbTitleShape\n * @param {Object} ctxSearchSearch searchString context object\n * @param {Object} searchString searchString context object\n * @param {Object} localizedText The localized text\n * @param {Object} totalResultCount Total Result count\n * @param {Object} resultsCountLabel Results Count Label\n * @return {Object} resultsCountLabel\n */\nexport let processLoadInContentBreadcrumbTitleShape = function( ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel ) {\n    var shapeSearchCtx = appCtxService.getCtx( 'shapeSearch' );\n    resultsCountLabel = {};\n    resultsCountLabel.seedObjectLink = shapeSearchCtx.seedObjectItemId + '/' + shapeSearchCtx.seedObjectItemName;\n    if( ctxSearchSearch.searchStringSecondary ) {\n        if( totalResultCount > 1 ) {\n            resultsCountLabel.part1 = localizedText.shapesCountLabelPart1.format( totalResultCount );\n            resultsCountLabel.part2 = localizedText.shapesCountLabelPart2.format( ctxSearchSearch.searchStringSecondary );\n        } else {\n            resultsCountLabel.part1 = localizedText.oneShapeCountLabelPart1.format( totalResultCount );\n            resultsCountLabel.part2 = localizedText.shapesCountLabelPart2.format( ctxSearchSearch.searchStringSecondary );\n        }\n    } else {\n        if( totalResultCount > 1 ) {\n            resultsCountLabel.part1 = localizedText.shapesCountLabelPart1.format( totalResultCount );\n        } else {\n            resultsCountLabel.part1 = localizedText.oneShapeCountLabelPart1.format( totalResultCount );\n        }\n    }\n    return resultsCountLabel;\n};\n\n/**\n * Process Localized text search results.\n * @function processLoadInContentBreadcrumbTitle\n * @param {Object} ctxSearchSearch searchString context object\n * @param {String} searchString searchString\n * @param {Object} localizedText The localized text\n * @param {Object} totalResultCount Total Result count\n * @param {Object} resultsCountLabel Results Count Label\n * @return {Object} resultsCountLabel\n */\nexport let processLoadInContentBreadcrumbTitle = function( ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel ) {\n    if( isShapeSearchContext() ) {\n        resultsCountLabel = processLoadInContentBreadcrumbTitleShape( ctxSearchSearch, searchString, localizedText, totalResultCount, resultsCountLabel );\n    } else if( ctxSearchSearch && ctxSearchSearch.searchStringSecondary && searchString === ctxSearchSearch.searchStringPrimary + ' AND ' + ctxSearchSearch.searchStringSecondary ) {\n        // define a variable so that the line length does not exceed 207 max-len...\n        let labelText = localizedText.resultsCountLabelWithInContentSearch;\n        resultsCountLabel = labelText.format( totalResultCount, ctxSearchSearch.searchStringPrimary, ctxSearchSearch.searchStringSecondary );\n    } else {\n        resultsCountLabel = localizedText.resultsCountLabelWithoutInContentSearch.format( totalResultCount, searchString );\n    }\n\n    return resultsCountLabel;\n};\n\nexport let setFiltersFromCrumbs = function( crumbs, indexBreadCrumb ) {\n    var newCrumbs = _.dropRightWhile( crumbs, function( c ) {\n        return c.indexBreadCrumb > indexBreadCrumb;\n    } );\n    var filterMap = {};\n    _.forEach( newCrumbs, function( c ) {\n        if( filterMap[ c.internalName ] ) {\n            filterMap[ c.internalName ].push( c.internalValue );\n        } else {\n            filterMap[ c.internalName ] = [ c.internalValue ];\n        }\n    } );\n    var searchContext = appCtxService.getCtx( 'search' );\n    var reqFilters = searchContext.reqFilters;\n    if( reqFilters ) {\n        _.forEach( reqFilters, function( value, key ) {\n            if( filterMap[ key ] ) {\n                filterMap[ key ].push( value );\n            } else {\n                filterMap[ key ] = [ value ];\n            }\n        } );\n    }\n\n    setFilters( filterMap );\n};\n\nexport let displayNoBreadCrumbProvider = function( breadcrumbConfig, label, totalResultCount, searchCriteria ) {\n    var provider = {};\n    AwPromiseService.instance.all( {\n        noCriteriaSpecifiedMessage: localeService.getLocalizedText(\n            breadcrumbConfig.noCriteriaSpecifiedMessage.source,\n            breadcrumbConfig.noCriteriaSpecifiedMessage.key ),\n        noResultsFoundMessage: localeService.getLocalizedText(\n            breadcrumbConfig.noResultsFoundMessage.source,\n            breadcrumbConfig.noResultsFoundMessage.key ),\n        resultsFoundMessage: localeService.getLocalizedText(\n            breadcrumbConfig.resultsFoundMessage.source,\n            breadcrumbConfig.resultsFoundMessage.key )\n    } ).then( function( localizedText ) {\n        if( !searchCriteria ) {\n            provider.title = localizedText.noCriteriaSpecifiedMessage.format();\n        } else if( totalResultCount === undefined || totalResultCount === 0 ) {\n            provider.title = localizedText.noResultsFoundMessage.format( label );\n        } else {\n            provider.title = localizedText.resultsFoundMessage.format( label );\n        }\n    } );\n\n    return provider;\n};\n\nexport let getBreadcrumbProvider = function() {\n    return {\n        crumbs: [],\n        clear: function() {\n            // Publish to AW analytics\n            var sanEvent = {\n                sanAnalyticsType: 'Commands',\n                sanCommandId: 'clearSearchFilter',\n                sanCommandTitle: 'Clear All Search Filters'\n            };\n\n            analyticsSvc.logCommands( sanEvent );\n\n            var searchContext = appCtxService.getCtx( 'search' );\n            var reqFilters = searchContext.reqFilters;\n            if( reqFilters ) {\n                setFilters( reqFilters );\n            } else {\n                setFilters( [] );\n            }\n        },\n        onRemove: function( crumb ) {\n            // Publish to analytics\n            var sanEvent = {\n                sanAnalyticsType: 'Commands',\n                sanCommandId: 'removeSearchFilterCrumb',\n                sanCommandTitle: 'Remove Crumb Filter',\n                sanCmdLocation: 'primarySearchPanel'\n            };\n\n            analyticsSvc.logCommands( sanEvent );\n        },\n        onSelect: function( crumb ) {\n            // Publish to analytics\n            var sanEvent = {\n                sanAnalyticsType: 'Commands',\n                sanCommandId: 'clickSearchFilterCrumb',\n                sanCommandTitle: 'Click Search Filter Crumb',\n                sanCmdLocation: 'primarySearchPanel'\n            };\n\n            analyticsSvc.logCommands( sanEvent );\n\n            setFiltersFromCrumbs( this.crumbs, crumb.indexBreadCrumb );\n        }\n    };\n};\n\nexport let setBreadcrumbValue = function( newBreadcrumb ) {\n    if( newBreadcrumb.internalValue && newBreadcrumb.internalValue !== '' && newBreadcrumb.internalValue === newBreadcrumb.value ) {\n        var searchContext = appCtxService.getCtx( 'searchSearch' );\n        if( searchContext && searchContext.originalInputCategories ) {\n            var categoryId = _.findIndex( searchContext.originalInputCategories, function( aCat ) {\n                return newBreadcrumb.internalName === aCat.internalName;\n            } );\n            if( searchContext.originalInputCategories[ categoryId ] && searchContext.originalInputCategories[ categoryId ].filterValues ) {\n                if( searchContext.originalInputCategories[ categoryId ].filterValues.parentnodes ) {\n                    var foundFilter = _.findIndex( searchContext.originalInputCategories[ categoryId ].filterValues.parentnodes, function( aFilter ) {\n                        return newBreadcrumb.internalValue === aFilter.stringValue;\n                    } );\n                    newBreadcrumb.value = searchContext.originalInputCategories[ categoryId ].filterValues.parentnodes[ foundFilter ].stringDisplayValue;\n                }\n            }\n        }\n    }\n};\n\nexport let setBreadcrumbDisplayName = function( newBreadcrumb, categoriesDisplayed ) {\n    var foundCategory = _.findIndex( categoriesDisplayed, function( aCategory ) {\n        return aCategory === newBreadcrumb.displayName;\n    } );\n    if( foundCategory < 0 ) {\n        categoriesDisplayed.push( newBreadcrumb.displayName );\n    } else {\n        newBreadcrumb.displayName = '';\n    }\n};\n\nexport let setBreadcrumbProviderTitle = function( provider, label, totalResultCount,\n    selectionModel, secondarySearchEnabled ) {\n    loadBreadcrumbClearTitle().then( function( result ) {\n        provider.clearBreadCrumb = result;\n    } );\n    // Load and set the title async\n    if( secondarySearchEnabled ) {\n        loadInContentBreadcrumbTitle( label, totalResultCount, selectionModel ).then(\n            function( result ) {\n                provider.title = result;\n            } );\n    } else {\n        loadBreadcrumbTitle( label, totalResultCount, selectionModel ).then(\n            function( result ) {\n                provider.title = result;\n            } );\n    }\n};\n\nexport let buildBreadcrumbProvider = function( breadcrumbConfig, label, totalResultCount,\n    selectionModel, searchFilterCategories, searchFilterMap, secondarySearchEnabled, searchCriteria ) {\n    if( breadcrumbConfig && breadcrumbConfig.noBreadCrumb === 'true' ) {\n        return displayNoBreadCrumbProvider( breadcrumbConfig, label, totalResultCount, searchCriteria );\n    }\n    var provider = getBreadcrumbProvider();\n\n    // For each of the current search params\n    var searchParams = getFilters( false, true, true, true );\n    var categoriesDisplayed = [];\n    var indexBreadCrumb = -1;\n    _.forEach( searchParams, function( value ) {\n        removePrefilter( value );\n    } );\n    _.map( searchParams, function( value, property ) {\n        // If it's a valid filter\n        var index = _.findIndex( searchFilterCategories, function( o ) {\n            return o.internalName === property;\n        } );\n        var newBreadcrumb = {};\n\n        _.forEach( searchParams[ property ], function( filter ) {\n            var origProperty = property;\n            var origFilter = filterPanelUtils.getRealFilterWithNoFilterType( filter );\n            var filterType = filterPanelUtils.getFilterTypeFromFilterValue( filter );\n            if( filter.hasOwnProperty( 'property' ) ) {\n                origProperty = filter.property;\n                origFilter = filter.filter;\n            }\n            if( index > -1 ) {\n                // Make a breadcrumb for it\n                newBreadcrumb = {\n                    displayName: searchFilterCategories[ index ].displayName + ':',\n                    displayNameHidden: searchFilterCategories[ index ].displayName + ':',\n                    internalName: origProperty,\n                    internalValue: origFilter,\n                    filterType: filterType\n                };\n            } else if( !searchFilterCategories || searchFilterCategories &&\n                searchFilterCategories.length < 1 ) {\n                // Need still display the crumbs\n                var categoryDisplayName = getCategoryDisplayName( property );\n                if( !categoryDisplayName ) {\n                    return provider;\n                }\n                newBreadcrumb = {\n                    displayName: categoryDisplayName + ':',\n                    displayNameHidden: categoryDisplayName + ':',\n                    internalName: property,\n                    internalValue: origFilter,\n                    filterType: filterType\n                };\n            } else {\n                return provider;\n            }\n            provider = processBreadCrumbsSearchFilters( provider, indexBreadCrumb, categoriesDisplayed, newBreadcrumb, searchFilterMap, origProperty, origFilter );\n        } );\n    } );\n    setBreadcrumbProviderTitle( provider, label, totalResultCount,\n        selectionModel, secondarySearchEnabled );\n\n    return provider;\n};\n\n/**\n * Process Breadcrumbs with Search Filters.\n * @function processBreadCrumbsSearchFilters\n * @param {Object} provider The object newBreadCrumb\n * @param {Object} indexBreadCrumb The object newBreadCrumb\n * @param {Object} categoriesDisplayed The object newBreadCrumb\n * @param {Object} newBreadcrumb The object newBreadCrumb\n * @param {Object} searchFilterMap The search filter map\n * @param {Object} origProperty Original Property\n * @param {Object} origFilter Original filter\n * @return {Object} BreadCrumd Provider\n */\nexport let processBreadCrumbsSearchFilters = function( provider, indexBreadCrumb, categoriesDisplayed, newBreadcrumb, searchFilterMap, origProperty, origFilter ) {\n    if( searchFilterMap ) {\n        newBreadcrumb.value = getBreadCrumbDisplayValue( searchFilterMap[ origProperty ], origFilter );\n    }\n\n    if( newBreadcrumb.value && newBreadcrumb.value !== '' ) {\n        setBreadcrumbValue( newBreadcrumb );\n        setBreadcrumbDisplayName( newBreadcrumb, categoriesDisplayed );\n        ++indexBreadCrumb;\n        newBreadcrumb.indexBreadCrumb = indexBreadCrumb;\n        provider.crumbs.push( newBreadcrumb );\n    }\n\n    if( newBreadcrumb.internalName === OWNING_SITE ) {\n        newBreadcrumb.filterType = 'RadioFilter';\n    }\n\n    /* the OwningSite.owning_site is a property which server side filters on to return local or remote objects.\n    This property does not exists in DB. It's a hardcoded value that server side expects and returns.*/\n    if( newBreadcrumb.internalName === OWNING_SITE && newBreadcrumb.internalValue === _local ) {\n        newBreadcrumb.showRemoveButton = false;\n    } else {\n        newBreadcrumb.showRemoveButton = true;\n    }\n\n    return provider;\n};\n\n// Return display name for a category\nexport let getCategoryDisplayName = function( property ) {\n    var categoryDisplayName = '';\n    // first check if it can be found in the prior search.\n    var context = appCtxService.getCtx( 'searchSearch' );\n    if( context && context.originalInputCategories && context.originalInputCategories.length > 0 ) {\n        var index = _.findIndex( context.originalInputCategories, function( o ) {\n            return o.internalName === property;\n        } );\n        if( index > -1 ) {\n            categoryDisplayName = context.originalInputCategories[ index ].displayName;\n            return categoryDisplayName;\n        }\n    }\n    var aTypeProperty = property.split( '.' );\n    if( aTypeProperty && aTypeProperty.length === 2 ) {\n        var type = cmm.getType( aTypeProperty[ 0 ] );\n        if( !type ) {\n            // Category.category\n            var catName = aTypeProperty[ 1 ];\n            categoryDisplayName = catName[ 0 ].toUpperCase() + catName.slice( 1 ).toLowerCase();\n        } else {\n            var propName = filterPanelUtils.getPropertyFromFilter( aTypeProperty[ 1 ] );\n            var pd = type.propertyDescriptorsMap[ propName ];\n            if( !pd ) {\n                categoryDisplayName = aTypeProperty[ 1 ];\n            } else {\n                categoryDisplayName = pd.displayName;\n            }\n        }\n    }\n    return categoryDisplayName;\n};\n\nexport let loadConfiguration = function() {\n    localeService.getLocalizedTextFromKey( 'UIMessages.noFilterValue', true ).then( result => localTextBundle.noFilterValue = result );\n    localeService.getLocalizedTextFromKey( 'SearchMessages.searchFilterVariableMyGroup', true ).then( result => localTextBundle.searchFilterVariableMyGroup = result );\n    localeService.getLocalizedTextFromKey( 'SearchMessages.searchFilterVariableThisMonth', true ).then( result => localTextBundle.searchFilterVariableThisMonth = result );\n    localeService.getLocalizedTextFromKey( 'SearchMessages.searchFilterVariableThisWeek', true ).then( result => localTextBundle.searchFilterVariableThisWeek = result );\n    localeService.getLocalizedTextFromKey( 'dateTimeServiceMessages.currentText', true ).then( result => localTextBundle.searchFilterVariableToday = result );\n};\n\nloadConfiguration();\n\nconst awSearchFilterService = {\n    _dateFilterMarker,\n    _dateFilterLevels,\n    _filterSeparator,\n    _filterValueSeparator,\n    chooseFilterSeparator,\n    buildFilterString,\n    isHierarchicalChildFilter,\n    parseHierarchicalChildFilters,\n    getFilters,\n    checkIfObjectFilterType,\n    getSortedFilterMap,\n    buildSearchFiltersInt,\n    buildSearchFilters,\n    getFilterStringFromActiveFilterMap,\n    convertFilterMapToSavedSearchFilterMap,\n    getFilterDisplayValue,\n    getSpecialDisplayName,\n    getLocalTextBundle,\n    getBreadCrumbDisplayValue,\n    processDateStringOffset,\n    groupByCategory,\n    setFilters,\n    addOrRemoveObjectFilter,\n    addOrRemoveFilter,\n    getFilterExtension,\n    doSearch,\n    doSearchKeepFilter,\n    isShapeSearchContext,\n    loadBreadcrumbClearTitle,\n    doShapeSearch,\n    loadBreadcrumbTitle,\n    loadInContentBreadcrumbTitle,\n    setFiltersFromCrumbs,\n    displayNoBreadCrumbProvider,\n    getBreadcrumbProvider,\n    setBreadcrumbValue,\n    setBreadcrumbDisplayName,\n    setBreadcrumbProviderTitle,\n    buildBreadcrumbProvider,\n    getCategoryDisplayName,\n    loadConfiguration,\n    processLoadInContentBreadcrumbTitleShape,\n    processLoadInContentBreadcrumbTitle,\n    processConvertFilterMapToSavedSearchFilterMap,\n    processBreadCrumbsSearchFilters,\n    buildSearchFiltersFromSearchState,\n    getFilterMapWithPrefilters,\n    getDisplayNameForSpecialKeyWord,\n    getUserValue,\n    sortFilterMapKeys,\n    processFilterValues,\n    removeDependentDateFilters,\n    getPendingFiltersMap,\n    clearAllSelectedFiltersAndRanges,\n    clearNumericRangeInfoFromCategory,\n    clearDateRangeInfoFromCategory,\n    removeDependentClassificationFilters\n};\n\nexport default awSearchFilterService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}