{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * @module js/awSearchLocationService\n */\nimport AwStateService from 'js/awStateService';\nimport logger from 'js/logger';\nlet exports;\nexport const getFilteredTabsInfo = sublocationTabs => {\n  return {\n    sublocationTabs: sublocationTabs.filter(tab => tab.displayTab === true),\n    tabCallbackApi: tabCallbackApi\n  };\n};\nexport const handleStateChange = sublocationTabs => {\n  const activeTab = sublocationTabs.filter(tab => tab.selectedTab)[0];\n\n  if (activeTab && activeTab.state !== AwStateService.instance.current.name) {\n    return sublocationTabs.map(tab => {\n      if (tab.state === AwStateService.instance.current.name) {\n        tab.selectedTab = true;\n      } else {\n        tab.selectedTab = false;\n      }\n\n      return tab;\n    });\n  }\n\n  return sublocationTabs;\n};\nexport const tabCallbackApi = (pageId, tabTitle, sublocationTabs) => {\n  var tabToSelect;\n\n  if (tabTitle) {\n    tabToSelect = sublocationTabs.filter(function (tab) {\n      return tab.name === tabTitle;\n    })[0];\n  } else {\n    // Should only happen when api is called before tapTitle is loaded from i18n file\n    tabToSelect = sublocationTabs.filter(function (tab) {\n      return tab.pageId === pageId;\n    })[0];\n  }\n\n  if (tabToSelect) {\n    // When the tab widget is forced to update after the state has already changed it will still trigger callback\n    if (tabToSelect.state !== AwStateService.instance.current.name) {\n      // Switch to the new state\n      if (tabToSelect.params) {\n        AwStateService.instance.go(tabToSelect.state, tabToSelect.params);\n      } else {\n        AwStateService.instance.go(tabToSelect.state);\n      }\n    }\n  } else {\n    logger.error('Missing tab was selected: ' + tabTitle);\n  }\n};\nexports = {\n  getFilteredTabsInfo,\n  handleStateChange,\n  tabCallbackApi\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/searchcore/src/js/awSearchLocationService.js"],"names":["getFilteredTabsInfo","sublocationTabs","tab","tabCallbackApi","handleStateChange","activeTab","AwStateService","tabToSelect","logger","exports"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,OAAA,cAAA,MAAA,mBAAA;AACA,OAAA,MAAA,MAAA,WAAA;AAEA,IAAA,OAAA;AAEA,OAAO,MAAMA,mBAAmB,GAAKC,eAAF,IAAuB;EACtD,OAAO;IACHA,eAAe,EAAEA,eAAe,CAAfA,MAAAA,CAAwBC,GAAG,IAAIA,GAAG,CAAHA,UAAAA,KAD7C,IACcD,CADd;IAEHE,cAAc,EAAEA;EAFb,CAAP;AADG,CAAA;AAOP,OAAO,MAAMC,iBAAiB,GAAKH,eAAF,IAAuB;EACpD,MAAMI,SAAS,GAAGJ,eAAe,CAAfA,MAAAA,CAAwBC,GAAG,IAAIA,GAAG,CAAlCD,WAAAA,EAAlB,CAAkBA,CAAlB;;EACA,IAAII,SAAS,IAAIA,SAAS,CAATA,KAAAA,KAAoBC,cAAc,CAAdA,QAAAA,CAAAA,OAAAA,CAArC,IAAA,EAA4E;IACxE,OAAO,eAAe,CAAf,GAAA,CAAqBJ,GAAG,IAAI;MAC/B,IAAIA,GAAG,CAAHA,KAAAA,KAAcI,cAAc,CAAdA,QAAAA,CAAAA,OAAAA,CAAlB,IAAA,EAAyD;QACrDJ,GAAG,CAAHA,WAAAA,GAAAA,IAAAA;MADJ,CAAA,MAEO;QACHA,GAAG,CAAHA,WAAAA,GAAAA,KAAAA;MACH;;MACD,OAAA,GAAA;IANJ,CAAO,CAAP;EAQH;;EACD,OAAA,eAAA;AAZG,CAAA;AAeP,OAAO,MAAMC,cAAc,GAAG,CAAA,MAAA,EAAA,QAAA,EAAA,eAAA,KAAyC;EACnE,IAAA,WAAA;;EACA,IAAA,QAAA,EAAe;IACXI,WAAW,GAAG,eAAe,CAAf,MAAA,CAAwB,UAAA,GAAA,EAAgB;MAClD,OAAOL,GAAG,CAAHA,IAAAA,KAAP,QAAA;IADU,CAAA,EAAdK,CAAc,CAAdA;EADJ,CAAA,MAIO;IACH;IACAA,WAAW,GAAG,eAAe,CAAf,MAAA,CAAwB,UAAA,GAAA,EAAgB;MAClD,OAAOL,GAAG,CAAHA,MAAAA,KAAP,MAAA;IADU,CAAA,EAAdK,CAAc,CAAdA;EAGH;;EACD,IAAA,WAAA,EAAkB;IACd;IACA,IAAIA,WAAW,CAAXA,KAAAA,KAAsBD,cAAc,CAAdA,QAAAA,CAAAA,OAAAA,CAA1B,IAAA,EAAiE;MAC7D;MACA,IAAIC,WAAW,CAAf,MAAA,EAAyB;QACrBD,cAAc,CAAdA,QAAAA,CAAAA,EAAAA,CAA4BC,WAAW,CAAvCD,KAAAA,EAA+CC,WAAW,CAA1DD,MAAAA;MADJ,CAAA,MAEO;QACHA,cAAc,CAAdA,QAAAA,CAAAA,EAAAA,CAA4BC,WAAW,CAAvCD,KAAAA;MACH;IACJ;EATL,CAAA,MAUO;IACHE,MAAM,CAANA,KAAAA,CAAc,+BAAdA,QAAAA;EACH;AAxBE,CAAA;AA2BPC,OAAO,GAAG;EAAA,mBAAA;EAAA,iBAAA;EAGNN;AAHM,CAAVM;AAKA,eAAA,OAAA","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/awSearchLocationService\n */\nimport AwStateService from 'js/awStateService';\nimport logger from 'js/logger';\n\nlet exports;\n\nexport const getFilteredTabsInfo = ( sublocationTabs ) => {\n    return {\n        sublocationTabs: sublocationTabs.filter( tab => tab.displayTab === true ),\n        tabCallbackApi: tabCallbackApi\n    };\n};\n\nexport const handleStateChange = ( sublocationTabs ) => {\n    const activeTab = sublocationTabs.filter( tab => tab.selectedTab )[ 0 ];\n    if( activeTab && activeTab.state !== AwStateService.instance.current.name ) {\n        return sublocationTabs.map( tab => {\n            if( tab.state === AwStateService.instance.current.name ) {\n                tab.selectedTab = true;\n            } else {\n                tab.selectedTab = false;\n            }\n            return tab;\n        } );\n    }\n    return sublocationTabs;\n};\n\nexport const tabCallbackApi = ( pageId, tabTitle, sublocationTabs ) => {\n    var tabToSelect;\n    if( tabTitle ) {\n        tabToSelect = sublocationTabs.filter( function( tab ) {\n            return tab.name === tabTitle;\n        } )[ 0 ];\n    } else {\n        // Should only happen when api is called before tapTitle is loaded from i18n file\n        tabToSelect = sublocationTabs.filter( function( tab ) {\n            return tab.pageId === pageId;\n        } )[ 0 ];\n    }\n    if( tabToSelect ) {\n        // When the tab widget is forced to update after the state has already changed it will still trigger callback\n        if( tabToSelect.state !== AwStateService.instance.current.name ) {\n            // Switch to the new state\n            if( tabToSelect.params ) {\n                AwStateService.instance.go( tabToSelect.state, tabToSelect.params );\n            } else {\n                AwStateService.instance.go( tabToSelect.state );\n            }\n        }\n    } else {\n        logger.error( 'Missing tab was selected: ' + tabTitle );\n    }\n};\n\nexports = {\n    getFilteredTabsInfo,\n    handleStateChange,\n    tabCallbackApi\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}