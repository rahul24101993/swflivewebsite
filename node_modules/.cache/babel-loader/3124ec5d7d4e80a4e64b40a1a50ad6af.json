{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useLayoutEffect } from 'react';\n/*\n* Function to calulate the overflown commands in the commandbar/toolbar\n*/\n\nconst calculateOverflow = _ref => {\n  let {\n    getData,\n    dispatch\n  } = _ref;\n  return entries => {\n    let overflownCommands = { ...getData()._overflownCommands\n    };\n    let overCmdsUpdated = null;\n    entries.forEach(entry => {\n      if (entry && entry.target.childNodes && entry.target.childNodes.length) {\n        const id = entry.target.childNodes[0].attributes['command-id'].nodeValue;\n\n        if (entry.isIntersecting === false && !overflownCommands[id]) {\n          overflownCommands[id] = true;\n          overCmdsUpdated = true;\n        } else if (entry.isIntersecting && overflownCommands[id]) {\n          delete overflownCommands[id];\n          overCmdsUpdated = true;\n        }\n      }\n    });\n\n    if (overCmdsUpdated) {\n      dispatch({\n        path: 'data._overflownCommands',\n        value: overflownCommands\n      });\n    }\n  };\n};\n/*\n* Attach observers to command bars and command elements\n*/\n\n\nconst useCommandOverflow = (_ref2, _ref3, _ref4) => {\n  _s();\n\n  let {\n    data,\n    getData,\n    actions,\n    dispatch\n  } = _ref2;\n  let {\n    commandObserver,\n    overflow,\n    alignment\n  } = _ref3;\n  let {\n    elementRefList\n  } = _ref4;\n  let overflowEnabledForCmdbar = data._swfCommandBarComponent; //Overflow for horizontal commandBar is disabled by default\n  //Do NOT attach observer for Horizontal cmdBar if not explicitly enabled\n\n  if (overflowEnabledForCmdbar && (alignment === 'HORIZONTAL' || !alignment) && overflow !== true) {\n    overflowEnabledForCmdbar = false;\n  }\n\n  if (overflowEnabledForCmdbar || data._swfToolBarComponent && overflow && overflow !== 'false') {\n    //eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const element = elementRefList.get('commandBarMain').current;\n      const observer = new IntersectionObserver(calculateOverflow({\n        getData,\n        dispatch\n      }), {\n        root: element,\n        threshold: 0.1\n      });\n      dispatch({\n        path: 'data._observer',\n        value: observer\n      });\n      return () => {\n        const {\n          _observer\n        } = getData() || {};\n        _observer && _observer.disconnect();\n      };\n    }, []);\n  }\n\n  if (data._swfCommandComponent && commandObserver) {\n    //eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      commandObserver.observe(actions.openCommandPopup.reference.current);\n      return () => {\n        commandObserver.unobserve(actions.openCommandPopup.reference.current);\n      };\n    }, []);\n  }\n};\n\n_s(useCommandOverflow, \"MfQzVb+S69pSHKMDKIsojbuzFrw=\");\n\nexport const useCommands = function (viewModel) {\n  _s2();\n\n  if (viewModel.data._swfToolBarComponent || viewModel.data._swfCommandBarComponent || viewModel.data._swfCommandComponent) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useCommandOverflow(viewModel, ...args);\n  }\n};\n\n_s2(useCommands, \"sh0Dbu9TtaqXjXbcEYITmXJo1+4=\", false, function () {\n  return [useCommandOverflow];\n});\n\nexport default {\n  useCommands\n};","map":{"version":3,"names":["useEffect","useLayoutEffect","calculateOverflow","getData","dispatch","entries","overflownCommands","_overflownCommands","overCmdsUpdated","forEach","entry","target","childNodes","length","id","attributes","nodeValue","isIntersecting","path","value","useCommandOverflow","data","actions","commandObserver","overflow","alignment","elementRefList","overflowEnabledForCmdbar","_swfCommandBarComponent","_swfToolBarComponent","element","get","current","observer","IntersectionObserver","root","threshold","_observer","disconnect","_swfCommandComponent","observe","openCommandPopup","reference","unobserve","useCommands","viewModel","args"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/commandBarUtils.js"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\n\n/*\n* Function to calulate the overflown commands in the commandbar/toolbar\n*/\nconst calculateOverflow = ( { getData, dispatch } ) => {\n    return ( entries ) => {\n        let overflownCommands = { ...getData()._overflownCommands };\n        let overCmdsUpdated = null;\n        entries.forEach( entry => {\n            if( entry && entry.target.childNodes && entry.target.childNodes.length ) {\n                const id = entry.target.childNodes[ 0 ].attributes[ 'command-id' ].nodeValue;\n\n                if( entry.isIntersecting === false && !overflownCommands[ id ] ) {\n                    overflownCommands[ id ] = true;\n                    overCmdsUpdated = true;\n                } else if( entry.isIntersecting && overflownCommands[ id ] ) {\n                    delete overflownCommands[ id ];\n                    overCmdsUpdated = true;\n                }\n            }\n        } );\n        if( overCmdsUpdated ) {\n            dispatch( { path: 'data._overflownCommands', value: overflownCommands } );\n        }\n    };\n};\n\n/*\n* Attach observers to command bars and command elements\n*/\nconst useCommandOverflow = ( { data, getData, actions, dispatch }, { commandObserver, overflow, alignment }, { elementRefList } ) => {\n    let overflowEnabledForCmdbar = data._swfCommandBarComponent;\n    //Overflow for horizontal commandBar is disabled by default\n    //Do NOT attach observer for Horizontal cmdBar if not explicitly enabled\n    if( overflowEnabledForCmdbar && ( alignment === 'HORIZONTAL' || !alignment ) && overflow !== true ) {\n        overflowEnabledForCmdbar = false;\n    }\n\n    if( overflowEnabledForCmdbar || data._swfToolBarComponent && overflow && overflow !== 'false' ) {\n        //eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect( () => {\n            const element = elementRefList.get( 'commandBarMain' ).current;\n            const observer = new IntersectionObserver(\n                calculateOverflow( { getData, dispatch } ),\n                {\n                    root: element,\n                    threshold: 0.1\n                }\n            );\n            dispatch( { path: 'data._observer', value: observer } );\n            return () => {\n                const { _observer } = getData() || {};\n                _observer && _observer.disconnect();\n            };\n        }, [] );\n    }\n\n    if( data._swfCommandComponent && commandObserver ) {\n        //eslint-disable-next-line react-hooks/rules-of-hooks\n        useLayoutEffect( () => {\n            commandObserver.observe( actions.openCommandPopup.reference.current );\n            return () => {\n                commandObserver.unobserve( actions.openCommandPopup.reference.current );\n            };\n        }, [] );\n    }\n};\n\nexport const useCommands = ( viewModel, ...args ) => {\n    if( viewModel.data._swfToolBarComponent || viewModel.data._swfCommandBarComponent || viewModel.data._swfCommandComponent ) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useCommandOverflow( viewModel, ...args );\n    }\n};\n\nexport default {\n    useCommands\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}