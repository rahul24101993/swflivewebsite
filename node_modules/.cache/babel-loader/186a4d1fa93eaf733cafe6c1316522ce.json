{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * @module js/modelPropertyService\n */\nimport viewModelObjectService from 'js/viewModelObjectService';\nimport _ from 'lodash';\n/**\n * Cached reference to the View Model Property Object service\n */\n\nvar exports = {};\n/**\n * Update the property in the 'target' object with the same value as the 'source' object based on the given\n * 'path' to that property.\n *\n * @param {String} parentPath - Property path to the holder of the value in the 'source' & 'target' Objects.\n *\n * @param {String} attrHolderPropName - Name of the property in the 'propAttrHolder' class to apply.\n *\n * @param {ViewModelObject} sourceObject - The 'source' of the value to apply.\n *\n * @param {ViewModelObject} targetObject - The 'target' the value will be applies to.\n */\n\nexport let updateProperty = function (parentPath, attrHolderPropName, sourceObject, targetObject) {\n  var paths = [];\n  var prefix = parentPath + '.';\n\n  switch (attrHolderPropName) {\n    case 'dbValue':\n      paths.push(prefix + 'dbValues');\n      paths.push(prefix + 'dbValue');\n      paths.push(prefix + 'value');\n      break;\n\n    case 'displayName':\n      paths.push(prefix + 'propertyName');\n      paths.push(prefix + 'propertyDisplayName');\n      break;\n\n    case 'dispValue':\n      paths.push(prefix + 'displayValues');\n      paths.push(prefix + 'uiValue');\n      paths.push(prefix + 'uiValues');\n      break;\n\n    case 'isArray':\n      paths.push(prefix + 'isArray');\n      break;\n\n    case 'isEditable':\n      paths.push(prefix + 'isEditable');\n      break;\n\n    case 'isRequired':\n      paths.push(prefix + 'isRequired');\n      break;\n\n    case 'labelPosition':\n      paths.push(prefix + 'propertyLabelDisplay');\n      break;\n\n    case 'requiredText':\n      paths.push(prefix + 'requiredText');\n      break;\n\n    case 'type':\n      paths.push(prefix + 'type');\n      break;\n  }\n\n  _.forEach(paths, function (path) {\n    var newValue = _.get(sourceObject, path);\n\n    _.set(targetObject, path, newValue);\n  });\n};\n/**\n * @param {Object} propAttrHolder - An object that holds the following attributes:\n *\n * <pre>\n *           - {String} displayName - Display name of the property.\n *           - {String} type - {'STRING', 'INTEGER', 'BOOLEAN', 'DATE', 'FLOAT', 'CHAR'}\n *           - {Boolean} isRequired - If the property is required or not\n *           - {Boolean} isEditable - If the Property is editable or not\n *           - {Object} dbValue - Default value\n *           - {String} dispValue - Display Value\n *           - {Object} labelPosition - Position on panel.\n *           - {Boolean} isArray - If the Property is an array or not\n *           - {String} requiredText - The text to display in the required field     *\n * </pre>\n *\n * @return {ViewModelProperty} returns newly created ViewModelProperty\n */\n\nexport let createViewModelProperty = function (propAttrHolder) {\n  // eslint-disable-line\n\n  /**\n   * Use the given 'propName' if 'propAttrHolder' has one, else, use the 'displayName' as the 'propName'.\n   */\n  var prop = _.cloneDeep(propAttrHolder);\n\n  prop.displayName = _.isUndefined(propAttrHolder.displayName) ? '' : propAttrHolder.displayName;\n  var propName = _.isUndefined(propAttrHolder.propName) ? prop.displayName : propAttrHolder.propName;\n  var type = propAttrHolder.type;\n  var hasLOV = false;\n  prop.isSelectOnly = _.isUndefined(propAttrHolder.isSelectOnly) ? true : propAttrHolder.isSelectOnly;\n  prop.isRichText = _.isBoolean(propAttrHolder.isRichText) ? propAttrHolder.isRichText : propAttrHolder.isRichText === 'true';\n  prop.isArray = _.isBoolean(propAttrHolder.isArray) ? propAttrHolder.isArray : propAttrHolder.isArray === 'true';\n  prop.isEditable = _.isBoolean(propAttrHolder.isEditable) ? propAttrHolder.isEditable : propAttrHolder.isEditable !== 'false';\n  prop.isRequired = _.isBoolean(propAttrHolder.isRequired) ? propAttrHolder.isRequired : propAttrHolder.isRequired === 'true';\n\n  if (propAttrHolder.isEnabled) {\n    prop.isEnabled = _.isBoolean(propAttrHolder.isEnabled) ? propAttrHolder.isEnabled : propAttrHolder.isEnabled !== 'false';\n  } else {\n    prop.isEnabled = prop.isEditable;\n  }\n\n  var displayValues = [];\n  var uw_dbValue = propAttrHolder.dbValue;\n\n  if (propAttrHolder.value) {\n    uw_dbValue = propAttrHolder.value;\n  }\n\n  var tempDisplayValues = propAttrHolder.dispValue;\n\n  if (propAttrHolder.displayValue) {\n    tempDisplayValues = propAttrHolder.displayValue;\n  }\n\n  if (!uw_dbValue && type === 'DATE' || propAttrHolder.type === 'DATETIME') {\n    if (uw_dbValue !== '' && !isNaN(Date.parse(uw_dbValue))) {\n      var date = new Date(uw_dbValue);\n      uw_dbValue = date.getTime();\n    }\n\n    type = 'DATE';\n  }\n\n  if (!_.isUndefined(tempDisplayValues)) {\n    if (_.isArray(tempDisplayValues)) {\n      displayValues = tempDisplayValues;\n    } else {\n      displayValues.push(tempDisplayValues);\n    }\n  }\n  /**\n   * If this is an array property, and the type does not contain the 'ARRAY' postfix, add it automatically.\n   */\n\n\n  if (prop.isArray && type && type.search('ARRAY') === -1) {\n    type += 'ARRAY';\n  }\n\n  if (propAttrHolder.hasLov) {\n    hasLOV = true;\n  }\n\n  prop.propType = type;\n  prop.hasLOV = hasLOV;\n  prop.value = uw_dbValue;\n  prop.displayValue = displayValues;\n  prop.dbValues = propAttrHolder.dbValue ? propAttrHolder.dbValue : [];\n  var viewProp = viewModelObjectService.constructViewModelProperty(prop, propName, null, true);\n\n  if (type === 'DATE') {\n    viewProp.dateApi = viewProp.dateApi || {};\n    viewProp.dateApi.isDateEnabled = true;\n    viewProp.dateApi.isTimeEnabled = false;\n\n    if (propAttrHolder.type === 'DATETIME') {\n      viewProp.dateApi.isTimeEnabled = true;\n    }\n  }\n\n  if (type === 'DATETIME') {\n    viewProp.dateApi = viewProp.dateApi || {};\n    viewProp.dateApi.isDateEnabled = true;\n    viewProp.dateApi.isTimeEnabled = true;\n  }\n\n  return viewProp;\n};\nexports = {\n  updateProperty,\n  createViewModelProperty\n};\nexport default exports;","map":{"version":3,"names":["viewModelObjectService","_","exports","updateProperty","parentPath","attrHolderPropName","sourceObject","targetObject","paths","prefix","push","forEach","path","newValue","get","set","createViewModelProperty","propAttrHolder","prop","cloneDeep","displayName","isUndefined","propName","type","hasLOV","isSelectOnly","isRichText","isBoolean","isArray","isEditable","isRequired","isEnabled","displayValues","uw_dbValue","dbValue","value","tempDisplayValues","dispValue","displayValue","isNaN","Date","parse","date","getTime","search","hasLov","propType","dbValues","viewProp","constructViewModelProperty","dateApi","isDateEnabled","isTimeEnabled"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declarativeui/src/js/modelPropertyService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * @module js/modelPropertyService\n */\nimport viewModelObjectService from 'js/viewModelObjectService';\nimport _ from 'lodash';\n\n/**\n * Cached reference to the View Model Property Object service\n */\n\nvar exports = {};\n\n/**\n * Update the property in the 'target' object with the same value as the 'source' object based on the given\n * 'path' to that property.\n *\n * @param {String} parentPath - Property path to the holder of the value in the 'source' & 'target' Objects.\n *\n * @param {String} attrHolderPropName - Name of the property in the 'propAttrHolder' class to apply.\n *\n * @param {ViewModelObject} sourceObject - The 'source' of the value to apply.\n *\n * @param {ViewModelObject} targetObject - The 'target' the value will be applies to.\n */\nexport let updateProperty = function( parentPath, attrHolderPropName, sourceObject, targetObject ) {\n    var paths = [];\n\n    var prefix = parentPath + '.';\n\n    switch ( attrHolderPropName ) {\n        case 'dbValue':\n            paths.push( prefix + 'dbValues' );\n            paths.push( prefix + 'dbValue' );\n            paths.push( prefix + 'value' );\n            break;\n\n        case 'displayName':\n            paths.push( prefix + 'propertyName' );\n            paths.push( prefix + 'propertyDisplayName' );\n            break;\n\n        case 'dispValue':\n            paths.push( prefix + 'displayValues' );\n            paths.push( prefix + 'uiValue' );\n            paths.push( prefix + 'uiValues' );\n            break;\n\n        case 'isArray':\n            paths.push( prefix + 'isArray' );\n            break;\n\n        case 'isEditable':\n            paths.push( prefix + 'isEditable' );\n            break;\n\n        case 'isRequired':\n            paths.push( prefix + 'isRequired' );\n            break;\n\n        case 'labelPosition':\n            paths.push( prefix + 'propertyLabelDisplay' );\n            break;\n\n        case 'requiredText':\n            paths.push( prefix + 'requiredText' );\n            break;\n\n        case 'type':\n            paths.push( prefix + 'type' );\n            break;\n    }\n\n    _.forEach( paths, function( path ) {\n        var newValue = _.get( sourceObject, path );\n\n        _.set( targetObject, path, newValue );\n    } );\n};\n\n/**\n * @param {Object} propAttrHolder - An object that holds the following attributes:\n *\n * <pre>\n *           - {String} displayName - Display name of the property.\n *           - {String} type - {'STRING', 'INTEGER', 'BOOLEAN', 'DATE', 'FLOAT', 'CHAR'}\n *           - {Boolean} isRequired - If the property is required or not\n *           - {Boolean} isEditable - If the Property is editable or not\n *           - {Object} dbValue - Default value\n *           - {String} dispValue - Display Value\n *           - {Object} labelPosition - Position on panel.\n *           - {Boolean} isArray - If the Property is an array or not\n *           - {String} requiredText - The text to display in the required field     *\n * </pre>\n *\n * @return {ViewModelProperty} returns newly created ViewModelProperty\n */\nexport let createViewModelProperty = function( propAttrHolder ) { // eslint-disable-line\n    /**\n     * Use the given 'propName' if 'propAttrHolder' has one, else, use the 'displayName' as the 'propName'.\n     */\n    var prop = _.cloneDeep( propAttrHolder );\n    prop.displayName = _.isUndefined( propAttrHolder.displayName ) ? '' : propAttrHolder.displayName;\n    var propName = _.isUndefined( propAttrHolder.propName ) ? prop.displayName : propAttrHolder.propName;\n\n    var type = propAttrHolder.type;\n    var hasLOV = false;\n\n    prop.isSelectOnly = _.isUndefined( propAttrHolder.isSelectOnly ) ? true : propAttrHolder.isSelectOnly;\n\n    prop.isRichText = _.isBoolean( propAttrHolder.isRichText ) ? propAttrHolder.isRichText :\n        propAttrHolder.isRichText === 'true';\n\n    prop.isArray = _.isBoolean( propAttrHolder.isArray ) ? propAttrHolder.isArray :\n        propAttrHolder.isArray === 'true';\n\n    prop.isEditable = _.isBoolean( propAttrHolder.isEditable ) ? propAttrHolder.isEditable :\n        propAttrHolder.isEditable !== 'false';\n\n    prop.isRequired = _.isBoolean( propAttrHolder.isRequired ) ? propAttrHolder.isRequired :\n        propAttrHolder.isRequired === 'true';\n\n    if( propAttrHolder.isEnabled ) {\n        prop.isEnabled = _.isBoolean( propAttrHolder.isEnabled ) ? propAttrHolder.isEnabled :\n            propAttrHolder.isEnabled !== 'false';\n    } else {\n        prop.isEnabled = prop.isEditable;\n    }\n\n    var displayValues = [];\n    var uw_dbValue = propAttrHolder.dbValue;\n    if( propAttrHolder.value ) {\n        uw_dbValue = propAttrHolder.value;\n    }\n    var tempDisplayValues = propAttrHolder.dispValue;\n    if( propAttrHolder.displayValue ) {\n        tempDisplayValues = propAttrHolder.displayValue;\n    }\n\n    if( !uw_dbValue && type === 'DATE' || propAttrHolder.type === 'DATETIME' ) {\n        if( uw_dbValue !== '' && !isNaN( Date.parse( uw_dbValue ) ) ) {\n            var date = new Date( uw_dbValue );\n            uw_dbValue = date.getTime();\n        }\n        type = 'DATE';\n    }\n\n    if( !_.isUndefined( tempDisplayValues ) ) {\n        if( _.isArray( tempDisplayValues ) ) {\n            displayValues = tempDisplayValues;\n        } else {\n            displayValues.push( tempDisplayValues );\n        }\n    }\n\n    /**\n     * If this is an array property, and the type does not contain the 'ARRAY' postfix, add it automatically.\n     */\n    if( prop.isArray && type && type.search( 'ARRAY' ) === -1 ) {\n        type += 'ARRAY';\n    }\n\n    if( propAttrHolder.hasLov ) {\n        hasLOV = true;\n    }\n    prop.propType = type;\n    prop.hasLOV = hasLOV;\n    prop.value = uw_dbValue;\n    prop.displayValue = displayValues;\n    prop.dbValues = propAttrHolder.dbValue ? propAttrHolder.dbValue : [];\n\n    var viewProp = viewModelObjectService.constructViewModelProperty( prop, propName, null, true );\n\n    if( type === 'DATE' ) {\n        viewProp.dateApi = viewProp.dateApi || {};\n        viewProp.dateApi.isDateEnabled = true;\n        viewProp.dateApi.isTimeEnabled = false;\n        if( propAttrHolder.type === 'DATETIME' ) {\n            viewProp.dateApi.isTimeEnabled = true;\n        }\n    }\n\n    if( type === 'DATETIME' ) {\n        viewProp.dateApi = viewProp.dateApi || {};\n        viewProp.dateApi.isDateEnabled = true;\n        viewProp.dateApi.isTimeEnabled = true;\n    }\n\n    return viewProp;\n};\n\nexports = {\n    updateProperty,\n    createViewModelProperty\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}