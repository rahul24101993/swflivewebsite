{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * @module js/bootstrap\n */\n\n/**\n * Load the main application JS file and 'bootstrap' the system on this page's document.\n *\n * NOTE: it is different with the afx one for now.\n */\n// revisitme - we might need'Debug:debug' alias later when we have many of this use case\nimport Debug from 'debug';\nimport ClipboardService from 'js/clipboardService';\nconst trace = new Debug('bootstrap');\n/**\n * bootstrap function\n * NOTE: since the init pipeline is different between afx and @swf/core,\n */\n\nconst init = () => {\n  trace('postInitInsertHere:pre'); // postInitInsertHere\n\n  import('js/localeService').then(function (localeSvc) {\n    localeSvc.getTextPromise();\n  });\n  import('js/dateTimeService').then(function (dateTimeSvc) {\n    dateTimeSvc.init();\n  });\n  import('js/theme.service').then(function (themeService) {\n    themeService.init();\n  });\n  import('js/aw.narrowMode.service').then(function (narrowModeService) {\n    narrowModeService.checkNarrowMode();\n  });\n  import('js/splmStatsService').then(function (splmStatsService) {\n    splmStatsService.install();\n    splmStatsService.installAnalyticsConfig();\n  });\n  import('js/autoSaveContextService').then(function (autoSaveContextService) {\n    autoSaveContextService.initializeAutoSaveContext();\n  });\n  import('js/tcCommandVisibilityService2').then(cvs => cvs.addServerVisibilityLoaderToCtx());\n  trace('postInitInsertHere:post');\n  ClipboardService.instance;\n};\n\nexport default init;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/config/src/js/bootstrap.js"],"names":["trace","init","localeSvc","dateTimeSvc","themeService","narrowModeService","splmStatsService","autoSaveContextService","cvs","ClipboardService"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,gBAAA,MAAA,qBAAA;AAEA,MAAMA,KAAK,GAAG,IAAA,KAAA,CAAd,WAAc,CAAd;AAEA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG,MAAM;EACfD,KAAK,CADU,wBACV,CAALA,CADe,CAEf;;EACA,OAAA,kBAAA,EAAA,IAAA,CAAmC,UAAA,SAAA,EAAmB;IAAEE,SAAS,CAATA,cAAAA;EAAxD,CAAA;EACA,OAAA,oBAAA,EAAA,IAAA,CAAqC,UAAA,WAAA,EAAqB;IAAEC,WAAW,CAAXA,IAAAA;EAA5D,CAAA;EACA,OAAA,kBAAA,EAAA,IAAA,CAAmC,UAAA,YAAA,EAAsB;IAAEC,YAAY,CAAZA,IAAAA;EAA3D,CAAA;EACA,OAAA,0BAAA,EAAA,IAAA,CAA2C,UAAA,iBAAA,EAA2B;IAAEC,iBAAiB,CAAjBA,eAAAA;EAAxE,CAAA;EACA,OAAA,qBAAA,EAAA,IAAA,CAAmC,UAAA,gBAAA,EAA4B;IAAEC,gBAAgB,CAAhBA,OAAAA;IAA4BA,gBAAgB,CAAhBA,sBAAAA;EAA7F,CAAA;EACA,OAAA,2BAAA,EAAA,IAAA,CAAyC,UAAA,sBAAA,EAAgC;IAACC,sBAAsB,CAAtBA,yBAAAA;EAA1E,CAAA;EACA,OAAA,gCAAA,EAAA,IAAA,CAA+CC,GAAG,IAAIA,GAAG,CAAzD,8BAAsDA,EAAtD;EACAR,KAAK,CAALA,yBAAK,CAALA;EACAS,gBAAgB,CAAhBA,QAAAA;AAXJ,CAAA;;AAcA,eAAA,IAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * @module js/bootstrap\n */\n\n/**\n * Load the main application JS file and 'bootstrap' the system on this page's document.\n *\n * NOTE: it is different with the afx one for now.\n */\n\n// revisitme - we might need'Debug:debug' alias later when we have many of this use case\nimport Debug from 'debug';\nimport ClipboardService from 'js/clipboardService';\n\nconst trace = new Debug( 'bootstrap' );\n\n/**\n * bootstrap function\n * NOTE: since the init pipeline is different between afx and @swf/core,\n */\nconst init = () => {\n    trace( 'postInitInsertHere:pre' );\n    // postInitInsertHere\n    import( 'js/localeService' ).then( function(localeSvc){ localeSvc.getTextPromise(); } );\n    import( 'js/dateTimeService' ).then( function(dateTimeSvc){ dateTimeSvc.init();} );\n    import( 'js/theme.service' ).then( function(themeService){ themeService.init(); } );\n    import( 'js/aw.narrowMode.service' ).then( function(narrowModeService){ narrowModeService.checkNarrowMode(); } );\n    import('js/splmStatsService').then(function( splmStatsService ){ splmStatsService.install(); splmStatsService.installAnalyticsConfig();});\n    import('js/autoSaveContextService').then(function(autoSaveContextService){autoSaveContextService.initializeAutoSaveContext();});\n    import('js/tcCommandVisibilityService2').then( cvs => cvs.addServerVisibilityLoaderToCtx() );\n    trace( 'postInitInsertHere:post' );\n    ClipboardService.instance;\n};\n\nexport default init;\n"]},"metadata":{},"sourceType":"module"}