{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\pagelevelcomponents\\\\src\\\\viewmodel\\\\AwStandardSecondaryWorkareaViewModel.json\";\n// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwSelectionSummary from 'viewmodel/AwSelectionSummaryViewModel';\n/*\nctx imports\n*/\n\nimport { getContext as context } from 'js/AwSecondaryWorkareaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ctxImportObj = {\n  context\n};\n/*\ndynamic import\n */\n\nregisterDynImportEntry('js/AwSecondaryWorkareaService', () => import('js/AwSecondaryWorkareaService'));\n;\n/*\nview model\n */\n\nconst declViewModelJson = {\n  \"schemaVersion\": \"1.0.0\",\n  \"data\": {\n    \"selectionData\": {\n      \"initialValues\": {},\n      \"meta\": {}\n    }\n  },\n  \"ctx\": {\n    \"context\": {\n      \"parser\": {\n        \"method\": \"getContext\",\n        \"deps\": \"js/AwSecondaryWorkareaService\"\n      }\n    }\n  },\n  \"actions\": {\n    \"handleSelectionChange\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"handleSelectionChange\",\n      \"inputData\": {\n        \"localSelectionData\": \"{{data.selectionData}}\",\n        \"parentSelectionData\": \"{{props.selectionData}}\"\n      },\n      \"deps\": \"js/AwSecondaryWorkareaService\"\n    },\n    \"resetSelectionData\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"resetSelectionData\",\n      \"inputData\": {\n        \"localSelectionData\": \"{{data.selectionData}}\",\n        \"parentSelectionData\": \"{{props.selectionData}}\"\n      },\n      \"deps\": \"js/AwSecondaryWorkareaService\"\n    }\n  },\n  \"lifecycleHooks\": {\n    \"onUnmount\": \"resetSelectionData\",\n    \"onUpdate\": {\n      \"action\": \"handleSelectionChange\",\n      \"observers\": [\"viewModel.atomicData.selectionData\"]\n    }\n  },\n  \"props\": {\n    \"sub-panel-context\": {\n      \"type\": \"object\"\n    },\n    \"base-selection\": {\n      \"type\": \"object\"\n    },\n    \"search-state\": {\n      \"type\": \"object\"\n    },\n    \"selection-data\": {\n      \"type\": \"object\"\n    }\n  },\n  \"_viewModelId\": \"AwStandardSecondaryWorkarea\",\n  \"_uniqueViewModelId\": \"AwStandardSecondaryWorkarea\"\n};\n/*\n<div class='sw-row sw-secondary-workarea flex-auto align-self-stretch aw-layout-sublocationContent'>\n    <aw-selection-summary\n        selection=\"props.searchState.pwaSelection && props.searchState.pwaSelection.length > 0 ? props.searchState.pwaSelection : (props.baseSelection ? props.baseSelection : [])\"\n        context=\"props.ctx.context[0]\" selection-data=\"data.selectionData\">\n    </aw-selection-summary>\n</div>\n\n*/\n\nconst renderFn = props => {\n  let subPanelContext = props.subPanelContext;\n  let {\n    viewModel: {\n      data,\n      dataProviders,\n      dispatch,\n      conditions,\n      selectionModels,\n      editHandlers,\n      chartProviders,\n      ports\n    },\n    grids,\n    ctx,\n    actions,\n    fields,\n    messages,\n    i18n,\n    formProp,\n    viewPath\n  } = props;\n  data = { ...data,\n    dataProviders\n  };\n\n  if (subPanelContext && subPanelContext.fields) {\n    fields = { ...fields,\n      ...subPanelContext.fields\n    };\n  }\n\n  let $index = null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sw-row sw-secondary-workarea flex-auto align-self-stretch aw-layout-sublocationContent\",\n    children: /*#__PURE__*/_jsxDEV(AwSelectionSummary, {\n      selection: AwParseService.instance(\"props.searchState.pwaSelection && props.searchState.pwaSelection.length > 0 ? props.searchState.pwaSelection : (props.baseSelection ? props.baseSelection : [])\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      }),\n      context: AwParseService.instance(\"props.ctx.context[0]\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      }),\n      selectionData: AwParseService.instance(\"fields.selectionData\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 13\n  }, this);\n};\n/*\ndefine component\n*/\n\n\nconst Component = createComponent(declViewModelJson, renderFn, undefined, ctxImportObj);\nexport default Component;","map":{"version":3,"names":["createComponent","registerDynImportEntry","AwParseService","AwFilterService","getField","Fragment","filterSer","instance","AwSelectionSummary","getContext","context","ctxImportObj","declViewModelJson","renderFn","props","subPanelContext","viewModel","data","dataProviders","dispatch","conditions","selectionModels","editHandlers","chartProviders","ports","grids","ctx","actions","fields","messages","i18n","formProp","viewPath","$index","Component","undefined"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pagelevelcomponents/src/viewmodel/AwStandardSecondaryWorkareaViewModel.json"],"sourcesContent":["// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwSelectionSummary from 'viewmodel/AwSelectionSummaryViewModel';\n\n\n\n\n/*\nctx imports\n*/\nimport { getContext as context } from 'js/AwSecondaryWorkareaService';\nconst ctxImportObj = { context };\n\n\n/*\ndynamic import\n */\nregisterDynImportEntry('js/AwSecondaryWorkareaService', () => import('js/AwSecondaryWorkareaService'));;\n\n/*\nview model\n */\nconst declViewModelJson = {\n    \"schemaVersion\": \"1.0.0\",\n    \"data\": {\n        \"selectionData\": {\n            \"initialValues\": {},\n            \"meta\": {}\n        }\n    },\n    \"ctx\": {\n        \"context\": {\n            \"parser\": {\n                \"method\": \"getContext\",\n                \"deps\": \"js/AwSecondaryWorkareaService\"\n            }\n        }\n    },\n    \"actions\": {\n        \"handleSelectionChange\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"handleSelectionChange\",\n            \"inputData\": {\n                \"localSelectionData\": \"{{data.selectionData}}\",\n                \"parentSelectionData\": \"{{props.selectionData}}\"\n            },\n            \"deps\": \"js/AwSecondaryWorkareaService\"\n        },\n        \"resetSelectionData\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"resetSelectionData\",\n            \"inputData\": {\n                \"localSelectionData\": \"{{data.selectionData}}\",\n                \"parentSelectionData\": \"{{props.selectionData}}\"\n            },\n            \"deps\": \"js/AwSecondaryWorkareaService\"\n        }\n    },\n    \"lifecycleHooks\": {\n        \"onUnmount\": \"resetSelectionData\",\n        \"onUpdate\": {\n            \"action\": \"handleSelectionChange\",\n            \"observers\": [\n                \"viewModel.atomicData.selectionData\"\n            ]\n        }\n    },\n    \"props\": {\n        \"sub-panel-context\": {\n            \"type\": \"object\"\n        },\n        \"base-selection\": {\n            \"type\": \"object\"\n        },\n        \"search-state\": {\n            \"type\": \"object\"\n        },\n        \"selection-data\": {\n            \"type\": \"object\"\n        }\n    },\n    \"_viewModelId\": \"AwStandardSecondaryWorkarea\",\n    \"_uniqueViewModelId\": \"AwStandardSecondaryWorkarea\"\n};\n\n/*\n<div class='sw-row sw-secondary-workarea flex-auto align-self-stretch aw-layout-sublocationContent'>\n    <aw-selection-summary\n        selection=\"props.searchState.pwaSelection && props.searchState.pwaSelection.length > 0 ? props.searchState.pwaSelection : (props.baseSelection ? props.baseSelection : [])\"\n        context=\"props.ctx.context[0]\" selection-data=\"data.selectionData\">\n    </aw-selection-summary>\n</div>\n\n*/\nconst renderFn =(props)=> {\n    let subPanelContext = props.subPanelContext ;\n    let { viewModel: { data, dataProviders, dispatch, conditions, selectionModels, editHandlers, chartProviders, ports  }, grids, ctx, actions, fields, messages, i18n, formProp, viewPath  } = props;\n    data = {...data, dataProviders};\n    if( subPanelContext && subPanelContext.fields ){\n        fields = { ...fields, ...subPanelContext.fields };\n    }\n    let $index = null;\n    return (\n            <div className=\"sw-row sw-secondary-workarea flex-auto align-self-stretch aw-layout-sublocationContent\">\n        <AwSelectionSummary selection={AwParseService.instance( \"props.searchState.pwaSelection && props.searchState.pwaSelection.length > 0 ? props.searchState.pwaSelection : (props.baseSelection ? props.baseSelection : [])\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )} context={AwParseService.instance( \"props.ctx.context[0]\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )} selectionData={AwParseService.instance( \"fields.selectionData\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )}>\n        </AwSelectionSummary>\n    </div>\n    )\n};\n\n\n/*\ndefine component\n*/\nconst Component = createComponent( declViewModelJson, renderFn, undefined, ctxImportObj );\n\nexport default Component;"],"mappings":"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"},"metadata":{},"sourceType":"module"}