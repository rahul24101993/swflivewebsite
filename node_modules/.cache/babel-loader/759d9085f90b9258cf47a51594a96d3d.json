{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\declreact\\\\src\\\\js\\\\reactPopup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this = this;\n\n// Copyright (c) 2020 Siemens\n\n/* eslint-disable require-jsdoc */\n\n/**\n * @module js/reactPopup\n */\nimport AwPromiseService from 'js/awPromiseService';\nimport { consolidateOptions } from 'js/popupService';\nimport { Tooltip } from 'js/tooltip';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useInitHook } from 'js/reactHelper';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst hasStaticReference = reference => reference && (_.isString(reference) || Boolean(reference.nodeName));\n\nconst usePopupInternal = initialOptions => {\n  _s();\n\n  // the reference element which has the popup - could be static or dynamic\n  // 1, static - existed, selector or native dom element, eg: 'div.sw-logoImage'\n  // 2, dynamic - will be generated, vdom element\n  let reference = useRef(null);\n\n  if (hasStaticReference(initialOptions.reference)) {\n    reference = initialOptions.reference;\n  }\n\n  let uuid = useRef(null); // the popup element\n\n  let popupReference = useRef(null); // enable popup api return promise\n\n  let [showDeferred, hideDeferred] = [useRef(null), useRef(null)]; // popup options - only initialize once, call updateOptions to update the options\n\n  let baseOptions = consolidateOptions({ ...initialOptions,\n    popupReference,\n    reference,\n    showDeferred,\n    hideDeferred,\n    uuid\n  }, hide, updateOptions); // could change incrementally\n\n  let currentOptions = baseOptions;\n  const [options, setOptions] = useState(baseOptions);\n  useEffect(() => {\n    if (options.open && popupReference.current) {\n      let componentWillUnMounted = options.componentMounted(options, popupReference.current);\n      return () => componentWillUnMounted();\n    }\n\n    return undefined;\n  }, [options.open]); // support dynamic popup reference\n\n  useEffect(() => {\n    updateOptions({\n      reference\n    });\n  }, [reference.current]);\n\n  function show() {\n    let newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // avoid event being passed in, cases of <Component action={popup.show} />\n    newOptions && newOptions.type && (newOptions = null); // always use base options for global popup\n\n    const base = baseOptions.global ? baseOptions : options; // mix-in new options if any\n\n    newOptions && Object.keys(newOptions).length > 0 && (currentOptions = consolidateOptions({ ...base,\n      ...newOptions\n    })); // run beforeOpen check to ensure whether need to change state\n    // `force === true` to skip beforeOpen check\n\n    let condition = force || currentOptions.beforeOpen(); // exclude toggleMode case  - null\n    // exclude multiple case    - popupRef\n\n    if (condition === true) {\n      updateOptions(Object.assign(currentOptions, {\n        open: true\n      }));\n    }\n\n    showDeferred.current = AwPromiseService.instance.defer();\n    hideDeferred.current = AwPromiseService.instance.defer();\n    return showDeferred.current.promise;\n  }\n\n  function hide() {\n    updateOptions({\n      open: false\n    }); // case null hideDeferred.current - means already being closed, return directly\n\n    return hideDeferred.current ? hideDeferred.current.promise : Promise.resolve(true);\n  }\n\n  function updateOptions(newOptions) {\n    setOptions(prev => {\n      // always return independent options for global case\n      if (newOptions.global) {\n        return newOptions;\n      }\n\n      return { ...prev,\n        ...newOptions\n      };\n    });\n  }\n\n  return {\n    // popup state and options\n    open: options && options.open,\n    options,\n    // getter - the reference element which owns the popup\n    reference,\n    // popup APIs - the apis to show / hide popup\n    show,\n    hide,\n    update: updateOptions\n  };\n};\n\n_s(usePopupInternal, \"OWeBv77KXYC+QD87XTf5y0PBBTA=\");\n\nconst usePopup = function (initialOptions) {\n  _s2();\n\n  initialOptions = initialOptions || {};\n  const popup = usePopupInternal(initialOptions);\n  popup.userOptions = useRef(null); // mount\n\n  useInitHook(() => {\n    if (initialOptions.preset === 'tooltip') {\n      // tipWrapper.hooks to support tooltip move-in feature\n      // popup.userOptions - dynamic user options\n      // for debug: to quick enable / disable tooltip\n      // let show = () => null;\n      // let hide = () => null;\n      let show = () => popup.show({ ...tipWrapper.hooks,\n        ...popup.userOptions.current\n      }, true);\n\n      let hide = () => popup.hide();\n\n      const tipWrapper = new Tooltip(popup.reference.current, popup.options, show, hide); // return unmount fn inside of `tipWrapper.configure`\n\n      return tipWrapper.configure(tipWrapper);\n    }\n\n    return undefined;\n  }, popup.reference.current);\n  return popup;\n};\n\n_s2(usePopup, \"z+WUv/9RMdImwQPx921VVjrbR3s=\", false, function () {\n  return [usePopupInternal, useInitHook];\n});\n\nconst handler = {\n  get: (target, key) => {\n    return target.prototype[key];\n  }\n}; // initialize popups for viewModel based on it's popup actions\n\nconst usePopups = function (viewModel) {\n  const initialOptionsMap = _.reduce(viewModel.declViewModelJson.actions, (result, _ref, actionId) => {\n    let {\n      actionType,\n      options,\n      inputData\n    } = _ref;\n    actionType === 'popup' && (result[actionId] = inputData && inputData.options || options);\n    return result;\n  }, {}); // fixed loop, safe to use.\n  // https://stackoverflow.com/questions/53906843/why-cant-react-hooks-be-called-inside-loops-or-nested-function\n\n\n  _.each(initialOptionsMap, function useLoop(initialOptions, actionId) {\n    let fn = initialOptions && initialOptions.preset === 'test' ? useTestContent : usePopup;\n    let action = viewModel.actions[actionId];\n    let actionHandler = fn(initialOptions);\n\n    if (!initialOptions || initialOptions.preset !== 'test') {\n      // extend action by proxy\n      action.prototype = actionHandler;\n      actionHandler = new Proxy(action, handler);\n    }\n\n    viewModel.actions[actionId] = actionHandler;\n  });\n}; // test harness for popup, purpose to provide dynamic/rich content to demonstrate the reactivity of popup.\n// remove in future.\n\n\nlet i = 1;\n\nconst title = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"header-label\",\n  children: \"Lorem ipsum\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 162,\n  columnNumber: 15\n}, this); // eslint-disable-next-line max-len\n\n\nconst lorem = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure cillum dolore pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\nconst testActions = [{\n  action: setter => () => setter(prev => {\n    return { ...prev,\n      ...{\n        body: generateContent()\n      }\n    };\n  }),\n  label: 'Load More Data'\n}, {\n  action: setter => () => setter(prev => {\n    return { ...prev,\n      ...{\n        body: generateContent(true)\n      }\n    };\n  }),\n  label: 'Reset Data'\n}, {\n  action: target => () => target.hide(),\n  label: 'Close',\n  path: 'target'\n}];\n\nconst actions = (setter, target, ActionComponent) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: testActions.map(_ref2 => {\n      let {\n        action,\n        label,\n        path\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ActionComponent, {\n        action: path ? action(target) : action(setter),\n        className: \"small sample-btn\",\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 59\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 12\n  }, this);\n};\n\nconst generateContent = function () {\n  let reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (reset) {\n    i = 0;\n  }\n\n  i += 1;\n  const items = Array.from({\n    length: i\n  }, (v, i) => i);\n  return items.reduce((total, item) => {\n    total.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [lorem, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 42\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 47\n      }, _this)]\n    }, item, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }, _this));\n    return total;\n  }, []);\n}; // simulate dynamic binding data\n// content could be changed anytime by actions\n\n\nconst useTestContent = () => {\n  var _s3 = $RefreshSig$();\n\n  return _s3(ActionComponent => {\n    _s3();\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [content, setContent] = useState({\n      header: title,\n      actions: target => actions(setContent, target, ActionComponent),\n      body: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [lorem, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 39\n        }, this)]\n      }, -1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }, this)\n    });\n    return content;\n  }, \"mr1zRfjlSC5BYCs/zGWsMrK6wW4=\");\n};\n\nexport { usePopup, usePopups, useTestContent };","map":{"version":3,"names":["AwPromiseService","consolidateOptions","Tooltip","React","useState","useRef","useEffect","useInitHook","_","hasStaticReference","reference","isString","Boolean","nodeName","usePopupInternal","initialOptions","uuid","popupReference","showDeferred","hideDeferred","baseOptions","hide","updateOptions","currentOptions","options","setOptions","open","current","componentWillUnMounted","componentMounted","undefined","show","newOptions","force","type","base","global","Object","keys","length","condition","beforeOpen","assign","instance","defer","promise","Promise","resolve","prev","update","usePopup","popup","userOptions","preset","tipWrapper","hooks","configure","handler","get","target","key","prototype","usePopups","viewModel","initialOptionsMap","reduce","declViewModelJson","actions","result","actionId","actionType","inputData","each","useLoop","fn","useTestContent","action","actionHandler","Proxy","i","title","lorem","testActions","setter","body","generateContent","label","path","ActionComponent","map","reset","items","Array","from","v","total","item","push","content","setContent","header"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/reactPopup.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-disable require-jsdoc */\n\n/**\n * @module js/reactPopup\n */\nimport AwPromiseService from 'js/awPromiseService';\nimport { consolidateOptions } from 'js/popupService';\nimport { Tooltip } from 'js/tooltip';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useInitHook } from 'js/reactHelper';\nimport _ from 'lodash';\n\nconst hasStaticReference = ( reference ) => reference && ( _.isString( reference ) || Boolean( reference.nodeName ) );\n\nconst usePopupInternal = ( initialOptions ) => {\n    // the reference element which has the popup - could be static or dynamic\n    // 1, static - existed, selector or native dom element, eg: 'div.sw-logoImage'\n    // 2, dynamic - will be generated, vdom element\n    let reference = useRef( null );\n    if( hasStaticReference( initialOptions.reference ) ) {\n        reference = initialOptions.reference;\n    }\n\n    let uuid = useRef( null );\n\n    // the popup element\n    let popupReference = useRef( null );\n\n    // enable popup api return promise\n    let [ showDeferred, hideDeferred ] = [ useRef( null ), useRef( null ) ];\n\n    // popup options - only initialize once, call updateOptions to update the options\n    let baseOptions = consolidateOptions( { ...initialOptions, popupReference, reference, showDeferred, hideDeferred, uuid }, hide, updateOptions );\n    // could change incrementally\n    let currentOptions = baseOptions;\n    const [ options, setOptions ] = useState( baseOptions );\n\n    useEffect( () => {\n        if( options.open && popupReference.current ) {\n            let componentWillUnMounted = options.componentMounted( options, popupReference.current );\n            return () => componentWillUnMounted();\n        }\n        return undefined;\n    }, [ options.open ] );\n\n    // support dynamic popup reference\n    useEffect( () => {\n        updateOptions( { reference } );\n    }, [ reference.current ] );\n\n    function show( newOptions = null, force = false ) {\n        // avoid event being passed in, cases of <Component action={popup.show} />\n        newOptions && newOptions.type && ( newOptions = null );\n        // always use base options for global popup\n        const base = baseOptions.global ? baseOptions : options;\n        // mix-in new options if any\n        newOptions && Object.keys( newOptions ).length > 0 && ( currentOptions = consolidateOptions( { ...base, ...newOptions } ) );\n\n        // run beforeOpen check to ensure whether need to change state\n        // `force === true` to skip beforeOpen check\n        let condition = force || currentOptions.beforeOpen();\n        // exclude toggleMode case  - null\n        // exclude multiple case    - popupRef\n        if( condition === true ) {\n            updateOptions( Object.assign( currentOptions, { open: true } ) );\n        }\n\n        showDeferred.current = AwPromiseService.instance.defer();\n        hideDeferred.current = AwPromiseService.instance.defer();\n\n        return showDeferred.current.promise;\n    }\n\n    function hide() {\n        updateOptions( { open: false } );\n        // case null hideDeferred.current - means already being closed, return directly\n        return hideDeferred.current ? hideDeferred.current.promise : Promise.resolve( true );\n    }\n\n    function updateOptions( newOptions ) {\n        setOptions( ( prev ) => {\n            // always return independent options for global case\n            if( newOptions.global ) {\n                return newOptions;\n            }\n            return { ...prev, ...newOptions };\n        } );\n    }\n\n    return {\n        // popup state and options\n        open: options && options.open,\n        options,\n\n        // getter - the reference element which owns the popup\n        reference,\n\n        // popup APIs - the apis to show / hide popup\n        show,\n        hide,\n        update: updateOptions\n    };\n};\n\nconst usePopup = function( initialOptions ) {\n    initialOptions = initialOptions || {};\n    const popup = usePopupInternal( initialOptions );\n    popup.userOptions = useRef( null );\n\n    // mount\n    useInitHook( () => {\n        if( initialOptions.preset === 'tooltip' ) {\n            // tipWrapper.hooks to support tooltip move-in feature\n            // popup.userOptions - dynamic user options\n            // for debug: to quick enable / disable tooltip\n            // let show = () => null;\n            // let hide = () => null;\n            let show = () => popup.show( { ...tipWrapper.hooks, ...popup.userOptions.current }, true );\n            let hide = () => popup.hide();\n            const tipWrapper = new Tooltip( popup.reference.current, popup.options, show, hide );\n            // return unmount fn inside of `tipWrapper.configure`\n            return tipWrapper.configure( tipWrapper );\n        }\n        return undefined;\n    }, popup.reference.current );\n\n    return popup;\n};\n\nconst handler = {\n    get: ( target, key ) => {\n        return target.prototype[ key ];\n    }\n};\n\n// initialize popups for viewModel based on it's popup actions\nconst usePopups = function( viewModel ) {\n    const initialOptionsMap = _.reduce( viewModel.declViewModelJson.actions, ( result, { actionType, options, inputData }, actionId ) => {\n        actionType === 'popup' && ( result[ actionId ] = inputData && inputData.options || options );\n        return result;\n    }, {} );\n\n    // fixed loop, safe to use.\n    // https://stackoverflow.com/questions/53906843/why-cant-react-hooks-be-called-inside-loops-or-nested-function\n    _.each( initialOptionsMap, function useLoop( initialOptions, actionId ) {\n        let fn = initialOptions && initialOptions.preset === 'test' ? useTestContent : usePopup;\n        let action = viewModel.actions[ actionId ];\n        let actionHandler = fn( initialOptions );\n        if( !initialOptions || initialOptions.preset !== 'test' ) {\n            // extend action by proxy\n            action.prototype = actionHandler;\n            actionHandler = new Proxy( action, handler );\n        }\n        viewModel.actions[ actionId ] = actionHandler;\n    } );\n};\n\n// test harness for popup, purpose to provide dynamic/rich content to demonstrate the reactivity of popup.\n// remove in future.\nlet i = 1;\nconst title = <div className='header-label'>Lorem ipsum</div>;\n// eslint-disable-next-line max-len\nconst lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure cillum dolore pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\nconst testActions = [\n    { action: setter => () => setter( ( prev ) => { return { ...prev, ...{ body: generateContent() } }; } ), label: 'Load More Data' },\n    { action: setter => () => setter( ( prev ) => { return { ...prev, ...{ body: generateContent( true ) } }; } ), label: 'Reset Data' },\n    { action: target => () => target.hide(), label: 'Close', path: 'target' }\n];\nconst actions = ( setter, target, ActionComponent ) => {\n    return <div>\n        { testActions.map( ( { action, label, path } ) => <ActionComponent key={label} action={ path ? action( target ) : action( setter ) } className='small sample-btn'>{ label }</ActionComponent> ) }\n    </div>;\n};\nconst generateContent = ( reset = false ) => {\n    if( reset ) {\n        i = 0;\n    }\n    i += 1;\n    const items = Array.from( { length: i }, ( v, i ) => i );\n    return items.reduce( ( total, item ) => {\n        total.push( <p key={item}>{lorem}<br/><br/></p> );\n        return total;\n    }, [] );\n};\n\n// simulate dynamic binding data\n// content could be changed anytime by actions\nconst useTestContent = () => ( ActionComponent ) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [ content, setContent ] = useState( {\n        header: title,\n        actions: ( target ) => actions( setContent, target, ActionComponent ),\n        body: <p key={-1}>{lorem}<br/><br/></p>\n    } );\n\n    return content;\n};\n\nexport {\n    usePopup,\n    usePopups,\n    useTestContent\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}