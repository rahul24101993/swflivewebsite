{"ast":null,"code":"// Copyright (c) 2021 Siemens\n/* eslint-disable react/display-name */ /**\n * @module js/awClassHOC\n */import React from'react';import sanitizer from'js/sanitizer';import{jsx as _jsx}from\"react/jsx-runtime\";const displayName='AwClass';const awClassHOC=Component=>{// https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\nreturn/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{children,...props}=_ref;let{awClass,...finalProps}=props;let classArray=[];if(Array.isArray(awClass)){// Convert array of object (after expression is resolved in aw-class) to array of array\n// If there is not axpression attached then just add the class name to the array as string\nfor(let i=0;i<awClass.length;i++){if(typeof awClass[i]==='string'){classArray.push(awClass[i]);}else{let obj=awClass[i];for(var k in obj){classArray.push([k,obj[k]]);}}}}else{for(var j in awClass){classArray.push([j,awClass[j]]);}}let classNames=[];for(let l=0;l<classArray.length;l++){if(typeof classArray[l]==='string'){classNames.push(classArray[l]);}else if(classArray[l][1]){classNames.push(classArray[l][0]);}}let classNamesToApply=classNames.join(' ');finalProps.className=finalProps.className?finalProps.className+' '+classNamesToApply:classNamesToApply;if(Component&&typeof Component==='object'){Component.displayName=displayName;}if(typeof Component==='string'){return/*#__PURE__*/_jsx(Component,{...sanitizer.sanitizeHTMLTagProps(finalProps,Component),ref:ref,children:children});}return/*#__PURE__*/_jsx(Component,{...finalProps,ref:ref,children:children});});};export default awClassHOC;","map":null,"metadata":{},"sourceType":"module"}