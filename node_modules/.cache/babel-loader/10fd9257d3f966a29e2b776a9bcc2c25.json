{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListboxService.js\";\n/* eslint-disable valid-jsdoc */\n\nimport AwWidget from 'viewmodel/AwWidgetViewModel';\n/**\n * render function for AwListbox\n * @deprecated afx@4.2.0.\n * @alternative AwWidget with List LOV, reference ListLOVExampleService.js\n * @obsoleteIn afx@5.1.0\n * @returns {JSX.Element} react component\n *\n * previous:\n * <aw-listbox prop=\"data.listBox1\" list=\"data.listBox1Values.dbValue\" action=\"selectionChange\" />\n *\n *\n * now:\n *\n * <AwListbox {...listBox1} action={selectionChange} list={listBox1Values.dbValue} />\n *\n * or\n *\n * <AwListbox {...listBox1} action={selectionChange} />\n * <AwWidget {...listBox1} action={selectionChange} />\n *\n * \"listBox1\": {\n        \"displayName\": \"Active Workspace Based Applications\",\n        \"name\": \"listBox1\",\n        \"type\": \"STRING\",\n        \"isRequired\": true,\n        \"dataProvider\": \"dataProviderListBox1Values\",   // the 'dataProvider' attribute to replace 'list' option\n        \"dbValue\": \"Showcase\",\n        \"uiValue\": \"Showcase\"\n * }\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awListboxRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const {\n    isSelectOnly\n  } = prop; // listbox always has emptyLOVEntry false\n\n  prop.fielddata.emptyLOVEntry = false;\n  const finalProps = { ...prop,\n    // mapped from fields\n    autoCorrect: true,\n    // reverting back the value if incorrect value has typed in\n    isSelectOnly: isSelectOnly,\n    isListbox: true\n  };\n  return /*#__PURE__*/_jsxDEV(AwWidget, { ...finalProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\nexport const onUpdate = props => {\n  const {\n    actions,\n    fields,\n    action,\n    viewModel,\n    list,\n    ...prop\n  } = props;\n  const field = prop;\n  let uiValue = field.fielddata.uiValue; // listbox expected to select the first item when no initial value\n  // list maybe loaded async\n\n  if (!uiValue && list && list.length > 0) {\n    const selectedListItem = list.find(listItem => listItem.selected);\n    let lovEntry = selectedListItem ? selectedListItem : list[0];\n    prop.setLovVal({\n      lovEntry\n    }, null); // call selection action if defined\n\n    setTimeout(() => action && action({\n      lovEntry\n    }));\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListboxService.js"],"names":["awListboxRenderFunction","props","prop","isSelectOnly","finalProps","autoCorrect","isListbox","onUpdate","field","uiValue","list","selectedListItem","listItem","lovEntry","setTimeout","action"],"mappings":";AAAA;;AACA,OAAA,QAAA,MAAA,6BAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,uBAAuB,GAAKC,KAAF,IAAa;EAChD,MAAM;IAAA,SAAA;IAAA,MAAA;IAAA,OAAA;IAAA,IAAA;IAAA,MAAA;IAAA,KAAA;IAAA,QAAA;IAAA,QAAA;IASF,GAAGC;EATD,IAAN,KAAA;EAWA,MAAM;IAAEC;EAAF,IAZ0C,IAYhD,CAZgD,CAchD;;EACAD,IAAI,CAAJA,SAAAA,CAAAA,aAAAA,GAAAA,KAAAA;EACA,MAAME,UAAU,GAAG,EACf,GADe,IAAA;IACN;IACTC,WAAW,EAFI,IAAA;IAEI;IACnBF,YAAY,EAHG,YAAA;IAIfG,SAAS,EAAE;EAJI,CAAnB;EAOA,OAAA,aAAO,OAAA,CAAA,QAAA,EAAA,EAAA,GAAcF;EAAd,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EAAP,IAAO,CAAP;AAvBG,CAAA;AA0BP,OAAO,MAAMG,QAAQ,GAAKN,KAAF,IAAa;EACjC,MAAM;IAAA,OAAA;IAAA,MAAA;IAAA,MAAA;IAAA,SAAA;IAAA,IAAA;IAMF,GAAGC;EAND,IAAN,KAAA;EASA,MAAMM,KAAK,GAAX,IAAA;EACA,IAAIC,OAAO,GAAGD,KAAK,CAALA,SAAAA,CAXmB,OAWjC,CAXiC,CAajC;EACA;;EACA,IAAI,CAAA,OAAA,IAAA,IAAA,IAAoBE,IAAI,CAAJA,MAAAA,GAAxB,CAAA,EAA0C;IACtC,MAAMC,gBAAgB,GAAGD,IAAI,CAAJA,IAAAA,CAAWE,QAAQ,IAAIA,QAAQ,CAAxD,QAAyBF,CAAzB;IACA,IAAIG,QAAQ,GAAGF,gBAAgB,GAAA,gBAAA,GAAsBD,IAAI,CAAzD,CAAyD,CAAzD;IACAR,IAAI,CAAJA,SAAAA,CAAgB;MAAEW;IAAF,CAAhBX,EAHsC,IAGtCA,EAHsC,CAItC;;IACAY,UAAU,CAAE,MAAMC,MAAM,IAAIA,MAAM,CAAE;MAAEF;IAAF,CAAF,CAAxB,CAAVC;EACH;AArBE,CAAA","sourcesContent":["/* eslint-disable valid-jsdoc */\nimport AwWidget from 'viewmodel/AwWidgetViewModel';\n\n/**\n * render function for AwListbox\n * @deprecated afx@4.2.0.\n * @alternative AwWidget with List LOV, reference ListLOVExampleService.js\n * @obsoleteIn afx@5.1.0\n * @returns {JSX.Element} react component\n *\n * previous:\n * <aw-listbox prop=\"data.listBox1\" list=\"data.listBox1Values.dbValue\" action=\"selectionChange\" />\n *\n *\n * now:\n *\n * <AwListbox {...listBox1} action={selectionChange} list={listBox1Values.dbValue} />\n *\n * or\n *\n * <AwListbox {...listBox1} action={selectionChange} />\n * <AwWidget {...listBox1} action={selectionChange} />\n *\n * \"listBox1\": {\n        \"displayName\": \"Active Workspace Based Applications\",\n        \"name\": \"listBox1\",\n        \"type\": \"STRING\",\n        \"isRequired\": true,\n        \"dataProvider\": \"dataProviderListBox1Values\",   // the 'dataProvider' attribute to replace 'list' option\n        \"dbValue\": \"Showcase\",\n        \"uiValue\": \"Showcase\"\n * }\n *\n */\nexport const awListboxRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    const { isSelectOnly } = prop;\n\n    // listbox always has emptyLOVEntry false\n    prop.fielddata.emptyLOVEntry = false;\n    const finalProps = {\n        ...prop, // mapped from fields\n        autoCorrect: true, // reverting back the value if incorrect value has typed in\n        isSelectOnly: isSelectOnly,\n        isListbox: true\n    };\n\n    return <AwWidget {...finalProps} />;\n};\n\nexport const onUpdate = ( props ) => {\n    const {\n        actions,\n        fields,\n        action,\n        viewModel,\n        list,\n        ...prop\n    } = props;\n\n    const field = prop;\n    let uiValue = field.fielddata.uiValue;\n\n    // listbox expected to select the first item when no initial value\n    // list maybe loaded async\n    if( !uiValue && list && list.length > 0 ) {\n        const selectedListItem = list.find( listItem => listItem.selected );\n        let lovEntry = selectedListItem ? selectedListItem : list[ 0 ];\n        prop.setLovVal( { lovEntry }, null );\n        // call selection action if defined\n        setTimeout( () => action && action( { lovEntry } ) );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}