{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * @module js/awHeaderService\n */\nimport _ from 'lodash';\nimport AwPromiseService from 'js/awPromiseService';\nimport AwStateService from 'js/awStateService';\nimport localeService from 'js/localeService';\nimport appCtxService from 'js/appCtxService';\nimport configurationService from 'js/configurationService';\nimport breadCrumbService from 'js/breadCrumbService';\nimport logger from 'js/logger';\nimport { getActiveSublocationTab } from 'js/awSearchSublocationService';\nvar contextName = 'location.titles';\nexport let getTitles = function () {\n  var output = {};\n  var promises = [];\n  promises.push(configurationService.getCfg('solutionDef').then(function (solution) {\n    var browserTitle = solution ? solution.browserTitle : 'Apollo';\n    output.browserTitle = browserTitle;\n    return output;\n  }));\n  ['browserSubTitle', 'headerTitle'].forEach(function (key) {\n    var property = AwStateService.instance.current.data[key];\n\n    if (property) {\n      if (typeof property === 'string') {\n        output[key] = property;\n        promises.push(AwPromiseService.instance.when(output));\n      } else {\n        promises.push(localeService.getLocalizedText(property.source, property.key).then(function (result) {\n          output[key] = result;\n          return output;\n        }));\n      }\n    }\n  });\n  return AwPromiseService.instance.all(promises).then(function () {\n    return output;\n  });\n};\nexport const getBreadcrumbConfig = () => {\n  return AwStateService.instance.current.data ? AwStateService.instance.current.data.breadcrumbConfig : {};\n};\nexport let updateBreadCrumb = function (eventData) {\n  var output = {};\n  const searchCriteria = AwStateService.instance.current.data && AwStateService.instance.current.data.params ? AwStateService.instance.current.data.params : '';\n  const label = AwStateService.instance.current.data && AwStateService.instance.current.data.label ? AwStateService.instance.current.data.label : '';\n  output.breadcrumbConfig = appCtxService.getCtx('breadCrumbConfig');\n  output.breadCrumbProvider = breadCrumbService.refreshBreadcrumbProvider(output.breadcrumbConfig, appCtxService.getCtx('mselected'), eventData.searchFilterCategories, eventData.searchFilterMap, searchCriteria, label, true);\n  return output;\n};\nexport let resetBreadCrumb = function () {\n  var output = {};\n  output.breadcrumbConfig = appCtxService.getCtx('breadCrumbConfig');\n  output.breadCrumbProvider = breadCrumbService.resetBreadcrumbProvider(output.breadcrumbConfig);\n  return output;\n};\nexport let updateDocumentTitles = function () {\n  if (appCtxService.ctx.location) {\n    document.title = appCtxService.ctx.location.titles.browserTitle + (appCtxService.ctx.location.titles.browserSubTitle ? ' - ' + appCtxService.ctx.location.titles.browserSubTitle : '');\n  }\n};\nexport let constructTabs = function (subPages) {\n  var subLocationTabs = [];\n  var promises = [];\n\n  var constructTabFromState = function (name, pageId, priority, isSelected, stateName, selectWhen, isCloseable) {\n    return {\n      classValue: 'sw-tab-title',\n      name: name,\n      tabKey: name,\n      displayTab: true,\n      pageId: pageId,\n      priority: priority,\n      selectedTab: isSelected,\n      state: stateName,\n      selectWhen: selectWhen,\n      visible: true,\n      closeable: isCloseable,\n      closeCommandIcon: 'cmdCloseTab',\n      closeCallback: 'closeTab',\n      closeCommandTitle: 'Close Tab'\n    };\n  };\n\n  subPages.sort(function (obj1, obj2) {\n    return obj1.data.priority - obj2.data.priority;\n  });\n\n  _.forEach(subPages, function (page, index) {\n    var label = page.data.label;\n    var isCloseable = page.data.closeable;\n    var isSelectedTab = page.url === AwStateService.instance.current.url;\n    var priority = page.data.priority ? page.data.priority : 0;\n    var stateName = page.name;\n\n    if (label) {\n      var selectWhen = 'data.subLocationTabCond.currentTab === \\'' + stateName + '\\'';\n\n      if (_.isString(label)) {\n        subLocationTabs.push(constructTabFromState(label, index, priority, isSelectedTab, stateName, selectWhen, isCloseable));\n        promises.push(AwPromiseService.instance.when());\n      } else {\n        promises.push(localeService.getLocalizedText(label.source, label.key).then(function (result) {\n          subLocationTabs.push(constructTabFromState(result, index, priority, isSelectedTab, stateName, selectWhen, isCloseable));\n        }));\n      }\n    }\n  });\n\n  return AwPromiseService.instance.all(promises).then(function () {\n    return subLocationTabs;\n  });\n};\nexport let constructTabsAndGetActiveTab = subPages => {\n  return constructTabs(subPages).then(function (subLocationTabs) {\n    return {\n      subLocationTabs: subLocationTabs,\n      activeTab: getActiveSublocationTab(subLocationTabs)\n    };\n  });\n};\nexport let switchSubLocation = function (pageId, tabTitle, tabsModel, data) {\n  var title = tabTitle || pageId;\n\n  if (title && data && title === data.primaryActiveTab) {\n    return;\n  }\n\n  const {\n    dispatch\n  } = data;\n  var tabToSelect = tabsModel.find(function (tab) {\n    return tab.name === title;\n  });\n\n  if (tabToSelect) {\n    // When the tab widget is forced to update after the state has already changed it will still trigger callback\n    if (tabToSelect.state !== AwStateService.instance.current.name) {\n      dispatch && dispatch({\n        path: 'data.primaryActiveTab',\n        value: title\n      });\n\n      if (tabToSelect.params) {\n        AwStateService.instance.go(tabToSelect.state, tabToSelect.params);\n      } else {\n        AwStateService.instance.go(tabToSelect.state, AwStateService.instance.params);\n      }\n    }\n  } else {\n    logger.error('Missing tab was selected: ' + tabTitle);\n  }\n};\nexport let closeTab = function (subLocationTabs, removedTab) {\n  if (removedTab !== undefined) {\n    const index = subLocationTabs.indexOf(removedTab);\n\n    if (index >= 0) {\n      subLocationTabs.splice(index, 1);\n    }\n  }\n};\nconst awHeaderService = {\n  getTitles,\n  updateBreadCrumb,\n  resetBreadCrumb,\n  updateDocumentTitles,\n  constructTabs,\n  constructTabsAndGetActiveTab,\n  switchSubLocation,\n  getBreadcrumbConfig,\n  closeTab\n};\nexport default awHeaderService;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/layout/src/js/awHeaderService.js"],"names":["contextName","getTitles","output","promises","browserTitle","solution","property","AwStateService","AwPromiseService","getBreadcrumbConfig","updateBreadCrumb","searchCriteria","label","appCtxService","breadCrumbService","eventData","resetBreadCrumb","updateDocumentTitles","document","constructTabs","subLocationTabs","constructTabFromState","classValue","name","tabKey","displayTab","pageId","priority","selectedTab","state","selectWhen","visible","closeable","closeCommandIcon","closeCallback","closeCommandTitle","subPages","obj1","obj2","_","page","isCloseable","isSelectedTab","stateName","constructTabsAndGetActiveTab","activeTab","getActiveSublocationTab","switchSubLocation","title","tabTitle","data","dispatch","tabToSelect","tab","path","value","logger","closeTab","removedTab","index","awHeaderService"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Siemens\n/**\n * @module js/awHeaderService\n */\nimport _ from 'lodash';\nimport AwPromiseService from 'js/awPromiseService';\nimport AwStateService from 'js/awStateService';\nimport localeService from 'js/localeService';\nimport appCtxService from 'js/appCtxService';\nimport configurationService from 'js/configurationService';\nimport breadCrumbService from 'js/breadCrumbService';\nimport logger from 'js/logger';\nimport { getActiveSublocationTab } from 'js/awSearchSublocationService';\n\nvar contextName = 'location.titles';\n\nexport let getTitles = function() {\n    var output = {};\n    var promises = [];\n\n    promises.push( configurationService.getCfg( 'solutionDef' ).then( function( solution ) {\n        var browserTitle = solution ? solution.browserTitle : 'Apollo';\n        output.browserTitle = browserTitle;\n        return output;\n    } ) );\n\n    [ 'browserSubTitle', 'headerTitle' ].forEach( function( key ) {\n        var property = AwStateService.instance.current.data[ key ];\n        if( property ) {\n            if( typeof property === 'string' ) {\n                output[ key ] = property;\n                promises.push( AwPromiseService.instance.when( output ) );\n            } else {\n                promises.push( localeService.getLocalizedText( property.source, property.key )\n                    .then( function( result ) {\n                        output[ key ] = result;\n                        return output;\n                    } ) );\n            }\n        }\n    } );\n\n    return AwPromiseService.instance.all( promises ).then( function() {\n        return output;\n    } );\n};\n\nexport const getBreadcrumbConfig = () => {\n    return AwStateService.instance.current.data ? AwStateService.instance.current.data.breadcrumbConfig : {};\n};\n\nexport let updateBreadCrumb = function( eventData ) {\n    var output = {};\n    const searchCriteria = AwStateService.instance.current.data && AwStateService.instance.current.data.params ? AwStateService.instance.current.data.params : '';\n    const label = AwStateService.instance.current.data && AwStateService.instance.current.data.label ? AwStateService.instance.current.data.label : '';\n    output.breadcrumbConfig = appCtxService.getCtx( 'breadCrumbConfig' );\n    output.breadCrumbProvider = breadCrumbService.refreshBreadcrumbProvider( output.breadcrumbConfig,\n        appCtxService.getCtx( 'mselected' ),\n        eventData.searchFilterCategories, eventData.searchFilterMap,\n        searchCriteria, label, true );\n\n    return output;\n};\n\nexport let resetBreadCrumb = function() {\n    var output = {};\n    output.breadcrumbConfig = appCtxService.getCtx( 'breadCrumbConfig' );\n    output.breadCrumbProvider = breadCrumbService.resetBreadcrumbProvider( output.breadcrumbConfig );\n    return output;\n};\n\nexport let updateDocumentTitles = function() {\n    if( appCtxService.ctx.location ) {\n        document.title = appCtxService.ctx.location.titles.browserTitle +\n             ( appCtxService.ctx.location.titles.browserSubTitle ? ' - ' + appCtxService.ctx.location.titles.browserSubTitle : '' );\n    }\n};\n\nexport let constructTabs = function( subPages ) {\n    var subLocationTabs = [];\n    var promises = [];\n\n    var constructTabFromState = function( name, pageId, priority, isSelected, stateName, selectWhen, isCloseable ) {\n        return {\n            classValue: 'sw-tab-title',\n            name: name,\n            tabKey: name,\n            displayTab: true,\n            pageId: pageId,\n            priority: priority,\n            selectedTab: isSelected,\n            state: stateName,\n            selectWhen: selectWhen,\n            visible: true,\n            closeable: isCloseable,\n            closeCommandIcon: 'cmdCloseTab',\n            closeCallback: 'closeTab',\n            closeCommandTitle: 'Close Tab'\n        };\n    };\n\n    subPages.sort( function( obj1, obj2 ) {\n        return obj1.data.priority - obj2.data.priority;\n    } );\n\n    _.forEach( subPages, function( page, index ) {\n        var label = page.data.label;\n        var isCloseable = page.data.closeable;\n        var isSelectedTab = page.url === AwStateService.instance.current.url;\n        var priority = page.data.priority ? page.data.priority : 0;\n        var stateName = page.name;\n        if( label ) {\n            var selectWhen = 'data.subLocationTabCond.currentTab === \\'' + stateName + '\\'';\n            if( _.isString( label ) ) {\n                subLocationTabs.push( constructTabFromState( label, index, priority, isSelectedTab, stateName, selectWhen, isCloseable ) );\n                promises.push( AwPromiseService.instance.when() );\n            } else {\n                promises.push( localeService.getLocalizedText( label.source, label.key ).then( function( result ) {\n                    subLocationTabs.push( constructTabFromState( result, index, priority, isSelectedTab, stateName, selectWhen, isCloseable ) );\n                } ) );\n            }\n        }\n    } );\n\n    return AwPromiseService.instance.all( promises ).then( function() {\n        return subLocationTabs;\n    } );\n};\n\nexport let constructTabsAndGetActiveTab = ( subPages ) => {\n    return constructTabs( subPages ).then( function( subLocationTabs ) {\n        return {\n            subLocationTabs: subLocationTabs,\n            activeTab: getActiveSublocationTab( subLocationTabs )\n        };\n    } );\n};\n\nexport let switchSubLocation = function( pageId, tabTitle, tabsModel, data ) {\n    var title = tabTitle || pageId;\n    if( title && data && title === data.primaryActiveTab ) {\n        return;\n    }\n    const { dispatch } = data;\n    var tabToSelect = tabsModel.find( function( tab ) {\n        return tab.name === title;\n    } );\n\n    if( tabToSelect ) {\n        // When the tab widget is forced to update after the state has already changed it will still trigger callback\n        if( tabToSelect.state !== AwStateService.instance.current.name ) {\n            dispatch && dispatch( { path: 'data.primaryActiveTab', value: title } );\n            if( tabToSelect.params ) {\n                AwStateService.instance.go( tabToSelect.state, tabToSelect.params );\n            } else {\n                AwStateService.instance.go( tabToSelect.state, AwStateService.instance.params );\n            }\n        }\n    } else {\n        logger.error( 'Missing tab was selected: ' + tabTitle );\n    }\n};\nexport let closeTab = function( subLocationTabs, removedTab ) {\n    if( removedTab !== undefined ) {\n        const index = subLocationTabs.indexOf( removedTab );\n        if( index >= 0 ) {\n            subLocationTabs.splice( index, 1 );\n        }\n    }\n};\n\nconst awHeaderService = {\n    getTitles,\n    updateBreadCrumb,\n    resetBreadCrumb,\n    updateDocumentTitles,\n    constructTabs,\n    constructTabsAndGetActiveTab,\n    switchSubLocation,\n    getBreadcrumbConfig,\n    closeTab\n};\nexport default awHeaderService;\n"]},"metadata":{},"sourceType":"module"}