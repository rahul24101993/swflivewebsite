{"ast":null,"code":"// Copyright (c) 2021 Siemens\nimport wcagService from 'js/wcagService';\nimport _ from 'lodash';\nexport const initializeStandardSublocation = provider => {\n  const sublocationStyles = {};\n\n  if (provider.awSubLocationPref) {\n    const verticalLayout = provider.awSubLocationPref.orientation === 'HORIZONTAL';\n    const flipLayout = provider.awSubLocationPref.flipLayout;\n\n    if (verticalLayout) {\n      if (flipLayout) {\n        sublocationStyles.verticalReverse = true;\n      } else {\n        sublocationStyles.vertical = true;\n      }\n    } else {\n      if (flipLayout) {\n        sublocationStyles.horizontalReverse = true;\n      }\n    }\n  }\n\n  wcagService.applyFocusOnMain();\n  wcagService.updateArialabelForDuplicateLandmarks();\n  return sublocationStyles;\n};\nexport const updateSearchStateWithSelection = (searchState, selectionData) => {\n  if (!_.isEmpty(selectionData)) {\n    let newSearchstate = searchState ? { ...searchState.value\n    } : undefined;\n\n    if (newSearchstate) {\n      if (selectionData.source === 'primary') {\n        newSearchstate.pwaSelection = selectionData.selected ? selectionData.selected : [];\n      } else if (selectionData.source === 'base' || selectionData.source === undefined) {\n        newSearchstate.pwaSelection = [];\n      }\n\n      searchState.update(newSearchstate);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pagelevelcomponents/src/js/AwStandardSublocationService.js"],"names":["initializeStandardSublocation","provider","sublocationStyles","verticalLayout","flipLayout","wcagService","updateSearchStateWithSelection","_","newSearchstate","searchState","value","selectionData"],"mappings":"AAAA;AACA,OAAA,WAAA,MAAA,gBAAA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,OAAO,MAAMA,6BAA6B,GAAKC,QAAF,IAAgB;EACzD,MAAMC,iBAAiB,GAAvB,EAAA;;EACA,IAAID,QAAQ,CAAZ,iBAAA,EAAiC;IAC7B,MAAME,cAAc,GAAGF,QAAQ,CAARA,iBAAAA,CAAAA,WAAAA,KAAvB,YAAA;IACA,MAAMG,UAAU,GAAGH,QAAQ,CAARA,iBAAAA,CAAnB,UAAA;;IAEA,IAAA,cAAA,EAAqB;MACjB,IAAA,UAAA,EAAiB;QACbC,iBAAiB,CAAjBA,eAAAA,GAAAA,IAAAA;MADJ,CAAA,MAEO;QACHA,iBAAiB,CAAjBA,QAAAA,GAAAA,IAAAA;MACH;IALL,CAAA,MAMO;MACH,IAAA,UAAA,EAAiB;QACbA,iBAAiB,CAAjBA,iBAAAA,GAAAA,IAAAA;MACH;IACJ;EACJ;;EACDG,WAAW,CAAXA,gBAAAA;EACAA,WAAW,CAAXA,oCAAAA;EACA,OAAA,iBAAA;AApBG,CAAA;AAuBP,OAAO,MAAMC,8BAA8B,GAAG,CAAA,WAAA,EAAA,aAAA,KAAkC;EAC5E,IAAI,CAACC,CAAC,CAADA,OAAAA,CAAL,aAAKA,CAAL,EAAkC;IAC9B,IAAIC,cAAc,GAAGC,WAAW,GAAG,EAAE,GAAGA,WAAW,CAACC;IAAjB,CAAH,GAAhC,SAAA;;IACA,IAAA,cAAA,EAAqB;MACjB,IAAIC,aAAa,CAAbA,MAAAA,KAAJ,SAAA,EAAyC;QACrCH,cAAc,CAAdA,YAAAA,GAA8BG,aAAa,CAAbA,QAAAA,GAAyBA,aAAa,CAAtCA,QAAAA,GAA9BH,EAAAA;MADJ,CAAA,MAEO,IAAIG,aAAa,CAAbA,MAAAA,KAAAA,MAAAA,IAAmCA,aAAa,CAAbA,MAAAA,KAAvC,SAAA,EAA4E;QAC/EH,cAAc,CAAdA,YAAAA,GAAAA,EAAAA;MACH;;MACDC,WAAW,CAAXA,MAAAA,CAAAA,cAAAA;IACH;EACJ;AAXE,CAAA","sourcesContent":["// Copyright (c) 2021 Siemens\nimport wcagService from 'js/wcagService';\nimport _ from 'lodash';\n\nexport const initializeStandardSublocation = ( provider ) => {\n    const sublocationStyles = {};\n    if( provider.awSubLocationPref ) {\n        const verticalLayout = provider.awSubLocationPref.orientation === 'HORIZONTAL';\n        const flipLayout = provider.awSubLocationPref.flipLayout;\n\n        if( verticalLayout ) {\n            if( flipLayout ) {\n                sublocationStyles.verticalReverse = true;\n            } else {\n                sublocationStyles.vertical = true;\n            }\n        } else {\n            if( flipLayout ) {\n                sublocationStyles.horizontalReverse = true;\n            }\n        }\n    }\n    wcagService.applyFocusOnMain();\n    wcagService.updateArialabelForDuplicateLandmarks();\n    return sublocationStyles;\n};\n\nexport const updateSearchStateWithSelection = ( searchState, selectionData ) => {\n    if( !_.isEmpty( selectionData ) ) {\n        let newSearchstate = searchState ? { ...searchState.value } : undefined;\n        if( newSearchstate ) {\n            if( selectionData.source === 'primary' ) {\n                newSearchstate.pwaSelection = selectionData.selected ? selectionData.selected : [];\n            } else if( selectionData.source === 'base' || selectionData.source === undefined ) {\n                newSearchstate.pwaSelection = [];\n            }\n            searchState.update( newSearchstate );\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}