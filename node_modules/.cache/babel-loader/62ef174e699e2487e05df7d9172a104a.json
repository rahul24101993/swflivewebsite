{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * Main Entry of PLStats\n *\n * @module js/splmStatsService\n */\nimport locationService from 'js/splmStatsLocationService';\nimport jsService from 'js/splmStatsJsService';\nimport xhrService from 'js/splmStatsXhrService';\nimport mutationService from 'js/splmStatsMutationService';\nimport browserUtils from 'js/browserUtils';\nimport cfgSvc from 'js/configurationService';\nimport Benchmark from 'js/splmStatsBenchmark';\nimport Performance from 'js/splmStatsPerformance';\nimport DOMProcessor from 'js/splmStatsDOMProcessor';\nimport JSProcessor from 'js/splmStatsJsProcessor';\nimport MEMProcessor from 'js/splmStatsMemProcessor';\nimport XHRProcessor from 'js/splmStatsXhrProcessor';\nimport ComponentProcessor from 'js/splmStatsComponentProcessor';\nimport ClickListener from 'js/splmStatsClickListener';\nimport LocationListener from 'js/splmStatsLocationListener';\nimport AnalyticsReporter from 'js/splmStatsAnalyticsReporter';\nimport CucumberReporter from 'js/splmStatsCucumberReporter';\nimport DebugReporter from 'js/splmStatsDebugReporter';\nimport MobileReporter from 'js/splmStatsMobileReporter';\nimport ClientReporter from 'js/splmStatsClientReporter';\nimport { createProfiler as createBaseProfiler } from 'js/splmStatsProfiler';\nimport { LAST_DIGEST_BUSY_WAIT } from 'js/splmStatsConstants';\nimport splmStatsUtils from './splmStatsUtils';\nconst _defaultAnalyticsConfig = {\n  splmStatsConfiguration: {\n    name: 'ActiveWorkspaceTest',\n    appCtxValueFilters: ['com.siemens.splm.clientfx.tcui.xrt.', 'com.siemens.splm.client.search.', 'com.siemens.splm.client.', 'teamcenter.search.search', 'SubLocation', 'Location'],\n    appCtxKeys: [{\n      name: 'Location',\n      searchPaths: [['locationContext', 'ActiveWorkspace:Location']]\n    }, {\n      name: 'Sublocation',\n      searchPaths: [['locationContext', 'ActiveWorkspace:SubLocation']]\n    }, {\n      name: 'ViewMode',\n      searchPaths: [['ViewModeContext', 'ViewModeContext']]\n    }, {\n      name: 'PrimaryPage',\n      searchPaths: [['xrtPageContext', 'primaryXrtPageID']]\n    }, {\n      name: 'SecondaryPage',\n      searchPaths: [['xrtPageContext', 'secondaryXrtPageID']]\n    }, {\n      name: 'clientScopeURI',\n      searchPaths: [['sublocation', 'clientScopeURI']]\n    }, {\n      name: 'SelectedObjectType',\n      searchPaths: [['selected', 'type']]\n    }],\n    triggers: {\n      commands: []\n    }\n  }\n};\nconst componentProcessor = new ComponentProcessor();\nvar plStatsEnabled = false;\nconst clientReporter = new ClientReporter();\n\nconst isAnalyticsConfigured = analyticsConfigObject => {\n  return analyticsConfigObject && Object.keys(analyticsConfigObject).length > 0;\n};\n\nexport const install = () => {\n  xhrService.install();\n  mutationService.install();\n  locationService.install();\n};\nexport const uninstall = () => {\n  xhrService.uninstall();\n  mutationService.uninstall();\n  locationService.uninstall();\n};\nexport const createProfiler = function () {\n  let watchers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LAST_DIGEST_BUSY_WAIT;\n  // Provide resetWait function as default\n  const resetWatcher = {\n    register: (start, done) => {\n      resetWatcher.resetWait = () => (start() || true) && done();\n    },\n    unregister: () => {\n      delete resetWatcher.resetWait;\n    }\n  }; // JS watcher\n\n  const jsWatcher = {};\n\n  jsWatcher.register = (start, done) => {\n    jsWatcher.proc = {\n      start,\n      done\n    };\n    jsService.addProc(jsWatcher.proc);\n  };\n\n  jsWatcher.unregister = () => {\n    jsService.removeProc(jsWatcher.proc);\n    delete jsWatcher.proc;\n  }; // Location watcher\n\n\n  const locWatcher = {};\n\n  locWatcher.register = (start, done) => {\n    locWatcher.proc = {\n      start,\n      done\n    };\n    locationService.addProc(locWatcher.proc);\n  };\n\n  locWatcher.unregister = () => {\n    locationService.removeProc(locWatcher.proc);\n    delete locWatcher.proc;\n  }; // XHR watcher\n\n\n  const xhrWatcher = {};\n\n  xhrWatcher.register = (start, done) => {\n    xhrWatcher.proc = {\n      start,\n      done\n    };\n    xhrService.addProc(xhrWatcher.proc);\n  };\n\n  xhrWatcher.unregister = () => {\n    xhrService.removeProc(xhrWatcher.proc);\n    delete xhrWatcher.proc;\n  }; // Browser mutation watcher\n\n\n  const mutationWatcher = {};\n\n  mutationWatcher.register = (start, done) => {\n    mutationWatcher.proc = {\n      start,\n      done\n    };\n    mutationService.addProc(mutationWatcher.proc);\n  };\n\n  mutationWatcher.unregister = () => {\n    mutationService.removeProc(mutationWatcher.proc);\n    delete mutationWatcher.proc;\n  };\n\n  const profiler = createBaseProfiler([...watchers, jsWatcher, xhrWatcher, resetWatcher, mutationWatcher], interval);\n\n  profiler.resetWait = () => resetWatcher.resetWait();\n\n  return profiler;\n};\n/**\n * Create default benckmark for PLStats\n * @returns {Benchmark} benchmark object\n */\n\nexport function createBenchmark() {\n  const benchmark = new Benchmark();\n  benchmark.addProcessor('JS', new JSProcessor());\n  benchmark.addProcessor('DOM', new DOMProcessor());\n  benchmark.addProcessor('XHR', new XHRProcessor());\n  benchmark.addProcessor('MEM', new MEMProcessor());\n  benchmark.addProcessor('Components', componentProcessor);\n  benchmark.includeProcessorTime();\n  return benchmark;\n}\n/**\n * Creates cucumber monitor/reporter for automation tests\n * @returns {Performance} performance object\n */\n\nexport function createCucumberMonitor() {\n  enablePLStats();\n  const benchmark = createBenchmark();\n  benchmark.addReporter(new DebugReporter());\n  benchmark.addReporter(new CucumberReporter());\n  const perf = new Performance({\n    createProfiler\n  });\n  perf.setBenchmark(benchmark);\n  perf.addListener(new ClickListener());\n  perf.addListener(new LocationListener());\n  return perf;\n}\n/**\n * Create default monitor for PLStats\n * @returns {Performance} default performance object object\n */\n\nexport function createPerformance() {\n  const benchmark = createBenchmark();\n  enablePLStats();\n  benchmark.addReporter(new DebugReporter());\n  const perf = new Performance({\n    createProfiler\n  });\n  perf.setBenchmark(benchmark);\n  perf.addListener(new ClickListener());\n  perf.addListener(new LocationListener());\n  return perf; // then enable and run\n}\n/**\n * Adds analytics cfg\n */\n\nexport function installAnalyticsConfig() {\n  let analyticsConfigObject = cfgSvc.getCfgCached('analytics');\n\n  if (!isAnalyticsConfigured(analyticsConfigObject)) {\n    // handle unit test scenario when analytics isn't set\n    cfgSvc.add('analytics', _defaultAnalyticsConfig);\n  } else if (!isAnalyticsConfigured(analyticsConfigObject.splmStatsConfiguration)) {\n    // merge into existing analytics root object\n    cfgSvc.add('analytics.splmStatsConfiguration', _defaultAnalyticsConfig.splmStatsConfiguration);\n  }\n}\n/**\n * Function to check if PLStats is enabled\n * @returns {Boolean} plStatsEnabled\n */\n\nexport function isPLStatsEnabled() {\n  return plStatsEnabled;\n}\n/**\n * Function to enable flag for plStats\n */\n\nexport function enablePLStats() {\n  plStatsEnabled = true;\n  jsService.install();\n}\n/**\n * Function to disable flag for plStats\n */\n\nexport function disablePLStats() {\n  plStatsEnabled = false;\n  jsService.uninstall();\n}\n/**\n * Track Component details for PLStats reporting\n * @param {string} componentName - Name of component\n * @param {float} renderTime - Time component took to render\n */\n\nexport function trackComponent(componentName) {\n  componentProcessor.endComponentRenderTime();\n\n  if (isPLStatsEnabled()) {\n    componentProcessor.addComponent(componentName);\n  }\n}\n/**\n * Function to start component render timer\n */\n\nexport function startComponentRenderTime() {\n  if (isPLStatsEnabled()) {\n    componentProcessor.startComponentRenderTime();\n  }\n}\n/**\n *\n * @returns {Object} PLStatsData - Object containing PLStats Data to display on performance monitor panel\n */\n\nexport function getPLStatsData() {\n  return clientReporter.getPLStatsData();\n}\n/**\n * Initializes profiler\n * @param {Boolean} usePLStatsClient - Flag for if plStats is enabled from client\n * @returns {Object} performance - Object to track performance object from client\n */\n\nexport function initProfiler() {\n  let usePLStatsClient = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let performance = null;\n  const urlAttrs = browserUtils.getUrlAttributes();\n  const usePLStats = urlAttrs.usePLStats !== undefined;\n\n  if (usePLStats || !splmStatsUtils.isAnalyticsDisabled() || usePLStatsClient) {\n    // Enable profiler/performance by default\n    enablePLStats();\n    const benchmark = createBenchmark();\n    benchmark.addReporter(new AnalyticsReporter());\n\n    if (usePLStats || usePLStatsClient) {\n      benchmark.addReporter(new DebugReporter());\n    }\n\n    if ((usePLStats || usePLStatsClient) && browserUtils.isMobileOS) {\n      benchmark.addReporter(new MobileReporter());\n    }\n\n    if (usePLStatsClient) {\n      benchmark.addReporter(clientReporter);\n    }\n\n    performance = new Performance({\n      createProfiler\n    });\n    performance.setBenchmark(benchmark);\n    performance.addListener(new ClickListener());\n    performance.addListener(new LocationListener());\n    performance.enable();\n    performance.run();\n  }\n\n  return performance;\n}\nexport default {\n  install,\n  uninstall,\n  createProfiler,\n  createBenchmark,\n  createCucumberMonitor,\n  createPerformance,\n  installAnalyticsConfig,\n  isPLStatsEnabled,\n  enablePLStats,\n  disablePLStats,\n  trackComponent,\n  startComponentRenderTime,\n  getPLStatsData,\n  initProfiler\n};","map":{"version":3,"names":["locationService","jsService","xhrService","mutationService","browserUtils","cfgSvc","Benchmark","Performance","DOMProcessor","JSProcessor","MEMProcessor","XHRProcessor","ComponentProcessor","ClickListener","LocationListener","AnalyticsReporter","CucumberReporter","DebugReporter","MobileReporter","ClientReporter","createProfiler","createBaseProfiler","LAST_DIGEST_BUSY_WAIT","splmStatsUtils","_defaultAnalyticsConfig","splmStatsConfiguration","name","appCtxValueFilters","appCtxKeys","searchPaths","triggers","commands","componentProcessor","plStatsEnabled","clientReporter","isAnalyticsConfigured","analyticsConfigObject","Object","keys","length","install","uninstall","watchers","interval","resetWatcher","register","start","done","resetWait","unregister","jsWatcher","proc","addProc","removeProc","locWatcher","xhrWatcher","mutationWatcher","profiler","createBenchmark","benchmark","addProcessor","includeProcessorTime","createCucumberMonitor","enablePLStats","addReporter","perf","setBenchmark","addListener","createPerformance","installAnalyticsConfig","getCfgCached","add","isPLStatsEnabled","disablePLStats","trackComponent","componentName","endComponentRenderTime","addComponent","startComponentRenderTime","getPLStatsData","initProfiler","usePLStatsClient","performance","urlAttrs","getUrlAttributes","usePLStats","undefined","isAnalyticsDisabled","isMobileOS","enable","run"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/plstats/src/js/splmStatsService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * Main Entry of PLStats\n *\n * @module js/splmStatsService\n */\nimport locationService from 'js/splmStatsLocationService';\nimport jsService from 'js/splmStatsJsService';\nimport xhrService from 'js/splmStatsXhrService';\nimport mutationService from 'js/splmStatsMutationService';\nimport browserUtils from 'js/browserUtils';\nimport cfgSvc from 'js/configurationService';\n\nimport Benchmark from 'js/splmStatsBenchmark';\nimport Performance from 'js/splmStatsPerformance';\n\nimport DOMProcessor from 'js/splmStatsDOMProcessor';\nimport JSProcessor from 'js/splmStatsJsProcessor';\nimport MEMProcessor from 'js/splmStatsMemProcessor';\nimport XHRProcessor from 'js/splmStatsXhrProcessor';\nimport ComponentProcessor from 'js/splmStatsComponentProcessor';\n\nimport ClickListener from 'js/splmStatsClickListener';\nimport LocationListener from 'js/splmStatsLocationListener';\n\nimport AnalyticsReporter from 'js/splmStatsAnalyticsReporter';\nimport CucumberReporter from 'js/splmStatsCucumberReporter';\nimport DebugReporter from 'js/splmStatsDebugReporter';\nimport MobileReporter from 'js/splmStatsMobileReporter';\nimport ClientReporter from 'js/splmStatsClientReporter';\n\nimport { createProfiler as createBaseProfiler } from 'js/splmStatsProfiler';\nimport { LAST_DIGEST_BUSY_WAIT } from 'js/splmStatsConstants';\nimport splmStatsUtils from './splmStatsUtils';\n\nconst _defaultAnalyticsConfig = {\n    splmStatsConfiguration: {\n        name: 'ActiveWorkspaceTest',\n        appCtxValueFilters: [\n            'com.siemens.splm.clientfx.tcui.xrt.',\n            'com.siemens.splm.client.search.',\n            'com.siemens.splm.client.',\n            'teamcenter.search.search',\n            'SubLocation',\n            'Location'\n        ],\n        appCtxKeys: [ {\n            name: 'Location',\n            searchPaths: [\n                [ 'locationContext', 'ActiveWorkspace:Location' ]\n            ]\n        },\n        {\n            name: 'Sublocation',\n            searchPaths: [\n                [ 'locationContext', 'ActiveWorkspace:SubLocation' ]\n            ]\n        },\n        {\n            name: 'ViewMode',\n            searchPaths: [\n                [ 'ViewModeContext', 'ViewModeContext' ]\n            ]\n        },\n        {\n            name: 'PrimaryPage',\n            searchPaths: [\n                [ 'xrtPageContext', 'primaryXrtPageID' ]\n            ]\n        },\n        {\n            name: 'SecondaryPage',\n            searchPaths: [\n                [ 'xrtPageContext', 'secondaryXrtPageID' ]\n            ]\n        },\n        {\n            name: 'clientScopeURI',\n            searchPaths: [\n                [ 'sublocation', 'clientScopeURI' ]\n            ]\n        },\n        {\n            name: 'SelectedObjectType',\n            searchPaths: [\n                [ 'selected', 'type' ]\n            ]\n        }\n        ],\n        triggers: {\n            commands: []\n        }\n    }\n};\n\nconst componentProcessor = new ComponentProcessor();\nvar plStatsEnabled = false;\nconst clientReporter = new ClientReporter();\nconst isAnalyticsConfigured = ( analyticsConfigObject ) => {\n    return analyticsConfigObject && Object.keys( analyticsConfigObject ).length > 0;\n};\n\nexport const install = () => {\n    xhrService.install();\n    mutationService.install();\n    locationService.install();\n};\n\nexport const uninstall = () => {\n    xhrService.uninstall();\n    mutationService.uninstall();\n    locationService.uninstall();\n};\n\nexport const createProfiler = ( watchers = [], interval = LAST_DIGEST_BUSY_WAIT ) => {\n    // Provide resetWait function as default\n    const resetWatcher = {\n        register: ( start, done ) => {\n            resetWatcher.resetWait = () => ( start() || true ) && done();\n        },\n        unregister: () => {\n            delete resetWatcher.resetWait;\n        }\n    };\n\n    // JS watcher\n    const jsWatcher = {};\n    jsWatcher.register = ( start, done ) => {\n        jsWatcher.proc = { start, done };\n        jsService.addProc( jsWatcher.proc );\n    };\n\n    jsWatcher.unregister = () => {\n        jsService.removeProc( jsWatcher.proc );\n        delete jsWatcher.proc;\n    };\n\n    // Location watcher\n    const locWatcher = {};\n    locWatcher.register = ( start, done ) => {\n        locWatcher.proc = { start, done };\n        locationService.addProc( locWatcher.proc );\n    };\n    locWatcher.unregister = () => {\n        locationService.removeProc( locWatcher.proc );\n        delete locWatcher.proc;\n    };\n\n    // XHR watcher\n    const xhrWatcher = {};\n    xhrWatcher.register = ( start, done ) => {\n        xhrWatcher.proc = { start, done };\n        xhrService.addProc( xhrWatcher.proc );\n    };\n    xhrWatcher.unregister = () => {\n        xhrService.removeProc( xhrWatcher.proc );\n        delete xhrWatcher.proc;\n    };\n\n    // Browser mutation watcher\n    const mutationWatcher = {};\n    mutationWatcher.register = ( start, done ) => {\n        mutationWatcher.proc = { start, done };\n        mutationService.addProc( mutationWatcher.proc );\n    };\n    mutationWatcher.unregister = () => {\n        mutationService.removeProc( mutationWatcher.proc );\n        delete mutationWatcher.proc;\n    };\n\n    const profiler = createBaseProfiler( [\n        ...watchers,\n        jsWatcher,\n        xhrWatcher,\n        resetWatcher,\n        mutationWatcher\n    ], interval );\n\n    profiler.resetWait = () => resetWatcher.resetWait();\n\n    return profiler;\n};\n\n/**\n * Create default benckmark for PLStats\n * @returns {Benchmark} benchmark object\n */\nexport function createBenchmark() {\n    const benchmark = new Benchmark();\n    benchmark.addProcessor( 'JS', new JSProcessor() );\n    benchmark.addProcessor( 'DOM', new DOMProcessor() );\n    benchmark.addProcessor( 'XHR', new XHRProcessor() );\n    benchmark.addProcessor( 'MEM', new MEMProcessor() );\n    benchmark.addProcessor( 'Components', componentProcessor );\n    benchmark.includeProcessorTime();\n    return benchmark;\n}\n\n/**\n * Creates cucumber monitor/reporter for automation tests\n * @returns {Performance} performance object\n */\nexport function createCucumberMonitor() {\n    enablePLStats();\n    const benchmark = createBenchmark();\n\n    benchmark.addReporter( new DebugReporter() );\n    benchmark.addReporter( new CucumberReporter() );\n\n    const perf = new Performance( { createProfiler } );\n\n    perf.setBenchmark( benchmark );\n\n    perf.addListener( new ClickListener() );\n    perf.addListener( new LocationListener() );\n\n    return perf;\n}\n\n/**\n * Create default monitor for PLStats\n * @returns {Performance} default performance object object\n */\nexport function createPerformance() {\n    const benchmark = createBenchmark();\n    enablePLStats();\n\n    benchmark.addReporter( new DebugReporter() );\n\n    const perf = new Performance( { createProfiler } );\n\n    perf.setBenchmark( benchmark );\n\n    perf.addListener( new ClickListener() );\n    perf.addListener( new LocationListener() );\n\n    return perf;\n\n    // then enable and run\n}\n\n/**\n * Adds analytics cfg\n */\nexport function installAnalyticsConfig() {\n    let analyticsConfigObject = cfgSvc.getCfgCached( 'analytics' );\n    if( !isAnalyticsConfigured( analyticsConfigObject ) ) {\n        // handle unit test scenario when analytics isn't set\n        cfgSvc.add( 'analytics', _defaultAnalyticsConfig );\n    } else if( !isAnalyticsConfigured( analyticsConfigObject.splmStatsConfiguration ) ) {\n        // merge into existing analytics root object\n        cfgSvc.add( 'analytics.splmStatsConfiguration', _defaultAnalyticsConfig.splmStatsConfiguration );\n    }\n}\n\n/**\n * Function to check if PLStats is enabled\n * @returns {Boolean} plStatsEnabled\n */\nexport function isPLStatsEnabled() {\n    return plStatsEnabled;\n}\n\n/**\n * Function to enable flag for plStats\n */\nexport function enablePLStats() {\n    plStatsEnabled = true;\n    jsService.install();\n}\n\n/**\n * Function to disable flag for plStats\n */\nexport function disablePLStats() {\n    plStatsEnabled = false;\n    jsService.uninstall();\n}\n\n/**\n * Track Component details for PLStats reporting\n * @param {string} componentName - Name of component\n * @param {float} renderTime - Time component took to render\n */\nexport function trackComponent( componentName ) {\n    componentProcessor.endComponentRenderTime();\n    if( isPLStatsEnabled() ) {\n        componentProcessor.addComponent( componentName );\n    }\n}\n\n/**\n * Function to start component render timer\n */\nexport function startComponentRenderTime() {\n    if( isPLStatsEnabled() ) {\n        componentProcessor.startComponentRenderTime();\n    }\n}\n\n/**\n *\n * @returns {Object} PLStatsData - Object containing PLStats Data to display on performance monitor panel\n */\nexport function getPLStatsData() {\n    return clientReporter.getPLStatsData();\n}\n\n/**\n * Initializes profiler\n * @param {Boolean} usePLStatsClient - Flag for if plStats is enabled from client\n * @returns {Object} performance - Object to track performance object from client\n */\nexport function initProfiler( usePLStatsClient = false ) {\n    let performance = null;\n    const urlAttrs = browserUtils.getUrlAttributes();\n    const usePLStats = urlAttrs.usePLStats !== undefined;\n    if( usePLStats || !splmStatsUtils.isAnalyticsDisabled() || usePLStatsClient ) {\n        // Enable profiler/performance by default\n        enablePLStats();\n        const benchmark = createBenchmark();\n        benchmark.addReporter( new AnalyticsReporter() );\n\n        if( usePLStats || usePLStatsClient ) {\n            benchmark.addReporter( new DebugReporter() );\n        }\n        if( ( usePLStats || usePLStatsClient ) && browserUtils.isMobileOS ) {\n            benchmark.addReporter( new MobileReporter() );\n        }\n        if( usePLStatsClient ) {\n            benchmark.addReporter( clientReporter );\n        }\n        performance = new Performance( { createProfiler } );\n        performance.setBenchmark( benchmark );\n\n        performance.addListener( new ClickListener() );\n        performance.addListener( new LocationListener() );\n\n        performance.enable();\n        performance.run();\n    }\n    return performance;\n}\n\nexport default {\n    install,\n    uninstall,\n    createProfiler,\n    createBenchmark,\n    createCucumberMonitor,\n    createPerformance,\n    installAnalyticsConfig,\n    isPLStatsEnabled,\n    enablePLStats,\n    disablePLStats,\n    trackComponent,\n    startComponentRenderTime,\n    getPLStatsData,\n    initProfiler\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}