{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import CommonHeader from'viewmodel/CommonHeaderViewModel';import AwLayoutSlot from'viewmodel/AwLayoutSlotViewModel';import AwTabSet from'viewmodel/AwTabSetViewModel';import UiView from'viewmodel/UiViewViewModel';import{ExistWhen}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CommonHeaderExistWhen=ExistWhen(CommonHeader);const DivExistWhen=ExistWhen('div');const UiViewExistWhen=ExistWhen(UiView);/*\nctx imports\n*/const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('js/aw.narrowMode.service',()=>import('js/aw.narrowMode.service'));registerDynImportEntry('js/defaultLocationService',()=>import('js/defaultLocationService'));registerDynImportEntry('js/awHeaderService',()=>import('js/awHeaderService'));registerDynImportEntry('js/CommonLocationService',()=>import('js/CommonLocationService'));registerDynImportEntry('js/appCtxService',()=>import('js/appCtxService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"data\":{\"locationPanelStyle\":\"\",\"layoutSummaryOnly\":\"false\",\"preNarrowTitle\":null,\"primaryActiveTabId\":{\"dbValue\":\"\",\"type\":\"OBJECT\"}},\"actions\":{\"checkNarrowMode\":{\"actionType\":\"JSFunction\",\"method\":\"checkNarrowMode\",\"deps\":\"js/aw.narrowMode.service\"},\"constructAndUpdateTitles\":{\"actionType\":\"batchJob\",\"steps\":[{\"action\":\"constructTitles\"},{\"action\":\"setTitlesInCtx\"},{\"action\":\"updateTitles\"}]},\"handleLocationUnload\":{\"actionType\":\"JSFunction\",\"method\":\"handleLocationUnload\",\"inputData\":{\"name\":\"commonLocation\"},\"deps\":\"js/defaultLocationService\"},\"constructTitles\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"getTitles\",\"deps\":\"js/awHeaderService\",\"outputData\":{\"browserTitle\":\"result.browserTitle\",\"browserSubTitle\":\"result.browserSubTitle\",\"headerTitle\":\"result.headerTitle\"}},\"intitializeLocation\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"intializeCommonLocation\",\"deps\":\"js/CommonLocationService\",\"outputData\":{\"subLocationTabCond\":\"subLocationTabCond\",\"browserTitle\":\"browserTitle\",\"browserSubTitle\":\"browserSubTitle\",\"headerTitle\":\"headerTitle\",\"subLocationTabs\":\"subLocationTabs\",\"primaryActiveTab\":\"activeTab\"}},\"setTitlesInCtx\":{\"actionType\":\"JSFunction\",\"method\":\"updateCtx\",\"deps\":\"js/appCtxService\",\"inputData\":{\"name\":\"location.titles\",\"value\":{\"browserTitle\":\"{{data.browserTitle}}\",\"browserSubTitle\":\"{{data.browserSubTitle}}\",\"headerTitle\":\"{{data.headerTitle}}\"}}},\"updateTitles\":{\"actionType\":\"JSFunction\",\"method\":\"updateDocumentTitles\",\"deps\":\"js/awHeaderService\"},\"updateTabs\":{\"actionType\":\"JSFunction\",\"method\":\"updateTabs\",\"inputData\":{\"subLocationTabCondition\":\"{{data.subLocationTabCond}}\"},\"outputData\":{\"subLocationTabCond\":\"\"},\"deps\":\"js/defaultLocationService\"},\"switchSubLocation\":{\"actionType\":\"JSFunction\",\"method\":\"switchSubLocation\",\"inputData\":{\"pageId\":\"{{data.pageId}}\",\"tabTitle\":\"{{data.tabTitle}}\",\"subLocationTabs\":\"{{data.subLocationTabs}}\",\"data\":\"{{data}}\"},\"deps\":\"js/awHeaderService\"},\"activateTabUsingFieldUpdate\":{\"actionType\":\"JSFunction\",\"method\":\"switchSubLocation\",\"inputData\":{\"pageId\":\"{{data.primaryActiveTabId.dbValue.primaryActiveTabId}}\",\"tabTitle\":null,\"subLocationTabs\":\"{{data.subLocationTabs}}\",\"data\":\"{{data}}\"},\"deps\":\"js/awHeaderService\"},\"narrowModeChangeAction\":{\"actionType\":\"JSFunction\",\"method\":\"narrowModeChange\",\"deps\":\"js/aw.narrowMode.service\",\"inputData\":{\"eventData\":\"{{data.eventMap['narrowModeChangeEvent']}}\",\"layoutSummaryOnlyStyle\":\"{{data.layoutSummaryOnlyStyle}}\",\"headerTitle\":\"{{data.headerTitle}}\",\"preNarrowTitle\":\"{{data.preNarrowTitle}}\"},\"outputData\":{\"layoutSummaryOnlyStyle\":\"result.layoutSummaryOnlyStyle\",\"headerTitle\":\"result.headerTitle\",\"preNarrowTitle\":\"result.preNarrowTitle\"}},\"narrowSummaryLocationTitleClickAction\":{\"actionType\":\"JSFunction\",\"method\":\"narrowSummaryLocationTitleClick\",\"deps\":\"js/aw.narrowMode.service\",\"inputData\":{\"layoutSummaryOnlyStyle\":\"{{data.layoutSummaryOnlyStyle}}\",\"headerTitle\":\"{{data.headerTitle}}\",\"preNarrowTitle\":\"{{data.preNarrowTitle}}\"},\"outputData\":{\"layoutSummaryOnlyStyle\":\"result.layoutSummaryOnlyStyle\",\"headerTitle\":\"result.headerTitle\",\"preNarrowTitle\":\"result.preNarrowTitle\"}}},\"dataProviders\":{},\"functions\":{},\"onEvent\":[{\"eventId\":\"aw.windowResize\",\"action\":\"checkNarrowMode\"},{\"eventId\":\"appCtx.update\",\"condition\":\"name === 'location.titles'\",\"action\":\"updateTitles\"},{\"eventId\":\"appCtx.register\",\"condition\":\"name === 'state' \",\"action\":\"updateTabs\"},{\"eventId\":\"appCtx.register\",\"condition\":\"name === 'state' \",\"action\":\"constructAndUpdateTitles\"},{\"eventId\":\"narrowModeChangeEvent\",\"cacheEventData\":true,\"action\":\"narrowModeChangeAction\"},{\"eventId\":\"narrowSummaryLocationTitleClickEvent\",\"action\":\"narrowSummaryLocationTitleClickAction\"}],\"i18n\":{},\"messages\":{},\"conditions\":{\"isTaskbarFullScreen\":{\"expression\":\"ctx.taskbarfullscreen && ctx.taskbarfullscreen === 'true'\"},\"showSublocations\":{\"expression\":\"data.subLocationTabs && data.subLocationTabs.length > 1\"},\"isSublocationTabs\":{\"expression\":\"data.subLocationTabs\"}},\"ctx\":{\"taskbarfullscreen\":{\"type\":\"string\"}},\"lifecycleHooks\":{\"onMount\":\"intitializeLocation\",\"onUnmount\":\"handleLocationUnload\",\"onUpdate\":[{\"action\":\"activateTabUsingFieldUpdate\",\"observers\":[\"viewModel.data.primaryActiveTabId.dbValue.primaryActiveTabId\"]}]},\"_viewModelId\":\"CommonLocation\",\"_uniqueViewModelId\":\"CommonLocation\"};/*\n<div class='sw-container'>\n    <common-header exist-when=\"!conditions.isTaskbarFullScreen\" sub-panel-context=\"props.viewModel\"></common-header>\n    <aw-layout-slot name='aw_taskBar' context=\"data\" class='aw-layout-fit'></aw-layout-slot>\n    <div exist-when=\"conditions.showSublocations\" class='afx-medium-background sw-sublocation-tabs'>\n        <aw-tab-set action=\"switchSubLocation\" tabs=\"data.subLocationTabs\"></aw-tab-set>\n    </div>\n    <div class='sw-row flex-auto afx-content-background'>\n        <ui-view exist-when=\"conditions.isSublocationTabs\" sub-panel-context=\"{pageContext:{ primarySublocTabState: fields.primaryActiveTabId, primaryActiveTabId: data.primaryActiveTab ? data.primaryActiveTab: undefined}}\">\n        </ui-view>\n    </div>\n</div>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsxs(\"div\",{className:\"sw-container\",children:[/*#__PURE__*/_jsx(CommonHeaderExistWhen,{subPanelContext:AwParseService.instance(\"props.viewModel\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"!conditions.isTaskbarFullScreen\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})}),/*#__PURE__*/_jsx(AwLayoutSlot,{name:\"aw_taskBar\",context:AwParseService.instance(\"data\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),className:\"aw-layout-fit\"}),/*#__PURE__*/_jsx(DivExistWhen,{className:\"afx-medium-background sw-sublocation-tabs\",existWhen:AwParseService.instance(\"conditions.showSublocations\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwTabSet,{updateHook:AwParseService.instance(\"{data, conditions,dispatch }\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),action:actions.switchSubLocation,tabs:AwParseService.instance(\"data.subLocationTabs\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})}),/*#__PURE__*/_jsx(\"div\",{className:\"sw-row flex-auto afx-content-background\",children:/*#__PURE__*/_jsx(UiViewExistWhen,{subPanelContext:AwParseService.instance(\"{pageContext:{ primarySublocTabState: fields.primaryActiveTabId, primaryActiveTabId: data.primaryActiveTab ? data.primaryActiveTab: undefined}}\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"conditions.isSublocationTabs\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})})]});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}