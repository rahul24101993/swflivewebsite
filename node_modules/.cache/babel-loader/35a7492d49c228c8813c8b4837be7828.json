{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import UiView from'viewmodel/UiViewViewModel';import{ExistWhen}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";const UiViewExistWhen=ExistWhen(UiView);/*\nctx imports\n*/const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('soa/preferenceService',()=>import('soa/preferenceService'));registerDynImportEntry('js/page.service',()=>import('js/page.service'));registerDynImportEntry('js/awHeaderService',()=>import('js/awHeaderService'));registerDynImportEntry('js/awSearchLocationService',()=>import('js/awSearchLocationService'));registerDynImportEntry('js/AwDefaultLocationService',()=>import('js/AwDefaultLocationService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"lifecycleHooks\":{\"onMount\":\"initialize\",\"onUnmount\":\"cleanUpAwSearchLocation\"},\"actions\":{\"initialize\":{\"actionType\":\"batchJob\",\"steps\":[{\"action\":\"initializePage\"},{\"action\":\"getPreferences\",\"outputArg\":[\"additionalEvalEnv.preferences\"]},{\"action\":\"getAvailableSubPages\",\"inputArg\":{\"parentState\":null,\"additionalEvalEnv\":\"{{actionData.additionalEvalEnv}}\"},\"outputArg\":[\"availablePages\"]},{\"action\":\"constructTabs\",\"inputArg\":{\"availablePages\":\"{{actionData.availablePages}}\"},\"outputArg\":[\"sublocationTabs\"]},{\"action\":\"getFilteredTabsInfo\",\"inputArg\":{\"sublocationTabs\":\"{{actionData.sublocationTabs}}\"}}]},\"getPreferences\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"queryAll\",\"deps\":\"soa/preferenceService\",\"outputData\":{\"additionalEvalEnv\":\"\"}},\"getAvailableSubPages\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"getAvailableSubpages\",\"deps\":\"js/page.service\",\"inputData\":{\"parentState\":null,\"additionalEvalEnv\":\"{{parameters.additionalEvalEnv}}\"},\"outputData\":{\"availablePages\":\"\"}},\"constructTabs\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"constructTabs\",\"deps\":\"js/awHeaderService\",\"inputData\":{\"availablePages\":\"{{parameters.availablePages}}\"},\"outputData\":{\"sublocationTabs\":\"\"}},\"getFilteredTabsInfo\":{\"actionType\":\"JSFunction\",\"method\":\"getFilteredTabsInfo\",\"deps\":\"js/awSearchLocationService\",\"inputData\":{\"sublocationTabs\":\"{{parameters.sublocationTabs}}\"},\"outputData\":{\"sublocationdata.sublocationTabs\":\"sublocationTabs\",\"sublocationdata.tabCallbackApi\":\"tabCallbackApi\"}},\"handleStateChange\":{\"actionType\":\"JSFunction\",\"method\":\"handleStateChange\",\"deps\":\"js/awSearchLocationService\",\"inputData\":{\"sublocationTabs\":\"{{data.sublocationdata.sublocationTabs}}\"},\"outputData\":{\"sublocationdata.sublocationTabs\":\"\"}},\"initializePage\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"initializePage\",\"outputData\":{\"pageContext\":\"pageContext\"},\"deps\":\"js/AwDefaultLocationService\"},\"cleanUpAwSearchLocation\":{\"actionType\":\"JSFunction\",\"method\":\"cleanupPage\",\"inputData\":{\"propertyPolicyId\":\"{{data.pageContext.propertyPolicyId}}\"},\"deps\":\"js/AwDefaultLocationService\"}},\"onEvent\":[{\"eventId\":\"stateChangeSuccess\",\"action\":\"handleStateChange\"}],\"data\":{\"showsearchbox\":{\"dbValue\":true,\"type\":\"BOOLEAN\",\"isRequired\":\"false\",\"isEditable\":\"true\"}},\"props\":{\"header-title\":{\"type\":\"object\"},\"search-criteria\":{\"type\":\"object\"}},\"conditions\":{\"isSublocationTabs\":{\"expression\":\"data.sublocationdata.sublocationTabs\"}},\"_viewModelId\":\"AwSearchLocation\",\"_uniqueViewModelId\":\"AwSearchLocation\",\"ctx\":{}};/*\n<ui-view exist-when=\"conditions.isSublocationTabs\" sub-panel-context=\"{...data.sublocationdata,tabsData:data.sublocationdata,searchCriteria:props.searchCriteria,showsearchbox:data.showsearchbox, headerTitle:props.headerTitle}\" class='aw-layout-flexColumn'>\n</ui-view>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsx(UiViewExistWhen,{subPanelContext:AwParseService.instance(\"{...data.sublocationdata,tabsData:data.sublocationdata,searchCriteria:props.searchCriteria,showsearchbox:data.showsearchbox, headerTitle:props.headerTitle}\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),className:\"aw-layout-flexColumn\",existWhen:AwParseService.instance(\"conditions.isSublocationTabs\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}