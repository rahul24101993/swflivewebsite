{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwRowService.js\";\n// Copyright (c) 2021 Siemens\nimport rowColSvc from 'js/awRowColumnService';\n/**\n * render function for AwRow\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awRowRenderFunction = props => {\n  let elements = props.elementRefList.get('row').current;\n  const {\n    children,\n    width,\n    height,\n    offset,\n    justify,\n    alignContent,\n    wrapStyle,\n    color,\n    className\n  } = props;\n  let classnames = 'aw-layout-row aw-layout-flexbox afx-base-parentElement';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames,\n    ref: props.elementRefList.get('row'),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\nexport const onMount = (elementRefList, props, data) => {\n  let elements = elementRefList.get('row').current;\n  const {\n    children,\n    width,\n    height,\n    offset,\n    justify,\n    alignContent,\n    wrapStyle,\n    color,\n    className\n  } = props;\n\n  if (elements && !elements.isAlreadyAdded) {\n    if (width) {\n      elements.setAttribute('width', width);\n    }\n\n    if (height) {\n      elements.setAttribute('height', height);\n    }\n\n    if (offset) {\n      elements.setAttribute('offset', offset);\n    }\n\n    if (justify) {\n      elements.setAttribute('justify', justify);\n    }\n\n    if (alignContent) {\n      elements.setAttribute('align-content', alignContent);\n    }\n\n    if (wrapStyle) {\n      elements.setAttribute('wrap-style', wrapStyle);\n    }\n\n    if (color) {\n      elements.setAttribute('color', color);\n    }\n\n    elements.isAlreadyAdded = true;\n    rowColSvc.initRowOrColumn([elements]);\n  }\n};","map":{"version":3,"names":["rowColSvc","awRowRenderFunction","props","elements","elementRefList","get","current","children","width","height","offset","justify","alignContent","wrapStyle","color","className","classnames","onMount","data","isAlreadyAdded","setAttribute","initRowOrColumn"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwRowService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport rowColSvc from 'js/awRowColumnService';\n\n/**\n * render function for AwRow\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awRowRenderFunction = ( props ) => {\n    let elements = props.elementRefList.get( 'row' ).current;\n    const { children, width, height, offset, justify, alignContent, wrapStyle, color, className } = props;\n    let classnames = 'aw-layout-row aw-layout-flexbox afx-base-parentElement';\n\n    return (\n        <div className={classnames} ref={props.elementRefList.get( 'row' )}>\n            {children}\n        </div>\n    );\n};\n\nexport const onMount = ( elementRefList, props, data ) => {\n    let elements = elementRefList.get( 'row' ).current;\n    const { children, width, height, offset, justify, alignContent, wrapStyle, color, className } = props;\n    if( elements && !elements.isAlreadyAdded ) {\n        if( width ) {\n            elements.setAttribute( 'width', width );\n        }\n\n        if( height ) {\n            elements.setAttribute( 'height', height );\n        }\n\n        if( offset ) {\n            elements.setAttribute( 'offset', offset );\n        }\n\n        if( justify ) {\n            elements.setAttribute( 'justify', justify );\n        }\n\n        if( alignContent ) {\n            elements.setAttribute( 'align-content', alignContent );\n        }\n\n        if( wrapStyle ) {\n            elements.setAttribute( 'wrap-style', wrapStyle );\n        }\n\n        if( color ) {\n            elements.setAttribute( 'color', color );\n        }\n\n        elements.isAlreadyAdded = true;\n\n        rowColSvc.initRowOrColumn( [ elements ] );\n    }\n};\n"],"mappings":";AAAA;AACA,OAAOA,SAAP,MAAsB,uBAAtB;AAEA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,mBAAmB,GAAKC,KAAF,IAAa;EAC5C,IAAIC,QAAQ,GAAGD,KAAK,CAACE,cAAN,CAAqBC,GAArB,CAA0B,KAA1B,EAAkCC,OAAjD;EACA,MAAM;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,MAAnB;IAA2BC,MAA3B;IAAmCC,OAAnC;IAA4CC,YAA5C;IAA0DC,SAA1D;IAAqEC,KAArE;IAA4EC;EAA5E,IAA0Fb,KAAhG;EACA,IAAIc,UAAU,GAAG,wDAAjB;EAEA,oBACI;IAAK,SAAS,EAAEA,UAAhB;IAA4B,GAAG,EAAEd,KAAK,CAACE,cAAN,CAAqBC,GAArB,CAA0B,KAA1B,CAAjC;IAAA,UACKE;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAVM;AAYP,OAAO,MAAMU,OAAO,GAAG,CAAEb,cAAF,EAAkBF,KAAlB,EAAyBgB,IAAzB,KAAmC;EACtD,IAAIf,QAAQ,GAAGC,cAAc,CAACC,GAAf,CAAoB,KAApB,EAA4BC,OAA3C;EACA,MAAM;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,MAAnB;IAA2BC,MAA3B;IAAmCC,OAAnC;IAA4CC,YAA5C;IAA0DC,SAA1D;IAAqEC,KAArE;IAA4EC;EAA5E,IAA0Fb,KAAhG;;EACA,IAAIC,QAAQ,IAAI,CAACA,QAAQ,CAACgB,cAA1B,EAA2C;IACvC,IAAIX,KAAJ,EAAY;MACRL,QAAQ,CAACiB,YAAT,CAAuB,OAAvB,EAAgCZ,KAAhC;IACH;;IAED,IAAIC,MAAJ,EAAa;MACTN,QAAQ,CAACiB,YAAT,CAAuB,QAAvB,EAAiCX,MAAjC;IACH;;IAED,IAAIC,MAAJ,EAAa;MACTP,QAAQ,CAACiB,YAAT,CAAuB,QAAvB,EAAiCV,MAAjC;IACH;;IAED,IAAIC,OAAJ,EAAc;MACVR,QAAQ,CAACiB,YAAT,CAAuB,SAAvB,EAAkCT,OAAlC;IACH;;IAED,IAAIC,YAAJ,EAAmB;MACfT,QAAQ,CAACiB,YAAT,CAAuB,eAAvB,EAAwCR,YAAxC;IACH;;IAED,IAAIC,SAAJ,EAAgB;MACZV,QAAQ,CAACiB,YAAT,CAAuB,YAAvB,EAAqCP,SAArC;IACH;;IAED,IAAIC,KAAJ,EAAY;MACRX,QAAQ,CAACiB,YAAT,CAAuB,OAAvB,EAAgCN,KAAhC;IACH;;IAEDX,QAAQ,CAACgB,cAAT,GAA0B,IAA1B;IAEAnB,SAAS,CAACqB,eAAV,CAA2B,CAAElB,QAAF,CAA3B;EACH;AACJ,CApCM"},"metadata":{},"sourceType":"module"}