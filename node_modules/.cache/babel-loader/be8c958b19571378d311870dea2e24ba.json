{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListService.js\"; // Copyright (c) 2021 Siemens\n\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport { AwServerVisibilityPopupCommandBar } from 'js/AwServerVisibilityCommandBarService';\nimport AwListItem from 'viewmodel/AwListItemViewModel';\nimport dragAndDropSvc from 'js/dragAndDropService';\nimport _ from 'lodash';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport domUtils from 'js/domUtils';\nimport eventBus from 'js/eventBus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst eleRef = domUtils.DOMAPIs;\nexport const onMount = data => {\n  const listElement = data.dataprovider.getRootReference() && data.dataprovider.getRootReference().current;\n\n  if (listElement) {\n    const list = new ariaList();\n    let ul = listElement.querySelector('[role=\"listbox\"]');\n\n    if (!ul) {\n      return;\n    }\n\n    ul.setAttribute('aria-label', 'i18n.listAriaLabel');\n    wcagSvc.updateArialabel(ul, '', 'UIElementsMessages');\n    let childSelector = 'option';\n    list.init(ul, {}, childSelector);\n  }\n};\nexport const selectionUpdated = props => {\n  const {\n    dataprovider,\n    useVirtual\n  } = props;\n  let listElement = dataprovider.getRootReference();\n\n  if (!useVirtual && listElement && listElement.current) {\n    const scrollContainer = eleRef.closest(listElement.current, '.aw-base-scrollPanel');\n    const selectedElement = eleRef.get('.aw-widgets-cellListItemSelected', listElement.current);\n\n    if (scrollContainer && selectedElement) {\n      const scrollEleDim = scrollContainer.getBoundingClientRect();\n      const selectedEleDim = selectedElement.getBoundingClientRect();\n\n      if (selectedEleDim.top + selectedEleDim.height > scrollEleDim.bottom || selectedEleDim.bottom - selectedEleDim.height < scrollEleDim.top) {\n        selectedElement.focus();\n      }\n    }\n  }\n};\n/**\n * render function for AwList\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nexport const awListRenderFunction = props => {\n  const {\n    actions,\n    commandContext = {},\n    ctx,\n    ...prop\n  } = props;\n  const {\n    dataprovider,\n    children,\n    showCheckbox,\n    listOptions,\n    itemOptions,\n    showContextMenu,\n    fixedCellHeight,\n    isGroupList,\n    // Given as \"true\" - cells appears on hover and selection of the item.\n    // Given as \"false\" - cells appears always.\n    hasFloatingCellCommands,\n    showDropArea,\n    dndHandler,\n    showDecorators,\n    doubleClickAction\n  } = prop;\n  const {\n    contextPopup\n  } = actions;\n  const {\n    json\n  } = dataprovider;\n  const anchor = json.contextMenuCommandsAnchor || 'aw_contextMenu2';\n  let scrollElement = dataprovider.getRootReference();\n  let paginationOption = dataprovider.getPagination();\n\n  if (!paginationOption) {\n    dataprovider.setPagination({\n      root: scrollElement,\n      rootMargin: '5px',\n      threshold: 1,\n      bottomAnchorSelector: '.page-bottom'\n    });\n  }\n\n  let vmCollectionObj = dataprovider.vmCollectionObj;\n  let loadedVMO = vmCollectionObj.vmCollection.loadedVMObjects;\n\n  const menuContext = event => {\n    if (!showContextMenu) {\n      return;\n    }\n\n    event.persist(); // don't show browser's context menu\n\n    event.preventDefault(); // activate selection if not already selected\n\n    if (event.currentTarget.ariaSelected !== 'true') {\n      event.currentTarget.click();\n    }\n\n    contextPopup.show({\n      targetEvent: event\n    });\n  };\n\n  let highlightListWidget = function (target) {\n    if (target) {\n      target.classList.add('aw-widgets-dropframe');\n      target.classList.add('aw-theme-dropframe');\n    }\n  };\n\n  let unHighlightListWidget = function (target) {\n    if (target) {\n      target.classList.remove('aw-theme-dropframe');\n      target.classList.remove('aw-widgets-dropframe');\n    }\n  };\n\n  const highlightUnhighlightList = eventData => {\n    if (!_.isUndefined(eventData) && eventData.targetElement && eventData.targetElement.classList) {\n      var isHighlightFlag = eventData.isHighlightFlag;\n      var target = eventData.targetElement;\n\n      if (target) {\n        if (target.classList.contains('aw-widgets-cellListItemContainer')) {\n          target = target.parentElement;\n        }\n\n        var isGlobalArea = eventData.isGlobalArea;\n\n        if (isGlobalArea) {\n          // OBJECT DRAG OVER GLOBAL AREA\n          if (isHighlightFlag) {\n            if (target.classList.contains('aw-widgets-cellListContainer') || target.children[0].classList.contains('aw-widgets-cellListContainer')) {\n              highlightListWidget(target);\n            }\n          } else {\n            if (target.classList.contains('aw-widgets-cellListContainer') || target.classList.contains('aw-widgets-cellListItem') || target.children.length > 0 && target.children[0].classList.contains('aw-widgets-cellListContainer')) {\n              unHighlightListWidget(target);\n            }\n          }\n        } else {\n          // OBJECT DRAG OVER APPLICABLE AREA\n          if (isHighlightFlag) {\n            if (target.classList.contains('aw-widgets-cellListContainer') || target.classList.contains('aw-widgets-cellListItem') || target.children.length > 0 && target.children[0].classList.contains('aw-widgets-cellListContainer')) {\n              highlightListWidget(target);\n            }\n          } else {\n            unHighlightListWidget(target);\n          }\n        }\n      }\n    }\n  };\n\n  let newCallbackApis = {\n    /**\n     * Use the given ViewModelObject(s) .\n     */\n    clearSelection: function () {\n      // Handle clear previous selection\n      dataprovider.selectNone();\n    },\n\n    /**\n     * Use the given ViewModelObject ...\n     *\n     * @param {ViewModelObject} targetVMO - The 'target' ViewModelObject being dropped onto.\n     */\n    setSelection: function (targetVMO) {\n      // Handle select result\n      var subDef = null;\n      subDef = eventBus.subscribe('cdm.relatedModified', function () {\n        eventBus.unsubscribe(subDef);\n\n        if (targetVMO) {\n          targetVMO.selected = true;\n        } // Handle select result\n\n\n        if (dataprovider) {\n          dataprovider.selectionModel.setSelection([targetVMO]);\n        }\n      });\n    },\n    highlightTarget: highlightUnhighlightList\n  };\n\n  const processContextMenu = () => {\n    return showContextMenu && contextPopup.open ? /*#__PURE__*/_jsxDEV(AwPopup, { ...contextPopup.options,\n      children: /*#__PURE__*/_jsxDEV(AwServerVisibilityPopupCommandBar, {\n        anchor: anchor,\n        context: commandContext,\n        childCommandClickCallback: () => contextPopup.hide(),\n        mselected: dataprovider.selectedObjects,\n        pselected: commandContext.pSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 55\n    }, this) : null;\n  };\n\n  const processShowDropArea = () => {\n    return showDropArea && dndHandler ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-emptyCell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 45\n    }, this) : null;\n  };\n\n  const handleDrag = (event, item) => {\n    let target = eleRef.closest(event.target, '.aw-widgets-cellListItem') || eleRef.closest(event.target, '.aw-widgets-droppable');\n    let targetVMO = [];\n\n    if (target && item) {\n      targetVMO = dragAndDropSvc.getSourceObjects(dataprovider, item.uid).filter(function (obj) {\n        return targetVMO.indexOf(obj) === -1;\n      });\n    }\n\n    if (!targetVMO.length && item) {\n      targetVMO.push(item);\n    }\n\n    if (dndHandler && dndHandler[event.type]) {\n      let fun = dndHandler[event.type];\n      fun(event, {\n        targetElement: target,\n        targetVMO: targetVMO\n      }, newCallbackApis, dataprovider);\n    }\n  };\n\n  const handleDrop = (event, item) => {\n    let target = eleRef.closest(event.target, '.aw-widgets-cellListItem') || eleRef.closest(event.target, '.aw-widgets-droppable');\n    let targetVMO = [];\n\n    if (target && item) {\n      targetVMO = [item];\n    }\n\n    if (showDropArea !== 'false' && showDropArea !== false && dndHandler && dndHandler[event.type]) {\n      let fun = dndHandler[event.type];\n      fun(event, {\n        targetElement: target,\n        targetVMO: targetVMO\n      }, newCallbackApis, dataprovider);\n    }\n  };\n\n  const ownCellCommands = () => dataprovider.commands || dataprovider.json.commandsAnchor; // cell commands or list commands\n\n\n  const showCellCommandsAlways = () => dataprovider.json.commandsAnchor && hasFloatingCellCommands === false || dataprovider.commands && _.some(dataprovider.commands, i => i.displayOption === 'ALWAYS');\n\n  const processCellItem = (item, index) => {\n    const listItemRole = 'option';\n    const context = commandContext;\n    const listItemProps = {\n      item,\n      index,\n      dataprovider,\n      ownCellCommands: ownCellCommands(),\n      showCellCommandsAlways: showCellCommandsAlways(),\n      showCheckbox,\n      listOptions,\n      itemOptions,\n      fixedCellHeight,\n      isGroupList,\n      hasFloatingCellCommands,\n      menuContext,\n      listItemRole,\n      handleDragAndDrop: {\n        drag: handleDrag,\n        drop: handleDrop,\n        draggable: true\n      },\n      showDecorators,\n      context,\n      doubleClickAction\n    };\n    return /*#__PURE__*/_createElement(AwListItem, { ...listItemProps,\n      key: item.uid ? item.uid : index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 16\n      }\n    }, children);\n  };\n\n  const processFetching = () => {\n    return vmCollectionObj.fetching ? /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"aw-jswidgets-loadingItem\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-jswidgets-loading\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 43\n    }, this) : null;\n  };\n\n  const processNoResults = () => {\n    return dataprovider.noResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-noResultsLabel\",\n      children: dataprovider.noResultsFound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }, this) : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragOver: e => handleDrop(e),\n    onDragEnter: e => handleDrop(e),\n    onDragLeave: e => handleDrop(e),\n    onDrop: e => handleDrop(e),\n    className: \"aw-base-scrollPanel\",\n    ref: scrollElement,\n    children: [processContextMenu(), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"listbox\",\n      tabIndex: dataprovider.viewModelCollection.totalFound > 0 ? 0 : -1,\n      className: \"aw-widgets-cellListWidget sw-column flex-shrink\",\n      children: [loadedVMO.length > 0 && loadedVMO.map(processCellItem), processFetching()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), processNoResults(), processShowDropArea()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListService.js"],"names":["eleRef","domUtils","onMount","data","listElement","list","ul","wcagSvc","childSelector","selectionUpdated","props","useVirtual","dataprovider","scrollContainer","selectedElement","scrollEleDim","selectedEleDim","awListRenderFunction","commandContext","prop","doubleClickAction","contextPopup","json","anchor","scrollElement","paginationOption","root","rootMargin","threshold","bottomAnchorSelector","vmCollectionObj","loadedVMO","menuContext","event","targetEvent","highlightListWidget","target","unHighlightListWidget","highlightUnhighlightList","eventData","_","isHighlightFlag","isGlobalArea","newCallbackApis","clearSelection","setSelection","subDef","eventBus","targetVMO","highlightTarget","processContextMenu","showContextMenu","pSelected","processShowDropArea","showDropArea","handleDrag","item","dndHandler","fun","targetElement","handleDrop","ownCellCommands","showCellCommandsAlways","hasFloatingCellCommands","i","processCellItem","listItemRole","context","listItemProps","handleDragAndDrop","drag","drop","draggable","processFetching","processNoResults","noResultsFound","e"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport { AwServerVisibilityPopupCommandBar } from 'js/AwServerVisibilityCommandBarService';\nimport AwListItem from 'viewmodel/AwListItemViewModel';\nimport dragAndDropSvc from 'js/dragAndDropService';\nimport _ from 'lodash';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport domUtils from 'js/domUtils';\nimport eventBus from 'js/eventBus';\n\nconst eleRef = domUtils.DOMAPIs;\n\nexport const onMount = ( data ) => {\n    const listElement = data.dataprovider.getRootReference() && data.dataprovider.getRootReference().current;\n\n    if( listElement ) {\n        const list = new ariaList();\n        let ul = listElement.querySelector( '[role=\"listbox\"]' );\n        if( !ul ) { return; }\n\n        ul.setAttribute( 'aria-label', 'i18n.listAriaLabel' );\n        wcagSvc.updateArialabel( ul, '', 'UIElementsMessages' );\n\n        let childSelector = 'option';\n        list.init( ul, {}, childSelector );\n    }\n};\n\nexport const selectionUpdated = ( props ) => {\n    const {\n        dataprovider,\n        useVirtual\n    } = props;\n\n    let listElement = dataprovider.getRootReference();\n    if( !useVirtual && listElement && listElement.current ) {\n        const scrollContainer = eleRef.closest( listElement.current, '.aw-base-scrollPanel' );\n        const selectedElement = eleRef.get( '.aw-widgets-cellListItemSelected', listElement.current );\n        if( scrollContainer && selectedElement ) {\n            const scrollEleDim = scrollContainer.getBoundingClientRect();\n            const selectedEleDim = selectedElement.getBoundingClientRect();\n\n            if( selectedEleDim.top + selectedEleDim.height > scrollEleDim.bottom || selectedEleDim.bottom - selectedEleDim.height < scrollEleDim.top ) {\n                selectedElement.focus();\n            }\n        }\n    }\n};\n\n/**\n * render function for AwList\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awListRenderFunction = ( props ) => {\n    const {\n        actions,\n        commandContext = {},\n        ctx,\n        ...prop\n    } = props;\n    const {\n        dataprovider,\n        children,\n        showCheckbox,\n        listOptions,\n        itemOptions,\n        showContextMenu,\n        fixedCellHeight,\n        isGroupList,\n        // Given as \"true\" - cells appears on hover and selection of the item.\n        // Given as \"false\" - cells appears always.\n        hasFloatingCellCommands,\n        showDropArea,\n        dndHandler,\n        showDecorators,\n        doubleClickAction\n    } = prop;\n    const { contextPopup } = actions;\n    const { json } = dataprovider;\n\n    const anchor = json.contextMenuCommandsAnchor || 'aw_contextMenu2';\n\n    let scrollElement = dataprovider.getRootReference();\n    let paginationOption = dataprovider.getPagination();\n\n    if( !paginationOption ) {\n        dataprovider.setPagination( {\n            root: scrollElement,\n            rootMargin: '5px',\n            threshold: 1,\n            bottomAnchorSelector: '.page-bottom'\n        } );\n    }\n\n    let vmCollectionObj = dataprovider.vmCollectionObj;\n    let loadedVMO = vmCollectionObj.vmCollection.loadedVMObjects;\n\n    const menuContext = ( event ) => {\n        if( !showContextMenu ) { return; }\n        event.persist();\n        // don't show browser's context menu\n        event.preventDefault();\n        // activate selection if not already selected\n        if( event.currentTarget.ariaSelected !== 'true' ) {\n            event.currentTarget.click();\n        }\n        contextPopup.show( { targetEvent: event } );\n    };\n\n    let highlightListWidget = function( target ) {\n        if( target ) {\n            target.classList.add( 'aw-widgets-dropframe' );\n            target.classList.add( 'aw-theme-dropframe' );\n        }\n    };\n\n    let unHighlightListWidget = function( target ) {\n        if( target ) {\n            target.classList.remove( 'aw-theme-dropframe' );\n            target.classList.remove( 'aw-widgets-dropframe' );\n        }\n    };\n\n    const highlightUnhighlightList = ( eventData ) => {\n        if( !_.isUndefined( eventData ) && eventData.targetElement && eventData.targetElement.classList ) {\n            var isHighlightFlag = eventData.isHighlightFlag;\n            var target = eventData.targetElement;\n            if( target ) {\n                if( target.classList.contains( 'aw-widgets-cellListItemContainer' ) ) {\n                    target = target.parentElement;\n                }\n                var isGlobalArea = eventData.isGlobalArea;\n                if( isGlobalArea ) { // OBJECT DRAG OVER GLOBAL AREA\n                    if( isHighlightFlag ) {\n                        if( target.classList.contains( 'aw-widgets-cellListContainer' ) || target.children[ 0 ].classList.contains( 'aw-widgets-cellListContainer' ) ) {\n                            highlightListWidget( target );\n                        }\n                    } else {\n                        if( target.classList.contains( 'aw-widgets-cellListContainer' ) || target.classList.contains( 'aw-widgets-cellListItem' ) || target.children.length > 0 && target\n                            .children[ 0 ].classList.contains( 'aw-widgets-cellListContainer' ) ) {\n                            unHighlightListWidget( target );\n                        }\n                    }\n                } else { // OBJECT DRAG OVER APPLICABLE AREA\n                    if( isHighlightFlag ) {\n                        if( target.classList.contains( 'aw-widgets-cellListContainer' ) || target.classList.contains( 'aw-widgets-cellListItem' ) || target.children.length > 0 && target\n                            .children[ 0 ].classList.contains( 'aw-widgets-cellListContainer' ) ) {\n                            highlightListWidget( target );\n                        }\n                    } else {\n                        unHighlightListWidget( target );\n                    }\n                }\n            }\n        }\n    };\n\n    let newCallbackApis = {\n        /**\n         * Use the given ViewModelObject(s) .\n         */\n        clearSelection: function() {\n            // Handle clear previous selection\n            dataprovider.selectNone();\n        },\n        /**\n         * Use the given ViewModelObject ...\n         *\n         * @param {ViewModelObject} targetVMO - The 'target' ViewModelObject being dropped onto.\n         */\n        setSelection: function( targetVMO ) {\n            // Handle select result\n            var subDef = null;\n\n            subDef = eventBus.subscribe( 'cdm.relatedModified', function() {\n                eventBus.unsubscribe( subDef );\n\n                if( targetVMO ) { targetVMO.selected = true; }\n\n                // Handle select result\n                if( dataprovider ) { dataprovider.selectionModel.setSelection( [ targetVMO ] ); }\n            } );\n        },\n        highlightTarget: highlightUnhighlightList\n    };\n\n    const processContextMenu = () => {\n        return showContextMenu && contextPopup.open ? <AwPopup {...contextPopup.options}>\n            <AwServerVisibilityPopupCommandBar\n                anchor={anchor}\n                context={commandContext}\n                childCommandClickCallback={()=> contextPopup.hide()}\n                mselected={dataprovider.selectedObjects}\n                pselected={commandContext.pSelected}\n            >\n            </AwServerVisibilityPopupCommandBar>\n        </AwPopup> : null;\n    };\n\n    const processShowDropArea = () => {\n        return showDropArea && dndHandler ? <div className='aw-widgets-emptyCell'></div> : null;\n    };\n\n    const handleDrag = ( event, item ) => {\n        let target = eleRef.closest( event.target, '.aw-widgets-cellListItem' ) || eleRef.closest( event.target, '.aw-widgets-droppable' );\n        let targetVMO = [];\n        if( target && item ) {\n            targetVMO = dragAndDropSvc.getSourceObjects( dataprovider, item.uid ).filter( function( obj ) { return targetVMO.indexOf( obj ) === -1; } );\n        }\n        if( !targetVMO.length && item ) {\n            targetVMO.push( item );\n        }\n        if( dndHandler && dndHandler[ event.type ] ) {\n            let fun = dndHandler[ event.type ];\n            fun( event, { targetElement: target, targetVMO: targetVMO }, newCallbackApis, dataprovider );\n        }\n    };\n\n    const handleDrop = ( event, item ) => {\n        let target = eleRef.closest( event.target, '.aw-widgets-cellListItem' ) || eleRef.closest( event.target, '.aw-widgets-droppable' );\n        let targetVMO = [];\n        if( target && item ) {\n            targetVMO = [ item ];\n        }\n        if( showDropArea !== 'false' && showDropArea !== false && dndHandler && dndHandler[ event.type ] ) {\n            let fun = dndHandler[ event.type ];\n            fun( event, { targetElement: target, targetVMO: targetVMO }, newCallbackApis, dataprovider );\n        }\n    };\n\n    const ownCellCommands = () => dataprovider.commands || dataprovider.json.commandsAnchor;\n\n    // cell commands or list commands\n    const showCellCommandsAlways = () => dataprovider.json.commandsAnchor && hasFloatingCellCommands === false || dataprovider.commands && _.some( dataprovider.commands, i => i.displayOption ===\n        'ALWAYS' );\n\n    const processCellItem = ( item, index ) => {\n        const listItemRole = 'option';\n        const context = commandContext;\n        const listItemProps = {\n            item,\n            index,\n            dataprovider,\n            ownCellCommands: ownCellCommands(),\n            showCellCommandsAlways: showCellCommandsAlways(),\n            showCheckbox,\n            listOptions,\n            itemOptions,\n            fixedCellHeight,\n            isGroupList,\n            hasFloatingCellCommands,\n            menuContext,\n            listItemRole,\n            handleDragAndDrop: { drag: handleDrag, drop: handleDrop, draggable: true },\n            showDecorators,\n            context,\n            doubleClickAction\n        };\n\n        return <AwListItem {...listItemProps} key={item.uid ? item.uid : index}>{children}</AwListItem>;\n    };\n\n    const processFetching = () => {\n        return vmCollectionObj.fetching ? <li className='aw-jswidgets-loadingItem'><div className='aw-jswidgets-loading'>&nbsp;</div></li> : null;\n    };\n\n    const processNoResults = () => {\n        return dataprovider.noResults ? <div className='aw-widgets-noResultsLabel'>{dataprovider.noResultsFound}</div> : null;\n    };\n\n    return (\n        <div onDragOver={ e => handleDrop( e )}\n            onDragEnter={e => handleDrop( e )}\n            onDragLeave={e => handleDrop( e )}\n            onDrop={e => handleDrop( e )}\n            className='aw-base-scrollPanel' ref={scrollElement}>\n            { processContextMenu() }\n\n            <ul role='listbox' tabIndex={dataprovider.viewModelCollection.totalFound > 0 ? 0 : -1} className='aw-widgets-cellListWidget sw-column flex-shrink'>\n                { loadedVMO.length > 0 && loadedVMO.map( processCellItem ) }\n                { processFetching() }\n            </ul>\n\n            <div className='page-bottom' ></div>\n\n            { processNoResults() }\n\n            { processShowDropArea() }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}