{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-disable valid-jsdoc */\n\n/**\n * Defines {@link page.service} which serves basic queries related to page.\n *\n * @module js/page.service\n */\nimport AwPromiseService from 'js/awPromiseService';\nimport State from 'js/awStateService';\nimport appCtxService from 'js/appCtxService';\nimport workspaceValidationService from 'js/workspaceValidationService';\nimport _ from 'lodash';\nimport conditionService from 'js/conditionService';\nimport viewModelProcessingFactory from 'js/viewModelProcessingFactory';\n/** object to export */\n\nvar exports = {};\n/** Reference to $state service */\n\n/** Reference to $parse service */\n\n/** Reference to appCtxService service */\n\n/** Reference to {@angular.$q} service */\n\n/** Reference to {@$rootScope} */\n\n/** Reference to {@workspaceValidationService} */\n\n/**\n * Evaluate the provided expression against given environment.\n *\n * @param expression to evaluate.\n * @param evaluationEnvironment against expression to evaluate.\n * @return true if expression is true other-wise false\n */\n\nvar _evaluateExpression = function (expression, evaluationEnvironment) {\n  var declViewModel = viewModelProcessingFactory.createDeclViewModel({\n    _viewModelId: '__pageSvc'\n  });\n  var verdict = conditionService.parseExpression(declViewModel, expression, evaluationEnvironment);\n\n  declViewModel._internal.destroy();\n\n  return verdict;\n};\n/**\n * Build evaluationEnvironment.\n *\n * @param state a state\n * @param additionalEvalEnvironment provided by consumer\n * @return evaluationEnvironment.\n */\n\n\nvar _buildEvaluationEnvironment = function (state, additionalEvalEnvironment) {\n  return _.assign({}, {\n    data: _.clone(state.data),\n    params: _.clone(state.params),\n    ctx: _.clone(appCtxService.ctx)\n  }, additionalEvalEnvironment);\n};\n/**\n * The method resolve a promise with a list of states which confirm:<br>\n * <ul>\n * <li>The return state should be child state of the parentState, If parentState is not provided, the return state\n * should be child state of the current state's parent</li>\n * <li>And the state's visibleWhen should be evaluates to true.</li>\n * </ul>\n * The visibleWhen's expression can be as defined below while defining a state.<br>\n * <code>\n * \"aState\": {\n *     \"data\":{\"priority\":0},\n *     \"controller\": \"controllerOfThisState\",\n *     \"parent\": \"parentState\",\n *     \"url\": \"/someUrl\",\n *     \"visibleWhen\":{\"expression\":\"ctx.someVariable==1\"}\n *            }\n * </code>\n * Supported contexts: parentState.data, parentState.params, appCtxService.ctx any other additionalEvalEnvironment\n * provided to the method.\n *\n * @param {String} parentState is used to get the children, if not provided current state's parent ({@$state.current.parent})\n *            will be considered as a parent state.\n * @return promise <array>\n *\n */\n\n\nexport let getAvailableSubpages = function (parentState, additionalEvalEnv) {\n  let parentStateObj = {};\n  var additionalEvalEnvironment = additionalEvalEnv ? additionalEvalEnv : {};\n  var defferd = AwPromiseService.instance.defer();\n  var availableStates = [];\n  var _parentState = parentState;\n\n  if (!_parentState) {\n    _parentState = State.instance.current.parent;\n  }\n\n  State.instance.get().filter(function (state) {\n    if (state.name === _parentState) {\n      parentStateObj = state;\n    }\n\n    return state.parent === _parentState;\n  }).forEach(function (state) {\n    if (state.visibleWhen !== undefined && (state.visibleWhen.expression || state.visibleWhen.condition)) {\n      var expression = state.visibleWhen.expression ? state.visibleWhen.expression : state.visibleWhen.condition.expression;\n\n      var visibleWhen = _evaluateExpression(expression, _buildEvaluationEnvironment(State.instance.get(_parentState), { ...parentStateObj,\n        ...additionalEvalEnvironment\n      }));\n\n      if (visibleWhen) {\n        availableStates.push(state);\n      }\n    } else {\n      availableStates.push(state);\n    }\n  });\n  var availableSubPages = availableStates.filter(function (aSubPage) {\n    return workspaceValidationService.isValidPage(aSubPage.name);\n  });\n  defferd.resolve(availableSubPages);\n  return defferd.promise;\n};\n/**\n * Return a default sub-page for a given page.This method uses\n * <code>state.data.priority<code> to decide a default sub-page.\n * A page will have a default sub-page X, if following are true:\n * 1) X is a visible(available) page.\n * 2) X has highest priority(state.data.priority) value among available sub-pages.\n * 3) X is available in current workspace.\n *\n * @param {Object} page , a state object.\n * @return promise<page>\n */\n\nexport let getDefaultSubPage = function (page) {\n  return getAvailableSubpages(page).then(function (availableSubPages) {\n    if (availableSubPages && availableSubPages.length > 0) {\n      availableSubPages.sort(function (o1, o2) {\n        return _.parseInt(o1.data.priority) - _.parseInt(o2.data.priority);\n      });\n      return availableSubPages[0];\n    }\n\n    return null;\n  });\n};\n/**\n * If a (parent) page(or location) is revealed application should should find out a visible sub-page (sub-location)\n * which has a highest priority and should reveal it.\n *\n * @param {Object} page - a state\n * @param {Object} toParams\n */\n\nexport let navigateToDefaultSubPage = function (page, toParams) {\n  getDefaultSubPage(page.name).then(function (defaultSubPage) {\n    if (defaultSubPage) {\n      return State.instance.go(defaultSubPage.name, toParams);\n    }\n  });\n};\nexport let registerSubLocationContext = function () {\n  var provider = State.instance.current.data; // Update the sublocation context\n\n  var initialContext = {\n    clientScopeURI: provider.clientScopeURI,\n    historyNameToken: provider.name,\n    label: provider.label,\n    nameToken: provider.nameToken\n  };\n  appCtxService.registerCtx('sublocation', initialContext);\n};\nexports = {\n  getAvailableSubpages,\n  getDefaultSubPage,\n  navigateToDefaultSubPage,\n  registerSubLocationContext\n};\nexport default exports;","map":{"version":3,"names":["AwPromiseService","State","appCtxService","workspaceValidationService","_","conditionService","viewModelProcessingFactory","exports","_evaluateExpression","expression","evaluationEnvironment","declViewModel","createDeclViewModel","_viewModelId","verdict","parseExpression","_internal","destroy","_buildEvaluationEnvironment","state","additionalEvalEnvironment","assign","data","clone","params","ctx","getAvailableSubpages","parentState","additionalEvalEnv","parentStateObj","defferd","instance","defer","availableStates","_parentState","current","parent","get","filter","name","forEach","visibleWhen","undefined","condition","push","availableSubPages","aSubPage","isValidPage","resolve","promise","getDefaultSubPage","page","then","length","sort","o1","o2","parseInt","priority","navigateToDefaultSubPage","toParams","defaultSubPage","go","registerSubLocationContext","provider","initialContext","clientScopeURI","historyNameToken","label","nameToken","registerCtx"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/page.service.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-disable valid-jsdoc */\n\n/**\n * Defines {@link page.service} which serves basic queries related to page.\n *\n * @module js/page.service\n */\nimport AwPromiseService from 'js/awPromiseService';\nimport State from 'js/awStateService';\nimport appCtxService from 'js/appCtxService';\nimport workspaceValidationService from 'js/workspaceValidationService';\nimport _ from 'lodash';\nimport conditionService from 'js/conditionService';\nimport viewModelProcessingFactory from 'js/viewModelProcessingFactory';\n\n/** object to export */\nvar exports = {};\n\n/** Reference to $state service */\n\n/** Reference to $parse service */\n\n/** Reference to appCtxService service */\n\n/** Reference to {@angular.$q} service */\n\n/** Reference to {@$rootScope} */\n\n/** Reference to {@workspaceValidationService} */\n\n/**\n * Evaluate the provided expression against given environment.\n *\n * @param expression to evaluate.\n * @param evaluationEnvironment against expression to evaluate.\n * @return true if expression is true other-wise false\n */\nvar _evaluateExpression = function( expression, evaluationEnvironment ) {\n    var declViewModel = viewModelProcessingFactory.createDeclViewModel( { _viewModelId: '__pageSvc' } );\n    var verdict = conditionService.parseExpression( declViewModel, expression, evaluationEnvironment );\n    declViewModel._internal.destroy();\n    return verdict;\n};\n\n/**\n * Build evaluationEnvironment.\n *\n * @param state a state\n * @param additionalEvalEnvironment provided by consumer\n * @return evaluationEnvironment.\n */\nvar _buildEvaluationEnvironment = function( state, additionalEvalEnvironment ) {\n    return _.assign( {}, {\n        data: _.clone( state.data ),\n        params: _.clone( state.params ),\n        ctx: _.clone( appCtxService.ctx )\n    }, additionalEvalEnvironment );\n};\n\n/**\n * The method resolve a promise with a list of states which confirm:<br>\n * <ul>\n * <li>The return state should be child state of the parentState, If parentState is not provided, the return state\n * should be child state of the current state's parent</li>\n * <li>And the state's visibleWhen should be evaluates to true.</li>\n * </ul>\n * The visibleWhen's expression can be as defined below while defining a state.<br>\n * <code>\n * \"aState\": {\n *     \"data\":{\"priority\":0},\n *     \"controller\": \"controllerOfThisState\",\n *     \"parent\": \"parentState\",\n *     \"url\": \"/someUrl\",\n *     \"visibleWhen\":{\"expression\":\"ctx.someVariable==1\"}\n *            }\n * </code>\n * Supported contexts: parentState.data, parentState.params, appCtxService.ctx any other additionalEvalEnvironment\n * provided to the method.\n *\n * @param {String} parentState is used to get the children, if not provided current state's parent ({@$state.current.parent})\n *            will be considered as a parent state.\n * @return promise <array>\n *\n */\nexport let getAvailableSubpages = function( parentState, additionalEvalEnv ) {\n    let parentStateObj = {};\n    var additionalEvalEnvironment = additionalEvalEnv ? additionalEvalEnv : {};\n    var defferd = AwPromiseService.instance.defer();\n    var availableStates = [];\n    var _parentState = parentState;\n    if( !_parentState ) {\n        _parentState = State.instance.current.parent;\n    }\n    State.instance.get().filter( function( state ) {\n        if( state.name === _parentState ) {\n            parentStateObj = state;\n        }\n        return state.parent === _parentState;\n    } ).forEach(\n        function( state ) {\n            if( state.visibleWhen !== undefined && ( state.visibleWhen.expression || state.visibleWhen.condition ) ) {\n                var expression = state.visibleWhen.expression ? state.visibleWhen.expression : state.visibleWhen.condition.expression;\n                var visibleWhen = _evaluateExpression( expression,\n                    _buildEvaluationEnvironment( State.instance.get( _parentState ),\n                        { ...parentStateObj, ...additionalEvalEnvironment } ) );\n                if( visibleWhen ) {\n                    availableStates.push( state );\n                }\n            } else {\n                availableStates.push( state );\n            }\n        } );\n    var availableSubPages = availableStates.filter( function( aSubPage ) {\n        return workspaceValidationService.isValidPage( aSubPage.name );\n    } );\n    defferd.resolve( availableSubPages );\n    return defferd.promise;\n};\n\n/**\n * Return a default sub-page for a given page.This method uses\n * <code>state.data.priority<code> to decide a default sub-page.\n * A page will have a default sub-page X, if following are true:\n * 1) X is a visible(available) page.\n * 2) X has highest priority(state.data.priority) value among available sub-pages.\n * 3) X is available in current workspace.\n *\n * @param {Object} page , a state object.\n * @return promise<page>\n */\nexport let getDefaultSubPage = function( page ) {\n    return getAvailableSubpages( page ).then( function( availableSubPages ) {\n        if( availableSubPages && availableSubPages.length > 0 ) {\n            availableSubPages.sort( function( o1, o2 ) {\n                return _.parseInt( o1.data.priority ) - _.parseInt( o2.data.priority );\n            } );\n            return availableSubPages[ 0 ];\n        }\n        return null;\n    } );\n};\n\n/**\n * If a (parent) page(or location) is revealed application should should find out a visible sub-page (sub-location)\n * which has a highest priority and should reveal it.\n *\n * @param {Object} page - a state\n * @param {Object} toParams\n */\nexport let navigateToDefaultSubPage = function( page, toParams ) {\n    getDefaultSubPage( page.name ).then( function( defaultSubPage ) {\n        if( defaultSubPage ) {\n            return State.instance.go( defaultSubPage.name, toParams );\n        }\n    } );\n};\n\nexport let registerSubLocationContext = function() {\n    var provider = State.instance.current.data;\n    // Update the sublocation context\n    var initialContext = {\n        clientScopeURI: provider.clientScopeURI,\n        historyNameToken: provider.name,\n        label: provider.label,\n        nameToken: provider.nameToken\n    };\n    appCtxService.registerCtx( 'sublocation', initialContext );\n};\n\nexports = {\n    getAvailableSubpages,\n    getDefaultSubPage,\n    navigateToDefaultSubPage,\n    registerSubLocationContext\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}