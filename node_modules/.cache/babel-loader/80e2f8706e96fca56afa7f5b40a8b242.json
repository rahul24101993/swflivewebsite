{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwRadiobuttonValService.js\"; // Copyright (c) 2021 Siemens\n\nimport _ from 'lodash';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\n/**\n * render function for AwRadiobuttonVal\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awRadiobuttonValRenderFunction = props => {\n  const {\n    vals\n  } = props; //Revistme: why prop.prop?\n\n  const property = props.prop;\n  let valueList = vals;\n  let sanitizedProps = sanitizer.sanitizeHTMLTagProps(property, 'input');\n  const inputClass = getValClass(props);\n\n  if (!valueList) {\n    valueList = [{\n      propDisplayValue: property.fielddata.propertyRadioTrueText,\n      propInternalValue: true\n    }, {\n      propDisplayValue: property.fielddata.propertyRadioFalseText,\n      propInternalValue: false\n    }];\n  }\n\n  const doAction = ev => {\n    property.onChange(ev);\n    return property.action ? property.action(ev) : '';\n  };\n\n  const onKeyPress = (event, prop) => {\n    if (prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.length > 0) {\n      for (let index = 0; index < prop.fielddata.displayValsModel.length; index++) {\n        if (prop.fielddata.displayValsModel[index].isInEditMode) {\n          event.updateArray = true;\n          event.index = index;\n          break;\n        }\n      }\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      prop.onChange(event);\n      event.target.checked = false;\n    }\n  };\n\n  if (property.typex === 'BOOLEANARRAY') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sw-radio-group\",\n      role: \"radiogroup\",\n      \"aria-label\": property.name,\n      children: _.map(valueList, (val, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-locator\": \"radio-buttonLabel\",\n        className: \"sw-radio\",\n        htmlFor: property.name + val.propInternalValue + 'input',\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: inputClass,\n          id: property.name + val.propInternalValue + 'input',\n          \"data-locator\": property.label,\n          name: property.name,\n          defaultChecked: property.value === val.propInternalValue,\n          value: val.propInternalValue,\n          \"aria-checked\": property.value === val.propInternalValue,\n          onKeyPress: event => onKeyPress(event, property)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"radio-label\",\n          children: val.propDisplayValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } // need access to \"vertical\" setting here (look at uwPropertyService / viewModelObjectService / modelPropertyService change?)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sw-radio-group ${property.fielddata.radioVertical ? 'sw-verticalVals' : ''}`,\n    role: \"radiogroup\",\n    \"aria-label\": property.name,\n    children: _.map(valueList, (val, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n      \"data-locator\": \"radio-buttonLabel\",\n      className: \"sw-radio\",\n      htmlFor: property.name + val.propInternalValue + 'input',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...sanitizedProps,\n        className: inputClass,\n        type: \"radio\",\n        id: property.name + val.propInternalValue + 'input',\n        name: property.name,\n        checked: property.value === val.propInternalValue,\n        value: val.propInternalValue,\n        \"aria-checked\": property.value === val.propInternalValue,\n        onChange: doAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"radio-label\",\n        children: val.propDisplayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwRadiobuttonValService.js"],"names":["awRadiobuttonValRenderFunction","props","vals","property","valueList","sanitizedProps","sanitizer","inputClass","getValClass","propDisplayValue","propInternalValue","doAction","ev","onKeyPress","prop","index","event","val"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport _ from 'lodash';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\n\n/**\n * render function for AwRadiobuttonVal\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */\nexport const awRadiobuttonValRenderFunction = ( props ) => {\n    const { vals } = props;\n    //Revistme: why prop.prop?\n    const property = props.prop;\n    let valueList = vals;\n    let sanitizedProps = sanitizer.sanitizeHTMLTagProps( property, 'input' );\n    const inputClass = getValClass( props );\n\n    if( !valueList ) {\n        valueList = [ {\n            propDisplayValue: property.fielddata.propertyRadioTrueText,\n            propInternalValue: true\n        }, {\n            propDisplayValue: property.fielddata.propertyRadioFalseText,\n            propInternalValue: false\n        } ];\n    }\n\n    const doAction = ( ev ) => {\n        property.onChange( ev );\n        return property.action ? property.action( ev ) : '';\n    };\n\n    const onKeyPress = ( event, prop ) => {\n        if( prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.length > 0 ) {\n            for( let index = 0; index < prop.fielddata.displayValsModel.length; index++ ) {\n                if( prop.fielddata.displayValsModel[ index ].isInEditMode ) {\n                    event.updateArray = true;\n                    event.index = index;\n                    break;\n                }\n            }\n        }\n        if( event.key === 'Enter' ) {\n            event.preventDefault();\n            prop.onChange( event );\n            event.target.checked = false;\n        }\n    };\n\n    if( property.typex === 'BOOLEANARRAY' ) {\n        return (\n            <div className='sw-radio-group' role='radiogroup' aria-label={property.name}>\n                { _.map( valueList, ( val, idx ) =>\n                    <label data-locator='radio-buttonLabel' className='sw-radio' htmlFor={property.name + val.propInternalValue + 'input'} key={idx}>\n                        <input type='radio' className={inputClass} id={property.name + val.propInternalValue + 'input'} data-locator={property.label} name={property.name} defaultChecked={property.value === val.propInternalValue} value={val.propInternalValue}\n                            aria-checked={property.value === val.propInternalValue} onKeyPress={( event ) => onKeyPress( event, property )} />\n                        <span className='radio-label'>{val.propDisplayValue}</span>\n                    </label>\n                )\n                }\n            </div>\n        );\n    }\n\n    // need access to \"vertical\" setting here (look at uwPropertyService / viewModelObjectService / modelPropertyService change?)\n    return (\n        <div className={`sw-radio-group ${property.fielddata.radioVertical ? 'sw-verticalVals' : ''}`} role='radiogroup' aria-label={property.name}>\n            { _.map( valueList, ( val, idx ) =>\n                <label data-locator='radio-buttonLabel' className='sw-radio' htmlFor={property.name + val.propInternalValue + 'input'} key={idx}>\n                    <input {...sanitizedProps} className={inputClass} type='radio' id={property.name + val.propInternalValue + 'input'} name={property.name} checked={property.value === val.propInternalValue} value={val.propInternalValue}\n                        aria-checked={property.value === val.propInternalValue} onChange={doAction} />\n                    <span className='radio-label'>{val.propDisplayValue}</span>\n                </label>\n            )\n            }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}