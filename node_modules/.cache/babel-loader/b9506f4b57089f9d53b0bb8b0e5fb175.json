{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwAdvancedBarService.js\";\nimport logger from 'js/logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _types = {\n  TOOLBAR: 'TOOLBAR',\n  TASKBAR: 'TASKBAR',\n  FOOTER: 'FOOTER'\n};\n\nconst getClassName = (type, orientation, negative) => {\n  const oriClass = orientation === 'HORIZONTAL' ? 'aw-advanced-bar-horizontal' : 'aw-advanced-toolbar-vertical';\n  let typeClass = '';\n\n  if (type === 'FOOTER') {\n    typeClass = 'afx-accent-background';\n  } else if (type === 'TASKBAR') {\n    typeClass = 'afx-accent-background aw-advancedbar-container';\n  } else if (type === 'TOOLBAR' && !negative) {\n    typeClass = 'afx-alt-content-background';\n  }\n\n  return `aw-advanced-bar ${oriClass} ${typeClass}`;\n};\n\nexport const awAdvancedBarRenderFunction = props => {\n  let {\n    type,\n    orientation,\n    negative,\n    children\n  } = props;\n  negative = negative ? Boolean(negative === 'true') : negative;\n\n  if (!type) {\n    logger.error('Advanced bar type is undefined, failed to render aw-advanced-bar.');\n    return;\n  }\n\n  if (type in _types) {\n    if (type === _types.TOOLBAR) {\n      orientation = orientation === 'VERTICAL' ? 'VERTICAL' : 'HORIZONTAL';\n    } else {\n      orientation = 'HORIZONTAL';\n      negative = null;\n    }\n  } else {\n    logger.error('Advanced bar type should be from [TOOLBAR, TASKBAR, FOOTER], failed to render aw-advanced-bar.');\n    return;\n  }\n\n  const extendProp = {\n    type,\n    orientation,\n    negative: String(negative)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...extendProp,\n    className: getClassName(type, orientation, negative),\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwAdvancedBarService.js"],"names":["_types","TOOLBAR","TASKBAR","FOOTER","getClassName","oriClass","orientation","typeClass","type","awAdvancedBarRenderFunction","props","children","negative","Boolean","logger","extendProp","String"],"mappings":";AAAA,OAAA,MAAA,MAAA,WAAA;;AAEA,MAAMA,MAAM,GAAG;EACXC,OAAO,EADI,SAAA;EAEXC,OAAO,EAFI,SAAA;EAGXC,MAAM,EAAE;AAHG,CAAf;;AAMA,MAAMC,YAAY,GAAG,CAAA,IAAA,EAAA,WAAA,EAAA,QAAA,KAAmC;EACpD,MAAMC,QAAQ,GAAGC,WAAW,KAAXA,YAAAA,GAAAA,4BAAAA,GAAjB,8BAAA;EAEA,IAAIC,SAAS,GAAb,EAAA;;EACA,IAAIC,IAAI,KAAR,QAAA,EAAwB;IACpBD,SAAS,GAATA,uBAAAA;EADJ,CAAA,MAEO,IAAIC,IAAI,KAAR,SAAA,EAAyB;IAC5BD,SAAS,GAATA,gDAAAA;EADG,CAAA,MAEA,IAAIC,IAAI,KAAJA,SAAAA,IAAsB,CAA1B,QAAA,EAAsC;IACzCD,SAAS,GAATA,4BAAAA;EACH;;EACD,OAAQ,mBAAkBF,QAAS,IAAGE,SAAtC,EAAA;AAXJ,CAAA;;AAcA,OAAO,MAAME,2BAA2B,GAAKC,KAAF,IAAa;EACpD,IAAI;IAAA,IAAA;IAAA,WAAA;IAAA,QAAA;IAA+BC;EAA/B,IAAJ,KAAA;EAEAC,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAED,QAAQ,KAApB,MAAU,CAAV,GAAnBA,QAAAA;;EAEA,IAAI,CAAJ,IAAA,EAAY;IACRE,MAAM,CAANA,KAAAA,CAAAA,mEAAAA;IACA;EACH;;EACD,IAAIN,IAAI,IAAR,MAAA,EAAqB;IACjB,IAAIA,IAAI,KAAKR,MAAM,CAAnB,OAAA,EAA8B;MAC1BM,WAAW,GAAGA,WAAW,KAAXA,UAAAA,GAAAA,UAAAA,GAAdA,YAAAA;IADJ,CAAA,MAEO;MACHA,WAAW,GAAXA,YAAAA;MACAM,QAAQ,GAARA,IAAAA;IACH;EANL,CAAA,MAOO;IACHE,MAAM,CAANA,KAAAA,CAAAA,gGAAAA;IACA;EACH;;EAED,MAAMC,UAAU,GAAG;IAAA,IAAA;IAAA,WAAA;IAAqBH,QAAQ,EAAEI,MAAM,CAAA,QAAA;EAArC,CAAnB;EAEA,OAAA,aAAO,OAAA,CAAA,KAAA,EAAA,EAAA,GAAA,UAAA;IAAqB,SAAS,EAAGZ,YAAY,CAAA,IAAA,EAAA,WAAA,EAA7C,QAA6C,CAA7C;IAAA,QAAA,EAAA,CAAA,GAAA,EAAA,QAAA,EAAA,GAAA;EAAA,CAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EAAP,IAAO,CAAP;AAvBG,CAAA","sourcesContent":["import logger from 'js/logger';\n\nconst _types = {\n    TOOLBAR: 'TOOLBAR',\n    TASKBAR: 'TASKBAR',\n    FOOTER: 'FOOTER'\n};\n\nconst getClassName = ( type, orientation, negative ) => {\n    const oriClass = orientation === 'HORIZONTAL' ? 'aw-advanced-bar-horizontal' : 'aw-advanced-toolbar-vertical';\n\n    let typeClass = '';\n    if( type === 'FOOTER' ) {\n        typeClass = 'afx-accent-background';\n    } else if( type === 'TASKBAR' ) {\n        typeClass = 'afx-accent-background aw-advancedbar-container';\n    } else if( type === 'TOOLBAR' && !negative ) {\n        typeClass = 'afx-alt-content-background';\n    }\n    return `aw-advanced-bar ${oriClass} ${typeClass}`;\n};\n\nexport const awAdvancedBarRenderFunction = ( props ) => {\n    let { type, orientation, negative, children } = props;\n\n    negative = negative ? Boolean( negative === 'true' ) : negative;\n\n    if( !type ) {\n        logger.error( 'Advanced bar type is undefined, failed to render aw-advanced-bar.' );\n        return;\n    }\n    if( type in _types ) {\n        if( type === _types.TOOLBAR ) {\n            orientation = orientation === 'VERTICAL' ? 'VERTICAL' : 'HORIZONTAL';\n        } else {\n            orientation = 'HORIZONTAL';\n            negative = null;\n        }\n    } else {\n        logger.error( 'Advanced bar type should be from [TOOLBAR, TASKBAR, FOOTER], failed to render aw-advanced-bar.' );\n        return;\n    }\n\n    const extendProp = { type, orientation, negative: String( negative ) };\n\n    return <div {...extendProp} className={ getClassName( type, orientation, negative ) }> {children} </div>;\n};\n"]},"metadata":{},"sourceType":"module"}