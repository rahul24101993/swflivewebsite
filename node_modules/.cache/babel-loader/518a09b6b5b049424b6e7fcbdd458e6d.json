{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwWidgetService.js\"; // Copyright (c) 2021 Siemens\n\nimport AwPropertyLabel from 'viewmodel/AwPropertyLabelViewModel';\nimport AwWidgetVal from 'viewmodel/AwWidgetValViewModel';\nimport uwPropSvc from 'js/uwPropertyService';\nimport uwSupportSvc from 'js/uwSupportService'; // --------------------------------\n// widgets\n// --------------------------------\n\n/**\n * render function for AwWidget\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awWidgetRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const hint = prop.hint || prop.renderingHint;\n\n  if (hint) {\n    prop.fielddata.renderingHint = hint;\n\n    if (prop.vmo) {\n      uwPropSvc.setRenderingHint(prop.vmo.props[prop.name], hint);\n    }\n  }\n\n  if (prop && prop.modifiable && prop.modifiable !== 'false') {\n    uwPropSvc.setIsPropertyModifiable(prop, prop.modifiable);\n  }\n\n  if (prop && prop.labeldisplay) {\n    const labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay(prop.labeldisplay);\n    uwPropSvc.setPropertyLabelDisplay(prop, labelDisplay);\n\n    if (labelDisplay === 'NO_PROPERTY_LABEL') {\n      return /*#__PURE__*/_jsxDEV(AwWidgetVal, { ...prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    }\n  } // in future, do we want a className='sw-property-valWrapper' on the AwWidgetVal?\n  // would need to do similar from all prop widget wrappers\n\n\n  return /*#__PURE__*/_jsxDEV(AwPropertyLabel, { ...prop,\n    children: /*#__PURE__*/_jsxDEV(AwWidgetVal, { ...prop,\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwWidgetService.js"],"names":["awWidgetRenderFunction","props","prop","hint","uwPropSvc","labelDisplay","uwSupportSvc"],"mappings":"8JAAA;;AACA,OAAA,eAAA,MAAA,oCAAA;AACA,OAAA,WAAA,MAAA,gCAAA;AACA,OAAA,SAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,qBAAA,C,CAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,sBAAsB,GAAKC,KAAF,IAAa;EAC/C,MAAM;IAAA,SAAA;IAAA,MAAA;IAAA,OAAA;IAAA,IAAA;IAAA,MAAA;IAAA,KAAA;IAAA,QAAA;IAAA,QAAA;IASF,GAAGC;EATD,IAAN,KAAA;EAYA,MAAMC,IAAI,GAAGD,IAAI,CAAJA,IAAAA,IAAaA,IAAI,CAA9B,aAAA;;EAEA,IAAA,IAAA,EAAW;IACPA,IAAI,CAAJA,SAAAA,CAAAA,aAAAA,GAAAA,IAAAA;;IACA,IAAIA,IAAI,CAAR,GAAA,EAAe;MACXE,SAAS,CAATA,gBAAAA,CAA4BF,IAAI,CAAJA,GAAAA,CAAAA,KAAAA,CAAgBA,IAAI,CAAhDE,IAA4BF,CAA5BE,EAAAA,IAAAA;IACH;EACJ;;EAED,IAAIF,IAAI,IAAIA,IAAI,CAAZA,UAAAA,IAA2BA,IAAI,CAAJA,UAAAA,KAA/B,OAAA,EAA6D;IACzDE,SAAS,CAATA,uBAAAA,CAAAA,IAAAA,EAAyCF,IAAI,CAA7CE,UAAAA;EACH;;EAED,IAAIF,IAAI,IAAIA,IAAI,CAAhB,YAAA,EAAgC;IAC5B,MAAMG,YAAY,GAAGC,YAAY,CAAZA,4BAAAA,CAA2CJ,IAAI,CAApE,YAAqBI,CAArB;IACAF,SAAS,CAATA,uBAAAA,CAAAA,IAAAA,EAAAA,YAAAA;;IAEA,IAAIC,YAAY,KAAhB,mBAAA,EAA2C;MACvC,OAAA,aAAO,OAAA,CAAA,WAAA,EAAA,EAAA,GAAiBH;MAAjB,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EAAP,IAAO,CAAP;IACH;EAhC0C,CAAA,CAmC/C;EACA;;;EACA,OAAA,aACI,OAAA,CAAA,eAAA,EAAA,EAAA,GAAA,IAAA;IAAA,QAAA,EAAA,aACI,OAAA,CAAA,WAAA,EAAA,EAAA,GAAA,IAAA;MAAuB,SAAS,EAAC;IAAjC,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAA,IAAA;EADJ,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADJ,IACI,CADJ;AArCG,CAAA","sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyLabel from 'viewmodel/AwPropertyLabelViewModel';\nimport AwWidgetVal from 'viewmodel/AwWidgetValViewModel';\nimport uwPropSvc from 'js/uwPropertyService';\nimport uwSupportSvc from 'js/uwSupportService';\n\n// --------------------------------\n// widgets\n// --------------------------------\n/**\n * render function for AwWidget\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */\nexport const awWidgetRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    const hint = prop.hint || prop.renderingHint;\n\n    if( hint ) {\n        prop.fielddata.renderingHint = hint;\n        if( prop.vmo ) {\n            uwPropSvc.setRenderingHint( prop.vmo.props[ prop.name ], hint );\n        }\n    }\n\n    if( prop && prop.modifiable && prop.modifiable !== 'false' ) {\n        uwPropSvc.setIsPropertyModifiable( prop, prop.modifiable );\n    }\n\n    if( prop && prop.labeldisplay ) {\n        const labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay( prop.labeldisplay );\n        uwPropSvc.setPropertyLabelDisplay( prop, labelDisplay );\n\n        if( labelDisplay === 'NO_PROPERTY_LABEL' ) {\n            return <AwWidgetVal {...prop}></AwWidgetVal>;\n        }\n    }\n\n    // in future, do we want a className='sw-property-valWrapper' on the AwWidgetVal?\n    // would need to do similar from all prop widget wrappers\n    return (\n        <AwPropertyLabel {...prop}>\n            <AwWidgetVal {...prop} className=''></AwWidgetVal>\n        </AwPropertyLabel>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}