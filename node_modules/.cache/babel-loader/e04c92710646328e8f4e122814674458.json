{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\commonframe\\\\src\\\\viewmodel\\\\commonTaskbarViewModel.json\";\n// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwFlexRow from 'viewmodel/AwFlexRowViewModel';\nimport AwFlexColumn from 'viewmodel/AwFlexColumnViewModel';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\n/*\nctx imports\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ctxImportObj = {};\n/*\nview model\n */\n\nconst declViewModelJson = {\n  \"schemaVersion\": \"1.0.0\",\n  \"conditions\": {\n    \"isTaskbarFullScreen\": {\n      \"expression\": \"ctx.taskbarfullscreen && ctx.taskbarfullscreen === 'true'\"\n    }\n  },\n  \"_viewModelId\": \"commonTaskbar\",\n  \"_uniqueViewModelId\": \"commonTaskbar\",\n  \"ctx\": {\n    \"taskbarfullscreen\": {\n      \"type\": \"object\"\n    }\n  }\n};\n/*\n<aw-flex-row height=\"4f\" class=\"aw-taskbar-container afx-accent-background\">\n    <aw-flex-row class=\"aw-layout-fill\"></aw-flex-row>\n    <aw-flex-column width=\"4f\" justify=\"right\" class=\"aw-layout-fill\">\n        <aw-command-bar anchor=\"toolbarRightSlot\" alignment=\"HORIZONTAL\"></aw-command-bar>\n    </aw-flex-column>\n</aw-flex-row>\n\n*/\n\nconst renderFn = props => {\n  let subPanelContext = props.subPanelContext;\n  let {\n    viewModel: {\n      data,\n      dataProviders,\n      dispatch,\n      conditions,\n      selectionModels,\n      editHandlers,\n      chartProviders,\n      ports\n    },\n    grids,\n    ctx,\n    actions,\n    fields,\n    messages,\n    i18n,\n    formProp,\n    viewPath\n  } = props;\n  data = { ...data,\n    dataProviders\n  };\n\n  if (subPanelContext && subPanelContext.fields) {\n    fields = { ...fields,\n      ...subPanelContext.fields\n    };\n  }\n\n  let $index = null;\n  return /*#__PURE__*/_jsxDEV(AwFlexRow, {\n    height: \"4f\",\n    className: \"aw-taskbar-container afx-accent-background\",\n    children: [/*#__PURE__*/_jsxDEV(AwFlexRow, {\n      className: \"aw-layout-fill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwFlexColumn, {\n      width: \"4f\",\n      justify: \"right\",\n      className: \"aw-layout-fill\",\n      children: /*#__PURE__*/_jsxDEV(AwCommandBar, {\n        anchor: \"toolbarRightSlot\",\n        alignment: \"HORIZONTAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n};\n/*\ndefine component\n*/\n\n\nconst Component = createComponent(declViewModelJson, renderFn, undefined, ctxImportObj);\nexport default Component;","map":{"version":3,"names":["createComponent","registerDynImportEntry","AwParseService","AwFilterService","getField","Fragment","filterSer","instance","AwFlexRow","AwFlexColumn","AwCommandBar","ctxImportObj","declViewModelJson","renderFn","props","subPanelContext","viewModel","data","dataProviders","dispatch","conditions","selectionModels","editHandlers","chartProviders","ports","grids","ctx","actions","fields","messages","i18n","formProp","viewPath","$index","Component","undefined"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/commonframe/src/viewmodel/commonTaskbarViewModel.json"],"sourcesContent":["// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwFlexRow from 'viewmodel/AwFlexRowViewModel';\nimport AwFlexColumn from 'viewmodel/AwFlexColumnViewModel';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\n\n\n\n\n/*\nctx imports\n*/\n\nconst ctxImportObj = {  };\n\n\n\n\n/*\nview model\n */\nconst declViewModelJson = {\n    \"schemaVersion\": \"1.0.0\",\n    \"conditions\": {\n        \"isTaskbarFullScreen\": {\n            \"expression\": \"ctx.taskbarfullscreen && ctx.taskbarfullscreen === 'true'\"\n        }\n    },\n    \"_viewModelId\": \"commonTaskbar\",\n    \"_uniqueViewModelId\": \"commonTaskbar\",\n    \"ctx\": {\n        \"taskbarfullscreen\": {\n            \"type\": \"object\"\n        }\n    }\n};\n\n/*\n<aw-flex-row height=\"4f\" class=\"aw-taskbar-container afx-accent-background\">\n    <aw-flex-row class=\"aw-layout-fill\"></aw-flex-row>\n    <aw-flex-column width=\"4f\" justify=\"right\" class=\"aw-layout-fill\">\n        <aw-command-bar anchor=\"toolbarRightSlot\" alignment=\"HORIZONTAL\"></aw-command-bar>\n    </aw-flex-column>\n</aw-flex-row>\n\n*/\nconst renderFn =(props)=> {\n    let subPanelContext = props.subPanelContext ;\n    let { viewModel: { data, dataProviders, dispatch, conditions, selectionModels, editHandlers, chartProviders, ports  }, grids, ctx, actions, fields, messages, i18n, formProp, viewPath  } = props;\n    data = {...data, dataProviders};\n    if( subPanelContext && subPanelContext.fields ){\n        fields = { ...fields, ...subPanelContext.fields };\n    }\n    let $index = null;\n    return (\n            <AwFlexRow height=\"4f\" className=\"aw-taskbar-container afx-accent-background\">\n        <AwFlexRow className=\"aw-layout-fill\">\n        </AwFlexRow>\n        <AwFlexColumn width=\"4f\" justify=\"right\" className=\"aw-layout-fill\">\n            <AwCommandBar anchor=\"toolbarRightSlot\" alignment=\"HORIZONTAL\">\n            </AwCommandBar>\n        </AwFlexColumn>\n    </AwFlexRow>\n    )\n};\n\n\n/*\ndefine component\n*/\nconst Component = createComponent( declViewModelJson, renderFn, undefined, ctxImportObj );\n\nexport default Component;"],"mappings":";AAAA;AACA,SAASA,eAAT,QAAgC,yBAAhC;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,IAAIC,SAAS,GAAGH,eAAe,CAACI,QAAhC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAKA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAKA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAG;EACtB,iBAAiB,OADK;EAEtB,cAAc;IACV,uBAAuB;MACnB,cAAc;IADK;EADb,CAFQ;EAOtB,gBAAgB,eAPM;EAQtB,sBAAsB,eARA;EAStB,OAAO;IACH,qBAAqB;MACjB,QAAQ;IADS;EADlB;AATe,CAA1B;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,KAAD,IAAU;EACtB,IAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;EACA,IAAI;IAAEC,SAAS,EAAE;MAAEC,IAAF;MAAQC,aAAR;MAAuBC,QAAvB;MAAiCC,UAAjC;MAA6CC,eAA7C;MAA8DC,YAA9D;MAA4EC,cAA5E;MAA4FC;IAA5F,CAAb;IAAmHC,KAAnH;IAA0HC,GAA1H;IAA+HC,OAA/H;IAAwIC,MAAxI;IAAgJC,QAAhJ;IAA0JC,IAA1J;IAAgKC,QAAhK;IAA0KC;EAA1K,IAAwLlB,KAA5L;EACAG,IAAI,GAAG,EAAC,GAAGA,IAAJ;IAAUC;EAAV,CAAP;;EACA,IAAIH,eAAe,IAAIA,eAAe,CAACa,MAAvC,EAA+C;IAC3CA,MAAM,GAAG,EAAE,GAAGA,MAAL;MAAa,GAAGb,eAAe,CAACa;IAAhC,CAAT;EACH;;EACD,IAAIK,MAAM,GAAG,IAAb;EACA,oBACQ,QAAC,SAAD;IAAW,MAAM,EAAC,IAAlB;IAAuB,SAAS,EAAC,4CAAjC;IAAA,wBACJ,QAAC,SAAD;MAAW,SAAS,EAAC;IAArB;MAAA;MAAA;MAAA;IAAA,QADI,eAGJ,QAAC,YAAD;MAAc,KAAK,EAAC,IAApB;MAAyB,OAAO,EAAC,OAAjC;MAAyC,SAAS,EAAC,gBAAnD;MAAA,uBACI,QAAC,YAAD;QAAc,MAAM,EAAC,kBAArB;QAAwC,SAAS,EAAC;MAAlD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHI;EAAA;IAAA;IAAA;IAAA;EAAA,QADR;AAUH,CAlBD;AAqBA;AACA;AACA;;;AACA,MAAMC,SAAS,GAAGlC,eAAe,CAAEY,iBAAF,EAAqBC,QAArB,EAA+BsB,SAA/B,EAA0CxB,YAA1C,CAAjC;AAEA,eAAeuB,SAAf"},"metadata":{},"sourceType":"module"}