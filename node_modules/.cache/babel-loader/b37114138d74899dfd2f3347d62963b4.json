{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\uielements\\\\src\\\\js\\\\AwStepProgressService.js\";\n// Copyright (c) 2020 Siemens\n\n/**\n * @module js/AwStepProgressService\n */\nimport _ from 'lodash';\nimport wcagSvc from 'js/wcagService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet markCompleted = step => {\n  step.isCompleted = true;\n  step.isCurrentActive = false;\n  step.isInProgress = false;\n};\n\nlet markInProgressStep = step => {\n  step.isCompleted = false;\n  step.isCurrentActive = true;\n  step.isInProgress = true;\n};\n\nlet isEqual = (thisStep, thatStep) => {\n  if (thisStep.dbValue && thatStep.dbValue && thisStep.dbValue === thatStep.dbValue) {\n    return true;\n  }\n\n  if (thisStep.uiValue && thatStep.uiValue && thisStep.uiValue === thatStep.uiValue) {\n    return true;\n  }\n\n  return false;\n};\n\nlet isStepClickable = step => {\n  return !step.isCurrentActive && (step.isCompleted || step.isInProgress);\n};\n\nvar hasStepCompleted = isStepClickable;\n\nlet addClass = step => step.isCurrentActive ? 'aw-progress-bar-text-current' : 'aw-progress-bar-text';\n\nlet getCurrentActiveStepNo = steps => {\n  let stepNo = steps.findIndex(step => {\n    return step.isCurrentActive;\n  });\n  return stepNo + 1;\n};\n\nlet stepProgressType = clickable => {\n  return clickable ? 'ClickableStepProgress' : 'StepProgress';\n};\n\nexport const awStepProgressRenderFunction = props => {\n  let {\n    steps,\n    clickable,\n    currentStep,\n    completedStep,\n    viewModel,\n    i18n\n  } = props;\n\n  if (!steps) {\n    return;\n  }\n\n  const {\n    data,\n    dispatch\n  } = viewModel;\n\n  if (!data.isStepLinkClicked) {\n    if (completedStep) {\n      markCompleted(completedStep);\n      steps.map(aStep => {\n        if (isEqual(aStep, completedStep)) {\n          markCompleted(aStep);\n        }\n      });\n    }\n\n    if (currentStep) {\n      markInProgressStep(currentStep);\n      steps.map(aStep => {\n        if (isEqual(aStep, currentStep)) {\n          markInProgressStep(aStep);\n        }\n      });\n    }\n  }\n\n  let moveToStep = selectedStep => {\n    if (clickable) {\n      props.stepClickAction(selectedStep);\n      dispatch({\n        path: 'data.isStepLinkClicked',\n        value: true\n      });\n    }\n  };\n\n  let handleKeyPress = (event, selectedStep) => {\n    if (wcagSvc.isValidKeyPress(event)) {\n      moveToStep(selectedStep);\n    }\n  };\n\n  data.isStepLinkClicked = false;\n\n  const getLabel = step => step.isCompleted ? i18n.COMPLETED : i18n.CURRENT;\n\n  const getLabelContainer = step => (step.isCompleted || step.isCurrentActive) && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"hidden\",\n    children: [getLabel(step), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 91\n  }, this);\n\n  let stepsElements = steps.map((step, index) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-locator\": step.propertyDisplayName,\n      title: step.propertyDisplayName,\n      className: step.isCurrentActive ? 'aw-step-progressCurrentChevron' : 'aw-step-progressChevron',\n      children: [clickable && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-locator\": \"aw-step-progressChevronText\",\n        className: \"aw-step-progressChevronText\",\n        role: \"button\",\n        \"aria-disabled\": !isStepClickable(step),\n        children: [getLabelContainer(step), !isStepClickable(step) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: addClass(step),\n          children: step.propertyDisplayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), isStepClickable(step) && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javscript: void(0);\",\n          onClick: () => moveToStep(step),\n          className: addClass(step),\n          tabIndex: \"0\",\n          onKeyDown: e => handleKeyPress(e, step),\n          children: step.propertyDisplayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), !clickable && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-locator\": \"aw-step-progressChevronText\",\n        className: \"aw-step-progressChevronText\",\n        role: \"button\",\n        \"aria-disabled\": \"true\",\n        children: [getLabelContainer(step), !hasStepCompleted(step) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: addClass(step),\n          children: step.propertyDisplayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), hasStepCompleted(step) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"aw-progress-bar-completed\",\n          children: step.propertyDisplayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-locator\": stepProgressType(clickable),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"aw-step-progressChevronContainer\",\n        children: stepsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["_","wcagSvc","markCompleted","step","isCompleted","isCurrentActive","isInProgress","markInProgressStep","isEqual","thisStep","thatStep","dbValue","uiValue","isStepClickable","hasStepCompleted","addClass","getCurrentActiveStepNo","steps","stepNo","findIndex","stepProgressType","clickable","awStepProgressRenderFunction","props","currentStep","completedStep","viewModel","i18n","data","dispatch","isStepLinkClicked","map","aStep","moveToStep","selectedStep","stepClickAction","path","value","handleKeyPress","event","isValidKeyPress","getLabel","COMPLETED","CURRENT","getLabelContainer","stepsElements","index","propertyDisplayName","e"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uielements/src/js/AwStepProgressService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * @module js/AwStepProgressService\n */\nimport _ from 'lodash';\nimport wcagSvc from 'js/wcagService';\n\nlet markCompleted = ( step ) => {\n    step.isCompleted = true;\n    step.isCurrentActive = false;\n    step.isInProgress = false;\n};\n\nlet markInProgressStep = ( step ) => {\n    step.isCompleted = false;\n    step.isCurrentActive = true;\n    step.isInProgress = true;\n};\n\nlet isEqual = ( thisStep, thatStep ) => {\n    if( thisStep.dbValue && thatStep.dbValue && thisStep.dbValue === thatStep.dbValue ) {\n        return true;\n    }\n    if( thisStep.uiValue && thatStep.uiValue && thisStep.uiValue === thatStep.uiValue ) {\n        return true;\n    }\n    return false;\n};\n\nlet isStepClickable = ( step ) => {\n    return !step.isCurrentActive && ( step.isCompleted || step.isInProgress );\n};\n\nvar hasStepCompleted = isStepClickable;\n\nlet addClass = ( step ) => step.isCurrentActive ? 'aw-progress-bar-text-current' : 'aw-progress-bar-text';\n\nlet getCurrentActiveStepNo = ( steps ) => {\n    let stepNo = steps.findIndex( step => {\n        return step.isCurrentActive;\n    } );\n    return stepNo + 1;\n};\n\nlet stepProgressType = ( clickable ) => {\n    return clickable ? 'ClickableStepProgress' : 'StepProgress';\n};\n\nexport const awStepProgressRenderFunction = ( props ) => {\n    let { steps, clickable, currentStep, completedStep, viewModel, i18n } = props;\n\n    if( !steps ) {\n        return;\n    }\n    const { data, dispatch } = viewModel;\n\n    if( !data.isStepLinkClicked ) {\n        if( completedStep ) {\n            markCompleted( completedStep );\n            steps.map( aStep => {\n                if( isEqual( aStep, completedStep ) ) {\n                    markCompleted( aStep );\n                }\n            } );\n        }\n        if( currentStep ) {\n            markInProgressStep( currentStep );\n            steps.map( aStep => {\n                if( isEqual( aStep, currentStep ) ) {\n                    markInProgressStep( aStep );\n                }\n            } );\n        }\n    }\n\n    let moveToStep = ( selectedStep ) => {\n        if( clickable ) {\n            props.stepClickAction( selectedStep );\n            dispatch( { path: 'data.isStepLinkClicked', value: true } );\n        }\n    };\n\n    let handleKeyPress = ( event, selectedStep ) => {\n        if( wcagSvc.isValidKeyPress( event ) ) {\n            moveToStep( selectedStep );\n        }\n    };\n\n    data.isStepLinkClicked = false;\n    const getLabel = ( step ) => step.isCompleted ? i18n.COMPLETED : i18n.CURRENT;\n    const getLabelContainer = ( step ) => ( step.isCompleted || step.isCurrentActive ) && <span className='hidden'>{getLabel( step )} </span>;\n\n    let stepsElements = steps.map( ( step, index ) => {\n        return (\n            <li key={ index } data-locator={ step.propertyDisplayName } title={ step.propertyDisplayName } className={ step.isCurrentActive ? 'aw-step-progressCurrentChevron' : 'aw-step-progressChevron' }>\n                { clickable &&\n                    <div data-locator='aw-step-progressChevronText' className='aw-step-progressChevronText' role='button' aria-disabled={ !isStepClickable( step ) }>\n                        { getLabelContainer( step )}\n                        { !isStepClickable( step ) &&\n                            <span className={ addClass( step ) }>{ step.propertyDisplayName }</span>\n                        }\n                        { isStepClickable( step ) &&\n                            <a href='javscript: void(0);' onClick={ () => moveToStep( step ) } className={ addClass( step ) } tabIndex='0' onKeyDown={ ( e ) => handleKeyPress( e, step ) }>\n                                { step.propertyDisplayName }\n                            </a>\n                        }\n                    </div>\n                }\n                { !clickable &&\n                    <div data-locator='aw-step-progressChevronText' className='aw-step-progressChevronText' role='button' aria-disabled='true'>\n                        { getLabelContainer( step )}\n                        { !hasStepCompleted( step ) &&\n                            <span className={ addClass( step ) }>{ step.propertyDisplayName }</span>\n                        }\n                        { hasStepCompleted( step ) &&\n                            <span className='aw-progress-bar-completed'>{ step.propertyDisplayName }</span>\n                        }\n                    </div>\n                }\n            </li>\n        );\n    } );\n\n    return (\n        <div data-locator={ stepProgressType( clickable ) } >\n            <div>\n                <ul className='aw-step-progressChevronContainer'>\n                    { stepsElements }\n                </ul>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}