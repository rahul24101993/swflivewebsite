{"ast":null,"code":"import AwButton from'viewmodel/AwButtonViewModel';import eventBus from'js/eventBus';import{jsx as _jsx}from\"react/jsx-runtime\";const getNavigatePanelAction=prop=>{const{destPanelId,title,recreatePanel,mainPanelCaption,isolateMode,supportGoBack}=prop.command.fielddata;if(destPanelId){return function NavAction(){const context={destPanelId,title,recreatePanel,mainPanelCaption,isolateMode,supportGoBack,backNavigation:true,/*\n                 * In afx, aw-icon-button directive used to figure out the closest command panel container using jquery\n                 * and set the id attribute here. Now the containerId will need to be passed fromt the command panel component\n                 */id:prop.containerid};eventBus.publish('awPanel.navigate',context);};}};export const AwIconButtonRenderFunction=props=>{let action;let ariaLabel='';let icon=null;let commandDef=null;if(props.fielddata){commandDef=props.fielddata;}else if(props.command){commandDef=props.command.fielddata||props.command;}//const commandDef = props.fielddata ? props.fielddata : props.command.fielddata || props.command;\nif(commandDef){if(commandDef.destPanelId&&!commandDef.action){action=getNavigatePanelAction(props);}else if(commandDef.action){action=commandDef.action;}ariaLabel=commandDef.propertyDisplayName||commandDef.tooltip||'';icon=commandDef.iconName;}return/*#__PURE__*/_jsx(AwButton,{\"aria-label\":ariaLabel,\"aria-disabled\":commandDef&&commandDef.disabled,className:props.size==='large'?'large':'',iconId:icon,action:action,tooltip:commandDef&&commandDef.tooltip});};","map":null,"metadata":{},"sourceType":"module"}