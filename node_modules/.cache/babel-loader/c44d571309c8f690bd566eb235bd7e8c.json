{"ast":null,"code":"/* eslint-disable valid-jsdoc */import AwWidget from'viewmodel/AwWidgetViewModel';/**\n * render function for AwListbox\n * @deprecated afx@4.2.0.\n * @alternative AwWidget with List LOV, reference ListLOVExampleService.js\n * @obsoleteIn afx@5.1.0\n * @returns {JSX.Element} react component\n *\n * previous:\n * <aw-listbox prop=\"data.listBox1\" list=\"data.listBox1Values.dbValue\" action=\"selectionChange\" />\n *\n *\n * now:\n *\n * <AwListbox {...listBox1} action={selectionChange} list={listBox1Values.dbValue} />\n *\n * or\n *\n * <AwListbox {...listBox1} action={selectionChange} />\n * <AwWidget {...listBox1} action={selectionChange} />\n *\n * \"listBox1\": {\n        \"displayName\": \"Active Workspace Based Applications\",\n        \"name\": \"listBox1\",\n        \"type\": \"STRING\",\n        \"isRequired\": true,\n        \"dataProvider\": \"dataProviderListBox1Values\",   // the 'dataProvider' attribute to replace 'list' option\n        \"dbValue\": \"Showcase\",\n        \"uiValue\": \"Showcase\"\n * }\n *\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const awListboxRenderFunction=props=>{const{viewModel,ctxMin,actions,i18n,fields,grids,formProp,messages,...prop}=props;const{isSelectOnly}=prop;// listbox always has emptyLOVEntry false\nprop.fielddata.emptyLOVEntry=false;const finalProps={...prop,// mapped from fields\nautoCorrect:true,// reverting back the value if incorrect value has typed in\nisSelectOnly:isSelectOnly,isListbox:true};return/*#__PURE__*/_jsx(AwWidget,{...finalProps});};export const onUpdate=props=>{const{actions,fields,action,viewModel,list,...prop}=props;const field=prop;let uiValue=field.fielddata.uiValue;// listbox expected to select the first item when no initial value\n// list maybe loaded async\nif(!uiValue&&list&&list.length>0){const selectedListItem=list.find(listItem=>listItem.selected);let lovEntry=selectedListItem?selectedListItem:list[0];prop.setLovVal({lovEntry},null);// call selection action if defined\nsetTimeout(()=>action&&action({lovEntry}));}};","map":null,"metadata":{},"sourceType":"module"}