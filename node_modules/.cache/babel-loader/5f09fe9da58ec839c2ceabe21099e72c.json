{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwTileGroupService.js\";\nimport _ from 'lodash';\nimport AwTile from 'viewmodel/AwTileViewModel';\nimport domUtils from 'js/domUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst eleRef = domUtils.DOMAPIs;\nexport const awTileGroupRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    handleDragAndDrop,\n    ...prop\n  } = props;\n  const {\n    tileGroup\n  } = prop;\n\n  const handleDrag = (event, tile) => {\n    let targetVMO = [];\n    let target = eleRef.closest(event.target, '.aw-tile-group') || eleRef.closest(event.target, '.aw-widgets-droppable');\n\n    if (!targetVMO.length && tile && tileGroup) {\n      targetVMO.push({\n        tile: tile,\n        tileGroup: tileGroup\n      });\n    }\n\n    handleDragAndDrop.drag(event, target, targetVMO);\n  };\n\n  const handleDrop = (event, tile) => {\n    let targetVMODrop = [];\n    let targetDrop = eleRef.closest(event.target, '.aw-tile-group') || eleRef.closest(event.target, '.aw-widgets-droppable');\n\n    if (targetDrop && tile && tileGroup) {\n      targetVMODrop = [{\n        tile: tile,\n        tileGroup: tileGroup\n      }];\n    }\n\n    handleDragAndDrop.drop(event, targetDrop, targetVMODrop);\n  };\n\n  const handleTileGroupDragAndDrop = {\n    drag: handleDrag,\n    drop: handleDrop,\n    draggable: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-tile-group\",\n    onDragEnter: handleDrop,\n    onDragOver: handleDrop,\n    onDrop: handleDrop,\n    onDragLeave: handleDrop,\n    children: prop.tileGroup.tiles.map((tile, index) => getTiles(tile, index, prop, handleTileGroupDragAndDrop))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\nconst getTileGroupClasses = tile => {\n  let className = ['aw-tile-tileMain aw-layout-flexColumn aw-theme-tileText aw-tile-draggable'];\n  className.push(tile.editing ? 'aw-tile-tileEdit' : '');\n  return className.join(' ');\n};\n\nconst getTiles = (tile, index, prop, handleTileGroupDragAndDrop) => {\n  let classes = getTileGroupClasses(tile);\n  let orderObj = {\n    order: index\n  };\n  tile.editTileCallback = prop.tileGroup.editTileCallback;\n  tile.isGatewayInEditMode = prop.tileGroup.isGatewayInEditMode; // tile.updateToParent( tileIdx, value ) as dispatch\n  // do we need a createTile just like createField?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-locator\": \"tile-main\",\n    className: classes,\n    draggable: tile.editing ? tile.editing : false,\n    style: orderObj,\n    children: /*#__PURE__*/_jsxDEV(AwTile, {\n      tile: tile,\n      handleTileGroupDragAndDrop: handleTileGroupDragAndDrop,\n      unPinTileCallback: prop.unPinTileCallback,\n      tileClickCallback: prop.tileClickCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, index + tile.displayName, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["_","AwTile","domUtils","eleRef","DOMAPIs","awTileGroupRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","handleDragAndDrop","prop","tileGroup","handleDrag","event","tile","targetVMO","target","closest","length","push","drag","handleDrop","targetVMODrop","targetDrop","drop","handleTileGroupDragAndDrop","draggable","tiles","map","index","getTiles","getTileGroupClasses","className","editing","join","classes","orderObj","order","editTileCallback","isGatewayInEditMode","unPinTileCallback","tileClickCallback","displayName"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwTileGroupService.js"],"sourcesContent":["import _ from 'lodash';\nimport AwTile from 'viewmodel/AwTileViewModel';\nimport domUtils from 'js/domUtils';\nconst eleRef = domUtils.DOMAPIs;\nexport const awTileGroupRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        handleDragAndDrop,\n        ...prop\n    } = props;\n    const { tileGroup } = prop;\n    const handleDrag = (  event, tile  ) => {\n        let targetVMO = [];\n        let target = eleRef.closest( event.target, '.aw-tile-group' ) || eleRef.closest( event.target, '.aw-widgets-droppable' );\n        if( !targetVMO.length && tile && tileGroup ) {\n            targetVMO.push( { tile: tile, tileGroup: tileGroup } );\n        }\n        handleDragAndDrop.drag( event, target, targetVMO );\n    };\n\n    const handleDrop = (  event, tile  ) => {\n        let targetVMODrop = [];\n        let targetDrop = eleRef.closest( event.target, '.aw-tile-group' ) || eleRef.closest( event.target, '.aw-widgets-droppable' );\n        if( targetDrop && tile && tileGroup ) {\n            targetVMODrop = [ { tile: tile, tileGroup: tileGroup } ];\n        }\n        handleDragAndDrop.drop( event, targetDrop, targetVMODrop );\n    };\n    const handleTileGroupDragAndDrop = { drag: handleDrag, drop: handleDrop, draggable: true };\n    return (\n        <div className='aw-tile-group'onDragEnter={handleDrop} onDragOver={handleDrop}\n            onDrop={handleDrop} onDragLeave={handleDrop}>\n            {\n                prop.tileGroup.tiles.map( ( tile, index ) =>\n                    getTiles( tile, index, prop, handleTileGroupDragAndDrop )\n                )\n            }\n        </div>\n    );\n};\n\nconst getTileGroupClasses = ( tile ) => {\n    let className = [ 'aw-tile-tileMain aw-layout-flexColumn aw-theme-tileText aw-tile-draggable' ];\n    className.push( tile.editing ? 'aw-tile-tileEdit' : '' );\n    return className.join( ' ' );\n};\n\n\nconst getTiles = ( tile, index, prop, handleTileGroupDragAndDrop ) => {\n    let classes = getTileGroupClasses( tile );\n    let orderObj = {\n        order: index\n    };\n\n    tile.editTileCallback = prop.tileGroup.editTileCallback;\n    tile.isGatewayInEditMode = prop.tileGroup.isGatewayInEditMode;\n    // tile.updateToParent( tileIdx, value ) as dispatch\n    // do we need a createTile just like createField?\n    return (\n        <div key={index + tile.displayName} data-locator='tile-main' className={classes} draggable={tile.editing ? tile.editing : false} style={orderObj}>\n            <AwTile tile={tile} handleTileGroupDragAndDrop={handleTileGroupDragAndDrop} unPinTileCallback={prop.unPinTileCallback} tileClickCallback={prop.tileClickCallback}></AwTile>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}