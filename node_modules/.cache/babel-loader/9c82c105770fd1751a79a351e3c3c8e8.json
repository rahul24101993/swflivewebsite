{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwLayoutSlot from'viewmodel/AwLayoutSlotViewModel';import AwInclude from'viewmodel/AwIncludeViewModel';import{AwClass,ExistWhen}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DivAwClass=AwClass('div');const AwLayoutSlotExistWhen=ExistWhen(AwLayoutSlot);/*\nctx imports\n*/const ctxImportObj={};/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"data\":{\"fullScreenState\":{\"initialValues\":{\"value\":false},\"meta\":{}}},\"props\":{\"header-title\":{\"type\":\"string\"},\"header-path\":{\"type\":\"string\"},\"header-context-title\":{\"type\":\"string\"},\"include-component-name\":{\"type\":\"string\"},\"context\":{\"type\":\"object\"}},\"_viewModelId\":\"AwFullScreen\",\"_uniqueViewModelId\":\"AwFullScreen\",\"ctx\":{}};/*\n<div aw-class=\"[{'sw-full-screen-off': data.fullScreenState.value === false },{'sw-full-screen-on sw-column': data.fullScreenState.value === true}]\">\n    <aw-layout-slot name='aw_fullScreenHeader' exist-when=\"data.fullScreenState.value === true\" class='aw-layout-fit' context=\"{ ...props.context,\n        headerTitle : props.headerTitle,\n        headerPath: props.headerPath,\n        headerContextTitle:props.headerContextTitle,\n        fullScreenState : data.fullScreenState}\"></aw-layout-slot>\n    <aw-include class=\"aw-base-scrollPanel flex-auto\" name=\"{{props.includeComponentName}}\" sub-panel-context=\"{ ...props.context, fullScreenState : data.fullScreenState }\"></aw-include>\n</div>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsxs(DivAwClass,{awClass:AwParseService.instance(\"[{'sw-full-screen-off': fields.fullScreenState.value === false },{'sw-full-screen-on sw-column': fields.fullScreenState.value === true}]\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:[/*#__PURE__*/_jsx(AwLayoutSlotExistWhen,{name:\"aw_fullScreenHeader\",className:\"aw-layout-fit\",context:AwParseService.instance(\"{ ...props.context,\\n        headerTitle : props.headerTitle,\\n        headerPath: props.headerPath,\\n        headerContextTitle:props.headerContextTitle,\\n        fullScreenState : fields.fullScreenState}\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"fields.fullScreenState.value === true\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})}),/*#__PURE__*/_jsx(AwInclude,{viewId:AwParseService.instance(\"props.includeComponentName\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),viewPath:AwParseService.instance(\"viewPath\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),className:\"aw-base-scrollPanel flex-auto\",name:AwParseService.instance(\"props.includeComponentName\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),subPanelContext:AwParseService.instance(\"{ ...props.context, fullScreenState : fields.fullScreenState }\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})]});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}