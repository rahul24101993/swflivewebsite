{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwLayoutSlotService.js\";\nimport cfgSvc from 'js/configurationService';\nimport { updateShortConditions } from 'js/commandConfigUtils.service';\nimport AwLayoutSlotInclude from 'viewmodel/AwLayoutSlotIncludeViewModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awLayoutSlotRenderFunction = props => {\n  const {\n    viewModel,\n    name,\n    context\n  } = props;\n  const {\n    data\n  } = viewModel;\n  const {\n    allSlotsJson\n  } = data;\n  return allSlotsJson ? /*#__PURE__*/_jsxDEV(AwLayoutSlotInclude, {\n    name: name,\n    context: context,\n    allSlotsJson: allSlotsJson\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 27\n  }, this) : '';\n};\n\nconst loadLayoutSlots = async () => {\n  return await cfgSvc.getCfg('layoutSlots').then(allSlotsJson => {\n    if (allSlotsJson.slots) {\n      updateShortConditions(allSlotsJson, allSlotsJson.slots);\n      return allSlotsJson;\n    }\n  });\n};\n\nexport const initialize = () => {\n  return loadLayoutSlots().then(allSlotsJson => {\n    return allSlotsJson;\n  });\n};","map":{"version":3,"names":["cfgSvc","updateShortConditions","AwLayoutSlotInclude","awLayoutSlotRenderFunction","props","viewModel","name","context","data","allSlotsJson","loadLayoutSlots","getCfg","then","slots","initialize"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwLayoutSlotService.js"],"sourcesContent":["import cfgSvc from 'js/configurationService';\nimport { updateShortConditions } from 'js/commandConfigUtils.service';\nimport AwLayoutSlotInclude from 'viewmodel/AwLayoutSlotIncludeViewModel';\n\nexport const awLayoutSlotRenderFunction = ( props ) => {\n    const { viewModel, name, context } = props;\n    const { data } = viewModel;\n    const { allSlotsJson } = data;\n    return allSlotsJson ? <AwLayoutSlotInclude name={name} context={context} allSlotsJson={allSlotsJson}></AwLayoutSlotInclude> : '';\n};\n\nconst loadLayoutSlots = async () => {\n    return await cfgSvc.getCfg( 'layoutSlots' ).then( allSlotsJson => {\n        if( allSlotsJson.slots ) {\n            updateShortConditions( allSlotsJson, allSlotsJson.slots );\n            return allSlotsJson;\n        }\n    } );\n};\n\nexport const initialize = () => {\n    return loadLayoutSlots().then( allSlotsJson => {\n        return allSlotsJson;\n    } );\n};\n"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;;AAEA,OAAO,MAAMC,0BAA0B,GAAKC,KAAF,IAAa;EACnD,MAAM;IAAEC,SAAF;IAAaC,IAAb;IAAmBC;EAAnB,IAA+BH,KAArC;EACA,MAAM;IAAEI;EAAF,IAAWH,SAAjB;EACA,MAAM;IAAEI;EAAF,IAAmBD,IAAzB;EACA,OAAOC,YAAY,gBAAG,QAAC,mBAAD;IAAqB,IAAI,EAAEH,IAA3B;IAAiC,OAAO,EAAEC,OAA1C;IAAmD,YAAY,EAAEE;EAAjE;IAAA;IAAA;IAAA;EAAA,QAAH,GAA2G,EAA9H;AACH,CALM;;AAOP,MAAMC,eAAe,GAAG,YAAY;EAChC,OAAO,MAAMV,MAAM,CAACW,MAAP,CAAe,aAAf,EAA+BC,IAA/B,CAAqCH,YAAY,IAAI;IAC9D,IAAIA,YAAY,CAACI,KAAjB,EAAyB;MACrBZ,qBAAqB,CAAEQ,YAAF,EAAgBA,YAAY,CAACI,KAA7B,CAArB;MACA,OAAOJ,YAAP;IACH;EACJ,CALY,CAAb;AAMH,CAPD;;AASA,OAAO,MAAMK,UAAU,GAAG,MAAM;EAC5B,OAAOJ,eAAe,GAAGE,IAAlB,CAAwBH,YAAY,IAAI;IAC3C,OAAOA,YAAP;EACH,CAFM,CAAP;AAGH,CAJM"},"metadata":{},"sourceType":"module"}