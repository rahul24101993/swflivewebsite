{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * @module js/useVmoStore\n */\nimport { useCtx } from './reactAppCtx';\n/**\n * Custom hook to sync up component properties with the VMO store based on the \"props\" configuration\n *\n * @param {Object} props Properties for this component\n * @param {Object} definition View model JSON definition\n * @returns {Object} Update version of any view model object properties. Key will not be set if props configuration is not \"viewModelObject\"\n */\n\nexport const useVmoStore = (props, definition) => {\n  var _s2 = $RefreshSig$();\n\n  var _s = $RefreshSig$();\n\n  return _s2(_s(_s2(Object.entries(definition || {}).reduce(_s2(_s(_s2((acc, _ref) => {\n    _s2();\n\n    _s();\n\n    let [name, propDef] = _ref;\n\n    if (propDef.type === 'viewModelObject') {\n      const path = ['vmo', props[name] ? props[name].uid : 'null']; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n      const ctxVal = useCtx(path).value;\n      acc[name] = ctxVal || props[name];\n    }\n\n    return acc;\n  }, \"hFonVS/c2oLwTvuG83uAXWmBELM=\", false, function () {\n    return [useCtx];\n  }), \"hFonVS/c2oLwTvuG83uAXWmBELM=\", false, function () {\n    return [useCtx];\n  }), \"hFonVS/c2oLwTvuG83uAXWmBELM=\", false, function () {\n    return [useCtx];\n  }), {}), \"hFonVS/c2oLwTvuG83uAXWmBELM=\", false, function () {\n    return [useCtx];\n  }), \"hFonVS/c2oLwTvuG83uAXWmBELM=\", false, function () {\n    return [useCtx];\n  }), \"hFonVS/c2oLwTvuG83uAXWmBELM=\", false, function () {\n    return [useCtx];\n  });\n};\nexport default useVmoStore;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/useVmoStore.js"],"names":["useVmoStore","definition","propDef","path","props","ctxVal","useCtx","acc"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,SAAA,MAAA,QAAA,eAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMA,WAAW,GAAG,CAAA,KAAA,EAAA,UAAA,KAAyB;EAAA;;EAAA,IAAA,EAAA,GAAA,YAAA,EAAA;;EAChD,WAAA,EAAA,KAAO,MAAM,CAAN,OAAA,CAAgBC,UAAU,IAA1B,EAAA,EAAA,MAAA,KAAA,EAAA,KACM,CAAA,GAAA,EAAA,IAAA,KAA8B;IAAA;;IAAA,EAAA;;IAAA,IAAvB,CAAA,IAAA,EAAA,OAAA,IAAuB,IAAA;;IACnC,IAAIC,OAAO,CAAPA,IAAAA,KAAJ,iBAAA,EAAyC;MACrC,MAAMC,IAAI,GAAG,CAAA,KAAA,EAASC,KAAK,CAALA,IAAK,CAALA,GAAcA,KAAK,CAALA,IAAK,CAALA,CAAdA,GAAAA,GADe,MACxB,CAAb,CADqC,CAErC;;MACA,MAAMC,MAAM,GAAGC,MAAM,CAANA,IAAM,CAANA,CAAf,KAAA;MACAC,GAAG,CAAHA,IAAG,CAAHA,GAAYF,MAAM,IAAID,KAAK,CAA3BG,IAA2B,CAA3BA;IACH;;IACD,OAAA,GAAA;EARD,CAAA;IAAA,QAKoBD,MALpB;EAAA,IAAA,8BAAA,EAAA,KAAA,EAAA,YAAA;IAAA,OAAA,CAAA,MAAA,CAAA;EAAA,CAAA,CAAA;IAAA,QAKoBA,MALpB;EAAA,IAAP,EAAO,CAAP;IAAA,QAK2BA,MAL3B;EAAA,IAAA,8BAAA,EAAA,KAAA,EAAA,YAAA;IAAA,OAAA,CAAA,MAAA,CAAA;EAAA,CAAA,CAAA;IAAA,QAK2BA,MAL3B;EAAA;AADG,CAAA;AAaP,eAAA,WAAA","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/useVmoStore\n */\nimport { useCtx } from './reactAppCtx';\n\n/**\n * Custom hook to sync up component properties with the VMO store based on the \"props\" configuration\n *\n * @param {Object} props Properties for this component\n * @param {Object} definition View model JSON definition\n * @returns {Object} Update version of any view model object properties. Key will not be set if props configuration is not \"viewModelObject\"\n */\nexport const useVmoStore = ( props, definition ) => {\n    return Object.entries( definition || {} )\n        .reduce( ( acc, [ name, propDef ] ) => {\n            if( propDef.type === 'viewModelObject' ) {\n                const path = [ 'vmo', props[name] ? props[name].uid : 'null' ];\n                // eslint-disable-next-line react-hooks/rules-of-hooks\n                const ctxVal = useCtx( path ).value;\n                acc[name] = ctxVal || props[name];\n            }\n            return acc;\n        }, {} );\n};\n\nexport default useVmoStore;\n"]},"metadata":{},"sourceType":"module"}