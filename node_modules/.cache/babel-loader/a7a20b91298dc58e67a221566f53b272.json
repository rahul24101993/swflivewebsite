{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * This module provides reusable functions related to handling URL manipulation.\n *\n * @module js/browserUtils\n *\n * @publishedApolloService\n */\n\n/**\n * {String} Base URL for the current application's root 'document' without any query or location attributes and (if\n * otherwise valid) with a trailing '/' assured (e.g. 'http://100.100.100.100:8888/awc/').\n */\nvar _cachedBaseURL;\n/**\n * Regular Expression from: https://tools.ietf.org/html/rfc3986#appendix-B\n * <pre>\n * Input:\n * https://www.ics.uci.edu/pub/ietf/uri/?locale=dldl&sbsbs=ddd#Related/fkfkfkf/s/s/\n *\n * Output:\n * Full match   0-80    `https://www.ics.uci.edu/pub/ietf/uri/?locale=dldl&sbsbs=ddd#Related/fkfkfkf/s/s/`\n * Group 1. 0-6 `https:`\n * Group 2. 0-5 `https`\n * Group 3. 6-37    `//www.ics.uci.edu/pub/ietf/uri/`\n * Group 4. 8-37    `www.ics.uci.edu/pub/ietf/uri/`\n * Group 5. 37-37   ``\n * Group 6. 37-59   `?locale=dldl&sbsbs=ddd`\n * Group 7. 38-59   `locale=dldl&sbsbs=ddd`\n * Group 8. 59-80   `#Related/fkfkfkf/s/s/`\n * Group 9. 60-80   `Related/fkfkfkf/s/s/`\n * </pre>\n *\n * @param {String} url -\n *\n * @returns {StringArray} Result\n */\n\n\nfunction _matchUrlGroups(url) {\n  return url.match(/^(([^:?#]+):)?(\\/\\/([^?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/);\n}\n/**\n * Remove the given attribute (and its value) from the specified URL (if it exists).\n *\n * @param {String} urlToEdit - The original URL to evaluate and change.\n * @param {String} attrToRemove - Name of the attribute to remove.\n *\n * @returns {String} The given URL with the specified attribute removed (if it origianlly existed).\n */\n\n\nfunction _removeUrlAttribute(urlToEdit, attrToRemove) {\n  var urlToReturn = urlToEdit;\n\n  if (urlToEdit.indexOf(attrToRemove) !== -1) {\n    var results = _matchUrlGroups(urlToEdit); // Check if we have any search attributes\n\n\n    if (results[7]) {\n      urlToReturn = results[1] + results[3]; // protocol + server w/port\n\n      if (results[6]) {\n        // 'search' attributes\n        var searchAttrs = results[6]; // Check if this attr has a value\n\n        var attrStartNdx = searchAttrs.indexOf(attrToRemove + '=');\n\n        if (attrStartNdx !== -1) {\n          // Find the next attr (or end)\n          var nextAttrStartNdx = searchAttrs.indexOf('&', attrStartNdx);\n          var strToRemove;\n\n          if (nextAttrStartNdx !== -1) {\n            // extract attr and value (without prefix) to be removed (i.e. collapse out)\n            strToRemove = searchAttrs.substring(attrStartNdx, nextAttrStartNdx + 1);\n          } else {\n            // check if we are removing the whole set of 'search' attrs\n            if (attrStartNdx === 1) {\n              strToRemove = searchAttrs;\n            } else {\n              // extract attr and value (with prefix) to be removed\n              strToRemove = searchAttrs.substring(attrStartNdx - 1, searchAttrs.length);\n            }\n          }\n\n          var strWithOutParam = searchAttrs.replace(strToRemove, '');\n          urlToReturn += strWithOutParam;\n        } else {\n          // Non-value case not handled yet var ndx3 = searchAttrs.indexOf( '&', attrStartNdx );\n          urlToReturn += searchAttrs;\n        }\n      }\n\n      if (results[8]) {\n        // hash location\n        urlToReturn += results[8];\n      }\n    }\n  }\n\n  return urlToReturn;\n} // -------------------------------------------------------------------------------\n// -------------------------------------------------------------------------------\n// Public Functions\n// -------------------------------------------------------------------------------\n// -------------------------------------------------------------------------------\n\n\nvar exports = {};\n/**\n * Note: This API is here to allow Jasmine 'spyOn' type testing to act enough like a browser to test these URL\n * functions.\n *\n * @returns {Object} The current 'window.location' object.\n */\n\nexport let getWindowLocation = function () {\n  return window.location;\n};\n/**\n * Note: This API is here to allow jasmine testing to act enough like a browser to test URL functions.\n *\n * @returns {Object} The current 'window.navigator' object.\n */\n\nexport let getWindowNavigator = function () {\n  return window.navigator;\n};\n/**\n * Note: This API is here to allow jasmine testing to act enough like a browser to test URL functions.\n *\n * @param {String} url - The URK value to set as the window's HRef.\n */\n\nexport let setWindowHRef = function (url) {\n  window.location.href = url;\n};\n/**\n *\n * Returns Base URL for the current application\n *\n * @returns {String} Base URL for the current application's root 'document' without any query or location attributes\n *          and (if otherwise valid) with a trailing '/' assured (e.g. 'http://100.100.100.100:8888/awc/').\n */\n\nexport let getBaseURL = function () {\n  if (!_cachedBaseURL) {\n    // strip 'index.html' from end of pathname if present\n    var location = exports.getWindowLocation();\n    var pathname = location.pathname; // IE11 on Windows 10 doesn't have 'location.origin' object, so let's set it\n\n    if (!location.origin) {\n      location.origin = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n    }\n\n    _cachedBaseURL = location.origin + pathname.substring(0, pathname.lastIndexOf('/') + 1);\n  }\n\n  return _cachedBaseURL;\n};\n\nvar _navigator = getWindowNavigator();\n/**\n * Checks if browser is IE. TRUE if browser is IE\n */\n\n\nexport let isIE = _navigator.userAgent.search(/(trident|edge)/i) > -1;\n/**\n * Checks if browser is non Edge IE. TRUE if browser is non Edge IE\n */\n\nexport let isNonEdgeIE = /trident/i.test(_navigator.userAgent);\n/**\n * Checks if running on a mobile OS. TRUE if we're currently running on a mobile OS\n */\n\nexport let isMobileOS = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(_navigator.userAgent);\n/**\n * Checks if it is touch device, true if it is touch device\n */\n\nexport let isTouchDevice = 'ontouchstart' in window || navigator.msMaxTouchPoints > 0;\n/**\n * Checks if browser is Firefox. TRUE if browser is Firefox\n */\n\nexport let isFirefox = _navigator.userAgent.search(/firefox/i) > -1;\n/**\n * Checks if browser is Qt. TRUE if browser is Qt\n */\n\nexport let isQt = _navigator.userAgent.search(/QtWebEngine/i) > -1;\n/**\n * Checks if browser is Safari.\n */\n\nexport let isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n/**\n * Returns an object who's properties represent the 'search' attributes of the current $location (or window's URL if\n * _jsniInjector is not initialized).\n * <P>\n * Note: This should only be used if the attributes are needed before angular startup, otherwise use $state.params\n * or $location.search()\n *\n * @return {Object} An object who's properties represent the 'search' attributes of the current $location (or\n *         window's URL if _jsniInjector is not initialized).\n * @ignore\n */\n\nexport let getUrlAttributes = function () {\n  /**\n   * Check if AngularJS has started and _jsniInjector is setup\n   * <P>\n   * If so: use $location.search()\n   */\n  if (window._jsniInjector) {\n    return window._jsniInjector.service('$location').search();\n  }\n\n  return exports.getWindowLocationAttributes();\n};\n/**\n * Returns the browser type and the version of that browser as a string\n *\n * https://stackoverflow.com/questions/2400935/browser-detection-in-javascript\n */\n\nexport let getBrowserType = function () {\n  var ua = navigator.userAgent;\n  var tem = null;\n  var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\n  if (/trident/i.test(M[1])) {\n    tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n    return 'IE ' + (tem[1] || '');\n  }\n\n  if (M[1] === 'Chrome') {\n    tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n\n    if (tem !== null) {\n      return tem.slice(1).join(' ').replace('OPR', 'Opera');\n    }\n  }\n\n  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n\n  if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n    M.splice(1, 1, tem[1]);\n  }\n\n  return M.join(' ');\n};\n/**\n * Returns an object who's properties represent the 'search' attributes of the current window's URL.\n * <P>\n * Note: These attributes are only the ones BEFORE the '#' in the URL. All attributes AFTER the '#' are accessed by\n * using the $state.params or $location.search()\n *\n * @return {Object} An object who's properties represent the 'search' attributes of the current window's URL.\n */\n\nexport let getWindowLocationAttributes = function () {\n  var retAttr = {};\n  var location = exports.getWindowLocation();\n\n  if (location.search) {\n    var paramPairs = location.search.substring(1).split('&');\n    paramPairs.forEach(function (paramString) {\n      var param = paramString.split('=');\n\n      if (param.length === 1) {\n        retAttr[param[0]] = '';\n      } else {\n        retAttr[param[0]] = decodeURIComponent(param[1]);\n      }\n    });\n  }\n\n  return retAttr;\n};\n/**\n * Updates the URL with locale information\n *\n * @param {String} newLocale - The locale value which needs to be set e.g. 'en_US'\n */\n\nexport let updateBrowserUrl = function (newLocale) {\n  if (newLocale) {\n    var location = exports.getWindowLocation();\n\n    var newHRef = _removeUrlAttribute(location.href, 'locale');\n\n    var results = _matchUrlGroups(newHRef); // Build up the protocol and location portion\n\n\n    var newUrl = results[1] + results[3]; // Check if we already have some search attributes (or not)\n\n    if (results[6]) {\n      newUrl += results[6];\n      newUrl += '&locale=';\n      newUrl += newLocale;\n    } else {\n      newUrl += '?locale=';\n      newUrl += newLocale;\n    } // Add back the hash portion (if necessary)\n\n\n    if (results[8]) {\n      newUrl += results[8];\n    }\n\n    exports.setWindowHRef(newUrl);\n  }\n};\n/**\n * Remove the given named attribute from the 'search' area (i.e. URL attributes before the '#') of the browser's\n * current URL.\n *\n * @param {String} attrToRemove - Name of the attribute to remove.\n */\n\nexport let removeUrlAttribute = function (attrToRemove) {\n  if (attrToRemove) {\n    var location = exports.getWindowLocation();\n\n    var newHRef = _removeUrlAttribute(location.href, attrToRemove);\n\n    if (newHRef !== location.href) {\n      exports.setWindowHRef(newHRef);\n    }\n  }\n};\n/**\n * Attach script to the document.\n * If script is already attached to DOM then just call onload callback\n *\n * @param {String} src - source path of the script.\n * @param {String} onLoadCallback - on load callback\n */\n\nexport let attachScriptToDocument = function (src, onLoadCallback) {\n  var scriptElement = document.querySelector(`script[src=\"${src}\"]`);\n\n  if (scriptElement) {\n    onLoadCallback();\n  } else {\n    scriptElement = document.createElement('script');\n    scriptElement.type = 'text/javascript';\n    scriptElement.src = src;\n    document.head.appendChild(scriptElement);\n\n    scriptElement.onload = function () {\n      onLoadCallback();\n    };\n  }\n};\nexports = {\n  getWindowLocation,\n  getWindowNavigator,\n  setWindowHRef,\n  getBaseURL,\n  isIE,\n  isNonEdgeIE,\n  isMobileOS,\n  isTouchDevice,\n  isFirefox,\n  isQt,\n  isSafari,\n  getUrlAttributes,\n  getBrowserType,\n  getWindowLocationAttributes,\n  updateBrowserUrl,\n  removeUrlAttribute,\n  attachScriptToDocument\n};\nexport default exports;","map":{"version":3,"names":["_cachedBaseURL","_matchUrlGroups","url","match","_removeUrlAttribute","urlToEdit","attrToRemove","urlToReturn","indexOf","results","searchAttrs","attrStartNdx","nextAttrStartNdx","strToRemove","substring","length","strWithOutParam","replace","exports","getWindowLocation","window","location","getWindowNavigator","navigator","setWindowHRef","href","getBaseURL","pathname","origin","protocol","hostname","port","lastIndexOf","_navigator","isIE","userAgent","search","isNonEdgeIE","test","isMobileOS","isTouchDevice","msMaxTouchPoints","isFirefox","isQt","isSafari","getUrlAttributes","_jsniInjector","service","getWindowLocationAttributes","getBrowserType","ua","tem","M","exec","slice","join","appName","appVersion","splice","retAttr","paramPairs","split","forEach","paramString","param","decodeURIComponent","updateBrowserUrl","newLocale","newHRef","newUrl","removeUrlAttribute","attachScriptToDocument","src","onLoadCallback","scriptElement","document","querySelector","createElement","type","head","appendChild","onload"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/kernel/src/js/browserUtils.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * This module provides reusable functions related to handling URL manipulation.\n *\n * @module js/browserUtils\n *\n * @publishedApolloService\n */\n\n/**\n * {String} Base URL for the current application's root 'document' without any query or location attributes and (if\n * otherwise valid) with a trailing '/' assured (e.g. 'http://100.100.100.100:8888/awc/').\n */\nvar _cachedBaseURL;\n\n/**\n * Regular Expression from: https://tools.ietf.org/html/rfc3986#appendix-B\n * <pre>\n * Input:\n * https://www.ics.uci.edu/pub/ietf/uri/?locale=dldl&sbsbs=ddd#Related/fkfkfkf/s/s/\n *\n * Output:\n * Full match   0-80    `https://www.ics.uci.edu/pub/ietf/uri/?locale=dldl&sbsbs=ddd#Related/fkfkfkf/s/s/`\n * Group 1. 0-6 `https:`\n * Group 2. 0-5 `https`\n * Group 3. 6-37    `//www.ics.uci.edu/pub/ietf/uri/`\n * Group 4. 8-37    `www.ics.uci.edu/pub/ietf/uri/`\n * Group 5. 37-37   ``\n * Group 6. 37-59   `?locale=dldl&sbsbs=ddd`\n * Group 7. 38-59   `locale=dldl&sbsbs=ddd`\n * Group 8. 59-80   `#Related/fkfkfkf/s/s/`\n * Group 9. 60-80   `Related/fkfkfkf/s/s/`\n * </pre>\n *\n * @param {String} url -\n *\n * @returns {StringArray} Result\n */\nfunction _matchUrlGroups( url ) {\n    return url.match( /^(([^:?#]+):)?(\\/\\/([^?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/ );\n}\n\n/**\n * Remove the given attribute (and its value) from the specified URL (if it exists).\n *\n * @param {String} urlToEdit - The original URL to evaluate and change.\n * @param {String} attrToRemove - Name of the attribute to remove.\n *\n * @returns {String} The given URL with the specified attribute removed (if it origianlly existed).\n */\nfunction _removeUrlAttribute( urlToEdit, attrToRemove ) {\n    var urlToReturn = urlToEdit;\n\n    if( urlToEdit.indexOf( attrToRemove ) !== -1 ) {\n        var results = _matchUrlGroups( urlToEdit );\n\n        // Check if we have any search attributes\n        if( results[ 7 ] ) {\n            urlToReturn = results[ 1 ] + results[ 3 ]; // protocol + server w/port\n\n            if( results[ 6 ] ) { // 'search' attributes\n                var searchAttrs = results[ 6 ];\n\n                // Check if this attr has a value\n                var attrStartNdx = searchAttrs.indexOf( attrToRemove + '=' );\n\n                if( attrStartNdx !== -1 ) {\n                    // Find the next attr (or end)\n                    var nextAttrStartNdx = searchAttrs.indexOf( '&', attrStartNdx );\n\n                    var strToRemove;\n\n                    if( nextAttrStartNdx !== -1 ) {\n                        // extract attr and value (without prefix) to be removed (i.e. collapse out)\n                        strToRemove = searchAttrs.substring( attrStartNdx, nextAttrStartNdx + 1 );\n                    } else {\n                        // check if we are removing the whole set of 'search' attrs\n                        if( attrStartNdx === 1 ) {\n                            strToRemove = searchAttrs;\n                        } else {\n                            // extract attr and value (with prefix) to be removed\n                            strToRemove = searchAttrs.substring( attrStartNdx - 1, searchAttrs.length );\n                        }\n                    }\n\n                    var strWithOutParam = searchAttrs.replace( strToRemove, '' );\n\n                    urlToReturn += strWithOutParam;\n                } else {\n                    // Non-value case not handled yet var ndx3 = searchAttrs.indexOf( '&', attrStartNdx );\n\n                    urlToReturn += searchAttrs;\n                }\n            }\n\n            if( results[ 8 ] ) { // hash location\n                urlToReturn += results[ 8 ];\n            }\n        }\n    }\n\n    return urlToReturn;\n}\n\n// -------------------------------------------------------------------------------\n// -------------------------------------------------------------------------------\n// Public Functions\n// -------------------------------------------------------------------------------\n// -------------------------------------------------------------------------------\n\nvar exports = {};\n\n/**\n * Note: This API is here to allow Jasmine 'spyOn' type testing to act enough like a browser to test these URL\n * functions.\n *\n * @returns {Object} The current 'window.location' object.\n */\nexport let getWindowLocation = function() {\n    return window.location;\n};\n\n/**\n * Note: This API is here to allow jasmine testing to act enough like a browser to test URL functions.\n *\n * @returns {Object} The current 'window.navigator' object.\n */\nexport let getWindowNavigator = function() {\n    return window.navigator;\n};\n\n/**\n * Note: This API is here to allow jasmine testing to act enough like a browser to test URL functions.\n *\n * @param {String} url - The URK value to set as the window's HRef.\n */\nexport let setWindowHRef = function( url ) {\n    window.location.href = url;\n};\n\n/**\n *\n * Returns Base URL for the current application\n *\n * @returns {String} Base URL for the current application's root 'document' without any query or location attributes\n *          and (if otherwise valid) with a trailing '/' assured (e.g. 'http://100.100.100.100:8888/awc/').\n */\nexport let getBaseURL = function() {\n    if( !_cachedBaseURL ) {\n        // strip 'index.html' from end of pathname if present\n        var location = exports.getWindowLocation();\n\n        var pathname = location.pathname;\n\n        // IE11 on Windows 10 doesn't have 'location.origin' object, so let's set it\n        if( !location.origin ) {\n            location.origin = location.protocol + '//' + location.hostname +\n                ( location.port ? ':' + location.port : '' );\n        }\n\n        _cachedBaseURL = location.origin + pathname.substring( 0, pathname.lastIndexOf( '/' ) + 1 );\n    }\n\n    return _cachedBaseURL;\n};\n\nvar _navigator = getWindowNavigator();\n\n/**\n * Checks if browser is IE. TRUE if browser is IE\n */\nexport let isIE = _navigator.userAgent.search( /(trident|edge)/i ) > -1;\n\n/**\n * Checks if browser is non Edge IE. TRUE if browser is non Edge IE\n */\nexport let isNonEdgeIE = /trident/i.test( _navigator.userAgent );\n\n/**\n * Checks if running on a mobile OS. TRUE if we're currently running on a mobile OS\n */\nexport let isMobileOS = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test( _navigator.userAgent );\n\n/**\n * Checks if it is touch device, true if it is touch device\n */\nexport let isTouchDevice = 'ontouchstart' in window || navigator.msMaxTouchPoints > 0;\n\n/**\n * Checks if browser is Firefox. TRUE if browser is Firefox\n */\nexport let isFirefox = _navigator.userAgent.search( /firefox/i ) > -1;\n\n/**\n * Checks if browser is Qt. TRUE if browser is Qt\n */\nexport let isQt = _navigator.userAgent.search( /QtWebEngine/i ) > -1;\n\n/**\n * Checks if browser is Safari.\n */\nexport let isSafari = /^((?!chrome|android).)*safari/i.test( navigator.userAgent );\n\n/**\n * Returns an object who's properties represent the 'search' attributes of the current $location (or window's URL if\n * _jsniInjector is not initialized).\n * <P>\n * Note: This should only be used if the attributes are needed before angular startup, otherwise use $state.params\n * or $location.search()\n *\n * @return {Object} An object who's properties represent the 'search' attributes of the current $location (or\n *         window's URL if _jsniInjector is not initialized).\n * @ignore\n */\nexport let getUrlAttributes = function() {\n    /**\n     * Check if AngularJS has started and _jsniInjector is setup\n     * <P>\n     * If so: use $location.search()\n     */\n    if( window._jsniInjector ) {\n        return window._jsniInjector.service( '$location' ).search();\n    }\n\n    return exports.getWindowLocationAttributes();\n};\n\n/**\n * Returns the browser type and the version of that browser as a string\n *\n * https://stackoverflow.com/questions/2400935/browser-detection-in-javascript\n */\nexport let getBrowserType = function() {\n    var ua = navigator.userAgent;\n    var tem = null;\n    var M = ua.match( /(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i ) || [];\n    if( /trident/i.test( M[ 1 ] ) ) {\n        tem = /\\brv[ :]+(\\d+)/g.exec( ua ) || [];\n        return 'IE ' + ( tem[ 1 ] || '' );\n    }\n    if( M[ 1 ] === 'Chrome' ) {\n        tem = ua.match( /\\b(OPR|Edge)\\/(\\d+)/ );\n        if( tem !== null ) {\n            return tem.slice( 1 ).join( ' ' ).replace( 'OPR', 'Opera' );\n        }\n    }\n    M = M[ 2 ] ? [ M[ 1 ], M[ 2 ] ] : [ navigator.appName, navigator.appVersion, '-?' ];\n    if( ( tem = ua.match( /version\\/(\\d+)/i ) ) !== null ) {\n        M.splice( 1, 1, tem[ 1 ] );\n    }\n    return M.join( ' ' );\n};\n\n/**\n * Returns an object who's properties represent the 'search' attributes of the current window's URL.\n * <P>\n * Note: These attributes are only the ones BEFORE the '#' in the URL. All attributes AFTER the '#' are accessed by\n * using the $state.params or $location.search()\n *\n * @return {Object} An object who's properties represent the 'search' attributes of the current window's URL.\n */\nexport let getWindowLocationAttributes = function() {\n    var retAttr = {};\n\n    var location = exports.getWindowLocation();\n\n    if( location.search ) {\n        var paramPairs = location.search.substring( 1 ).split( '&' );\n\n        paramPairs.forEach( function( paramString ) {\n            var param = paramString.split( '=' );\n\n            if( param.length === 1 ) {\n                retAttr[ param[ 0 ] ] = '';\n            } else {\n                retAttr[ param[ 0 ] ] = decodeURIComponent( param[ 1 ] );\n            }\n        } );\n    }\n\n    return retAttr;\n};\n\n/**\n * Updates the URL with locale information\n *\n * @param {String} newLocale - The locale value which needs to be set e.g. 'en_US'\n */\nexport let updateBrowserUrl = function( newLocale ) {\n    if( newLocale ) {\n        var location = exports.getWindowLocation();\n\n        var newHRef = _removeUrlAttribute( location.href, 'locale' );\n\n        var results = _matchUrlGroups( newHRef );\n\n        // Build up the protocol and location portion\n        var newUrl = results[ 1 ] + results[ 3 ];\n\n        // Check if we already have some search attributes (or not)\n        if( results[ 6 ] ) {\n            newUrl += results[ 6 ];\n            newUrl += '&locale=';\n            newUrl += newLocale;\n        } else {\n            newUrl += '?locale=';\n            newUrl += newLocale;\n        }\n\n        // Add back the hash portion (if necessary)\n        if( results[ 8 ] ) {\n            newUrl += results[ 8 ];\n        }\n\n        exports.setWindowHRef( newUrl );\n    }\n};\n\n/**\n * Remove the given named attribute from the 'search' area (i.e. URL attributes before the '#') of the browser's\n * current URL.\n *\n * @param {String} attrToRemove - Name of the attribute to remove.\n */\nexport let removeUrlAttribute = function( attrToRemove ) {\n    if( attrToRemove ) {\n        var location = exports.getWindowLocation();\n\n        var newHRef = _removeUrlAttribute( location.href, attrToRemove );\n\n        if( newHRef !== location.href ) {\n            exports.setWindowHRef( newHRef );\n        }\n    }\n};\n\n/**\n * Attach script to the document.\n * If script is already attached to DOM then just call onload callback\n *\n * @param {String} src - source path of the script.\n * @param {String} onLoadCallback - on load callback\n */\nexport let attachScriptToDocument = function( src, onLoadCallback ) {\n    var scriptElement = document.querySelector( `script[src=\"${src}\"]` );\n    if( scriptElement ) {\n        onLoadCallback();\n    } else {\n        scriptElement = document.createElement( 'script' );\n        scriptElement.type = 'text/javascript';\n        scriptElement.src = src;\n        document.head.appendChild( scriptElement );\n        scriptElement.onload = function() {\n            onLoadCallback();\n        };\n    }\n};\n\nexports = {\n    getWindowLocation,\n    getWindowNavigator,\n    setWindowHRef,\n    getBaseURL,\n    isIE,\n    isNonEdgeIE,\n    isMobileOS,\n    isTouchDevice,\n    isFirefox,\n    isQt,\n    isSafari,\n    getUrlAttributes,\n    getBrowserType,\n    getWindowLocationAttributes,\n    updateBrowserUrl,\n    removeUrlAttribute,\n    attachScriptToDocument\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}