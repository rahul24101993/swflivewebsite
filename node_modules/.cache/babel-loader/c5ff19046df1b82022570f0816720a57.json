{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwRowService.js\"; // Copyright (c) 2021 Siemens\n\nimport rowColSvc from 'js/awRowColumnService';\n/**\n * render function for AwRow\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awRowRenderFunction = props => {\n  let elements = props.elementRefList.get('row').current;\n  const {\n    children,\n    width,\n    height,\n    offset,\n    justify,\n    alignContent,\n    wrapStyle,\n    color,\n    className\n  } = props;\n  let classnames = 'aw-layout-row aw-layout-flexbox afx-base-parentElement';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames,\n    ref: props.elementRefList.get('row'),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\nexport const onMount = (elementRefList, props, data) => {\n  let elements = elementRefList.get('row').current;\n  const {\n    children,\n    width,\n    height,\n    offset,\n    justify,\n    alignContent,\n    wrapStyle,\n    color,\n    className\n  } = props;\n\n  if (elements && !elements.isAlreadyAdded) {\n    if (width) {\n      elements.setAttribute('width', width);\n    }\n\n    if (height) {\n      elements.setAttribute('height', height);\n    }\n\n    if (offset) {\n      elements.setAttribute('offset', offset);\n    }\n\n    if (justify) {\n      elements.setAttribute('justify', justify);\n    }\n\n    if (alignContent) {\n      elements.setAttribute('align-content', alignContent);\n    }\n\n    if (wrapStyle) {\n      elements.setAttribute('wrap-style', wrapStyle);\n    }\n\n    if (color) {\n      elements.setAttribute('color', color);\n    }\n\n    elements.isAlreadyAdded = true;\n    rowColSvc.initRowOrColumn([elements]);\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwRowService.js"],"names":["awRowRenderFunction","props","elements","className","classnames","children","onMount","elementRefList","rowColSvc"],"mappings":"2JAAA;;AACA,OAAA,SAAA,MAAA,uBAAA;AAEA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,mBAAmB,GAAKC,KAAF,IAAa;EAC5C,IAAIC,QAAQ,GAAGD,KAAK,CAALA,cAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EAAf,OAAA;EACA,MAAM;IAAA,QAAA;IAAA,KAAA;IAAA,MAAA;IAAA,MAAA;IAAA,OAAA;IAAA,YAAA;IAAA,SAAA;IAAA,KAAA;IAA4EE;EAA5E,IAAN,KAAA;EACA,IAAIC,UAAU,GAAd,wDAAA;EAEA,OAAA,aACI,OAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAd,UAAA;IAA4B,GAAG,EAAEH,KAAK,CAALA,cAAAA,CAAAA,GAAAA,CAAjC,KAAiCA,CAAjC;IAAA,QAAA,EACKI;EADL,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADJ,IACI,CADJ;AALG,CAAA;AAYP,OAAO,MAAMC,OAAO,GAAG,CAAA,cAAA,EAAA,KAAA,EAAA,IAAA,KAAmC;EACtD,IAAIJ,QAAQ,GAAGK,cAAc,CAAdA,GAAAA,CAAAA,KAAAA,EAAf,OAAA;EACA,MAAM;IAAA,QAAA;IAAA,KAAA;IAAA,MAAA;IAAA,MAAA;IAAA,OAAA;IAAA,YAAA;IAAA,SAAA;IAAA,KAAA;IAA4EJ;EAA5E,IAAN,KAAA;;EACA,IAAID,QAAQ,IAAI,CAACA,QAAQ,CAAzB,cAAA,EAA2C;IACvC,IAAA,KAAA,EAAY;MACRA,QAAQ,CAARA,YAAAA,CAAAA,OAAAA,EAAAA,KAAAA;IACH;;IAED,IAAA,MAAA,EAAa;MACTA,QAAQ,CAARA,YAAAA,CAAAA,QAAAA,EAAAA,MAAAA;IACH;;IAED,IAAA,MAAA,EAAa;MACTA,QAAQ,CAARA,YAAAA,CAAAA,QAAAA,EAAAA,MAAAA;IACH;;IAED,IAAA,OAAA,EAAc;MACVA,QAAQ,CAARA,YAAAA,CAAAA,SAAAA,EAAAA,OAAAA;IACH;;IAED,IAAA,YAAA,EAAmB;MACfA,QAAQ,CAARA,YAAAA,CAAAA,eAAAA,EAAAA,YAAAA;IACH;;IAED,IAAA,SAAA,EAAgB;MACZA,QAAQ,CAARA,YAAAA,CAAAA,YAAAA,EAAAA,SAAAA;IACH;;IAED,IAAA,KAAA,EAAY;MACRA,QAAQ,CAARA,YAAAA,CAAAA,OAAAA,EAAAA,KAAAA;IACH;;IAEDA,QAAQ,CAARA,cAAAA,GAAAA,IAAAA;IAEAM,SAAS,CAATA,eAAAA,CAA2B,CAA3BA,QAA2B,CAA3BA;EACH;AAnCE,CAAA","sourcesContent":["// Copyright (c) 2021 Siemens\nimport rowColSvc from 'js/awRowColumnService';\n\n/**\n * render function for AwRow\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awRowRenderFunction = ( props ) => {\n    let elements = props.elementRefList.get( 'row' ).current;\n    const { children, width, height, offset, justify, alignContent, wrapStyle, color, className } = props;\n    let classnames = 'aw-layout-row aw-layout-flexbox afx-base-parentElement';\n\n    return (\n        <div className={classnames} ref={props.elementRefList.get( 'row' )}>\n            {children}\n        </div>\n    );\n};\n\nexport const onMount = ( elementRefList, props, data ) => {\n    let elements = elementRefList.get( 'row' ).current;\n    const { children, width, height, offset, justify, alignContent, wrapStyle, color, className } = props;\n    if( elements && !elements.isAlreadyAdded ) {\n        if( width ) {\n            elements.setAttribute( 'width', width );\n        }\n\n        if( height ) {\n            elements.setAttribute( 'height', height );\n        }\n\n        if( offset ) {\n            elements.setAttribute( 'offset', offset );\n        }\n\n        if( justify ) {\n            elements.setAttribute( 'justify', justify );\n        }\n\n        if( alignContent ) {\n            elements.setAttribute( 'align-content', alignContent );\n        }\n\n        if( wrapStyle ) {\n            elements.setAttribute( 'wrap-style', wrapStyle );\n        }\n\n        if( color ) {\n            elements.setAttribute( 'color', color );\n        }\n\n        elements.isAlreadyAdded = true;\n\n        rowColSvc.initRowOrColumn( [ elements ] );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}