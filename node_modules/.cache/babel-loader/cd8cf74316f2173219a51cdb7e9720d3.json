{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/* eslint-disable require-jsdoc */\n\n/**\n * orderBy filter service.\n *\n * @module js/awOrderByFilterService\n */\nimport AwParseService from 'js/awParseService';\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isArray(arr) {\n  return Array.isArray(arr) || arr instanceof Array;\n}\n\nfunction isWindow(obj) {\n  return obj && obj.window === obj;\n}\n\nfunction isArrayLike(obj) {\n  // `null`, `undefined` and `window` are not array-like\n  if (obj === null || isWindow(obj)) {\n    return false;\n  }\n\n  if (isArray(obj) || isString(obj)) {\n    return true;\n  } // Support: iOS 8.2 (not reproducible in simulator)\n  // \"length\" in obj used to prevent JIT error (gh-11508)\n\n\n  var length = 'length' in Object(obj) && obj.length; // NodeList objects (with `item` method) and\n  // other objects with suitable length characteristics are array-like\n\n  return isNumber(length) && (length >= 0 && length - 1 in obj || typeof obj.item === 'function');\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction identity($) {\n  return $;\n}\n\nfunction hasCustomToString(obj) {\n  return isFunction(obj.toString) && obj.toString !== toString;\n}\n\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\nfunction processPredicates(sortPredicates) {\n  return sortPredicates.map(function (predicate) {\n    var descending = 1;\n    var get = identity;\n\n    if (isFunction(predicate)) {\n      get = predicate;\n    } else if (isString(predicate)) {\n      if (predicate.charAt(0) === '+' || predicate.charAt(0) === '-') {\n        descending = predicate.charAt(0) === '-' ? -1 : 1;\n        predicate = predicate.substring(1);\n      }\n\n      if (predicate !== '') {\n        get = AwParseService.instance(predicate);\n\n        if (get.constant) {\n          var key = get();\n\n          get = function (value) {\n            return value[key];\n          };\n        }\n      }\n    }\n\n    return {\n      get: get,\n      descending: descending\n    };\n  });\n}\n\nfunction isPrimitive(value) {\n  switch (typeof value) {\n    case 'number':\n    /* falls through */\n\n    case 'boolean':\n    /* falls through */\n\n    case 'string':\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction objectValue(value) {\n  // If `valueOf` is a valid function use that\n  if (isFunction(value.valueOf)) {\n    value = value.valueOf();\n\n    if (isPrimitive(value)) {\n      return value;\n    }\n  } // If `toString` is a valid function and not the one from `Object.prototype` use that\n\n\n  if (hasCustomToString(value)) {\n    value = value.toString();\n\n    if (isPrimitive(value)) {\n      return value;\n    }\n  }\n\n  return value;\n}\n\nfunction getPredicateValue(value, index) {\n  var type = typeof value;\n\n  if (value === null) {\n    type = 'null';\n  } else if (type === 'object') {\n    value = objectValue(value);\n  }\n\n  return {\n    value: value,\n    type: type,\n    index: index\n  };\n}\n\nfunction defaultCompare(v1, v2) {\n  var result = 0;\n  var type1 = v1.type;\n  var type2 = v2.type;\n\n  if (type1 === type2) {\n    var value1 = v1.value;\n    var value2 = v2.value;\n\n    if (type1 === 'string') {\n      // Compare strings case-insensitively\n      value1 = value1.toLowerCase();\n      value2 = value2.toLowerCase();\n    } else if (type1 === 'object') {\n      // For basic objects, use the position of the object\n      // in the collection instead of the value\n      if (isObject(value1)) {\n        value1 = v1.index;\n      }\n\n      if (isObject(value2)) {\n        value2 = v2.index;\n      }\n    }\n\n    if (value1 !== value2) {\n      result = value1 < value2 ? -1 : 1;\n    }\n  } else {\n    result = type1 === 'undefined' ? 1 : type2 === 'undefined' ? -1 : type1 === 'null' ? 1 : type2 === 'null' ? -1 : type1 < type2 ? -1 : 1;\n  }\n\n  return result;\n}\n\nfunction getOrderByFilter(array, sortPredicate, reverseOrder, compareFn) {\n  if (array === null) {\n    return array;\n  }\n\n  if (!isArrayLike(array)) {\n    throw new Error('orderBy')('notarray', 'Expected array but received: {0}', array);\n  }\n\n  if (!isArray(sortPredicate)) {\n    sortPredicate = [sortPredicate];\n  }\n\n  if (sortPredicate.length === 0) {\n    sortPredicate = ['+'];\n  }\n\n  var predicates = processPredicates(sortPredicate);\n  var descending = reverseOrder ? -1 : 1; // Define the `compare()` function. Use a default comparator if none is specified.\n\n  var compare = isFunction(compareFn) ? compareFn : defaultCompare; // The next three lines are a version of a Swartzian Transform idiom from Perl\n  // (sometimes called the Decorate-Sort-Undecorate idiom)\n  // See https://en.wikipedia.org/wiki/Schwartzian_transform\n\n  var compareValues = Array.prototype.map.call(array, getComparisonObject);\n  compareValues.sort(doComparison);\n  array = compareValues.map(function (item) {\n    return item.value;\n  });\n  return array;\n\n  function getComparisonObject(value, index) {\n    // NOTE: We are adding an extra `tieBreaker` value based on the element's index.\n    // This will be used to keep the sort stable when none of the input predicates can\n    // distinguish between two elements.\n    return {\n      value: value,\n      tieBreaker: {\n        value: index,\n        type: 'number',\n        index: index\n      },\n      predicateValues: predicates.map(function (predicate) {\n        return getPredicateValue(predicate.get(value), index);\n      })\n    };\n  }\n\n  function doComparison(v1, v2) {\n    for (var i = 0, ii = predicates.length; i < ii; i++) {\n      var result = compare(v1.predicateValues[i], v2.predicateValues[i]);\n\n      if (result) {\n        return result * predicates[i].descending * descending;\n      }\n    }\n\n    return (compare(v1.tieBreaker, v2.tieBreaker) || defaultCompare(v1.tieBreaker, v2.tieBreaker)) * descending;\n  }\n}\n\nexport default {\n  getOrderByFilter\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/services/src/js/awOrderByFilterService.js"],"names":["Array","arr","obj","isWindow","isArray","isString","length","Object","isNumber","isFunction","value","descending","get","predicate","AwParseService","key","isPrimitive","hasCustomToString","type","objectValue","index","result","type1","v1","type2","v2","value1","value2","isObject","array","isArrayLike","sortPredicate","predicates","processPredicates","reverseOrder","compare","compareValues","item","tieBreaker","predicateValues","getPredicateValue","i","ii","defaultCompare","getOrderByFilter"],"mappings":"AAAA;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,OAAA,cAAA,MAAA,mBAAA;;AAEA,SAAA,QAAA,CAAA,KAAA,EAA2B;EAAE,OAAO,OAAA,KAAA,KAAP,QAAA;AAAmC;;AAEhE,SAAA,QAAA,CAAA,KAAA,EAA2B;EAAE,OAAO,OAAA,KAAA,KAAP,QAAA;AAAmC;;AAEhE,SAAA,OAAA,CAAA,GAAA,EAAwB;EACpB,OAAOA,KAAK,CAALA,OAAAA,CAAAA,GAAAA,KAAwBC,GAAG,YAAlC,KAAA;AACH;;AAED,SAAA,QAAA,CAAA,GAAA,EAAyB;EACrB,OAAOC,GAAG,IAAIA,GAAG,CAAHA,MAAAA,KAAd,GAAA;AACH;;AAED,SAAA,WAAA,CAAA,GAAA,EAA4B;EACxB;EACA,IAAIA,GAAG,KAAHA,IAAAA,IAAgBC,QAAQ,CAA5B,GAA4B,CAA5B,EAAsC;IAAE,OAAA,KAAA;EAAe;;EAEvD,IAAIC,OAAO,CAAPA,GAAO,CAAPA,IAAkBC,QAAQ,CAA9B,GAA8B,CAA9B,EAAwC;IAAE,OAAA,IAAA;EAJlB,CAAA,CAMxB;EACA;;;EACA,IAAIC,MAAM,GAAG,YAAYC,MAAM,CAAlB,GAAkB,CAAlB,IAA6BL,GAAG,CARrB,MAQxB,CARwB,CAUxB;EACA;;EACA,OAAOM,QAAQ,CAARA,MAAQ,CAARA,KAAwBF,MAAM,IAANA,CAAAA,IAAeA,MAAM,GAANA,CAAAA,IAAfA,GAAAA,IAAoC,OAAOJ,GAAG,CAAV,IAAA,KAAnE,UAAOM,CAAP;AACH;;AAED,SAAA,UAAA,CAAA,KAAA,EAA6B;EAAE,OAAO,OAAA,KAAA,KAAP,UAAA;AAAqC;;AAEpE,SAAA,QAAA,CAAA,CAAA,EAAuB;EACnB,OAAA,CAAA;AACH;;AAED,SAAA,iBAAA,CAAA,GAAA,EAAkC;EAC9B,OAAOC,UAAU,CAAEP,GAAG,CAAfO,QAAU,CAAVA,IAA8BP,GAAG,CAAHA,QAAAA,KAArC,QAAA;AACH;;AAED,SAAA,QAAA,CAAA,KAAA,EAA2B;EACvB,OAAOQ,KAAK,KAALA,IAAAA,IAAkB,OAAA,KAAA,KAAzB,QAAA;AACH;;AAED,SAAA,iBAAA,CAAA,cAAA,EAA6C;EACzC,OAAO,cAAc,CAAd,GAAA,CAAoB,UAAA,SAAA,EAAsB;IAC7C,IAAIC,UAAU,GAAd,CAAA;IACA,IAAIC,GAAG,GAAP,QAAA;;IAEA,IAAIH,UAAU,CAAd,SAAc,CAAd,EAA8B;MAC1BG,GAAG,GAAHA,SAAAA;IADJ,CAAA,MAEO,IAAIP,QAAQ,CAAZ,SAAY,CAAZ,EAA4B;MAC/B,IAAIQ,SAAS,CAATA,MAAAA,CAAAA,CAAAA,MAAAA,GAAAA,IAAiCA,SAAS,CAATA,MAAAA,CAAAA,CAAAA,MAArC,GAAA,EAAqE;QACjEF,UAAU,GAAGE,SAAS,CAATA,MAAAA,CAAAA,CAAAA,MAAAA,GAAAA,GAAgC,CAAhCA,CAAAA,GAAbF,CAAAA;QACAE,SAAS,GAAGA,SAAS,CAATA,SAAAA,CAAZA,CAAYA,CAAZA;MACH;;MACD,IAAIA,SAAS,KAAb,EAAA,EAAuB;QACnBD,GAAG,GAAGE,cAAc,CAAdA,QAAAA,CAANF,SAAME,CAANF;;QACA,IAAIA,GAAG,CAAP,QAAA,EAAmB;UACf,IAAIG,GAAG,GAAGH,GAAV,EAAA;;UACAA,GAAG,GAAG,UAAA,KAAA,EAAkB;YAAE,OAAOF,KAAK,CAAZ,GAAY,CAAZ;UAA1BE,CAAAA;QACH;MACJ;IACJ;;IACD,OAAO;MAAEA,GAAG,EAAL,GAAA;MAAYD,UAAU,EAAEA;IAAxB,CAAP;EAnBJ,CAAO,CAAP;AAqBH;;AAED,SAAA,WAAA,CAAA,KAAA,EAA8B;EAC1B,QAAS,OAAT,KAAA;IACI,KAAA,QAAA;IACI;;IACJ,KAAA,SAAA;IACI;;IACJ,KAAA,QAAA;MACI,OAAA,IAAA;;IACJ;MACI,OAAA,KAAA;EARR;AAUH;;AAED,SAAA,WAAA,CAAA,KAAA,EAA8B;EAC1B;EACA,IAAIF,UAAU,CAAEC,KAAK,CAArB,OAAc,CAAd,EAAkC;IAC9BA,KAAK,GAAGA,KAAK,CAAbA,OAAQA,EAARA;;IACA,IAAIM,WAAW,CAAf,KAAe,CAAf,EAA2B;MAAE,OAAA,KAAA;IAAe;EAJtB,CAAA,CAM1B;;;EACA,IAAIC,iBAAiB,CAArB,KAAqB,CAArB,EAAiC;IAC7BP,KAAK,GAAGA,KAAK,CAAbA,QAAQA,EAARA;;IACA,IAAIM,WAAW,CAAf,KAAe,CAAf,EAA2B;MAAE,OAAA,KAAA;IAAe;EAC/C;;EAED,OAAA,KAAA;AACH;;AAED,SAAA,iBAAA,CAAA,KAAA,EAAA,KAAA,EAA2C;EACvC,IAAIE,IAAI,GAAG,OAAX,KAAA;;EACA,IAAIR,KAAK,KAAT,IAAA,EAAqB;IACjBQ,IAAI,GAAJA,MAAAA;EADJ,CAAA,MAEO,IAAIA,IAAI,KAAR,QAAA,EAAwB;IAC3BR,KAAK,GAAGS,WAAW,CAAnBT,KAAmB,CAAnBA;EACH;;EACD,OAAO;IAAEA,KAAK,EAAP,KAAA;IAAgBQ,IAAI,EAApB,IAAA;IAA4BE,KAAK,EAAEA;EAAnC,CAAP;AACH;;AAED,SAAA,cAAA,CAAA,EAAA,EAAA,EAAA,EAAkC;EAC9B,IAAIC,MAAM,GAAV,CAAA;EACA,IAAIC,KAAK,GAAGC,EAAE,CAAd,IAAA;EACA,IAAIC,KAAK,GAAGC,EAAE,CAAd,IAAA;;EAEA,IAAIH,KAAK,KAAT,KAAA,EAAsB;IAClB,IAAII,MAAM,GAAGH,EAAE,CAAf,KAAA;IACA,IAAII,MAAM,GAAGF,EAAE,CAAf,KAAA;;IAEA,IAAIH,KAAK,KAAT,QAAA,EAAyB;MACrB;MACAI,MAAM,GAAGA,MAAM,CAAfA,WAASA,EAATA;MACAC,MAAM,GAAGA,MAAM,CAAfA,WAASA,EAATA;IAHJ,CAAA,MAIO,IAAIL,KAAK,KAAT,QAAA,EAAyB;MAC5B;MACA;MACA,IAAIM,QAAQ,CAAZ,MAAY,CAAZ,EAAyB;QAAEF,MAAM,GAAGH,EAAE,CAAXG,KAAAA;MAAoB;;MAC/C,IAAIE,QAAQ,CAAZ,MAAY,CAAZ,EAAyB;QAAED,MAAM,GAAGF,EAAE,CAAXE,KAAAA;MAAoB;IAClD;;IAED,IAAID,MAAM,KAAV,MAAA,EAAwB;MACpBL,MAAM,GAAGK,MAAM,GAANA,MAAAA,GAAkB,CAAlBA,CAAAA,GAATL,CAAAA;IACH;EAjBL,CAAA,MAkBO;IACHA,MAAM,GAAGC,KAAK,KAALA,WAAAA,GAAAA,CAAAA,GACLE,KAAK,KAALA,WAAAA,GAAwB,CAAxBA,CAAAA,GACAF,KAAK,KAALA,MAAAA,GAAAA,CAAAA,GACAE,KAAK,KAALA,MAAAA,GAAmB,CAAnBA,CAAAA,GACAF,KAAK,GAALA,KAAAA,GAAgB,CAAhBA,CAAAA,GAJJD,CAAAA;EAKH;;EAED,OAAA,MAAA;AACH;;AAED,SAAA,gBAAA,CAAA,KAAA,EAAA,aAAA,EAAA,YAAA,EAAA,SAAA,EAA2E;EACvE,IAAIQ,KAAK,KAAT,IAAA,EAAqB;IAAE,OAAA,KAAA;EAAe;;EACtC,IAAI,CAACC,WAAW,CAAhB,KAAgB,CAAhB,EAA4B;IACxB,MAAM,IAAA,KAAA,CAAA,SAAA,EAAA,UAAA,EAAA,kCAAA,EAAN,KAAM,CAAN;EACH;;EAED,IAAI,CAAC1B,OAAO,CAAZ,aAAY,CAAZ,EAAgC;IAAE2B,aAAa,GAAG,CAAhBA,aAAgB,CAAhBA;EAAoC;;EACtE,IAAIA,aAAa,CAAbA,MAAAA,KAAJ,CAAA,EAAiC;IAAEA,aAAa,GAAG,CAAhBA,GAAgB,CAAhBA;EAA0B;;EAE7D,IAAIC,UAAU,GAAGC,iBAAiB,CAAlC,aAAkC,CAAlC;EAEA,IAAItB,UAAU,GAAGuB,YAAY,GAAG,CAAH,CAAA,GAX0C,CAWvE,CAXuE,CAavE;;EACA,IAAIC,OAAO,GAAG1B,UAAU,CAAVA,SAAU,CAAVA,GAAAA,SAAAA,GAdyD,cAcvE,CAduE,CAgBvE;EACA;EACA;;EACA,IAAI2B,aAAa,GAAGpC,KAAK,CAALA,SAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAApB,mBAAoBA,CAApB;EACAoC,aAAa,CAAbA,IAAAA,CAAAA,YAAAA;EACAP,KAAK,GAAG,aAAa,CAAb,GAAA,CAAmB,UAAA,IAAA,EAAiB;IAAE,OAAOQ,IAAI,CAAX,KAAA;EAA9CR,CAAQ,CAARA;EAEA,OAAA,KAAA;;EAEA,SAAA,mBAAA,CAAA,KAAA,EAAA,KAAA,EAA6C;IACzC;IACA;IACA;IACA,OAAO;MACHnB,KAAK,EADF,KAAA;MAEH4B,UAAU,EAAE;QAAE5B,KAAK,EAAP,KAAA;QAAgBQ,IAAI,EAApB,QAAA;QAAgCE,KAAK,EAAEA;MAAvC,CAFT;MAGHmB,eAAe,EAAE,UAAU,CAAV,GAAA,CAAgB,UAAA,SAAA,EAAsB;QACnD,OAAOC,iBAAiB,CAAE3B,SAAS,CAATA,GAAAA,CAAF,KAAEA,CAAF,EAAxB,KAAwB,CAAxB;MADa,CAAA;IAHd,CAAP;EAOH;;EAED,SAAA,YAAA,CAAA,EAAA,EAAA,EAAA,EAAgC;IAC5B,KAAK,IAAI4B,CAAC,GAAL,CAAA,EAAWC,EAAE,GAAGV,UAAU,CAA/B,MAAA,EAAwCS,CAAC,GAAzC,EAAA,EAAgDA,CAAhD,EAAA,EAAsD;MAClD,IAAIpB,MAAM,GAAGc,OAAO,CAAEZ,EAAE,CAAFA,eAAAA,CAAF,CAAEA,CAAF,EAA2BE,EAAE,CAAFA,eAAAA,CAA/C,CAA+CA,CAA3B,CAApB;;MACA,IAAA,MAAA,EAAa;QACT,OAAOJ,MAAM,GAAGW,UAAU,CAAVA,CAAU,CAAVA,CAATX,UAAAA,GAAP,UAAA;MACH;IACJ;;IAED,OAAO,CAAEc,OAAO,CAAEZ,EAAE,CAAJ,UAAA,EAAiBE,EAAE,CAA1BU,UAAO,CAAPA,IAA2CQ,cAAc,CAAEpB,EAAE,CAAJ,UAAA,EAAiBE,EAAE,CAA9E,UAA2D,CAA3D,IAAP,UAAA;EACH;AACJ;;AAED,eAAe;EACXmB;AADW,CAAf","sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n/* eslint-disable require-jsdoc */\n/**\n * orderBy filter service.\n *\n * @module js/awOrderByFilterService\n */\n\nimport AwParseService from 'js/awParseService';\n\nfunction isString( value ) { return typeof value === 'string'; }\n\nfunction isNumber( value ) { return typeof value === 'number'; }\n\nfunction isArray( arr ) {\n    return Array.isArray( arr ) || arr instanceof Array;\n}\n\nfunction isWindow( obj ) {\n    return obj && obj.window === obj;\n}\n\nfunction isArrayLike( obj ) {\n    // `null`, `undefined` and `window` are not array-like\n    if( obj === null || isWindow( obj ) ) { return false; }\n\n    if( isArray( obj ) || isString( obj ) ) { return true; }\n\n    // Support: iOS 8.2 (not reproducible in simulator)\n    // \"length\" in obj used to prevent JIT error (gh-11508)\n    var length = 'length' in Object( obj ) && obj.length;\n\n    // NodeList objects (with `item` method) and\n    // other objects with suitable length characteristics are array-like\n    return isNumber( length ) && ( length >= 0 && length - 1 in obj || typeof obj.item === 'function' );\n}\n\nfunction isFunction( value ) { return typeof value === 'function'; }\n\nfunction identity( $ ) {\n    return $;\n}\n\nfunction hasCustomToString( obj ) {\n    return isFunction( obj.toString ) && obj.toString !== toString;\n}\n\nfunction isObject( value ) {\n    return value !== null && typeof value === 'object';\n}\n\nfunction processPredicates( sortPredicates ) {\n    return sortPredicates.map( function( predicate ) {\n        var descending = 1;\n        var get = identity;\n\n        if( isFunction( predicate ) ) {\n            get = predicate;\n        } else if( isString( predicate ) ) {\n            if( predicate.charAt( 0 ) === '+' || predicate.charAt( 0 ) === '-' ) {\n                descending = predicate.charAt( 0 ) === '-' ? -1 : 1;\n                predicate = predicate.substring( 1 );\n            }\n            if( predicate !== '' ) {\n                get = AwParseService.instance( predicate );\n                if( get.constant ) {\n                    var key = get();\n                    get = function( value ) { return value[ key ]; };\n                }\n            }\n        }\n        return { get: get, descending: descending };\n    } );\n}\n\nfunction isPrimitive( value ) {\n    switch ( typeof value ) {\n        case 'number':\n            /* falls through */\n        case 'boolean':\n            /* falls through */\n        case 'string':\n            return true;\n        default:\n            return false;\n    }\n}\n\nfunction objectValue( value ) {\n    // If `valueOf` is a valid function use that\n    if( isFunction( value.valueOf ) ) {\n        value = value.valueOf();\n        if( isPrimitive( value ) ) { return value; }\n    }\n    // If `toString` is a valid function and not the one from `Object.prototype` use that\n    if( hasCustomToString( value ) ) {\n        value = value.toString();\n        if( isPrimitive( value ) ) { return value; }\n    }\n\n    return value;\n}\n\nfunction getPredicateValue( value, index ) {\n    var type = typeof value;\n    if( value === null ) {\n        type = 'null';\n    } else if( type === 'object' ) {\n        value = objectValue( value );\n    }\n    return { value: value, type: type, index: index };\n}\n\nfunction defaultCompare( v1, v2 ) {\n    var result = 0;\n    var type1 = v1.type;\n    var type2 = v2.type;\n\n    if( type1 === type2 ) {\n        var value1 = v1.value;\n        var value2 = v2.value;\n\n        if( type1 === 'string' ) {\n            // Compare strings case-insensitively\n            value1 = value1.toLowerCase();\n            value2 = value2.toLowerCase();\n        } else if( type1 === 'object' ) {\n            // For basic objects, use the position of the object\n            // in the collection instead of the value\n            if( isObject( value1 ) ) { value1 = v1.index; }\n            if( isObject( value2 ) ) { value2 = v2.index; }\n        }\n\n        if( value1 !== value2 ) {\n            result = value1 < value2 ? -1 : 1;\n        }\n    } else {\n        result = type1 === 'undefined' ? 1 :\n            type2 === 'undefined' ? -1 :\n            type1 === 'null' ? 1 :\n            type2 === 'null' ? -1 :\n            type1 < type2 ? -1 : 1;\n    }\n\n    return result;\n}\n\nfunction getOrderByFilter( array, sortPredicate, reverseOrder, compareFn ) {\n    if( array === null ) { return array; }\n    if( !isArrayLike( array ) ) {\n        throw new Error( 'orderBy' )( 'notarray', 'Expected array but received: {0}', array );\n    }\n\n    if( !isArray( sortPredicate ) ) { sortPredicate = [ sortPredicate ]; }\n    if( sortPredicate.length === 0 ) { sortPredicate = [ '+' ]; }\n\n    var predicates = processPredicates( sortPredicate );\n\n    var descending = reverseOrder ? -1 : 1;\n\n    // Define the `compare()` function. Use a default comparator if none is specified.\n    var compare = isFunction( compareFn ) ? compareFn : defaultCompare;\n\n    // The next three lines are a version of a Swartzian Transform idiom from Perl\n    // (sometimes called the Decorate-Sort-Undecorate idiom)\n    // See https://en.wikipedia.org/wiki/Schwartzian_transform\n    var compareValues = Array.prototype.map.call( array, getComparisonObject );\n    compareValues.sort( doComparison );\n    array = compareValues.map( function( item ) { return item.value; } );\n\n    return array;\n\n    function getComparisonObject( value, index ) {\n        // NOTE: We are adding an extra `tieBreaker` value based on the element's index.\n        // This will be used to keep the sort stable when none of the input predicates can\n        // distinguish between two elements.\n        return {\n            value: value,\n            tieBreaker: { value: index, type: 'number', index: index },\n            predicateValues: predicates.map( function( predicate ) {\n                return getPredicateValue( predicate.get( value ), index );\n            } )\n        };\n    }\n\n    function doComparison( v1, v2 ) {\n        for( var i = 0, ii = predicates.length; i < ii; i++ ) {\n            var result = compare( v1.predicateValues[ i ], v2.predicateValues[ i ] );\n            if( result ) {\n                return result * predicates[ i ].descending * descending;\n            }\n        }\n\n        return ( compare( v1.tieBreaker, v2.tieBreaker ) || defaultCompare( v1.tieBreaker, v2.tieBreaker ) ) * descending;\n    }\n}\n\nexport default {\n    getOrderByFilter\n};\n"]},"metadata":{},"sourceType":"module"}