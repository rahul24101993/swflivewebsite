{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * Navigation service which wraps navigation mechanism from the consumers.\n *\n * @module js/navigationService\n */\nimport _ from 'lodash';\nimport navigationUtils from 'js/navigationUtils';\nimport browserUtils from 'js/browserUtils';\nimport parsingUtils from 'js/parsingUtils';\nimport AwStateService from 'js/awStateService';\nimport appCtxSvc from 'js/appCtxService';\nimport workspaceSvc from 'js/workspaceService';\nimport 'js/conditionService';\nimport 'js/contextContributionService';\nimport logger from 'js/logger';\n/**\n * Cached reference to the various AngularJS and AW services.\n */\n\nvar exports = {};\n/**\n * URL sanitizer.\n *\n * @private\n */\n\nvar REGEX_SEARCH_SANITIZE = /(javascript|data:|script|http)/;\n/**\n * Is logging on.\n *\n * @private\n */\n\nvar debug_logAuthActivity = browserUtils.getUrlAttributes().logAuthActivity !== undefined;\n/**\n * Create link to navigate the object.\n *\n * @param {Object} action - The 'declAction' object.\n * @param {Object} navigationParams - The 'navigationParams' object specific for \"Navigation\" action type\n */\n\nfunction navigateObject(action, navigationParams) {\n  var url = '';\n  var navObject = getWindowLocationObject(); // Check to see if they just want a raw url, and not a reference to some place in the application.\n  // There are three or four showcase examples using navigateTo with http and then using a single navigationParams value.\n  // We should support those cases too. MR 1582 in afx time frame is not considering the navigationParams at all and broke these cases.\n\n  if (action.navigateTo.indexOf('http') === 0 || action.navigateTo.indexOf('https') === 0) {\n    url = action.navigateTo;\n\n    _.forEach(navigationParams, function (value) {\n      if (!_.isObject(value)) {\n        url += value;\n        return false; // Limiting the parameter to only one single value as these are general http requests.\n      }\n\n      return undefined;\n    });\n  } else {\n    url = browserUtils.getBaseURL();\n    /**\n     * Check if there are any parameters 'before the #' AND we are NOT trying to launch some other\n     * application.\n     * <P>\n     * If so: Include these in the base URL since they are a necessary context for any 'internal' navigation\n     * operation. Specfically, used to preserve hosting and logging options.\n     * <P>\n     * Note: This is a fix for LCS-173770 (et al.) since any external application would/should be in control\n     * of any other context options.\n     */\n\n    if (navObject.search && !_.startsWith(action.navigateTo, 'launcher')) {\n      url += navObject.search;\n    }\n\n    var stateSvc = navigationUtils.getState(); // Since findState isn't public API, we need to use href to check whether path is registered\n    // in state or not.\n\n    var statePath = stateSvc.href(action.navigateTo, navigationParams, {\n      inherit: false\n    });\n\n    if (statePath) {\n      url += statePath;\n    } else {\n      url += action.navigateTo;\n      var first = true;\n\n      _.forEach(navigationParams, function (value, key) {\n        if (!_.isObject(value)) {\n          if (first) {\n            url += '?';\n            first = false;\n          } else {\n            url += '&';\n          }\n\n          url = url + key + '=' + value;\n        }\n      });\n    }\n  }\n\n  var navTarget = '_self'; //default target for navigation targets\n\n  var windowFeatures = null;\n\n  if (action.navigateIn === 'newTab') {\n    navTarget = '_blank';\n  } else if (action.navigateIn === 'newWindow') {\n    windowFeatures = 'location=yes,menubar=yes,titlebar=yes,toolbar=yes,resizable=yes,scrollbars=yes,';\n    var width = window.outerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    var height = window.outerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    var top = window.screenTop ? window.screenTop : window.screenY;\n    var left = window.screenLeft ? window.screenLeft : window.screenX;\n\n    if (action.options) {\n      for (var key in action.options) {\n        var value = action.options[key];\n\n        if (key === 'top') {\n          top = value;\n        } else if (key === 'left') {\n          left = value;\n        } else if (key === 'height') {\n          height = value;\n        } else if (key === 'width') {\n          width = value;\n        }\n      }\n    }\n\n    windowFeatures = windowFeatures + 'top=' + top + ',left=' + left + ',height=' + height + ',width=' + width;\n    navTarget = '_blank';\n  }\n\n  if (action.actionType === 'Navigate') {\n    if (action.navigateIn === 'newTab') {\n      var openInNewTab = window.open(url, navTarget);\n\n      if (openInNewTab) {\n        openInNewTab.location = url;\n      }\n    } else if (action.navigateIn === 'newWindow') {\n      var openInNewWindow = window.open(url, navTarget, windowFeatures);\n\n      if (openInNewWindow) {\n        openInNewWindow.location = url;\n      }\n    } else {\n      if (statePath) {\n        stateSvc.go(action.navigateTo, navigationParams, {\n          inherit: false\n        });\n      } else {\n        var openInNavTarget = window.open('', navTarget);\n\n        if (openInNavTarget) {\n          openInNavTarget.location = url;\n        }\n      }\n    }\n\n    return undefined;\n  } else if (evaluateIfHrefPopulateOperation) {\n    url = decodeURIComponent(url); // to ensure encoded uri is decoded or else $locationStateChangeSuccess does not get triggered thus losing state history\n\n    return {\n      urlContent: url,\n      target: navTarget\n    };\n  }\n\n  return undefined;\n}\n/**\n * wrap window object access in a function\n *\n * @return {Object} structure with window.location pathname, search, and href values\n */\n\n\nfunction getWindowLocationObject() {\n  return {\n    pathname: window.location.pathname,\n    search: sanitizeSearch(window.location.search),\n    href: window.location.href\n  };\n}\n/**\n * Basic sanitization routine that looks for redirection exploits.\n *\n * @return {String} value after fully decoded.\n */\n\n\nfunction sanitizeSearch(value) {\n  var decodedValue = decodeURIValue(value);\n\n  if (REGEX_SEARCH_SANITIZE.test(decodedValue)) {\n    if (debug_logAuthActivity) {\n      logger.info(decodedValue + ' has been removed from location search parameter after being found to contain unsafe data.');\n    }\n\n    return null;\n  }\n\n  return value;\n}\n/**\n * Multi level decode to get around double encoding exploits\n *\n * @return {String} value after fully decoded.\n */\n\n\nfunction decodeURIValue(value) {\n  var decodedValue = decodeURIComponent(value);\n\n  if (value === decodedValue) {\n    return value;\n  }\n\n  return decodeURIValue(decodedValue);\n}\n/**\n * Create link to navigate the object\n *\n * @param {Object} action - The 'declAction' object.\n * @param {Object} navigationParams - The 'navigationParams' object specific for \"Navigation\" action type\n */\n\n\nexport let navigate = function (action, navigationParams) {\n  var url = undefined;\n  return workspaceSvc.getAvailableNavigations(appCtxSvc.ctx.workspace.workspaceId).then(function (navigateConfigurations) {\n    var evaluationContext = {};\n    /*\n      Runtime evaluation context consisting of the ctx , state and navigation context\n    */\n\n    evaluationContext.ctx = appCtxSvc.ctx;\n    var navigateContext = evaluateParam(navigationParams.navigationContext, evaluationContext);\n    evaluationContext.navigationContext = navigateContext;\n    evaluationContext.state = AwStateService.instance; //evaluate navigateTo interpolations\n\n    const result = action.navigateTo.match(parsingUtils.REGEX_DATABINDING);\n\n    if (result && result.length === 4) {\n      action.navigateTo = _.get(evaluationContext, result[2], action.navigateTo);\n    }\n\n    var activeNavigation = navigationUtils.findActiveWorkspaceNavigation(navigateConfigurations, evaluationContext);\n\n    if (activeNavigation) {\n      action.navigateTo = activeNavigation.page;\n\n      var params = _.assign({}, navigationParams, activeNavigation.params);\n\n      var contextParam = evaluateParam(params, evaluationContext);\n      url = navigateObject(action, contextParam);\n    } else {\n      url = navigateObject(action, navigationParams);\n    }\n\n    return url;\n  });\n};\n/**\n * Evaluate if the operation is for population of href attribute of anchor <a> tag\n *\n * @param {Object} action param all params on the navigation\n * @return {Boolean} whether true or false\n */\n\nfunction evaluateIfHrefPopulateOperation(action) {\n  if (_.isUndefined(action.actionType) && !_.isUndefined(action.navigateTo) && !_.isUndefined(action.navigationParams)) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Evaluate the param on the workspace\n *\n * @param {Object} param all params on the navigation\n * @param {Object} evaluationContext - Scope to execute  with\n * @return {Object} resolved param.\n */\n\n\nfunction evaluateParam(param, evaluationContext) {\n  _.forEach(param, function (value, key) {\n    var parameterKey = parsingUtils.getStringBetweenDoubleMustaches(value);\n\n    var val = _.get(evaluationContext, parameterKey, null);\n\n    if (val) {\n      _.set(param, key, _.get(evaluationContext, parameterKey, null));\n    }\n  });\n\n  return param;\n}\n\nexports = {\n  navigate\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declarativeui/src/js/navigationService.js"],"names":["exports","REGEX_SEARCH_SANITIZE","debug_logAuthActivity","browserUtils","url","navObject","getWindowLocationObject","action","_","stateSvc","navigationUtils","statePath","inherit","first","navTarget","windowFeatures","width","window","document","height","top","left","value","key","openInNewTab","openInNewWindow","openInNavTarget","decodeURIComponent","urlContent","target","pathname","search","sanitizeSearch","href","decodedValue","decodeURIValue","logger","navigate","appCtxSvc","evaluationContext","navigateContext","evaluateParam","navigationParams","AwStateService","result","parsingUtils","activeNavigation","params","contextParam","navigateObject","parameterKey","val"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,eAAA,MAAA,oBAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AACA,OAAA,cAAA,MAAA,mBAAA;AACA,OAAA,SAAA,MAAA,kBAAA;AACA,OAAA,YAAA,MAAA,qBAAA;AACA,OAAA,qBAAA;AACA,OAAA,+BAAA;AACA,OAAA,MAAA,MAAA,WAAA;AAEA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAX,EAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB,GAAzB,gCAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB,GAAGC,YAAY,CAAZA,gBAAAA,GAAAA,eAAAA,KAA5B,SAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAA,cAAA,CAAA,MAAA,EAAA,gBAAA,EAAoD;EAChD,IAAIC,GAAG,GAAP,EAAA;EACA,IAAIC,SAAS,GAAGC,uBAFgC,EAEhD,CAFgD,CAGhD;EACA;EACA;;EACA,IAAIC,MAAM,CAANA,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,MAAAA,CAAAA,IAA8CA,MAAM,CAANA,UAAAA,CAAAA,OAAAA,CAAAA,OAAAA,MAAlD,CAAA,EAA+F;IAC3FH,GAAG,GAAGG,MAAM,CAAZH,UAAAA;;IACAI,CAAC,CAADA,OAAAA,CAAAA,gBAAAA,EAA6B,UAAA,KAAA,EAAkB;MAC3C,IAAI,CAACA,CAAC,CAADA,QAAAA,CAAL,KAAKA,CAAL,EAA2B;QACvBJ,GAAG,IAAHA,KAAAA;QACA,OAFuB,KAEvB,CAFuB,CAET;MACjB;;MACD,OAAA,SAAA;IALJI,CAAAA;EAFJ,CAAA,MASO;IACHJ,GAAG,GAAGD,YAAY,CAAlBC,UAAMD,EAANC;IAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEQ,IAAIC,SAAS,CAATA,MAAAA,IAAoB,CAACG,CAAC,CAADA,UAAAA,CAAcD,MAAM,CAApBC,UAAAA,EAAzB,UAAyBA,CAAzB,EAAyE;MACrEJ,GAAG,IAAIC,SAAS,CAAhBD,MAAAA;IACH;;IAED,IAAIK,QAAQ,GAAGC,eAAe,CAlB3B,QAkBYA,EAAf,CAlBG,CAoBH;IACA;;IACA,IAAIC,SAAS,GAAG,QAAQ,CAAR,IAAA,CAAeJ,MAAM,CAArB,UAAA,EAAA,gBAAA,EAAoD;MAChEK,OAAO,EAAE;IADuD,CAApD,CAAhB;;IAIA,IAAA,SAAA,EAAgB;MACZR,GAAG,IAAHA,SAAAA;IADJ,CAAA,MAEO;MACHA,GAAG,IAAIG,MAAM,CAAbH,UAAAA;MAEA,IAAIS,KAAK,GAAT,IAAA;;MAEAL,CAAC,CAADA,OAAAA,CAAAA,gBAAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAAuB;QAChD,IAAI,CAACA,CAAC,CAADA,QAAAA,CAAL,KAAKA,CAAL,EAA2B;UACvB,IAAA,KAAA,EAAY;YACRJ,GAAG,IAAHA,GAAAA;YACAS,KAAK,GAALA,KAAAA;UAFJ,CAAA,MAGO;YACHT,GAAG,IAAHA,GAAAA;UACH;;UAEDA,GAAG,GAAGA,GAAG,GAAHA,GAAAA,GAAAA,GAAAA,GAANA,KAAAA;QACH;MAVLI,CAAAA;IAYH;EACJ;;EAED,IAAIM,SAAS,GA/DmC,OA+DhD,CA/DgD,CA+DvB;;EACzB,IAAIC,cAAc,GAAlB,IAAA;;EAEA,IAAIR,MAAM,CAANA,UAAAA,KAAJ,QAAA,EAAqC;IACjCO,SAAS,GAATA,QAAAA;EADJ,CAAA,MAEO,IAAIP,MAAM,CAANA,UAAAA,KAAJ,WAAA,EAAwC;IAC3CQ,cAAc,GAAdA,iFAAAA;IAEA,IAAIC,KAAK,GAAGC,MAAM,CAANA,UAAAA,IAAqBC,QAAQ,CAARA,eAAAA,CAArBD,WAAAA,IAA6DC,QAAQ,CAARA,IAAAA,CAAzE,WAAA;IACA,IAAIC,MAAM,GAAGF,MAAM,CAANA,WAAAA,IAAsBC,QAAQ,CAARA,eAAAA,CAAtBD,YAAAA,IAA+DC,QAAQ,CAARA,IAAAA,CAA5E,YAAA;IACA,IAAIE,GAAG,GAAGH,MAAM,CAANA,SAAAA,GAAmBA,MAAM,CAAzBA,SAAAA,GAAsCA,MAAM,CAAtD,OAAA;IACA,IAAII,IAAI,GAAGJ,MAAM,CAANA,UAAAA,GAAoBA,MAAM,CAA1BA,UAAAA,GAAwCA,MAAM,CAAzD,OAAA;;IAEA,IAAIV,MAAM,CAAV,OAAA,EAAqB;MACjB,KAAK,IAAL,GAAA,IAAgBA,MAAM,CAAtB,OAAA,EAAiC;QAC7B,IAAIe,KAAK,GAAGf,MAAM,CAANA,OAAAA,CAAZ,GAAYA,CAAZ;;QACA,IAAIgB,GAAG,KAAP,KAAA,EAAoB;UAChBH,GAAG,GAAHA,KAAAA;QADJ,CAAA,MAEO,IAAIG,GAAG,KAAP,MAAA,EAAqB;UACxBF,IAAI,GAAJA,KAAAA;QADG,CAAA,MAEA,IAAIE,GAAG,KAAP,QAAA,EAAuB;UAC1BJ,MAAM,GAANA,KAAAA;QADG,CAAA,MAEA,IAAII,GAAG,KAAP,OAAA,EAAsB;UACzBP,KAAK,GAALA,KAAAA;QACH;MACJ;IACJ;;IAEDD,cAAc,GAAGA,cAAc,GAAdA,MAAAA,GAAAA,GAAAA,GAAAA,QAAAA,GAAAA,IAAAA,GAAAA,UAAAA,GAAAA,MAAAA,GAAAA,SAAAA,GAAjBA,KAAAA;IAEAD,SAAS,GAATA,QAAAA;EACH;;EAED,IAAIP,MAAM,CAANA,UAAAA,KAAJ,UAAA,EAAuC;IACnC,IAAIA,MAAM,CAANA,UAAAA,KAAJ,QAAA,EAAqC;MACjC,IAAIiB,YAAY,GAAGP,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAnB,SAAmBA,CAAnB;;MACA,IAAA,YAAA,EAAmB;QACfO,YAAY,CAAZA,QAAAA,GAAAA,GAAAA;MACH;IAJL,CAAA,MAKO,IAAIjB,MAAM,CAANA,UAAAA,KAAJ,WAAA,EAAwC;MAC3C,IAAIkB,eAAe,GAAGR,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,SAAAA,EAAtB,cAAsBA,CAAtB;;MACA,IAAA,eAAA,EAAsB;QAClBQ,eAAe,CAAfA,QAAAA,GAAAA,GAAAA;MACH;IAJE,CAAA,MAKA;MACH,IAAA,SAAA,EAAgB;QACZhB,QAAQ,CAARA,EAAAA,CAAaF,MAAM,CAAnBE,UAAAA,EAAAA,gBAAAA,EAAkD;UAC9CG,OAAO,EAAE;QADqC,CAAlDH;MADJ,CAAA,MAIO;QACH,IAAIiB,eAAe,GAAGT,MAAM,CAANA,IAAAA,CAAAA,EAAAA,EAAtB,SAAsBA,CAAtB;;QACA,IAAA,eAAA,EAAsB;UAClBS,eAAe,CAAfA,QAAAA,GAAAA,GAAAA;QACH;MACJ;IACJ;;IACD,OAAA,SAAA;EAvBJ,CAAA,MAwBO,IAAA,+BAAA,EAAsC;IACzCtB,GAAG,GAAGuB,kBAAkB,CADiB,GACjB,CAAxBvB,CADyC,CACR;;IACjC,OAAO;MACHwB,UAAU,EADP,GAAA;MAEHC,MAAM,EAAEf;IAFL,CAAP;EAIH;;EACD,OAAA,SAAA;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAA,uBAAA,GAAmC;EAC/B,OAAO;IACHgB,QAAQ,EAAEb,MAAM,CAANA,QAAAA,CADP,QAAA;IAEHc,MAAM,EAAEC,cAAc,CAAEf,MAAM,CAANA,QAAAA,CAFrB,MAEmB,CAFnB;IAGHgB,IAAI,EAAEhB,MAAM,CAANA,QAAAA,CAAgBgB;EAHnB,CAAP;AAKH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAA,cAAA,CAAA,KAAA,EAAiC;EAC7B,IAAIC,YAAY,GAAGC,cAAc,CAAjC,KAAiC,CAAjC;;EACA,IAAIlC,qBAAqB,CAArBA,IAAAA,CAAJ,YAAIA,CAAJ,EAAiD;IAC7C,IAAA,qBAAA,EAA4B;MACxBmC,MAAM,CAANA,IAAAA,CAAaF,YAAY,GAAzBE,4FAAAA;IACH;;IACD,OAAA,IAAA;EACH;;EACD,OAAA,KAAA;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAA,cAAA,CAAA,KAAA,EAAiC;EAC7B,IAAIF,YAAY,GAAGP,kBAAkB,CAArC,KAAqC,CAArC;;EACA,IAAIL,KAAK,KAAT,YAAA,EAA6B;IACzB,OAAA,KAAA;EACH;;EACD,OAAOa,cAAc,CAArB,YAAqB,CAArB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIE,QAAQ,GAAG,UAAA,MAAA,EAAA,gBAAA,EAAqC;EACvD,IAAIjC,GAAG,GAAP,SAAA;EAEA,OAAO,YAAY,CAAZ,uBAAA,CAAsCkC,SAAS,CAATA,GAAAA,CAAAA,SAAAA,CAAtC,WAAA,EAAA,IAAA,CAAkF,UAAA,sBAAA,EAAmC;IACxH,IAAIC,iBAAiB,GAArB,EAAA;IACA;AACR;AACA;;IACQA,iBAAiB,CAAjBA,GAAAA,GAAwBD,SAAS,CAAjCC,GAAAA;IACA,IAAIC,eAAe,GAAGC,aAAa,CAAEC,gBAAgB,CAAlB,iBAAA,EAAnC,iBAAmC,CAAnC;IACAH,iBAAiB,CAAjBA,iBAAAA,GAAAA,eAAAA;IACAA,iBAAiB,CAAjBA,KAAAA,GAA0BI,cAAc,CARgF,QAQxHJ,CARwH,CAUxH;;IACA,MAAMK,MAAM,GAAGrC,MAAM,CAANA,UAAAA,CAAAA,KAAAA,CAAyBsC,YAAY,CAApD,iBAAetC,CAAf;;IACA,IAAIqC,MAAM,IAAIA,MAAM,CAANA,MAAAA,KAAd,CAAA,EAAoC;MAChCrC,MAAM,CAANA,UAAAA,GAAoBC,CAAC,CAADA,GAAAA,CAAAA,iBAAAA,EAA0BoC,MAAM,CAAhCpC,CAAgC,CAAhCA,EAAuCD,MAAM,CAAjEA,UAAoBC,CAApBD;IACH;;IAED,IAAIuC,gBAAgB,GAAGpC,eAAe,CAAfA,6BAAAA,CAAAA,sBAAAA,EAAvB,iBAAuBA,CAAvB;;IAEA,IAAA,gBAAA,EAAuB;MACnBH,MAAM,CAANA,UAAAA,GAAoBuC,gBAAgB,CAApCvC,IAAAA;;MACA,IAAIwC,MAAM,GAAGvC,CAAC,CAADA,MAAAA,CAAAA,EAAAA,EAAAA,gBAAAA,EAAgCsC,gBAAgB,CAA7D,MAAatC,CAAb;;MACA,IAAIwC,YAAY,GAAGP,aAAa,CAAA,MAAA,EAAhC,iBAAgC,CAAhC;MACArC,GAAG,GAAG6C,cAAc,CAAA,MAAA,EAApB7C,YAAoB,CAApBA;IAJJ,CAAA,MAKO;MACHA,GAAG,GAAG6C,cAAc,CAAA,MAAA,EAApB7C,gBAAoB,CAApBA;IACH;;IACD,OAAA,GAAA;EA1BJ,CAAO,CAAP;AAHG,CAAA;AAiCP;AACA;AACA;AACA;AACA;AACA;;AACA,SAAA,+BAAA,CAAA,MAAA,EAAmD;EAC/C,IAAII,CAAC,CAADA,WAAAA,CAAeD,MAAM,CAArBC,UAAAA,KAAsC,CAACA,CAAC,CAADA,WAAAA,CAAeD,MAAM,CAA5DC,UAAuCA,CAAvCA,IAA6E,CAACA,CAAC,CAADA,WAAAA,CAAeD,MAAM,CAAvG,gBAAkFC,CAAlF,EAA6H;IACzH,OAAA,IAAA;EACH;;EACD,OAAA,KAAA;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAA,aAAA,CAAA,KAAA,EAAA,iBAAA,EAAmD;EAC/CA,CAAC,CAADA,OAAAA,CAAAA,KAAAA,EAAkB,UAAA,KAAA,EAAA,GAAA,EAAuB;IACrC,IAAI0C,YAAY,GAAGL,YAAY,CAAZA,+BAAAA,CAAnB,KAAmBA,CAAnB;;IACA,IAAIM,GAAG,GAAG3C,CAAC,CAADA,GAAAA,CAAAA,iBAAAA,EAAAA,YAAAA,EAAV,IAAUA,CAAV;;IACA,IAAA,GAAA,EAAU;MACNA,CAAC,CAADA,GAAAA,CAAAA,KAAAA,EAAAA,GAAAA,EAAmBA,CAAC,CAADA,GAAAA,CAAAA,iBAAAA,EAAAA,YAAAA,EAAnBA,IAAmBA,CAAnBA;IACH;EALLA,CAAAA;;EAOA,OAAA,KAAA;AACH;;AAEDR,OAAO,GAAG;EACNqC;AADM,CAAVrC;AAGA,eAAA,OAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * Navigation service which wraps navigation mechanism from the consumers.\n *\n * @module js/navigationService\n */\nimport _ from 'lodash';\nimport navigationUtils from 'js/navigationUtils';\nimport browserUtils from 'js/browserUtils';\nimport parsingUtils from 'js/parsingUtils';\nimport AwStateService from 'js/awStateService';\nimport appCtxSvc from 'js/appCtxService';\nimport workspaceSvc from 'js/workspaceService';\nimport 'js/conditionService';\nimport 'js/contextContributionService';\nimport logger from 'js/logger';\n\n/**\n * Cached reference to the various AngularJS and AW services.\n */\n\nvar exports = {};\n\n/**\n * URL sanitizer.\n *\n * @private\n */\nvar REGEX_SEARCH_SANITIZE = /(javascript|data:|script|http)/;\n\n/**\n * Is logging on.\n *\n * @private\n */\nvar debug_logAuthActivity = browserUtils.getUrlAttributes().logAuthActivity !== undefined;\n\n/**\n * Create link to navigate the object.\n *\n * @param {Object} action - The 'declAction' object.\n * @param {Object} navigationParams - The 'navigationParams' object specific for \"Navigation\" action type\n */\nfunction navigateObject( action, navigationParams ) {\n    var url = '';\n    var navObject = getWindowLocationObject();\n    // Check to see if they just want a raw url, and not a reference to some place in the application.\n    // There are three or four showcase examples using navigateTo with http and then using a single navigationParams value.\n    // We should support those cases too. MR 1582 in afx time frame is not considering the navigationParams at all and broke these cases.\n    if( action.navigateTo.indexOf( 'http' ) === 0 ||  action.navigateTo.indexOf( 'https' ) === 0 ) {\n        url = action.navigateTo;\n        _.forEach( navigationParams, function( value ) {\n            if( !_.isObject( value ) ) {\n                url += value;\n                return false; // Limiting the parameter to only one single value as these are general http requests.\n            }\n            return undefined;\n        } );\n    } else {\n        url = browserUtils.getBaseURL();\n\n        /**\n         * Check if there are any parameters 'before the #' AND we are NOT trying to launch some other\n         * application.\n         * <P>\n         * If so: Include these in the base URL since they are a necessary context for any 'internal' navigation\n         * operation. Specfically, used to preserve hosting and logging options.\n         * <P>\n         * Note: This is a fix for LCS-173770 (et al.) since any external application would/should be in control\n         * of any other context options.\n         */\n\n        if( navObject.search && !_.startsWith( action.navigateTo, 'launcher' ) ) {\n            url += navObject.search;\n        }\n\n        var stateSvc = navigationUtils.getState();\n\n        // Since findState isn't public API, we need to use href to check whether path is registered\n        // in state or not.\n        var statePath = stateSvc.href( action.navigateTo, navigationParams, {\n            inherit: false\n        } );\n\n        if( statePath ) {\n            url += statePath;\n        } else {\n            url += action.navigateTo;\n\n            var first = true;\n\n            _.forEach( navigationParams, function( value, key ) {\n                if( !_.isObject( value ) ) {\n                    if( first ) {\n                        url += '?';\n                        first = false;\n                    } else {\n                        url += '&';\n                    }\n\n                    url = url + key + '=' + value;\n                }\n            } );\n        }\n    }\n\n    var navTarget = '_self'; //default target for navigation targets\n    var windowFeatures = null;\n\n    if( action.navigateIn === 'newTab' ) {\n        navTarget = '_blank';\n    } else if( action.navigateIn === 'newWindow' ) {\n        windowFeatures = 'location=yes,menubar=yes,titlebar=yes,toolbar=yes,resizable=yes,scrollbars=yes,';\n\n        var width = window.outerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        var height = window.outerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        var top = window.screenTop ? window.screenTop : window.screenY;\n        var left = window.screenLeft ? window.screenLeft : window.screenX;\n\n        if( action.options ) {\n            for( var key in action.options ) {\n                var value = action.options[ key ];\n                if( key === 'top' ) {\n                    top = value;\n                } else if( key === 'left' ) {\n                    left = value;\n                } else if( key === 'height' ) {\n                    height = value;\n                } else if( key === 'width' ) {\n                    width = value;\n                }\n            }\n        }\n\n        windowFeatures = windowFeatures + 'top=' + top + ',left=' + left + ',height=' + height + ',width=' +\n            width;\n        navTarget = '_blank';\n    }\n\n    if( action.actionType === 'Navigate' ) {\n        if( action.navigateIn === 'newTab' ) {\n            var openInNewTab = window.open( url, navTarget );\n            if( openInNewTab ) {\n                openInNewTab.location = url;\n            }\n        } else if( action.navigateIn === 'newWindow' ) {\n            var openInNewWindow = window.open( url, navTarget, windowFeatures );\n            if( openInNewWindow ) {\n                openInNewWindow.location = url;\n            }\n        } else {\n            if( statePath ) {\n                stateSvc.go( action.navigateTo, navigationParams, {\n                    inherit: false\n                } );\n            } else {\n                var openInNavTarget = window.open( '', navTarget );\n                if( openInNavTarget ) {\n                    openInNavTarget.location = url;\n                }\n            }\n        }\n        return undefined;\n    } else if( evaluateIfHrefPopulateOperation ) {\n        url = decodeURIComponent( url ); // to ensure encoded uri is decoded or else $locationStateChangeSuccess does not get triggered thus losing state history\n        return {\n            urlContent: url,\n            target: navTarget\n        };\n    }\n    return undefined;\n}\n\n/**\n * wrap window object access in a function\n *\n * @return {Object} structure with window.location pathname, search, and href values\n */\nfunction getWindowLocationObject() {\n    return {\n        pathname: window.location.pathname,\n        search: sanitizeSearch( window.location.search ),\n        href: window.location.href\n    };\n}\n\n/**\n * Basic sanitization routine that looks for redirection exploits.\n *\n * @return {String} value after fully decoded.\n */\nfunction sanitizeSearch( value ) {\n    var decodedValue = decodeURIValue( value );\n    if( REGEX_SEARCH_SANITIZE.test( decodedValue ) ) {\n        if( debug_logAuthActivity ) {\n            logger.info( decodedValue + ' has been removed from location search parameter after being found to contain unsafe data.' );\n        }\n        return null;\n    }\n    return value;\n}\n\n/**\n * Multi level decode to get around double encoding exploits\n *\n * @return {String} value after fully decoded.\n */\nfunction decodeURIValue( value ) {\n    var decodedValue = decodeURIComponent( value );\n    if( value === decodedValue ) {\n        return value;\n    }\n    return decodeURIValue( decodedValue );\n}\n\n/**\n * Create link to navigate the object\n *\n * @param {Object} action - The 'declAction' object.\n * @param {Object} navigationParams - The 'navigationParams' object specific for \"Navigation\" action type\n */\nexport let navigate = function( action, navigationParams ) {\n    var url = undefined;\n\n    return workspaceSvc.getAvailableNavigations( appCtxSvc.ctx.workspace.workspaceId ).then( function( navigateConfigurations ) {\n        var evaluationContext = {};\n        /*\n          Runtime evaluation context consisting of the ctx , state and navigation context\n        */\n        evaluationContext.ctx = appCtxSvc.ctx;\n        var navigateContext = evaluateParam( navigationParams.navigationContext, evaluationContext );\n        evaluationContext.navigationContext = navigateContext;\n        evaluationContext.state = AwStateService.instance;\n\n        //evaluate navigateTo interpolations\n        const result = action.navigateTo.match( parsingUtils.REGEX_DATABINDING );\n        if( result && result.length === 4 ) {\n            action.navigateTo = _.get( evaluationContext, result[ 2 ], action.navigateTo );\n        }\n\n        var activeNavigation = navigationUtils.findActiveWorkspaceNavigation( navigateConfigurations, evaluationContext );\n\n        if( activeNavigation ) {\n            action.navigateTo = activeNavigation.page;\n            var params = _.assign( {}, navigationParams, activeNavigation.params );\n            var contextParam = evaluateParam( params, evaluationContext );\n            url = navigateObject( action, contextParam );\n        } else {\n            url = navigateObject( action, navigationParams );\n        }\n        return url;\n    } );\n};\n\n/**\n * Evaluate if the operation is for population of href attribute of anchor <a> tag\n *\n * @param {Object} action param all params on the navigation\n * @return {Boolean} whether true or false\n */\nfunction evaluateIfHrefPopulateOperation( action ) {\n    if( _.isUndefined( action.actionType ) && !_.isUndefined( action.navigateTo ) && !_.isUndefined( action.navigationParams ) ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Evaluate the param on the workspace\n *\n * @param {Object} param all params on the navigation\n * @param {Object} evaluationContext - Scope to execute  with\n * @return {Object} resolved param.\n */\nfunction evaluateParam( param, evaluationContext ) {\n    _.forEach( param, function( value, key ) {\n        var parameterKey = parsingUtils.getStringBetweenDoubleMustaches( value );\n        var val = _.get( evaluationContext, parameterKey, null );\n        if( val ) {\n            _.set( param, key, _.get( evaluationContext, parameterKey, null ) );\n        }\n    } );\n    return param;\n}\n\nexports = {\n    navigate\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}