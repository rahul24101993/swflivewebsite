{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\declreact\\\\src\\\\js\\\\awInitHOC.js\"; // Copyright (c) 2021 Siemens\n\n/* eslint-disable react/display-name */\n\n/**\n * @module js/awInitHOC\n */\n\nimport React from 'react';\nimport AwParseService from 'js/awParseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst displayName = 'AwInit';\n\nconst awInitHOC = Component => {\n  // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n  return /*#__PURE__*/React.forwardRef((_ref, ref) => {\n    let {\n      children,\n      ...props\n    } = _ref;\n    let {\n      awInit,\n      parentVM,\n      subPanelContext\n    } = props;\n    let intExpr = awInit;\n\n    if (intExpr && parentVM) {\n      const context = {\n        data: parentVM.data,\n        subPanelContext\n      };\n\n      if (intExpr.indexOf(';') !== -1) {\n        intExpr.split(';').map(expr => {\n          AwParseService.instance(expr)(context);\n        });\n      } else {\n        AwParseService.instance(intExpr)(context);\n      }\n\n      parentVM.dispatch('data', { ...parentVM.data\n      });\n    }\n\n    let finalProps = { ...props\n    };\n    ref && (finalProps.ref = ref);\n\n    if (typeof Component === 'object') {\n      Component.displayName = displayName;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...finalProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  });\n};\n\nexport default awInitHOC;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/awInitHOC.js"],"names":["displayName","awInitHOC","Component","props","subPanelContext","intExpr","context","data","parentVM","expr","AwParseService","finalProps","ref","children"],"mappings":"uJAAA;;AACA;;AAEA;AACA;AACA;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,cAAA,MAAA,mBAAA;;AAEA,MAAMA,WAAW,GAAjB,QAAA;;AAEA,MAAMC,SAAS,GAAKC,SAAF,IAAiB;EAC/B;EACA,OAAA,aAAO,KAAK,CAAL,UAAA,CAAkB,CAAA,IAAA,EAAA,GAAA,KAAmC;IAAA,IAAjC;MAAA,QAAA;MAAY,GAAGC;IAAf,IAAiC,IAAA;IACxD,IAAI;MAAA,MAAA;MAAA,QAAA;MAAoBC;IAApB,IAAJ,KAAA;IACA,IAAIC,OAAO,GAAX,MAAA;;IACA,IAAIA,OAAO,IAAX,QAAA,EAA0B;MACtB,MAAMC,OAAO,GAAG;QAAEC,IAAI,EAAEC,QAAQ,CAAhB,IAAA;QAAuBJ;MAAvB,CAAhB;;MACA,IAAIC,OAAO,CAAPA,OAAAA,CAAAA,GAAAA,MAA2B,CAA/B,CAAA,EAAoC;QAChCA,OAAO,CAAPA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAA4BI,IAAF,IAAY;UAClCC,cAAc,CAAdA,QAAAA,CAAAA,IAAAA,EAAAA,OAAAA;QADJL,CAAAA;MADJ,CAAA,MAIO;QACHK,cAAc,CAAdA,QAAAA,CAAAA,OAAAA,EAAAA,OAAAA;MACH;;MACDF,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,EAA2B,EAAE,GAAGA,QAAQ,CAACD;MAAd,CAA3BC;IACH;;IACD,IAAIG,UAAU,GAAG,EAAE,GAAGR;IAAL,CAAjB;IACAS,GAAG,KAAMD,UAAU,CAAVA,GAAAA,GAATC,GAAG,CAAHA;;IACA,IAAI,OAAA,SAAA,KAAJ,QAAA,EAAoC;MAChCV,SAAS,CAATA,WAAAA,GAAAA,WAAAA;IACH;;IACD,OAAA,aAAO,OAAA,CAAA,SAAA,EAAA,EAAA,GAAA,UAAA;MAAA,QAAA,EAA4BW;IAA5B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAP,IAAO,CAAP;EAnBJ,CAAO,CAAP;AAFJ,CAAA;;AAyBA,eAAA,SAAA","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable react/display-name */\n\n/**\n * @module js/awInitHOC\n */\nimport React from 'react';\nimport AwParseService from 'js/awParseService';\n\nconst displayName = 'AwInit';\n\nconst awInitHOC = ( Component ) => {\n    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n    return React.forwardRef( ( { children, ...props }, ref ) => {\n        let { awInit, parentVM, subPanelContext } = props;\n        let intExpr = awInit;\n        if( intExpr && parentVM ) {\n            const context = { data: parentVM.data, subPanelContext };\n            if( intExpr.indexOf( ';' ) !== -1 ) {\n                intExpr.split( ';' ).map( ( expr ) => {\n                    AwParseService.instance( expr )( context );\n                } );\n            } else {\n                AwParseService.instance( intExpr )( context );\n            }\n            parentVM.dispatch( 'data', { ...parentVM.data } );\n        }\n        let finalProps = { ...props };\n        ref && ( finalProps.ref = ref );\n        if( typeof Component === 'object' ) {\n            Component.displayName = displayName;\n        }\n        return <Component {...finalProps}>{children}</Component>;\n    } );\n};\n\nexport default awInitHOC;\n"]},"metadata":{},"sourceType":"module"}