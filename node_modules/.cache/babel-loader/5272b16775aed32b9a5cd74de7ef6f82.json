{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * @module js/tcCommandVisibilityService2\n */\nimport appCtxService from 'js/appCtxService';\nimport DataLoader from 'dataloader';\nimport { postUnchecked, getPendingRequestsCount } from 'soa/kernel/soaService';\nimport Debug from 'debug';\nimport async from 'js/async.service';\n/**\n * How long to wait after the last \"request\" to load visibility before actually making the SOA call.\n * Because command bars will not render if server visibility is not ready this is also the minimum\n * delay before a command bar will appear.\n *\n * Will probably be reworked in the future\n */\n\nconst commandBatchLoadTime = 100;\nconst trace = new Debug('command:tcCommandVisibilityService2');\n/**\n  * Unlock detection function\n  *\n  * @returns {Boolean} If the service is unlocked\n  */\n\nvar unlockFunction = function () {\n  if (getPendingRequestsCount() !== 0) {\n    trace('Visibility service is locked - SOA is active');\n    return false;\n  }\n\n  return true;\n};\n/**\n * Get a dataloader that batches up calls to the getVisibleCommands SOA\n * @returns {DataLoader} Server visibility dataloader\n */\n\n\nexport const getServerVisibilityLoader = () => {\n  return new DataLoader(async getVisibleCommandsInfo => {\n    const input = {\n      getVisibleCommandsInfo\n    };\n    trace('Making batched SOA call to load visibility', input);\n    const response = await postUnchecked('Internal-AWS2-2016-03-UiConfig', 'getVisibleCommands', input, {}); //New SOA is needed to fully support this use case. SOA accepts multiple sets of info as input but only returns a single list of visible commands\n\n    return getVisibleCommandsInfo.map(() => response.visibleCommandsInfo);\n  }, {\n    //Only batching of requests done at this level. Caching managed at lower levels (ex sublocation)\n    cache: false,\n    batchScheduleFn: callback => {\n      return async.debouncePromise(callback, commandBatchLoadTime, {\n        isUnlocked: unlockFunction\n      })();\n    }\n  });\n};\n/**\n * Startup function to create a shared dataloader and add to ctx\n */\n\nexport const addServerVisibilityLoaderToCtx = () => {\n  trace('Adding shared visibility loader to ctx');\n  appCtxService.registerPartialCtx('services.awCommandVisibilityLoader', getServerVisibilityLoader());\n};\nexport default {\n  addServerVisibilityLoaderToCtx,\n  getServerVisibilityLoader\n};","map":{"version":3,"names":["appCtxService","DataLoader","postUnchecked","getPendingRequestsCount","Debug","async","commandBatchLoadTime","trace","unlockFunction","getServerVisibilityLoader","getVisibleCommandsInfo","input","response","map","visibleCommandsInfo","cache","batchScheduleFn","callback","debouncePromise","isUnlocked","addServerVisibilityLoaderToCtx","registerPartialCtx"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/command/src/js/tcCommandVisibilityService2.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * @module js/tcCommandVisibilityService2\n */\nimport appCtxService from 'js/appCtxService';\nimport DataLoader from 'dataloader';\nimport { postUnchecked, getPendingRequestsCount  } from 'soa/kernel/soaService';\nimport Debug from 'debug';\nimport async from 'js/async.service';\n\n/**\n * How long to wait after the last \"request\" to load visibility before actually making the SOA call.\n * Because command bars will not render if server visibility is not ready this is also the minimum\n * delay before a command bar will appear.\n *\n * Will probably be reworked in the future\n */\nconst commandBatchLoadTime = 100;\n\nconst trace = new Debug( 'command:tcCommandVisibilityService2' );\n\n/**\n  * Unlock detection function\n  *\n  * @returns {Boolean} If the service is unlocked\n  */\n var unlockFunction = function() {\n    if( getPendingRequestsCount() !== 0 ) {\n        trace( 'Visibility service is locked - SOA is active' );\n        return false;\n    }\n    return true;\n};\n\n/**\n * Get a dataloader that batches up calls to the getVisibleCommands SOA\n * @returns {DataLoader} Server visibility dataloader\n */\nexport const getServerVisibilityLoader = () => {\n    return new DataLoader( async getVisibleCommandsInfo => {\n        const input = {\n            getVisibleCommandsInfo\n        };\n        trace( 'Making batched SOA call to load visibility', input );\n        const response = await postUnchecked( 'Internal-AWS2-2016-03-UiConfig', 'getVisibleCommands', input, {} );\n        //New SOA is needed to fully support this use case. SOA accepts multiple sets of info as input but only returns a single list of visible commands\n        return getVisibleCommandsInfo.map( () => response.visibleCommandsInfo );\n    }, {\n        //Only batching of requests done at this level. Caching managed at lower levels (ex sublocation)\n        cache: false,\n        batchScheduleFn: ( callback ) =>  {\n            return async.debouncePromise( callback, commandBatchLoadTime, { isUnlocked: unlockFunction } )();\n        }\n    } );\n};\n\n/**\n * Startup function to create a shared dataloader and add to ctx\n */\nexport const addServerVisibilityLoaderToCtx = () => {\n    trace( 'Adding shared visibility loader to ctx' );\n    appCtxService.registerPartialCtx( 'services.awCommandVisibilityLoader', getServerVisibilityLoader() );\n};\n\nexport default {\n    addServerVisibilityLoaderToCtx,\n    getServerVisibilityLoader\n};\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,EAAwBC,uBAAxB,QAAwD,uBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAoB,GAAG,GAA7B;AAEA,MAAMC,KAAK,GAAG,IAAIH,KAAJ,CAAW,qCAAX,CAAd;AAEA;AACA;AACA;AACA;AACA;;AACC,IAAII,cAAc,GAAG,YAAW;EAC7B,IAAIL,uBAAuB,OAAO,CAAlC,EAAsC;IAClCI,KAAK,CAAE,8CAAF,CAAL;IACA,OAAO,KAAP;EACH;;EACD,OAAO,IAAP;AACH,CANA;AAQD;AACA;AACA;AACA;;;AACA,OAAO,MAAME,yBAAyB,GAAG,MAAM;EAC3C,OAAO,IAAIR,UAAJ,CAAgB,MAAMS,sBAAN,IAAgC;IACnD,MAAMC,KAAK,GAAG;MACVD;IADU,CAAd;IAGAH,KAAK,CAAE,4CAAF,EAAgDI,KAAhD,CAAL;IACA,MAAMC,QAAQ,GAAG,MAAMV,aAAa,CAAE,gCAAF,EAAoC,oBAApC,EAA0DS,KAA1D,EAAiE,EAAjE,CAApC,CALmD,CAMnD;;IACA,OAAOD,sBAAsB,CAACG,GAAvB,CAA4B,MAAMD,QAAQ,CAACE,mBAA3C,CAAP;EACH,CARM,EAQJ;IACC;IACAC,KAAK,EAAE,KAFR;IAGCC,eAAe,EAAIC,QAAF,IAAiB;MAC9B,OAAOZ,KAAK,CAACa,eAAN,CAAuBD,QAAvB,EAAiCX,oBAAjC,EAAuD;QAAEa,UAAU,EAAEX;MAAd,CAAvD,GAAP;IACH;EALF,CARI,CAAP;AAeH,CAhBM;AAkBP;AACA;AACA;;AACA,OAAO,MAAMY,8BAA8B,GAAG,MAAM;EAChDb,KAAK,CAAE,wCAAF,CAAL;EACAP,aAAa,CAACqB,kBAAd,CAAkC,oCAAlC,EAAwEZ,yBAAyB,EAAjG;AACH,CAHM;AAKP,eAAe;EACXW,8BADW;EAEXX;AAFW,CAAf"},"metadata":{},"sourceType":"module"}