{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/**\n * @module js/editEventsService\n */import eventBus from'js/eventBus';import editHandlerService from'js/editHandlerService';import appCtxService from'js/appCtxService';import localeService from'js/localeService';import messagingService from'js/messagingService';const startEditRequestedEventName='startEditForNewVmosRequested';const saveEditsRequestedEventName='saveEditsRequested';/**\n * Publishes saveEditsRequested via eventBus.\n *\n */export const publishSaveEditsRequested=function(){eventBus.publish(saveEditsRequestedEventName);};/**\n * Keydown event listener for saveEdits.\n * On \"ctrl + s\", publishes saveEditsRequested via eventBus or saves the edit\n * handler directly if it is passed in.\n *\n * @param {Object} editHandler - the edit handler\n * @param {Function} removeSaveListener - the callback to remove savelistener on save\n * @return {Function} save listener function\n */export const saveEditsListener=function(editHandler,removeSaveListener){return function(event){if(event.ctrlKey&&(event.key==='s'||event.key==='S')){if(editHandler){// Save the edit handler directly if it was passed in\neditHandler.saveEdits();}else{publishSaveEditsRequested();}event.preventDefault();removeSaveListener();}};};/**\n * Helper function for starting edit.\n * Call editHandler.startEdit to handle pagination/expand cases\n *\n * @param {String} editContext - the edit context for the edit handler\n */export const startEditForNewVmos=function(editContext){const editHandler=editHandlerService.getEditHandler(editContext);if(editHandler.editInProgress()){editHandler.startEdit();}};/**\n * Publishes dataProviderName.startEditRequested  via eventBus.\n *\n * @param {object} dataProvider - the dataProvider\n */export const publishStartEditRequested=function(dataProvider){if(dataProvider&&dataProvider.name){eventBus.publish(dataProvider.name+'.'+startEditRequestedEventName);}};export default{saveEditsListener,startEditForNewVmos,publishStartEditRequested,publishSaveEditsRequested};","map":null,"metadata":{},"sourceType":"module"}