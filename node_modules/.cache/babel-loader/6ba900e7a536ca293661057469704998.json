{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This service is used to manage command visibility.\n *\n * @module js/commandVisibilityService\n */\nimport functional from 'js/functionalUtility.service';\n/**\n * Get any usages of \"visibleServerCommands\" context from the condition string\n *\n * @param {String} s The string condition to check\n * @return {String[]} Values in visibleServerCommands that are checked\n */\n\nconst getServerConditions = function (s) {\n  var re = /ctx\\.visibleServerCommands\\.([a-zA-Z]\\w*)(\\W*|$)/g;\n  var result = [];\n  var m = re.exec(s);\n\n  while (m) {\n    result.push(m[1]);\n    m = re.exec(s);\n  }\n\n  return result;\n};\n/**\n * Parse a condition expression for any usages of server visibility\n *\n * @param {String|Object} condition Condition expression\n * @returns {[String]} List of server visibility usages\n */\n\n\nexport const getServerVisibilityUsage = condition => {\n  if (typeof condition === 'string') {\n    return getServerConditions(condition);\n  } //If object based condition recursivly parse the object values\n\n\n  return Object.values(condition).map(getServerVisibilityUsage).reduce(functional.concat, []);\n};\n/**\n * Get the list of server conditions used by a command\n *\n * @param {CommandOverlay} command Command to check\n * @returns {[String]} List of server visibility usages\n */\n\nexport const getServerConditionUsage = command => {\n  const directReferences = command.handlers.map(handler => {\n    return [...getServerVisibilityUsage(handler.activeWhen.expression), ...(handler.enableWhen ? getServerVisibilityUsage(handler.enableWhen.expression) : []), ...(handler.selectWhen ? getServerVisibilityUsage(handler.selectWhen.expression) : []), ...(handler.visibleWhen ? getServerVisibilityUsage(handler.visibleWhen.expression) : [])];\n  }).reduce((acc, nxt) => acc.concat(nxt), []);\n  const childReferences = command.children.map(getServerConditionUsage).reduce((acc, nxt) => acc.concat(nxt), []);\n  return [...directReferences, ...childReferences];\n};\nexport default {\n  getServerVisibilityUsage,\n  getServerConditionUsage\n};","map":{"version":3,"names":["functional","getServerConditions","s","re","result","m","exec","push","getServerVisibilityUsage","condition","Object","values","map","reduce","concat","getServerConditionUsage","command","directReferences","handlers","handler","activeWhen","expression","enableWhen","selectWhen","visibleWhen","acc","nxt","childReferences","children"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/command/src/js/commandVisibilityService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This service is used to manage command visibility.\n *\n * @module js/commandVisibilityService\n */\nimport functional from 'js/functionalUtility.service';\n\n/**\n * Get any usages of \"visibleServerCommands\" context from the condition string\n *\n * @param {String} s The string condition to check\n * @return {String[]} Values in visibleServerCommands that are checked\n */\nconst getServerConditions = function( s ) {\n    var re = /ctx\\.visibleServerCommands\\.([a-zA-Z]\\w*)(\\W*|$)/g;\n    var result = [];\n    var m = re.exec( s );\n    while( m ) {\n        result.push( m[ 1 ] );\n        m = re.exec( s );\n    }\n    return result;\n};\n\n/**\n * Parse a condition expression for any usages of server visibility\n *\n * @param {String|Object} condition Condition expression\n * @returns {[String]} List of server visibility usages\n */\nexport const getServerVisibilityUsage = ( condition ) => {\n    if( typeof condition === 'string' ) {\n        return getServerConditions( condition );\n    }\n    //If object based condition recursivly parse the object values\n    return Object.values( condition )\n        .map( getServerVisibilityUsage )\n        .reduce( functional.concat, [] );\n};\n\n/**\n * Get the list of server conditions used by a command\n *\n * @param {CommandOverlay} command Command to check\n * @returns {[String]} List of server visibility usages\n */\nexport const getServerConditionUsage = command => {\n    const directReferences = command.handlers.map( handler => {\n        return [\n            ...getServerVisibilityUsage( handler.activeWhen.expression ),\n            ...handler.enableWhen ? getServerVisibilityUsage( handler.enableWhen.expression ) : [],\n            ...handler.selectWhen ? getServerVisibilityUsage( handler.selectWhen.expression ) : [],\n            ...handler.visibleWhen ? getServerVisibilityUsage( handler.visibleWhen.expression ) : []\n        ];\n    } ).reduce( ( acc, nxt ) => acc.concat( nxt ), [] );\n    const childReferences = command.children\n        .map( getServerConditionUsage )\n        .reduce( ( acc, nxt ) => acc.concat( nxt ), [] );\n    return [ ...directReferences, ...childReferences ];\n};\n\nexport default {\n    getServerVisibilityUsage,\n    getServerConditionUsage\n};\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,8BAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,UAAUC,CAAV,EAAc;EACtC,IAAIC,EAAE,GAAG,mDAAT;EACA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,CAAC,GAAGF,EAAE,CAACG,IAAH,CAASJ,CAAT,CAAR;;EACA,OAAOG,CAAP,EAAW;IACPD,MAAM,CAACG,IAAP,CAAaF,CAAC,CAAE,CAAF,CAAd;IACAA,CAAC,GAAGF,EAAE,CAACG,IAAH,CAASJ,CAAT,CAAJ;EACH;;EACD,OAAOE,MAAP;AACH,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMI,wBAAwB,GAAKC,SAAF,IAAiB;EACrD,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAoC;IAChC,OAAOR,mBAAmB,CAAEQ,SAAF,CAA1B;EACH,CAHoD,CAIrD;;;EACA,OAAOC,MAAM,CAACC,MAAP,CAAeF,SAAf,EACFG,GADE,CACGJ,wBADH,EAEFK,MAFE,CAEMb,UAAU,CAACc,MAFjB,EAEyB,EAFzB,CAAP;AAGH,CARM;AAUP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,uBAAuB,GAAGC,OAAO,IAAI;EAC9C,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,QAAR,CAAiBN,GAAjB,CAAsBO,OAAO,IAAI;IACtD,OAAO,CACH,GAAGX,wBAAwB,CAAEW,OAAO,CAACC,UAAR,CAAmBC,UAArB,CADxB,EAEH,IAAGF,OAAO,CAACG,UAAR,GAAqBd,wBAAwB,CAAEW,OAAO,CAACG,UAAR,CAAmBD,UAArB,CAA7C,GAAiF,EAApF,CAFG,EAGH,IAAGF,OAAO,CAACI,UAAR,GAAqBf,wBAAwB,CAAEW,OAAO,CAACI,UAAR,CAAmBF,UAArB,CAA7C,GAAiF,EAApF,CAHG,EAIH,IAAGF,OAAO,CAACK,WAAR,GAAsBhB,wBAAwB,CAAEW,OAAO,CAACK,WAAR,CAAoBH,UAAtB,CAA9C,GAAmF,EAAtF,CAJG,CAAP;EAMH,CAPwB,EAOrBR,MAPqB,CAOb,CAAEY,GAAF,EAAOC,GAAP,KAAgBD,GAAG,CAACX,MAAJ,CAAYY,GAAZ,CAPH,EAOsB,EAPtB,CAAzB;EAQA,MAAMC,eAAe,GAAGX,OAAO,CAACY,QAAR,CACnBhB,GADmB,CACdG,uBADc,EAEnBF,MAFmB,CAEX,CAAEY,GAAF,EAAOC,GAAP,KAAgBD,GAAG,CAACX,MAAJ,CAAYY,GAAZ,CAFL,EAEwB,EAFxB,CAAxB;EAGA,OAAO,CAAE,GAAGT,gBAAL,EAAuB,GAAGU,eAA1B,CAAP;AACH,CAbM;AAeP,eAAe;EACXnB,wBADW;EAEXO;AAFW,CAAf"},"metadata":{},"sourceType":"module"}