{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/* eslint-env es6 */ /**\n * Dom Processor - Provides performance metrics in relation to the DOM\n * NOTE: this doesn't have full functionality as the afx version!\n *\n * @module js/splmStatsDOMProcessor\n */import splmStatsUtils from'js/splmStatsUtils';/**\n * Instances of this class represent a profiler for DOM Information\n *\n * @class SPLMStatsDomProcessor\n */function SPLMStatsDomProcessor(){let self=this;let _processingTime=0;let _startProcessorTime=0;let _endProcessorTime=0;/**\n     * calculating Processing Time\n     */function calculateProcessingTime(){_startProcessorTime=window.performance.now();_endProcessorTime=window.performance.now();_processingTime+=_endProcessorTime-_startProcessorTime;}self.start=function(){calculateProcessingTime();};self.stop=function(){calculateProcessingTime();};/**\n     * @returns {Object} DOM Object contains element count on page, DOM Tree Depth, and # of costly widgets on page\n     * Definition of costly: N >= 6 depth OR N >= 50 watchers on the DOM structure ( element and children )\n     */self.getMetrics=function(){return{DOM:{elemCount:splmStatsUtils.getDomElementsCount(),DOMTreeDepth:splmStatsUtils.getDomTreeDepth(document,0)/*\n                DOMCostlyWidgets: splmStatsUtils.getCostlyWidgets()\n                */}};};/**\n     * @returns {Object} Total processing time for DOM Metrics\n     */self.getProcessingTime=function(){const _time=_processingTime;_processingTime=0;return{DOMProcessorOverhead:_time};};return self;}export default SPLMStatsDomProcessor;","map":null,"metadata":{},"sourceType":"module"}