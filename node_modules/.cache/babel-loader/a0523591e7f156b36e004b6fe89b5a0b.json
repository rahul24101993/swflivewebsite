{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwProgressIndicatorService.js\";\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awProgressIndicatorRenderFunction = props => {\n  let showProgressBar = props.viewModel.data.progressIndicatorStatus;\n  let progressBarCss = showProgressBar ? 'aw-layout-progressBar' : 'aw-layout-progressBar hide';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-layout-progressBarContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: progressBarCss,\n      role: \"progressbar\",\n      \"aria-label\": props.i18n.LOADING_TEXT,\n      \"aria-busy\": showProgressBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-layout-progressBarCylon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\nexport const registerEvents = function (name, viewModel, progressIndicatorRef) {\n  progressIndicatorRef.current = {\n    count: 0,\n    progressIndicatorStatus: false\n  };\n  let subscriptions = subscribeToEvents(name, viewModel);\n  return {\n    subscriptions,\n    progressIndicatorRef\n  };\n};\n/**\n * Subscribe to custom Events\n * @param {Object} props object\n */\n\nconst subscribeToEvents = (name, data) => {\n  let startEventName = name ? name + '-progress.start' : 'progress.start';\n  let endEventName = name ? name + '-progress.end' : 'progress.end';\n  let subscriptions = [];\n  subscriptions.push(eventBus.subscribe(startEventName, () => {\n    startProgressIndicator(data);\n  }));\n  subscriptions.push(eventBus.subscribe(endEventName, () => {\n    stopProgressIndicator(data);\n  }));\n  return subscriptions;\n};\n\nconst animationTimer = 1000;\n\nconst startIndicator = _.debounce(viewModel => {\n  let data = viewModel.getData();\n  let progressIndicatorRef = data.progressIndicatorRef;\n  let count = progressIndicatorRef.current.count;\n\n  if (count > 0) {\n    viewModel.dispatch({\n      path: 'data.progressIndicatorStatus',\n      value: true\n    });\n  }\n}, animationTimer, false);\n/**\n * Start the progress Indicator\n * @param {Object} viewModel object\n */\n\n\nexport const startProgressIndicator = viewModel => {\n  let data = viewModel.getData();\n  let progressIndicatorRef = data.progressIndicatorRef;\n  let count = progressIndicatorRef.current.count;\n  count += 1;\n  progressIndicatorRef.current = {\n    count,\n    progressIndicatorStatus: true\n  };\n\n  if (!data.progressIndicatorStatus) {\n    startIndicator(viewModel);\n  }\n};\n/**\n * Stop the progress Indicator\n * @param {Object} viewModel objects\n */\n\nexport const stopProgressIndicator = viewModel => {\n  let data = viewModel.getData();\n  let progressIndicatorRef = data.progressIndicatorRef;\n  let count = progressIndicatorRef.current.count;\n  count -= 1;\n  progressIndicatorRef.current = {\n    count: count <= 0 ? 0 : count,\n    progressIndicatorStatus: false\n  };\n\n  if (count <= 0) {\n    viewModel.dispatch({\n      path: 'data.progressIndicatorStatus',\n      value: false\n    });\n  }\n};\nexport const destroyIndicatorSubscription = subscriptions => {\n  if (subscriptions && subscriptions.length > 0) {\n    subscriptions.forEach(subscription => {\n      eventBus.unsubscribe(subscription);\n    });\n  }\n};","map":{"version":3,"names":["eventBus","_","awProgressIndicatorRenderFunction","props","showProgressBar","viewModel","data","progressIndicatorStatus","progressBarCss","i18n","LOADING_TEXT","registerEvents","name","progressIndicatorRef","current","count","subscriptions","subscribeToEvents","startEventName","endEventName","push","subscribe","startProgressIndicator","stopProgressIndicator","animationTimer","startIndicator","debounce","getData","dispatch","path","value","destroyIndicatorSubscription","length","forEach","subscription","unsubscribe"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwProgressIndicatorService.js"],"sourcesContent":["import eventBus from 'js/eventBus';\nimport _ from 'lodash';\n\nexport const awProgressIndicatorRenderFunction = ( props ) => {\n    let showProgressBar = props.viewModel.data.progressIndicatorStatus;\n    let progressBarCss = showProgressBar ? 'aw-layout-progressBar' : 'aw-layout-progressBar hide';\n    return (\n        <div className='aw-layout-progressBarContainer' >\n            <div className={progressBarCss} role='progressbar' aria-label={props.i18n.LOADING_TEXT} aria-busy={showProgressBar} >\n                <div className='aw-layout-progressBarCylon'></div>\n            </div>\n        </div>\n    );\n};\n\nexport const registerEvents = function( name, viewModel, progressIndicatorRef ) {\n    progressIndicatorRef.current = {\n        count: 0,\n        progressIndicatorStatus: false\n    };\n    let subscriptions = subscribeToEvents( name, viewModel );\n    return {\n        subscriptions,\n        progressIndicatorRef\n    };\n};\n\n/**\n * Subscribe to custom Events\n * @param {Object} props object\n */\nconst subscribeToEvents = ( name, data ) => {\n    let startEventName = name ? name + '-progress.start' : 'progress.start';\n    let endEventName = name ? name + '-progress.end' : 'progress.end';\n    let subscriptions = [];\n    subscriptions.push( eventBus.subscribe( startEventName, () => {\n        startProgressIndicator( data );\n    } ) );\n\n    subscriptions.push( eventBus.subscribe( endEventName, () => {\n        stopProgressIndicator( data );\n    } ) );\n    return subscriptions;\n};\n\nconst animationTimer = 1000;\nconst startIndicator = _.debounce( ( viewModel ) => {\n    let data = viewModel.getData();\n    let progressIndicatorRef = data.progressIndicatorRef;\n    let count = progressIndicatorRef.current.count;\n    if( count > 0 ) {\n        viewModel.dispatch( { path: 'data.progressIndicatorStatus', value: true } );\n    }\n}, animationTimer, false );\n\n/**\n * Start the progress Indicator\n * @param {Object} viewModel object\n */\nexport const startProgressIndicator = ( viewModel ) => {\n    let data = viewModel.getData();\n    let progressIndicatorRef = data.progressIndicatorRef;\n    let count = progressIndicatorRef.current.count;\n    count += 1;\n    progressIndicatorRef.current = {\n        count,\n        progressIndicatorStatus: true\n    };\n    if( !data.progressIndicatorStatus ) {\n        startIndicator( viewModel );\n    }\n};\n\n/**\n * Stop the progress Indicator\n * @param {Object} viewModel objects\n */\nexport const stopProgressIndicator = ( viewModel ) => {\n    let data = viewModel.getData();\n    let progressIndicatorRef = data.progressIndicatorRef;\n    let count = progressIndicatorRef.current.count;\n    count -= 1;\n    progressIndicatorRef.current = {\n        count: count <= 0 ? 0 : count,\n        progressIndicatorStatus: false\n    };\n    if( count <= 0 ) {\n        viewModel.dispatch( { path: 'data.progressIndicatorStatus', value: false } );\n    }\n};\n\nexport const destroyIndicatorSubscription = ( subscriptions ) => {\n    if( subscriptions && subscriptions.length > 0 ) {\n        subscriptions.forEach( subscription => {\n            eventBus.unsubscribe( subscription );\n        } );\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}