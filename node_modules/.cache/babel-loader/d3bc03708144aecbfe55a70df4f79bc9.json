{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwPopupCommandBar from'viewmodel/AwPopupCommandBarViewModel';import AwFlexRow from'viewmodel/AwFlexRowViewModel';import AwLink from'viewmodel/AwLinkViewModel';import AwSearchBox from'viewmodel/AwSearchBoxViewModel';import AwTogglebutton from'viewmodel/AwTogglebuttonViewModel';import AwFlexColumn from'viewmodel/AwFlexColumnViewModel';import AwLabel from'viewmodel/AwLabelViewModel';import AwList from'viewmodel/AwListViewModel';import AwListCheckboxItem from'viewmodel/AwListCheckboxItemViewModel';import AwButton from'viewmodel/AwButtonViewModel';import AwI18n from'viewmodel/AwI18nViewModel';import{ExistWhen,AwClass}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DivExistWhen=ExistWhen('div');const AwLabelExistWhen=ExistWhen(AwLabel);const AwButtonAwClass=AwClass(AwButton);/*\nctx imports\n*/const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('js/awColumnFilterService',()=>import('js/awColumnFilterService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"actions\":{\"reveal\":{\"actionType\":\"batchJob\",\"steps\":[{\"action\":\"initializeMenu\"},{\"action\":\"checkForFilterDisability\"},{\"action\":\"initializeFacetDataProvider\",\"condition\":\"data.showFilters.dbValue === true && ctx.columnMenuContext.isFacetLoading === false\"}]},\"initializeMenu\":{\"actionType\":\"JSFunction\",\"method\":\"initializeMenu\",\"inputData\":{\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"columnFilterData\":\"{{subPanelContext.gridContext.columnDef.filter}}\",\"columnMenuData\":\"{{subPanelContext.gridContext.columnDef.filter.columnMenuData}}\"},\"outputData\":{\"operation.dbValue\":\"columnMenuData.operation.dbValue\",\"operation.uiValue\":\"columnMenuData.operation.uiValue\",\"textValue.value\":\"columnMenuData.textValue.dbValue\",\"textValue.dbValue\":\"columnMenuData.textValue.dbValue\",\"showFilters.dbValue\":\"columnMenuData.showFilterFacets\"},\"deps\":\"js/awColumnFilterService\"},\"initializeFacetDataProvider\":{\"actionType\":\"dataProvider\",\"method\":\"facetDataProvider\"},\"filterAction\":{\"actionType\":\"JSFunction\",\"method\":\"doTextFiltering\",\"inputData\":{\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModelData\":\"{{data.data}}\",\"facetDataProvider\":\"{{data.dataProviders.facetDataProvider}}\",\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\"},\"outputData\":{\"newFilters\":\"\"},\"deps\":\"js/awColumnFilterService\"},\"textFilterInputChangedBatch\":{\"actionType\":\"batchJob\",\"steps\":[{\"action\":\"textFilterInputChanged\"},{\"action\":\"initializeFacetValuesDebounce\",\"condition\":\"data.showFilters.dbValue === true && ctx.columnMenuContext.isFacetLoading === false\"}]},\"showFiltersToggleChangedBatch\":{\"actionType\":\"batchJob\",\"steps\":[{\"action\":\"showFiltersToggleChanged\"},{\"action\":\"initializeFacetDataProvider\",\"condition\":\"data.showFilters.dbValue === true && ctx.columnMenuContext.isFacetLoading === false\"}]},\"textFilterInputChanged\":{\"actionType\":\"JSFunction\",\"method\":\"textFilterInputChanged\",\"inputData\":{\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\",\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModelData\":\"{{data.data}}\",\"isBulkEditing\":\"{{subPanelContext.gridContext.isBulkediting}}\",\"isFilterDisabled\":\"{{fields.isFilterDisabled}}\"},\"deps\":\"js/awColumnFilterService\"},\"initializeFacetValues\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"loadFacetValues\",\"inputData\":{\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\",\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModel\":\"{{data}}\",\"subPanelContext\":\"{{subPanelContext}}\",\"facetDataProvider\":\"{{data.dataProviders.facetDataProvider}}\",\"reloadValues\":true,\"isFilterDisabled\":\"{{fields.isFilterDisabled}}\"},\"outputData\":{\"searchResults\":\"\"},\"deps\":\"js/awColumnFilterService\"},\"initializeFacetValuesDebounce\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"updateFacetValuesDebounce\",\"inputData\":{\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\",\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModel\":\"{{data}}\",\"subPanelContext\":\"{{subPanelContext}}\",\"facetDataProvider\":\"{{data.dataProviders.facetDataProvider}}\",\"reloadValues\":true,\"isFilterDisabled\":\"{{fields.isFilterDisabled}}\"},\"deps\":\"js/awColumnFilterService\"},\"loadFacetValues\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"loadFacetValues\",\"inputData\":{\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\",\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModel\":\"{{data}}\",\"subPanelContext\":\"{{subPanelContext}}\",\"facetDataProvider\":\"{{data.dataProviders.facetDataProvider}}\",\"reloadValues\":false,\"isFilterDisabled\":\"{{fields.isFilterDisabled}}\"},\"outputData\":{\"searchResults\":\"\"},\"deps\":\"js/awColumnFilterService\"},\"showFiltersToggleChanged\":{\"actionType\":\"JSFunction\",\"method\":\"showFiltersToggleChanged\",\"inputData\":{\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\",\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModelData\":\"{{data.data}}\"},\"deps\":\"js/awColumnFilterService\"},\"filterFacetInputChanged\":{\"actionType\":\"JSFunction\",\"method\":\"filterFacetInputChanged\",\"inputData\":{\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\",\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModelData\":\"{{data.data}}\",\"facetDataProvider\":\"{{data.dataProviders.facetDataProvider}}\",\"facetParameters\":\"{{parameters}}\",\"isBulkEditing\":\"{{subPanelContext.gridContext.isBulkediting}}\",\"isFilterDisabled\":\"{{fields.isFilterDisabled}}\"},\"outputData\":{\"facetValue\":\"\"},\"deps\":\"js/awColumnFilterService\"},\"clearFilter\":{\"actionType\":\"JSFunction\",\"method\":\"clearFilterFromMenu\",\"inputData\":{\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"gridContextDispatcher\":\"{{subPanelContext.gridContextDispatcher}}\"},\"outputData\":{\"newFilters\":\"\"},\"deps\":\"js/awColumnFilterService\"},\"checkForFilterDisability\":{\"actionType\":\"JSFunction\",\"method\":\"checkForFilterDisability\",\"inputData\":{\"column\":\"{{subPanelContext.gridContext.columnDef}}\",\"viewModelData\":\"{{data.data}}\",\"hasFilterFacetAction\":\"{{subPanelContext.hasFilterFacetAction}}\",\"facetDataProvider\":\"{{data.dataProviders.facetDataProvider}}\",\"isBulkEditing\":\"{{subPanelContext.gridContext.isBulkediting}}\",\"isFilterDisabled\":\"{{fields.isFilterDisabled}}\"},\"deps\":\"js/awColumnFilterService\"}},\"data\":{\"textValue\":{\"displayName\":\"\",\"type\":\"STRING\",\"isRequired\":\"false\",\"isEditable\":\"true\",\"dbValue\":\"\",\"dispValue\":\"\"},\"operation\":{\"type\":\"STRING\",\"isRequired\":\"false\",\"isEditable\":\"true\"},\"title\":{\"displayName\":\"{{i18n.textFilterTitle}}\",\"type\":\"STRING\",\"isRequired\":\"false\",\"isEditable\":\"false\"},\"_linkOptions_operationsLink\":{\"hasPopup\":true,\"iconOptions\":{\"title\":\"textOnly\",\"cell\":\"textOnly\"}},\"_itemOptions_facetCheckbox\":{\"applySelection\":false},\"showFilters\":{\"displayName\":\"{{i18n.toggleFacetTitle}}\",\"type\":\"BOOLEAN\",\"isRequired\":\"false\",\"isEditable\":\"true\",\"value\":\"\",\"labelPosition\":\"PROPERTY_LABEL_AT_SIDE\"},\"noMatchesFound\":{\"type\":\"STRING\",\"isRequired\":\"false\",\"isEditable\":\"false\",\"dbValue\":\"{{i18n.noMatchesFound}}\",\"displayValue\":\"{{i18n.noMatchesFound}}\"},\"isFilterDisabled\":{\"initialValues\":{\"value\":true},\"meta\":{}}},\"dataProviders\":{\"facetDataProvider\":{\"action\":\"initializeFacetValues\",\"nextAction\":\"loadFacetValues\",\"response\":\"{{data.searchResults.results}}\",\"totalFound\":\"{{data.searchResults.totalFound}}\",\"selectionModelMode\":\"none\"},\"operationsDataProvider\":{\"response\":[{\"propDisplayValue\":\"{{i18n.containsOperation}}\",\"propInternalValue\":\"contains\",\"selected\":false},{\"propDisplayValue\":\"{{i18n.notContainsOperation}}\",\"propInternalValue\":\"notContains\",\"selected\":false},{\"propDisplayValue\":\"{{i18n.startsWithOperation}}\",\"propInternalValue\":\"startsWith\",\"selected\":false},{\"propDisplayValue\":\"{{i18n.endsWithOperation}}\",\"propInternalValue\":\"endsWith\",\"selected\":false},{\"propDisplayValue\":\"{{i18n.equalsOperation}}\",\"propInternalValue\":\"equals\",\"selected\":false},{\"propDisplayValue\":\"{{i18n.notEqualsOperation}}\",\"propInternalValue\":\"notEquals\",\"selected\":false}],\"totalFound\":6}},\"functions\":{\"getActiveWorkspaceXrtContext\":{\"functionName\":\"getActiveWorkspaceXrtContext\",\"parameters\":[\"{{ctx.ActiveWorkspace:xrtContext}}\"]}},\"onEvent\":[{\"eventId\":\"awlinkPopup.selected\",\"action\":\"textFilterInputChangedBatch\"}],\"i18n\":{\"clearButtonTitle\":[\"UIMessages\"],\"textFilterTitle\":[\"UIMessages\"],\"containsOperation\":[\"UIMessages\"],\"notContainsOperation\":[\"UIMessages\"],\"startsWithOperation\":[\"UIMessages\"],\"endsWithOperation\":[\"UIMessages\"],\"equalsOperation\":[\"UIMessages\"],\"notEqualsOperation\":[\"UIMessages\"],\"FILTER_TEXT\":[\"BaseMessages\"],\"searchText\":[\"UIMessages\"],\"toggleFacetTitle\":[\"UIMessages\"],\"noMatchesFound\":[\"UIMessages\"],\"selectAll\":[\"UIMessages\"]},\"messages\":{},\"conditions\":{\"isShowFiltersSelected\":{\"expression\":\"data.showFilters.dbValue === true\"},\"filteringEnabled\":{\"expression\":\"subPanelContext.gridContext.columnDef.filter.view && subPanelContext.gridContext.columnDef.isFilteringEnabled !== false && subPanelContext.gridOptions.isFilteringEnabled\"},\"noFacetResults\":{\"expression\":\"dataProviders.facetDataProvider.viewModelCollection.totalFound === 0 && ctx.columnMenuContext.isFacetLoading === false\"}},\"lifecycleHooks\":{\"onMount\":\"reveal\",\"onUpdate\":[{\"action\":\"textFilterInputChangedBatch\",\"observers\":[\"viewModel.data.textValue.dbValue\"]},{\"action\":\"checkForFilterDisability\",\"observers\":[\"viewModel.data.showFilters.dbValue\"]}]},\"_viewModelId\":\"splmTableTextColumnMenu\",\"_uniqueViewModelId\":\"splmTableTextColumnMenu\",\"ctx\":{\"columnMenuContext\":{\"type\":\"object\"},\"ActiveWorkspace\":{\"type\":\"object\"}}};/*\n<div id=\"{{subPanelContext.menuContainerId}}\" class=\"aw-splm-tableMenuContainer afx-content-background aw-hierarchical-popup\">\n    <div id=\"{{subPanelContext.menuId}}\" class=\"aw-splm-tableMenu aw-splm-tableMenuPopup\" role=\"menu\">\n        <div>\n            <aw-popup-command-bar anchor=\"{{subPanelContext.anchor}}\" context=\"subPanelContext\" own-popup=\"true\"> </aw-popup-command-bar>\n        </div>\n        <hr>\n        <div class=\"aw-splm-tableMenuItem aw-widgets-cellTop column-filter-container\" role=\"menuitem\" exist-when=\"conditions.filteringEnabled\">\n            <div class=\"column-filter\">\n                <div class=\"text-filter\">\n                    <div>\n                        <aw-flex-row height=\"2f\">\n                            <aw-link dataprovider=\"data.dataProviders.operationsDataProvider\" prop=\"operation\" link-options=\"data._linkOptions_operationsLink\"></aw-link>\n                        </aw-flex-row>\n                    </div>\n                    <aw-search-box prop=\"textValue\" placeholder=\"{{i18n.searchText}}\" action=\"filterAction\"></aw-search-box>\n                </div>\n            </div>\n            <div class=\"facet-filter-container\" exist-when=\"subPanelContext.hasFilterFacetAction\">\n                <div class=\"facets-container\">\n                    <aw-togglebutton class=\"facet-toggle\" prop=\"data.showFilters\" action=\"showFiltersToggleChangedBatch\"></aw-togglebutton>\n                    <div class=\"facet-filter\" exist-when=\"conditions.isShowFiltersSelected\">\n                        <aw-flex-column>\n                            <aw-flex-row>\n                                <aw-label prop=\"noMatchesFound\" exist-when=\"conditions.noFacetResults\"></aw-label>\n                            </aw-flex-row>\n                            <aw-flex-row>\n                                <aw-list dataprovider=\"data.dataProviders.facetDataProvider\" item-options=\"data._itemOptions_facetCheckbox\">\n                                    <aw-list-checkbox-item vmo=\"item\" action=\"filterFacetInputChanged\"></aw-list-checkbox-item>\n                                </aw-list>\n                            </aw-flex-row>\n                        </aw-flex-column>\n                    </div>\n                </div>\n            </div>\n            <div class=\"submit-buttons-filter\">\n                <aw-flex-row height=\"2.75f\">\n                    <div class=\"sw-column w-6 column-menu-button\">\n                        <aw-button id=\"columnMenuClearButton\" button-type=\"negative\" action=\"clearFilter\" aw-class=\"{'disabled': subPanelContext.gridContext.columnDef.filter.isFilterApplied !== true}\">\n                            <aw-i18n>i18n.clearButtonTitle</aw-i18n>\n                        </aw-button>\n                    </div>\n                    <div class=\"sw-column w-6 column-menu-button\">\n                        <aw-button id=\"columnMenuFilterButton\" class=\"filter-button\" action=\"filterAction\" aw-class=\"{'disabled': data.isFilterDisabled.value}\">\n                            <aw-i18n>i18n.FILTER_TEXT</aw-i18n>\n                        </aw-button>\n                    </div>\n                </aw-flex-row>\n            </div>\n        </div>\n    </div>\n</div>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsx(\"div\",{id:AwParseService.instance(\"subPanelContext.menuContainerId\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),className:\"aw-splm-tableMenuContainer afx-content-background aw-hierarchical-popup\",children:/*#__PURE__*/_jsxs(\"div\",{id:AwParseService.instance(\"subPanelContext.menuId\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),className:\"aw-splm-tableMenu aw-splm-tableMenuPopup\",role:\"menu\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AwPopupCommandBar,{anchor:AwParseService.instance(\"subPanelContext.anchor\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),context:AwParseService.instance(\"subPanelContext\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),\"own-popup\":\"true\"})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(DivExistWhen,{className:\"aw-splm-tableMenuItem aw-widgets-cellTop column-filter-container\",role:\"menuitem\",existWhen:AwParseService.instance(\"conditions.filteringEnabled\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:[/*#__PURE__*/_jsx(\"div\",{className:\"column-filter\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-filter\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AwFlexRow,{height:\"2f\",children:/*#__PURE__*/_jsx(AwLink,{dataprovider:AwParseService.instance(\"data.dataProviders.operationsDataProvider\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),...getField(\"operation\",fields,$index,null,null),linkOptions:AwParseService.instance(\"data._linkOptions_operationsLink\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})})}),/*#__PURE__*/_jsx(AwSearchBox,{...getField(\"textValue\",fields,$index,null,null),placeholder:AwParseService.instance(\"{{i18n.searchText}}\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),action:actions.filterAction})]})}),/*#__PURE__*/_jsx(DivExistWhen,{className:\"facet-filter-container\",existWhen:AwParseService.instance(\"subPanelContext.hasFilterFacetAction\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsxs(\"div\",{className:\"facets-container\",children:[/*#__PURE__*/_jsx(AwTogglebutton,{className:\"facet-toggle\",...getField(\"data.showFilters\",fields,$index,null,null),action:actions.showFiltersToggleChangedBatch}),/*#__PURE__*/_jsx(DivExistWhen,{className:\"facet-filter\",existWhen:AwParseService.instance(\"conditions.isShowFiltersSelected\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsxs(AwFlexColumn,{children:[/*#__PURE__*/_jsx(AwFlexRow,{children:/*#__PURE__*/_jsx(AwLabelExistWhen,{...getField(\"noMatchesFound\",fields,$index,null,null),existWhen:AwParseService.instance(\"conditions.noFacetResults\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})}),/*#__PURE__*/_jsx(AwFlexRow,{children:/*#__PURE__*/_jsx(AwList,{dataprovider:dataProviders.facetDataProvider,itemOptions:data._itemOptions_facetCheckbox,showDropArea:null,dndHandler:props.viewModel.dndHandler,children:/*#__PURE__*/_jsx(AwListCheckboxItem,{vmo:AwParseService.instance(\"item\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),action:actions.filterFacetInputChanged})})})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"submit-buttons-filter\",children:/*#__PURE__*/_jsxs(AwFlexRow,{height:\"2.75f\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sw-column w-6 column-menu-button\",children:/*#__PURE__*/_jsx(AwButtonAwClass,{id:\"columnMenuClearButton\",buttonType:\"negative\",action:actions.clearFilter,awClass:AwParseService.instance(\"{'disabled': subPanelContext.gridContext.columnDef.filter.isFilterApplied !== true}\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwI18n,{children:i18n.clearButtonTitle})})}),/*#__PURE__*/_jsx(\"div\",{className:\"sw-column w-6 column-menu-button\",children:/*#__PURE__*/_jsx(AwButtonAwClass,{id:\"columnMenuFilterButton\",className:\"filter-button\",action:actions.filterAction,awClass:AwParseService.instance(\"{'disabled': fields.isFilterDisabled.value}\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwI18n,{children:i18n.FILTER_TEXT})})})]})})]})]})});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}