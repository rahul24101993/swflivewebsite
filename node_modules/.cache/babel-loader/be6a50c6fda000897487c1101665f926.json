{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/**\n * Service for clickable cell titles\n *\n * @module js/clickableTitleService\n */import AwTimeoutService from'js/awTimeoutService';import configurationSvc from'js/configurationService';import commandService from'js/command.service';/**\n * clickableTitleService factory\n */var exports={};var timeoutPromise;var isDoubleClick;/**\n * Returns whether clickable cell title actions have been configured or not\n *\n * @return {Boolean} true if clickable cell title actions have been configured in the solution def\n */export let hasClickableCellTitleActions=function(){return Boolean(exports.getClickableCellTitleActions());};/**\n * Get the commands configured against different types of clicks from the solution defintion\n * @return {Object} clickableCellTitleActions json object holding command id for different types of clicks\n-*/export let getClickableCellTitleActions=function(){var solDef=configurationSvc.getCfgCached('solutionDef');return solDef?solDef.clickableCellTitleActions:null;};/**\n * Executes appropriate action on click as configured in clickable cell title actions\n *\n * @param {Object} $event - click event\n * @param {Object} context - additional context to execute the command with\n */export let doIt=function($event,context){let runActionWithViewModel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if($event.target.tagName.toLowerCase()==='a'&&$event.target.href!==''){return;}$event.stopPropagation();var event=$event;if(timeoutPromise){AwTimeoutService.instance.cancel(timeoutPromise);isDoubleClick=true;}var clickableCellTitleActions=exports.getClickableCellTitleActions();timeoutPromise=AwTimeoutService.instance(function(){// var clickType = isDoubleClick ? 'doubleClick' : event.ctrlKey ? 'ctrlClick' : event.shiftKey ? 'shiftClick' : 'click';\nvar clickType='click';if(isDoubleClick){clickType='doubleClick';}else if(event.ctrlKey){clickType='ctrlClick';}else if(event.shiftKey){clickType='shiftClick';}isDoubleClick=false;timeoutPromise=null;// execute command for click or ctrl click or shift click or double click accordingly\nif(clickableCellTitleActions){commandService.executeCommand(clickableCellTitleActions[clickType],null,null,context,runActionWithViewModel);}},300);};exports={hasClickableCellTitleActions,getClickableCellTitleActions,doIt};export default exports;","map":null,"metadata":{},"sourceType":"module"}