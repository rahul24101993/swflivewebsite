{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\declreact\\\\src\\\\js\\\\awHighlightPropertyHtmlHOC.js\"; // Copyright (c) 2021 Siemens\n\n/* eslint-disable react/display-name */\n\n/* eslint-disable react-hooks/rules-of-hooks */\n\n/**\n * @module js/awHighlightPropertyHtmlHOC\n */\n\nimport React, { useEffect } from 'react';\nimport appCtxService from 'js/appCtxService';\nimport sanitizer from 'js/sanitizer';\nimport { convertToHtml } from 'js/reactHelper';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwHighlightPropertyHtmlDisplayName = 'AwHighlightPropertyHtml';\nconst AwParseHtmlDisplayName = 'AwParseHtml';\n\nconst awHighlightPropertyHtmlHOC = Component => {\n  var _s2 = $RefreshSig$();\n\n  var _s = $RefreshSig$(); // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n\n\n  return /*#__PURE__*/_s2(_s( /*#__PURE__*/_s2( /*#__PURE__*/React.forwardRef(_s2(_s(_s2((_ref, ref) => {\n    _s2();\n\n    _s();\n\n    let {\n      children,\n      ...props\n    } = _ref;\n    let {\n      awHighlightPropertyHtml,\n      displayVal,\n      awParseHtml,\n      ...finalProps\n    } = props;\n    !ref && (ref = React.useRef(null));\n    useEffect(() => {\n      if (ref.current) {\n        var parsedHtml = displayVal;\n        let highlighter = appCtxService.getCtx('highlighter');\n\n        if (parsedHtml) {\n          parsedHtml = _.isNumber(parsedHtml) ? String(parsedHtml) : parsedHtml;\n          parsedHtml = sanitizer.htmlEscapeAllowEntities(parsedHtml, true, true);\n\n          if (highlighter) {\n            parsedHtml = parsedHtml.replace(highlighter.regEx, highlighter.style);\n          }\n\n          parsedHtml = !parsedHtml ? '' : parsedHtml;\n\n          if (_.isEmpty(ref.current.innerHTML) || displayVal !== parsedHtml) {\n            let isRichText = props[_.kebabCase('isRichText')];\n\n            isRichText = isRichText && isRichText.match(/true/i);\n            ref.current.innerHTML = isRichText ? convertToHtml(parsedHtml) : parsedHtml;\n          }\n        }\n      }\n    }, [displayVal]);\n\n    if (awHighlightPropertyHtml || awParseHtml) {\n      if (awHighlightPropertyHtml && typeof Component === 'object') {\n        finalProps.awHighlightPropertyHtml = awHighlightPropertyHtml;\n        Component.displayName = AwHighlightPropertyHtmlDisplayName;\n      } else if (awParseHtml && typeof Component === 'object') {\n        finalProps.awParseHtml = awParseHtml;\n        Component.displayName = AwParseHtmlDisplayName;\n      }\n\n      if (typeof Component === 'object') {\n        finalProps.displayval = displayVal;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...finalProps,\n        ref: ref,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this);\n    }\n\n    return null;\n  }, \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\"), \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\"), \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\")), \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\"), \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\"), \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\");\n};\n\nexport default awHighlightPropertyHtmlHOC;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/awHighlightPropertyHtmlHOC.js"],"names":["AwHighlightPropertyHtmlDisplayName","AwParseHtmlDisplayName","awHighlightPropertyHtmlHOC","Component","props","finalProps","ref","React","useEffect","parsedHtml","highlighter","appCtxService","_","String","sanitizer","displayVal","isRichText","convertToHtml","awHighlightPropertyHtml","awParseHtml","children"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable react/display-name */\n/* eslint-disable react-hooks/rules-of-hooks */\n\n/**\n * @module js/awHighlightPropertyHtmlHOC\n */\nimport React, { useEffect } from 'react';\nimport appCtxService from 'js/appCtxService';\nimport sanitizer from 'js/sanitizer';\nimport { convertToHtml } from 'js/reactHelper';\nimport _ from 'lodash';\n\nconst AwHighlightPropertyHtmlDisplayName = 'AwHighlightPropertyHtml';\nconst AwParseHtmlDisplayName = 'AwParseHtml';\n\nconst awHighlightPropertyHtmlHOC = ( Component ) => {\n    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n    return React.forwardRef( ( { children, ...props }, ref ) => {\n        let { awHighlightPropertyHtml, displayVal, awParseHtml, ...finalProps } = props;\n        !ref && ( ref = React.useRef( null ) );\n        useEffect( () => {\n            if( ref.current ) {\n                var parsedHtml = displayVal;\n                let highlighter = appCtxService.getCtx( 'highlighter' );\n\n                if( parsedHtml ) {\n                    parsedHtml = _.isNumber( parsedHtml ) ? String( parsedHtml ) : parsedHtml;\n                    parsedHtml = sanitizer.htmlEscapeAllowEntities( parsedHtml, true, true );\n\n                    if( highlighter ) {\n                        parsedHtml = parsedHtml.replace( highlighter.regEx, highlighter.style );\n                    }\n\n                    parsedHtml = !parsedHtml ? '' : parsedHtml;\n                    if( _.isEmpty( ref.current.innerHTML ) || displayVal !== parsedHtml ) {\n                        let isRichText = props[ _.kebabCase( 'isRichText' ) ];\n                        isRichText = isRichText && isRichText.match( /true/i );\n                        ref.current.innerHTML = isRichText ? convertToHtml( parsedHtml ) : parsedHtml;\n                    }\n                }\n            }\n        }, [ displayVal ] );\n\n        if( awHighlightPropertyHtml || awParseHtml ) {\n            if( awHighlightPropertyHtml && typeof Component === 'object' ) {\n                finalProps.awHighlightPropertyHtml = awHighlightPropertyHtml;\n                Component.displayName = AwHighlightPropertyHtmlDisplayName;\n            } else if( awParseHtml && typeof Component === 'object' ) {\n                finalProps.awParseHtml = awParseHtml;\n                Component.displayName = AwParseHtmlDisplayName;\n            }\n            if( typeof Component === 'object' ) {\n                finalProps.displayval = displayVal;\n            }\n            return <Component {...finalProps} ref={ref}>{children}</Component>;\n        }\n        return null;\n    } );\n};\n\nexport default awHighlightPropertyHtmlHOC;\n\n"]},"metadata":{},"sourceType":"module"}