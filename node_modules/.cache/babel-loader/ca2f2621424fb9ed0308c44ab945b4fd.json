{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\command\\\\src\\\\js\\\\AwToolbarService.js\";\n// Copyright (c) 2021 Siemens\n\n/* eslint-disable max-len */\nimport { awCommandBarInitFunction, refreshServerVisibility } from 'js/AwCommandBarService';\nimport AwToolbarInternal from 'viewmodel/AwToolbarInternalViewModel';\nimport Debug from 'debug'; // eslint-disable-next-line complexity\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awToolbarRenderFunction = props => {\n  const {\n    visibilityLoader,\n    reverse = false,\n    reverseSecond = false,\n    overflow = true,\n    orientation = 'HORIZONTAL',\n    firstAnchor,\n    secondAnchor,\n    showCommandLabels,\n    context,\n    viewModel: {\n      data: {\n        firstCommandList = null,\n        secondCommandList = null,\n        visibleServerCommands,\n        trace\n      }\n    }\n  } = props;\n  return firstCommandList && secondCommandList && /*#__PURE__*/_jsxDEV(AwToolbarInternal, {\n    alignment: orientation,\n    commandContext: context,\n    firstAnchor: firstAnchor,\n    firstCommandList: firstCommandList,\n    overflow: overflow,\n    reverse: reverse,\n    reverseSecond: reverseSecond,\n    secondAnchor: secondAnchor,\n    secondCommandList: secondCommandList,\n    showCommandLabels: showCommandLabels,\n    trace: trace,\n    visibilityLoader: visibilityLoader,\n    visibleServerCommands: visibleServerCommands\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 53\n  }, this);\n};\n/**\n * Initialize the toolbar\n *\n * @param {Object} options options\n * @returns {Object} Toolbar init data\n */\n\nexport const awToolbarInitFunction = async _ref => {\n  let {\n    firstAnchor = '',\n    secondAnchor = ''\n  } = _ref;\n  const trace = new Debug(`command:AwCommandBar:${firstAnchor}+${secondAnchor}`);\n  trace('Loading commands');\n  const [{\n    commandList: firstCommandList\n  }, {\n    commandList: secondCommandList\n  }] = await Promise.all([awCommandBarInitFunction({\n    anchor: firstAnchor\n  }), awCommandBarInitFunction({\n    anchor: secondAnchor\n  })]);\n  trace('Loaded command list', firstCommandList, secondCommandList);\n  return {\n    firstCommandList: firstCommandList || [],\n    secondCommandList: secondCommandList || [],\n    trace\n  };\n};\n/**\n * Refresh server visibility for the toolbar\n *\n * @param {Object} options options\n * @returns {Object} Updated server visibility\n */\n\nexport const refreshServerVisibilityToolbar = async _ref2 => {\n  let {\n    firstCommandList,\n    secondCommandList,\n    visibilityLoader,\n    trace\n  } = _ref2;\n\n  if (!firstCommandList || !secondCommandList || !visibilityLoader) {\n    return null;\n  }\n\n  return refreshServerVisibility({\n    commandList: [...firstCommandList, ...secondCommandList],\n    visibilityLoader,\n    trace\n  });\n};","map":{"version":3,"names":["awCommandBarInitFunction","refreshServerVisibility","AwToolbarInternal","Debug","awToolbarRenderFunction","props","visibilityLoader","reverse","reverseSecond","overflow","orientation","firstAnchor","secondAnchor","showCommandLabels","context","viewModel","data","firstCommandList","secondCommandList","visibleServerCommands","trace","awToolbarInitFunction","commandList","Promise","all","anchor","refreshServerVisibilityToolbar"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/command/src/js/AwToolbarService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable max-len */\nimport { awCommandBarInitFunction, refreshServerVisibility } from 'js/AwCommandBarService';\nimport AwToolbarInternal from 'viewmodel/AwToolbarInternalViewModel';\nimport Debug from 'debug';\n\n// eslint-disable-next-line complexity\nexport const awToolbarRenderFunction = ( props ) => {\n    const {\n        visibilityLoader,\n        reverse = false,\n        reverseSecond = false,\n        overflow = true,\n        orientation = 'HORIZONTAL',\n        firstAnchor,\n        secondAnchor,\n        showCommandLabels,\n        context,\n        viewModel: { data: { firstCommandList = null, secondCommandList = null, visibleServerCommands, trace } }\n    } = props;\n\n    return firstCommandList && secondCommandList && <AwToolbarInternal\n        alignment={orientation}\n        commandContext={context}\n        firstAnchor={firstAnchor}\n        firstCommandList={ firstCommandList }\n        overflow={overflow}\n        reverse={reverse}\n        reverseSecond={reverseSecond}\n        secondAnchor={secondAnchor}\n        secondCommandList={ secondCommandList }\n        showCommandLabels={showCommandLabels}\n        trace={trace}\n        visibilityLoader={visibilityLoader}\n        visibleServerCommands={ visibleServerCommands }>\n    </AwToolbarInternal>;\n};\n\n/**\n * Initialize the toolbar\n *\n * @param {Object} options options\n * @returns {Object} Toolbar init data\n */\nexport const awToolbarInitFunction = async( {\n    firstAnchor = '',\n    secondAnchor = ''\n} ) => {\n    const trace = new Debug( `command:AwCommandBar:${firstAnchor}+${secondAnchor}` );\n    trace( 'Loading commands' );\n    const [ { commandList: firstCommandList }, { commandList: secondCommandList } ] = await Promise.all( [\n        awCommandBarInitFunction( { anchor: firstAnchor } ),\n        awCommandBarInitFunction( { anchor: secondAnchor } ) ] );\n    trace( 'Loaded command list', firstCommandList, secondCommandList );\n    return {\n        firstCommandList: firstCommandList || [],\n        secondCommandList: secondCommandList || [],\n        trace\n    };\n};\n\n/**\n * Refresh server visibility for the toolbar\n *\n * @param {Object} options options\n * @returns {Object} Updated server visibility\n */\nexport const refreshServerVisibilityToolbar = async( {\n    firstCommandList,\n    secondCommandList,\n    visibilityLoader,\n    trace\n} ) => {\n    if( !firstCommandList || !secondCommandList || !visibilityLoader ) {\n        return null;\n    }\n    return refreshServerVisibility( {\n        commandList: [ ...firstCommandList, ...secondCommandList ],\n        visibilityLoader,\n        trace\n    } );\n};\n"],"mappings":";AAAA;;AACA;AACA,SAASA,wBAAT,EAAmCC,uBAAnC,QAAkE,wBAAlE;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,OAAO,MAAMC,uBAAuB,GAAKC,KAAF,IAAa;EAChD,MAAM;IACFC,gBADE;IAEFC,OAAO,GAAG,KAFR;IAGFC,aAAa,GAAG,KAHd;IAIFC,QAAQ,GAAG,IAJT;IAKFC,WAAW,GAAG,YALZ;IAMFC,WANE;IAOFC,YAPE;IAQFC,iBARE;IASFC,OATE;IAUFC,SAAS,EAAE;MAAEC,IAAI,EAAE;QAAEC,gBAAgB,GAAG,IAArB;QAA2BC,iBAAiB,GAAG,IAA/C;QAAqDC,qBAArD;QAA4EC;MAA5E;IAAR;EAVT,IAWFf,KAXJ;EAaA,OAAOY,gBAAgB,IAAIC,iBAApB,iBAAyC,QAAC,iBAAD;IAC5C,SAAS,EAAER,WADiC;IAE5C,cAAc,EAAEI,OAF4B;IAG5C,WAAW,EAAEH,WAH+B;IAI5C,gBAAgB,EAAGM,gBAJyB;IAK5C,QAAQ,EAAER,QALkC;IAM5C,OAAO,EAAEF,OANmC;IAO5C,aAAa,EAAEC,aAP6B;IAQ5C,YAAY,EAAEI,YAR8B;IAS5C,iBAAiB,EAAGM,iBATwB;IAU5C,iBAAiB,EAAEL,iBAVyB;IAW5C,KAAK,EAAEO,KAXqC;IAY5C,gBAAgB,EAAEd,gBAZ0B;IAa5C,qBAAqB,EAAGa;EAboB;IAAA;IAAA;IAAA;EAAA,QAAhD;AAeH,CA7BM;AA+BP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,qBAAqB,GAAG,cAG9B;EAAA,IAHqC;IACxCV,WAAW,GAAG,EAD0B;IAExCC,YAAY,GAAG;EAFyB,CAGrC;EACH,MAAMQ,KAAK,GAAG,IAAIjB,KAAJ,CAAY,wBAAuBQ,WAAY,IAAGC,YAAa,EAA/D,CAAd;EACAQ,KAAK,CAAE,kBAAF,CAAL;EACA,MAAM,CAAE;IAAEE,WAAW,EAAEL;EAAf,CAAF,EAAqC;IAAEK,WAAW,EAAEJ;EAAf,CAArC,IAA4E,MAAMK,OAAO,CAACC,GAAR,CAAa,CACjGxB,wBAAwB,CAAE;IAAEyB,MAAM,EAAEd;EAAV,CAAF,CADyE,EAEjGX,wBAAwB,CAAE;IAAEyB,MAAM,EAAEb;EAAV,CAAF,CAFyE,CAAb,CAAxF;EAGAQ,KAAK,CAAE,qBAAF,EAAyBH,gBAAzB,EAA2CC,iBAA3C,CAAL;EACA,OAAO;IACHD,gBAAgB,EAAEA,gBAAgB,IAAI,EADnC;IAEHC,iBAAiB,EAAEA,iBAAiB,IAAI,EAFrC;IAGHE;EAHG,CAAP;AAKH,CAfM;AAiBP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMM,8BAA8B,GAAG,eAKvC;EAAA,IAL8C;IACjDT,gBADiD;IAEjDC,iBAFiD;IAGjDZ,gBAHiD;IAIjDc;EAJiD,CAK9C;;EACH,IAAI,CAACH,gBAAD,IAAqB,CAACC,iBAAtB,IAA2C,CAACZ,gBAAhD,EAAmE;IAC/D,OAAO,IAAP;EACH;;EACD,OAAOL,uBAAuB,CAAE;IAC5BqB,WAAW,EAAE,CAAE,GAAGL,gBAAL,EAAuB,GAAGC,iBAA1B,CADe;IAE5BZ,gBAF4B;IAG5Bc;EAH4B,CAAF,CAA9B;AAKH,CAdM"},"metadata":{},"sourceType":"module"}