{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This service is used for plTable as Fill Down / Copy Down / Drag Down\n *\n * @module js/splmTableFillDown\n *\n * @publishedApolloService\n *\n */\nimport SPLMTableFillDownHelper from 'js/splmTableFillDownHelper';\nimport Const from 'js/splmTableConstants';\nimport util from 'js/splmTableUtils';\n/**\n * Instances of this class represent a fill down helper for PL Table\n *\n * @class SPLMTableFillDown\n * @param {Object} tableElem PL Table DOMElement\n */\n\nfunction SPLMTableFillDown(tableElem) {\n  let self = this;\n\n  let _helper = new SPLMTableFillDownHelper(tableElem);\n\n  let _draggableOriginal;\n  /**\n   * Enable FillDown on cell element\n   *\n   * @param {DOMElement} cellElement - DOMElement for Cell\n   *\n   */\n\n\n  self.enableFillDown = function (cellElement) {\n    var dragHandleElement = cellElement.getElementsByClassName(Const.CLASS_WIDGET_TABLE_CELL_DRAG_HANDLE)[0];\n\n    if (!dragHandleElement) {\n      let row = cellElement.parentElement;\n      dragHandleElement = util.createElement('div', Const.CLASS_WIDGET_TABLE_CELL_DRAG_HANDLE);\n      dragHandleElement.addEventListener('mouseover', _helper.initialize);\n      dragHandleElement.addEventListener('mousedown', function () {\n        _draggableOriginal = row.draggable;\n        row.draggable = false;\n      });\n      dragHandleElement.addEventListener('mouseup', function () {\n        row.draggable = _draggableOriginal;\n      });\n      cellElement.appendChild(dragHandleElement);\n    }\n  };\n  /**\n   * Disable FillDown on cell element\n   *\n   * @param {DOMElement} cellElement - DOMElement for Cell\n   */\n\n\n  self.disableFillDown = function (cellElement) {\n    var dragHandleElement = cellElement.getElementsByClassName(Const.CLASS_WIDGET_TABLE_CELL_DRAG_HANDLE)[0];\n\n    if (dragHandleElement) {\n      cellElement.removeChild(dragHandleElement);\n    }\n  };\n\n  return self;\n}\n\n_c2 = SPLMTableFillDown;\n_c = SPLMTableFillDown;\nexport default SPLMTableFillDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SPLMTableFillDown\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"SPLMTableFillDown\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/splmTableFillDown.js"],"names":["SPLMTableFillDown","self","_helper","dragHandleElement","cellElement","Const","row","util","_draggableOriginal"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,uBAAA,MAAA,4BAAA;AACA,OAAA,KAAA,MAAA,uBAAA;AACA,OAAA,IAAA,MAAA,mBAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAA,iBAAA,CAAA,SAAA,EAAwC;EACpC,IAAIC,IAAI,GAAR,IAAA;;EACA,IAAIC,OAAO,GAAG,IAAA,uBAAA,CAAd,SAAc,CAAd;;EAEA,IAAA,kBAAA;EAEA;AACJ;AACA;AACA;AACA;AACA;;;EACID,IAAI,CAAJA,cAAAA,GAAsB,UAAA,WAAA,EAAwB;IAC1C,IAAIE,iBAAiB,GAAGC,WAAW,CAAXA,sBAAAA,CAAoCC,KAAK,CAAzCD,mCAAAA,EAAxB,CAAwBA,CAAxB;;IACA,IAAI,CAAJ,iBAAA,EAAyB;MACrB,IAAIE,GAAG,GAAGF,WAAW,CAArB,aAAA;MACAD,iBAAiB,GAAGI,IAAI,CAAJA,aAAAA,CAAAA,KAAAA,EAA2BF,KAAK,CAApDF,mCAAoBI,CAApBJ;MACAA,iBAAiB,CAAjBA,gBAAAA,CAAAA,WAAAA,EAAiDD,OAAO,CAAxDC,UAAAA;MACAA,iBAAiB,CAAjBA,gBAAAA,CAAAA,WAAAA,EAAiD,YAAW;QACxDK,kBAAkB,GAAGF,GAAG,CAAxBE,SAAAA;QACAF,GAAG,CAAHA,SAAAA,GAAAA,KAAAA;MAFJH,CAAAA;MAIAA,iBAAiB,CAAjBA,gBAAAA,CAAAA,SAAAA,EAA+C,YAAW;QACtDG,GAAG,CAAHA,SAAAA,GAAAA,kBAAAA;MADJH,CAAAA;MAGAC,WAAW,CAAXA,WAAAA,CAAAA,iBAAAA;IACH;EAdLH,CAAAA;EAiBA;AACJ;AACA;AACA;AACA;;;EACIA,IAAI,CAAJA,eAAAA,GAAuB,UAAA,WAAA,EAAwB;IAC3C,IAAIE,iBAAiB,GAAGC,WAAW,CAAXA,sBAAAA,CAAoCC,KAAK,CAAzCD,mCAAAA,EAAxB,CAAwBA,CAAxB;;IACA,IAAA,iBAAA,EAAwB;MACpBA,WAAW,CAAXA,WAAAA,CAAAA,iBAAAA;IACH;EAJLH,CAAAA;;EAOA,OAAA,IAAA;AACH;;MA1CD,iB;KAASD,iB;AA4CT,eAAA,iBAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This service is used for plTable as Fill Down / Copy Down / Drag Down\n *\n * @module js/splmTableFillDown\n *\n * @publishedApolloService\n *\n */\nimport SPLMTableFillDownHelper from 'js/splmTableFillDownHelper';\nimport Const from 'js/splmTableConstants';\nimport util from 'js/splmTableUtils';\n\n/**\n * Instances of this class represent a fill down helper for PL Table\n *\n * @class SPLMTableFillDown\n * @param {Object} tableElem PL Table DOMElement\n */\nfunction SPLMTableFillDown( tableElem ) {\n    let self = this;\n    let _helper = new SPLMTableFillDownHelper( tableElem );\n\n    let _draggableOriginal;\n\n    /**\n     * Enable FillDown on cell element\n     *\n     * @param {DOMElement} cellElement - DOMElement for Cell\n     *\n     */\n    self.enableFillDown = function( cellElement ) {\n        var dragHandleElement = cellElement.getElementsByClassName( Const.CLASS_WIDGET_TABLE_CELL_DRAG_HANDLE )[ 0 ];\n        if( !dragHandleElement ) {\n            let row = cellElement.parentElement;\n            dragHandleElement = util.createElement( 'div', Const.CLASS_WIDGET_TABLE_CELL_DRAG_HANDLE );\n            dragHandleElement.addEventListener( 'mouseover', _helper.initialize );\n            dragHandleElement.addEventListener( 'mousedown', function() {\n                _draggableOriginal = row.draggable;\n                row.draggable = false;\n            } );\n            dragHandleElement.addEventListener( 'mouseup', function() {\n                row.draggable = _draggableOriginal;\n            } );\n            cellElement.appendChild( dragHandleElement );\n        }\n    };\n\n    /**\n     * Disable FillDown on cell element\n     *\n     * @param {DOMElement} cellElement - DOMElement for Cell\n     */\n    self.disableFillDown = function( cellElement ) {\n        var dragHandleElement = cellElement.getElementsByClassName( Const.CLASS_WIDGET_TABLE_CELL_DRAG_HANDLE )[ 0 ];\n        if( dragHandleElement ) {\n            cellElement.removeChild( dragHandleElement );\n        }\n    };\n\n    return self;\n}\n\nexport default SPLMTableFillDown;\n"]},"metadata":{},"sourceType":"module"}