{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwPrimaryWorkarea from'viewmodel/AwPrimaryWorkareaViewModel';import AwSplitter from'viewmodel/AwSplitterViewModel';import AwSecondaryWorkarea from'viewmodel/AwSecondaryWorkareaViewModel';import{ExistWhen,AwClass}from'js/hocCollection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DivExistWhenAwClass=AwClass(ExistWhen('div'));const AwSplitterExistWhen=ExistWhen(AwSplitter);/*\nctx imports\n*/const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('js/viewModeManagementService',()=>import('js/viewModeManagementService'));registerDynImportEntry('js/AwWorkareaService',()=>import('js/AwWorkareaService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"actions\":{\"initialize\":{\"actionType\":\"batchJob\",\"steps\":[{\"action\":\"populateSupportedViewModes\"},{\"action\":\"setViewMode\"}]},\"populateSupportedViewModes\":{\"actionType\":\"JSFunction\",\"method\":\"populateSupportedViewModes\",\"inputData\":{\"viewModes\":\"{{props.subPanelContext.viewModes}}\"},\"outputData\":{\"supportedViewModes\":\"\"},\"deps\":\"js/viewModeManagementService\"},\"setViewMode\":{\"actionType\":\"JSFunction\",\"method\":\"setViewMode\",\"inputData\":{\"viewModes\":\"{{data.supportedViewModes}}\",\"provider\":\"{{props.subPanelContext}}\"},\"deps\":\"js/viewModeManagementService\"},\"handleViewModechange\":{\"actionType\":\"JSFunctionAsync\",\"method\":\"handleViewModechange\",\"inputData\":{\"data\":\"{{data.supportedViewModes}}\",\"context\":\"{{props.subPanelContext}}\",\"viewModeKey\":\"{{data.eventMap['appCtx.register'].value.ViewModeContext}}\"},\"outputData\":{\"viewSuffix\":\"viewSuffix\",\"showSecondaryWorkArea\":\"showSecondaryWorkArea\"},\"deps\":\"js/viewModeManagementService\"},\"handleSelectionChange\":{\"actionType\":\"JSFunction\",\"method\":\"handleSelectionChange\",\"inputData\":{\"localSelectionData\":\"{{data.selectionData}}\",\"baseSelection\":\"{{props.baseSelection}}\",\"parentSelectionData\":\"{{props.selectionData}}\",\"dispatch\":\"{{data.dispatch}}\",\"primarySelection\":\"{{data.primarySelection}}\",\"sublocationState\":\"{{subPanelContext.pageContext.sublocationState}}\",\"parentSelectionModel\":\"{{props.selectionModel}}\",\"localSelectionModel\":\"{{selectionModels.nativeSelectionModel}}\"},\"deps\":\"js/AwWorkareaService\"},\"resetViewModes\":{\"actionType\":\"JSFunction\",\"method\":\"cleanupViewModeData\",\"deps\":\"js/AwWorkareaService\"}},\"data\":{\"selectionData\":{\"initialValues\":{},\"meta\":{}}},\"conditions\":{},\"lifecycleHooks\":{\"onMount\":\"initialize\",\"onUpdate\":[{\"action\":\"handleSelectionChange\",\"observers\":[\"viewModel.atomicData.selectionData\"]}],\"onUnmount\":\"resetViewModes\"},\"i18n\":{},\"props\":{\"sub-panel-context\":{\"type\":\"object\"},\"view\":{\"type\":\"string\"},\"selection-model\":{\"type\":\"object\"},\"base-selection\":{\"type\":\"object\"},\"selection-data\":{\"type\":\"object\"},\"is-horizontal-orientation\":{\"type\":\"object\"}},\"onEvent\":[{\"eventId\":\"appCtx.register\",\"condition\":\"name === 'ViewModeContext' && value.ViewModeContext && value.ViewModeContext !== 'None'\",\"action\":\"handleViewModechange\",\"cacheEventData\":true}],\"selectionModels\":{\"nativeSelectionModel\":{\"selectionMode\":\"{{subPanelContext.selectionMode || 'multiple' }}\"}},\"_viewModelId\":\"AwWorkarea\",\"_uniqueViewModelId\":\"AwWorkarea\",\"ctx\":{}};/*\n<div exist-when=\"props.subPanelContext.viewBase && props.viewModel.viewSuffix\"\n    aw-class=\"['aw-layout-primaryWorkarea',\n    {'sw-row h-6 w-12' : props.isHorizontalOrientation === true },\n    {'sw-column w-3':props.isHorizontalOrientation === false && ['table','tree'].indexOf(props.viewModel.viewSuffix) === -1},\n    {'aw-layout-primaryWorkareaLeft aw-layout-summaryList': props.viewModel.showSecondaryWorkArea === true && ['table','tree'].indexOf(props.viewModel.viewSuffix) === -1},\n    {'aw-layout-primaryWorkareaLeft aw-layout-summaryList aw-layout-tableSummaryList': props.viewModel.showSecondaryWorkArea === true && ['table','tree'].indexOf(props.viewModel.viewSuffix) !== -1},\n    {'aw-layout-flexRowContainer afx-alt-content-background aw-layout-primaryWorkareaLeft aw-layout-primaryWorkareaFill': props.viewModel.showSecondaryWorkArea === false}]\">\n    <aw-primary-workarea view-base=\"props.subPanelContext.viewBase\"\n        view=\"props.viewModel.viewSuffix\"\n        sub-panel-context=\"props.subPanelContext\"\n        selection-model=\"props.selectionModel || props.viewModel.selectionModels.nativeSelectionModel\"\n        selection-data=\"data.selectionData\">\n    </aw-primary-workarea>\n</div>\n<aw-splitter exist-when=\"props.viewModel.showSecondaryWorkArea\"\n    is-primary-splitter=\"true\"\n    direction=\"{{props.isHorizontalOrientation ? 'HORIZONTAL':''}}\">\n</aw-splitter>\n<div exist-when=\"props.viewModel.showSecondaryWorkArea\"\n    aw-class=\"[{'sw-row h-6':props.isHorizontalOrientation === true },\n    {'sw-column w-9':props.isHorizontalOrientation === false }]\">\n    <aw-secondary-workarea sub-panel-context=\"props.subPanelContext\"\n        base-selection=\"props.baseSelection\"\n        selection-data=\"data.selectionData\">\n    </aw-secondary-workarea>\n</div>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(DivExistWhenAwClass,{existWhen:AwParseService.instance(\"props.subPanelContext.viewBase && props.viewModel.viewSuffix\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),awClass:AwParseService.instance(\"['aw-layout-primaryWorkarea',    {'sw-row h-6 w-12' : props.isHorizontalOrientation === true },    {'sw-column w-3':props.isHorizontalOrientation === false && ['table','tree'].indexOf(props.viewModel.viewSuffix) === -1},    {'aw-layout-primaryWorkareaLeft aw-layout-summaryList': props.viewModel.showSecondaryWorkArea === true && ['table','tree'].indexOf(props.viewModel.viewSuffix) === -1},    {'aw-layout-primaryWorkareaLeft aw-layout-summaryList aw-layout-tableSummaryList': props.viewModel.showSecondaryWorkArea === true && ['table','tree'].indexOf(props.viewModel.viewSuffix) !== -1},    {'aw-layout-flexRowContainer afx-alt-content-background aw-layout-primaryWorkareaLeft aw-layout-primaryWorkareaFill': props.viewModel.showSecondaryWorkArea === false}]\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwPrimaryWorkarea,{viewBase:AwParseService.instance(\"props.subPanelContext.viewBase\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),view:AwParseService.instance(\"props.viewModel.viewSuffix\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),subPanelContext:AwParseService.instance(\"props.subPanelContext\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),selectionModel:AwParseService.instance(\"props.selectionModel || props.viewModel.selectionModels.nativeSelectionModel\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),selectionData:AwParseService.instance(\"fields.selectionData\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})}),/*#__PURE__*/_jsx(AwSplitterExistWhen,{isPrimarySplitter:\"true\",direction:AwParseService.instance(\"props.isHorizontalOrientation ? 'HORIZONTAL':''\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),existWhen:AwParseService.instance(\"props.viewModel.showSecondaryWorkArea\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})}),/*#__PURE__*/_jsx(DivExistWhenAwClass,{existWhen:AwParseService.instance(\"props.viewModel.showSecondaryWorkArea\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),awClass:AwParseService.instance(\"[{'sw-row h-6':props.isHorizontalOrientation === true },    {'sw-column w-9':props.isHorizontalOrientation === false }]\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwSecondaryWorkarea,{subPanelContext:AwParseService.instance(\"props.subPanelContext\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),baseSelection:AwParseService.instance(\"props.baseSelection\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),selectionData:AwParseService.instance(\"fields.selectionData\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})})})]});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,renderFn,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}