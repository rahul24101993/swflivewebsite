{"ast":null,"code":"import AwList from'viewmodel/AwListViewModel';import AwLinkPopupMenuItem from'viewmodel/AwLinkPopupMenuItemViewModel';import eventBus from'js/eventBus';import _ from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";const getDisplayText=displayProperty=>item=>{let result=item.propDisplayValue||item.staticDisplayValue;// case object has props\nif(item.props){let displayStr;if(displayProperty){displayStr=_.get(item,displayProperty);}else{displayStr=_.get(item.props,'object_string');}result=displayStr.uiValue;}return result;};export const awLinkPopupMenuRenderFunction=props=>{const{viewModel,ctxMin,actions,i18n,fields,grids,formProp,messages,...prop}=props;const{linkProp,dataProvider,options,linkPopup,propKey,displayProperty,updateCallback}=prop;const text=getDisplayText(displayProperty);// 1, set selection value back to awlink\n// 2, close popup\nconst selectionHandler=vmo=>{// if selected a different item, then set selection value back to awlink\nconst displayValue=vmo&&text(vmo);if(displayValue&&displayValue!==linkProp.fielddata[propKey]){// we don't need to cache title, it should always came from prop\n// update link display value\n// updateCallback( displayValue );\n// update linkProp\n// take care legacy\nconst lovEntry={propInternalValue:vmo.propInternalValue||vmo.staticInternalValue,propDisplayValue:displayValue};linkProp.setLovVal({lovEntry,dataProvider},'').then(linkProp.setLovVal({lovEntry,dataProvider},'validate'));}// why event? remove this in future\n// - dataProvider already have <dpName>.selectionChangeEvent\n// aw require a propertyName in their conditions\nlet propertyName=linkProp.name&&linkProp.name.split('.').pop();let property={propertyName,...vmo,dbValue:{...vmo}};if(displayProperty){const updatedprop=_.get(vmo,displayProperty);property={propertyName,...updatedprop,dbValue:{...vmo}};}var eventData={property,// previousSelect: $scope.previousSelect,\npropScope:vmo};eventBus.publish('awlinkPopup.selected',eventData);linkPopup.hide();};// ng-afx - link menu specific selection checker\n// dp use uid as selection checker\nconst selectionCheck=vmo=>{return text(vmo)===linkProp.fielddata[propKey];};const listOptions={selectionHandler,selectionCheck};const itemOptions=options;return/*#__PURE__*/_jsx(AwList,{dataprovider:dataProvider,listOptions:listOptions,itemOptions:itemOptions,children:/*#__PURE__*/_jsx(AwLinkPopupMenuItem,{text:text})});};","map":null,"metadata":{},"sourceType":"module"}