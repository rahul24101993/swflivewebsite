{"ast":null,"code":"// Copyright (c) 2020 Siemens\nimport _ from'lodash';import eventBus from'js/eventBus';import fileSvc from'js/awFileService';import AwFileUploadLabel from'viewmodel/AwFileUploadLabelViewModel';import AwPopup from'viewmodel/AwPopupViewModel';import AwPic from'viewmodel/AwPicViewModel';import domUtils from'js/domUtils';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const domApis=domUtils.DOMAPIs;var fileLabelElement;var fileNameElement;var fileNameElementAfterFileUploaded;var classesForFileLabelElementFocus=['aw-file-uploadFocus','aw-file-uploadFileLabelFocus'];var classesForFileNameElementFocus=['aw-file-uploadFocus','aw-file-uploadFileNameFocus'];const addStyleToElem=elem=>{elem.classList.add('aw-widgets-dropframe');elem.classList.add('aw-theme-dropframe');};const removeStyleFromElem=elem=>{elem.classList.remove('aw-widgets-dropframe');elem.classList.remove('aw-theme-dropframe');};const highlightWidget=eventData=>{if(!_.isUndefined(eventData)&&!_.isUndefined(eventData.targetElement)&&eventData.targetElement.classList){let isHighlightFlag=eventData.isHighlightFlag;let target=eventData.targetElement;if(target.classList.contains('aw-widgets-chooseordropfile')){if(isHighlightFlag){addStyleToElem(target);}else{removeStyleFromElem(target);}}}};export const handleViewFileSelection=function(props,data){const{dispatch}=data;const{selectionData}=props;if(selectionData.value&&selectionData.value.files){const updatedFileChosen={now:true,uploadModelProviderSelected:true,_attachedFiles:selectionData.value.files};dispatch({path:'data.fileChosen',value:updatedFileChosen});}};export const awFileUploadRenderFunction=_ref=>{let{viewModel,i18n,removeTooltip,fileChangeAction,typeFilter,multiple,dndHandler,formData,chooseFileName,uploadModel,selectionData,actions,elementRefList}=_ref;let{providerPopup,customViewPopup}=actions;const{data,dispatch}=viewModel;const providerPopupRef=elementRefList.get('providerPopupRef');const customViewPopupRef=elementRefList.get('customViewPopupRef');if(uploadModel&&uploadModel.length>1){uploadModel=_.sortBy(uploadModel,['priority']);}let attachedFiles;let attachedFile=[];if(formData instanceof FormData){for(var value of formData.values()){attachedFile.push(value);}}if(!multiple&&formData instanceof FormData&&attachedFile.length>0){attachedFiles=formData;data.fileChosen.now=true;let fileExt=fileSvc.getFileExtension(attachedFile[0].name);if(fileExt!==''){fileExt=_.replace(fileExt,'.','');}let validFile=fileSvc.fileMatchTypes(typeFilter,fileExt);if(!validFile){eventBus.publish('invalidFileSelected',{});dispatch({path:'data.fileChosen',value:{now:false,uploadModelProviderSelected:false}});}}else{attachedFiles=data.fileChosen._attachedFiles?data.fileChosen._attachedFiles:new FormData();}data.fileChosen._attachedFiles=attachedFiles;// ChangeEvent<HTMLInputElement>\nconst updateData=(files,isAppend)=>{let validFile=true;if(files.length>0){let fileNames=[];let fileNameNoExts=[];let fileExts=[];let fileInputForms=[];files.forEach(fileItem=>{let fileName=fileItem.name;let fileNameNoExt=fileSvc.getFileNameWithoutExtension(fileName);let fileExt=fileSvc.getFileExtension(fileName);if(fileExt!==''){fileExt=_.replace(fileExt,'.','');}validFile=fileSvc.fileMatchTypes(typeFilter,fileExt);fileNames.push(fileName);fileNameNoExts.push(fileNameNoExt);fileExts.push(fileExt);fileInputForms.push({selectedFile:fileName,file:fileItem});});if(!multiple){if(!validFile){eventBus.publish('invalidFileSelected',{});dispatch({path:'data.fileChosen',value:{now:false,uploadModelProviderSelected:false}});}data.formData=new FormData();data.formData.append('fmsFile',files[0]);data.fileInputForms=data.formData;data.fileName=fileNames[0];data.fileNameNoExt=fileNameNoExts[0];data.fileExt=fileExts[0];}else{data.fileName=data.fileName&&isAppend?[...data.fileName,...fileNames]:fileNames;data.fileNameNoExt=data.fileNameNoExt&&isAppend?[...data.fileNameNoExt,...fileNameNoExts]:fileNameNoExts;data.fileExt=data.fileExt&&isAppend?[...data.fileExt,...fileExts]:fileExts;data.fileInputForms=data.fileInputForms&&isAppend?[...fileInputForms,...data.fileInputForms]:fileInputForms;}data.validFile=validFile;data.fileChosen.now=true;if(validFile&&data.fileChosen.uploadModelProviderSelected){attachedFiles=new FormData();}dispatch({path:'data.fileChosen',value:{now:true,uploadModelProviderSelected:false}});const fileInfo={fileName:data.fileName,fileNameNoExt:data.fileNameNoExt,validFile:data.validFile,fileExt:data.fileExt,formData:data.fileInputForms};// call action when file selection changed, inputData : {{ data.formData}}\nif(fileChangeAction){fileChangeAction(fileInfo);}if(selectionData){// Required model info & file info updates\nconst updateInfo=selectionData.value;updateInfo.selectedFileInfo=fileInfo;if(_.isEmpty(updateInfo.modelInfo)&&uploadModel&&uploadModel.length>0){updateInfo.modelInfo=uploadModel[0];}selectionData.update(updateInfo);}}else{const fileInfo={fileName:undefined,fileNameNoExt:undefined,validFile:undefined,fileExt:undefined,formData:undefined};if(fileChangeAction){fileChangeAction(fileInfo);}if(selectionData){// Required model info & file info updates\nconst updateInfo=selectionData.value;updateInfo.modelInfo=undefined;updateInfo.selectedFileInfo=fileInfo;selectionData.update(updateInfo);}}return validFile;};let typesSet=null;if(typeFilter&&'*'!==typeFilter&&'.'!==typeFilter){typesSet=new Set(typeFilter.split(',').map(item=>{const validFileExt=item.trim();return _.replace(validFileExt.toLowerCase(),'.','');}));}const allFileMatchTypes=items=>{if(!typesSet){return true;}let allMatched=true;const fileItemsArray=Array.from(items);fileItemsArray.forEach(fileItem=>{let fileExt=fileSvc.getFileExtension(fileItem.name);if(fileExt!==''){fileExt=_.replace(fileExt,'.','');}if(!typesSet.has(fileExt.toLowerCase())){allMatched=false;}});return allMatched;};// ChangeEvent<HTMLInputElement>\nconst handleFileChange=e=>{const files=e.target.files;let filesArr=Array.from(files);updateAttachedFiles(filesArr);e.target.value='';};// ClickEvent<HTMLInputElement>\nconst handleClick=e=>{if(uploadModel){let providerPopupToDisplay=true;// By default if there is a single configuration without popupViewId then the local file selection is invoked.\nif(uploadModel.length===1&&!uploadModel[0].popupViewId){providerPopupToDisplay=false;if(selectionData){// Required model info update\nselectionData.value.modelInfo=uploadModel[0];}}if(providerPopupToDisplay){const inputElement=providerPopupRef.current;const isUploadModelOptionClick=inputElement.getAttribute('isUploadModelOptionClick');if(!isUploadModelOptionClick){e.preventDefault();// case click or enter\nproviderPopup.show({reference:inputElement,width:inputElement.offsetWidth,className:'sw-lov-popup'});}else{domApis.removeAttribute(inputElement,'isUploadModelOptionClick');providerPopup.hide();}}}};const handleUploadModelOptionSelect=(e,model)=>{if(model.name&&model.popupViewId){e.preventDefault();customViewPopup.show({reference:customViewPopupRef.current,view:model.popupViewId,subPanelContext:{selectionData:selectionData,...model},caption:model.caption});providerPopup.hide();}else{if(selectionData){// Required model info update\nselectionData.value.modelInfo=model;}const inputElement=providerPopupRef.current;domApis.setAttribute(inputElement,'isUploadModelOptionClick',true);inputElement.click();}};// KeyDownEvent<HTMLInputElement>\nconst handleUploadModelOptionKeyDown=(e,optionName)=>{if(e.key&&(e.key==='Enter'||e.key===' ')){handleUploadModelOptionSelect(e,optionName);}};const isFileUploadWidgetFocused=()=>{let fileInputElement=document.getElementsByClassName('aw-file-upload-fileInput');if(fileInputElement&&fileInputElement.length>0){return document.activeElement===fileInputElement[0];}return false;};const handleFocus=()=>{fileLabelElement=document.getElementsByClassName('aw-file-upload-fileLabel');if(fileLabelElement&&fileLabelElement.length>0){fileLabelElement[0].classList.add(...classesForFileLabelElementFocus);}fileNameElement=document.getElementsByClassName('aw-file-upload-fileName');if(fileNameElement&&fileNameElement.length>0){fileNameElement[0].classList.add(...classesForFileNameElementFocus);}};const handleBlur=()=>{if(fileLabelElement&&fileLabelElement.length>0){fileLabelElement[0].classList.remove(...classesForFileLabelElementFocus);}if(fileNameElement&&fileNameElement.length>0){fileNameElement[0].classList.remove(...classesForFileNameElementFocus);}fileNameElementAfterFileUploaded=document.getElementsByClassName('file-upload-selected-file');if(fileNameElementAfterFileUploaded&&fileNameElementAfterFileUploaded.length>0){fileNameElementAfterFileUploaded[0].classList.remove(...classesForFileNameElementFocus);}};const getClassesAfterFileUpload=()=>{if(isFileUploadWidgetFocused()){return'aw-file-upload-fileName '.concat('file-upload-selected-file ').concat('aw-file-uploadFocus ').concat('aw-file-uploadFileNameFocus');}return'aw-file-upload-fileName '.concat('file-upload-selected-file');};const refreshFileListInfo=isChosen=>{dispatch({path:'data.fileChosen',value:{now:isChosen,uploadModelProviderSelected:false,_attachedFiles:attachedFiles}});};// Deletes file from attachedFiles list\nconst deleteFile=name=>{let fileNames=data.fileName;if(_.isArray(fileNames)){let indxToRemove=fileNames.indexOf(name);data.fileName.splice(indxToRemove,1);data.fileNameNoExt.splice(indxToRemove,1);data.fileInputForms.splice(indxToRemove,1);data.fileExt.splice(indxToRemove,1);}attachedFiles.delete(name);};/**\n     * @param { File[] } files - files\n     * @return {File[] } resultFiles\n     */const filterTypes=function(files){let allMatchedType=true;if(!typesSet){return files;}const resultFiles=files.filter(file=>{const fileTypes=file.name.split('.');// in case of 1.x.dat\nconst fileType=fileTypes[fileTypes.length-1];if(!multiple||typesSet.has(fileType)){return true;}allMatchedType=false;return false;});if(!allMatchedType){eventBus.publish('invalidFileSelected',{});}return resultFiles;};/**\n     *\n     * @param { File[] } filesArray - array of files to be uploaded\n     * @param { Boolean } isAppend - isAppend\n     */const updateAttachedFiles=function(filesArray){let isAppend=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;updateData(filesArray,isAppend);const typeFilterFiles=filterTypes(filesArray);if(!multiple&&typeFilterFiles.length>0){//If single mode and typeFilterFiles are valid , delete existing file before updating\nfor(var file of attachedFiles.values()){deleteFile(file.name);}}typeFilterFiles.forEach(file=>{attachedFiles.set(file.name,file);});refreshFileListInfo(true);};const handleImplicitFilesAttachment=e=>{if(fileSvc.dataTransferContainsFiles(e)&&allFileMatchTypes(e.dataTransfer.files)){const filesArray=Array.from(e.dataTransfer.files);updateAttachedFiles(filesArray);}};const callbackAPIs={highlightTarget:highlightWidget,updateFileData:handleImplicitFilesAttachment,getTargetElementAndVmo:event=>{let targetVMO=null;let target=event.currentTarget;return{targetElement:target,targetVMO:targetVMO};}};//DragEvent<HTMLElement>\nconst handleDrop=e=>{let targetEle=e.currentTarget;// logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n// hence NOT leaving it to contributed handlers to implement it\nremoveStyleFromElem(targetEle);if(e.dataTransfer){e.dataTransfer.dropEffect='none';e.preventDefault();}handleDrag(false);if(dndHandler&&dndHandler[e.type]){let fun=dndHandler[e.type];fun(e,{targetElement:targetEle,targetVMO:null},callbackAPIs);}else{handleImplicitFilesAttachment(e);}};const handleClickDeselect=(e,name)=>{if(!data.fileChosen.uploadModelProviderSelected){e.preventDefault();deleteFile(name);updateAttachedFiles(getAttachedFiles(),false);}else{const currentAttachedFiles=data.fileChosen._attachedFiles;const index=currentAttachedFiles.findIndex(file=>file.name===name);currentAttachedFiles.splice(index,1);if(currentAttachedFiles.length===0){updateData([],false);}dispatch({path:'data.fileChosen',value:{now:true,uploadModelProviderSelected:true,_attachedFiles:currentAttachedFiles}});}};const getAttachedFiles=()=>{let attachedFileArray=[];for(var value of attachedFiles.values()){attachedFileArray.push(value);}return attachedFileArray;};// set Dragger highlight when over: boolean\nconst handleDrag=over=>{dispatch({path:'data.isDragOn',value:over});};const fileDragOver=e=>{let targetEle=e.currentTarget;// logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n// hence NOT leaving it to contributed handlers to implement it\naddStyleToElem(targetEle);e.preventDefault();e.stopPropagation();if(dndHandler&&dndHandler[e.type]){let fun=dndHandler[e.type];fun(e,{targetElement:targetEle,targetVMO:null},callbackAPIs);}};// clear the drag style after drop or drop leave\n/**\n     * @param {DragEvent<HtmlElement>} e : the drag event\n     */const fileDragLeave=e=>{let targetEle=e.currentTarget;// logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n// hence NOT leaving it to contributed handlers to implement it\nremoveStyleFromElem(targetEle);if(e.dataTransfer){e.dataTransfer.dropEffect='none';e.preventDefault();}handleDrag(false);if(dndHandler&&dndHandler[e.type]){let fun=dndHandler[e.type];fun(e,{targetElement:targetEle,targetVMO:null},callbackAPIs);}};let filesToDisp=getAttachedFiles();return/*#__PURE__*/_jsxs(\"div\",{className:\"aw-file-upload-container aw-file-upload-initial aw-widgets-chooseordropfile\",onDragOver:e=>fileDragOver(e),onDragLeave:e=>{fileDragLeave(e);},onDrop:handleDrop,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sw-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aw-file-upload-fileLabel\",ref:customViewPopupRef,children:[\"  \",chooseFileName?chooseFileName:i18n.ChooseFile,\" \"]}),filesToDisp&&filesToDisp.length===0&&!multiple&&/*#__PURE__*/_jsxs(\"div\",{className:\"aw-file-upload-fileName\",children:[\" \",i18n.singleUpload,\" \"]}),multiple&&/*#__PURE__*/_jsxs(\"div\",{className:\"aw-file-upload-fileName\",children:[\" \",i18n.multipleUpload,\" \"]}),filesToDisp&&filesToDisp.length>0&&data.fileChosen.now&&!multiple&&/*#__PURE__*/_jsx(\"div\",{onDrop:handleDrop,className:getClassesAfterFileUpload(),children:/*#__PURE__*/_jsx(AwFileUploadLabel,{removeTooltip:removeTooltip,item:filesToDisp[0],removeFileHandler:handleClickDeselect},filesToDisp[0].name)}),/*#__PURE__*/_jsx(\"input\",{ref:providerPopupRef,\"data-locator\":\"aw-fileUpload\",multiple:multiple,className:\"aw-file-upload-fileInput\",type:\"file\",accept:typeFilter,onChange:handleFileChange,onClick:handleClick,title:filesToDisp&&filesToDisp[0]&&filesToDisp[0].name,onFocus:handleFocus,onBlur:handleBlur}),providerPopup.open&&/*#__PURE__*/_jsx(AwPopup,{...providerPopup.options,children:/*#__PURE__*/_jsx(\"div\",{className:\"aw-base-scrollPanel\",children:/*#__PURE__*/_jsx(\"ul\",{role:\"listbox\",tabIndex:0,className:\"sw-column\",children:uploadModel.map(model=>{return/*#__PURE__*/_jsx(\"li\",{role:\"option\",\"aria-selected\":\"false\",tabIndex:-1,onClick:e=>handleUploadModelOptionSelect(e,model),onKeyDown:e=>handleUploadModelOptionKeyDown(e,model.name),children:/*#__PURE__*/_jsx(\"div\",{className:\"sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sw-row sw-component\",children:[/*#__PURE__*/_jsx(AwPic,{className:\"aw-widget-thumbnail\",iconId:model.iconName,source:model.iconName}),/*#__PURE__*/_jsx(\"div\",{className:\"sw-cell-valName\",title:model.name,children:model.name})]})})},model.name);})})})}),customViewPopup.open&&/*#__PURE__*/_jsx(AwPopup,{...customViewPopup.options})]}),multiple&&filesToDisp&&filesToDisp.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"aw-upload-list-items\",children:filesToDisp.map(item=>{return/*#__PURE__*/_jsx(\"li\",{className:\"sw-flex-row\",children:/*#__PURE__*/_jsx(AwFileUploadLabel,{removeTooltip:removeTooltip,item:item,removeFileHandler:handleClickDeselect})},item.name);})})]});};","map":null,"metadata":{},"sourceType":"module"}