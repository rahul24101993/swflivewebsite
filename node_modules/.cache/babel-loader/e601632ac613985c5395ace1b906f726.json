{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyNonEditOverflowArrayValService.js\";\nimport { noop } from 'js/declUtils';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwStateService from 'js/awStateService';\nimport { getCompClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderDisplayValList = (displayNode, index, prop, dispatcher, fitIndex) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"aw-jswidgets-arrayValueOverflowCellListItem\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-propertyNonEditValue\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: noop,\n        className: \"aw-widgets-propertyValueLink\",\n        onClick: () => {\n          openObjectLinkPage(index, prop, dispatcher);\n        },\n        children: displayNode.displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), index < fitIndex - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \",\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderObjectLinkFromOverflowList = (displayNode, index, prop, dispatcher) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"aw-widgets-cellListItem aw-widgets-cellTop\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: noop,\n      className: \"aw-jswidgets-arrayValueOverflowCellListItem\",\n      onClick: () => {\n        openObjectLinkPage(index, prop, dispatcher);\n      },\n      children: displayNode.displayValue + ',&nbsp;'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\nexport const awPropertyNonEditOverflowArrayValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  let {\n    dispatch\n  } = viewModel;\n  let availableWidth = '100%';\n  let stringValue = '';\n  let overflowIndex = 0;\n  let fitIndex = prop.fielddata.displayValsModel.length || 0;\n  let iconClass = viewModel.isClicked ? 'aw-jswidget-controlArrow aw-jswidget-controlArrowRotateRight' : 'aw-jswidget-controlArrow';\n  let displayValueClass = viewModel.isClicked ? 'aw-layout-overflowPopupCellist aw-layout-popup afx-content-background aw-base-scrollPanel' : 'hidden';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCompClass('aw-layout-fxbreadCrumbs', props),\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"aw-jswidgets-arrayNonEditValueOverflowCellList sw-property-val\",\n        children: prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map((displayNode, index) => renderDisplayValList(displayNode, index, prop, dispatch, fitIndex))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), viewModel.isOverflow && /*#__PURE__*/_jsxDEV(AwIcon, {\n        onClick: e => {\n          openOverflowPopup(e, viewModel);\n        },\n        className: iconClass,\n        iconId: \"miscChevronRight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), prop.type !== 'OBJECT' && prop.type !== 'OBJECTARRAY' && stringValue !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-widgets-propertyNonEditValue\",\n        style: {\n          width: availableWidth\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-jswidget-textOverflow\",\n          title: stringValue,\n          children: stringValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: displayValueClass,\n      style: {\n        left: viewModel.leftPosition\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-widgets-cellListWidgetContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"aw-widgets-cellListWidget\",\n          children: prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map((displayNode, index) => {\n            if (index >= overflowIndex) {\n              return renderObjectLinkFromOverflowList(displayNode, index, prop, dispatch);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nconst openObjectLinkPage = (index, prop, dispatcher) => {\n  let uiProperty = { ...prop\n  };\n  let uid = uiProperty.value[index];\n  var toParams = {\n    uid: uid\n  };\n  var options = {\n    inherit: false\n  };\n  AwStateService.instance.go('com_siemens_splm_clientfx_tcui_xrt_showObject', toParams, options);\n  dispatcher({\n    path: 'data.isClicked',\n    value: false\n  });\n};\n\nconst openOverflowPopup = (event, viewModel) => {\n  event.stopPropagation();\n  let data = { ...viewModel.getData()\n  };\n  data.leftPosition = event.clientX;\n  data.isClicked = !data.isClicked;\n  viewModel.dispatch({\n    path: 'data',\n    value: { ...data\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyNonEditOverflowArrayValService.js"],"names":["renderDisplayValList","openObjectLinkPage","displayNode","displayValue","index","fitIndex","renderObjectLinkFromOverflowList","awPropertyNonEditOverflowArrayValRenderFunction","props","prop","dispatch","availableWidth","stringValue","overflowIndex","iconClass","viewModel","displayValueClass","getCompClass","e","openOverflowPopup","width","left","leftPosition","uiProperty","uid","toParams","options","inherit","AwStateService","dispatcher","path","value","event","data"],"mappings":"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","sourcesContent":["import { noop } from 'js/declUtils';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwStateService from 'js/awStateService';\nimport { getCompClass } from 'js/componentUtils';\n\nconst renderDisplayValList = ( displayNode, index, prop, dispatcher, fitIndex ) => {\n    return (\n        <li className='aw-jswidgets-arrayValueOverflowCellListItem' key={index}>\n            <div className='aw-widgets-propertyNonEditValue'>\n                <a href={noop}\n                    className='aw-widgets-propertyValueLink'\n                    onClick={()=>{ openObjectLinkPage( index, prop, dispatcher ); }}\n                >\n                    {displayNode.displayValue}\n                </a>\n                {\n                    index < fitIndex - 1 &&\n                        <div>,&nbsp;</div>\n                }\n            </div>\n        </li>\n    );\n};\n\nconst renderObjectLinkFromOverflowList = ( displayNode, index, prop, dispatcher ) => {\n    return (\n        <li className='aw-widgets-cellListItem aw-widgets-cellTop' key={index}>\n            <a href={noop}\n                className='aw-jswidgets-arrayValueOverflowCellListItem'\n                onClick={()=>{ openObjectLinkPage( index, prop, dispatcher ); }}\n            >\n                {displayNode.displayValue + ',&nbsp;'}\n            </a>\n        </li>\n    );\n};\n\nexport const awPropertyNonEditOverflowArrayValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    let { dispatch } = viewModel;\n    let availableWidth = '100%';\n    let stringValue = '';\n    let overflowIndex = 0;\n    let fitIndex = prop.fielddata.displayValsModel.length || 0;\n    let iconClass = viewModel.isClicked ? 'aw-jswidget-controlArrow aw-jswidget-controlArrowRotateRight' : 'aw-jswidget-controlArrow';\n    let displayValueClass = viewModel.isClicked ? 'aw-layout-overflowPopupCellist aw-layout-popup afx-content-background aw-base-scrollPanel' : 'hidden';\n    return (\n        <div>\n            <div className={getCompClass( 'aw-layout-fxbreadCrumbs', props )}>\n                <ul className='aw-jswidgets-arrayNonEditValueOverflowCellList sw-property-val'>\n                    {\n                        prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map( ( displayNode, index ) =>\n                            renderDisplayValList( displayNode, index, prop, dispatch, fitIndex )\n                        )\n                    }\n                </ul>\n                {\n                    viewModel.isOverflow &&\n                <AwIcon onClick={( e )=>{ openOverflowPopup( e, viewModel ); }} className={iconClass} iconId='miscChevronRight'></AwIcon>\n                }\n                {\n                    prop.type !== 'OBJECT' && prop.type !== 'OBJECTARRAY' && stringValue !== '' &&\n                <div className='aw-widgets-propertyNonEditValue' style={{ width: availableWidth }}>\n                    <div className='aw-jswidget-textOverflow' title={stringValue}>\n                        {stringValue}\n                    </div>\n                </div>\n                }\n            </div>\n            <div className={displayValueClass} style={{ left: viewModel.leftPosition }}>\n                <div className='aw-widgets-cellListWidgetContainer'>\n                    <ul className='aw-widgets-cellListWidget'>\n                        {\n                            prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map( ( displayNode, index ) => {\n                                if( index >= overflowIndex ) {\n                                    return renderObjectLinkFromOverflowList( displayNode, index, prop, dispatch );\n                                }\n                            } )\n                        }\n                    </ul>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nconst openObjectLinkPage = ( index, prop, dispatcher ) => {\n    let uiProperty = { ...prop };\n    let uid = uiProperty.value[ index ];\n    var toParams = {\n        uid: uid\n    };\n    var options = {\n        inherit: false\n    };\n\n    AwStateService.instance.go( 'com_siemens_splm_clientfx_tcui_xrt_showObject', toParams, options );\n    dispatcher( { path: 'data.isClicked', value: false } );\n};\n\nconst openOverflowPopup = ( event, viewModel ) => {\n    event.stopPropagation();\n    let data = { ...viewModel.getData() };\n    data.leftPosition = event.clientX;\n    data.isClicked = !data.isClicked;\n    viewModel.dispatch( { path: 'data', value: { ...data } } );\n};\n"]},"metadata":{},"sourceType":"module"}