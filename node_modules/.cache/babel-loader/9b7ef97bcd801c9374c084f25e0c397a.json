{"ast":null,"code":"/* eslint-disable complexity */\n// Copyright (c) 2020 Siemens\nimport { interopES6Default } from './utils';\nimport { registerDynImportEntry } from 'js/moduleLoader';\n/**\n * parse return value webpack.require.context to module object array\n * @param {Array} imports module structure return by webpack.require.context API\n * @returns {Object} module object array\n */\n\nconst parseImports = imports => imports.reduce((res, m) => res.concat(m.keys().map(path => ({\n  name: path,\n  loadFn: async () => interopES6Default(await m(path))\n}))), []);\n/**\n * property policy loader\n *\n * @module js/propertyPolicyLoaderService\n *\n * @namespace viewModelLoader\n */\n\n\nconst init = () => {\n  // this method will be used by build time injected code\n  const registerPropertyPolicies = imports => {\n    const modules = parseImports(imports);\n    modules.forEach(m => {\n      // register for with file name extension use case \"policies/favoritesLocationPropertyPolicy.json\"\n      const moduleName1 = m.name.replace(/^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)/, '$1');\n      registerDynImportEntry(moduleName1, m.loadFn); // register for without file name extension use case \"policies/favoritesLocationPropertyPolicy\"\n\n      const moduleName2 = m.name.replace(/^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)\\.json$/, '$1');\n      registerDynImportEntry(moduleName2, m.loadFn);\n    });\n  }; // AFX_PROPERTY_POLICY_REGISTRATION\n\n\n  registerPropertyPolicies([require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src', true, /(gaps|appbootstrap|config|services|kernel|declreact|layout|noty|popup|popuplegacy|pltable|propertyrender|uielements|uiwidget|declarativeui|ui|plstats|components|pagelevelcomponents|commonframe|command|i18n|tile|searchcore)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy'), require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/src', true, /(helloModule|solution)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy')]);\n}; // pre-load property policy for dynamic import\n\n\ninit();","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/config/src/js/propertyPolicyLoaderService.js"],"names":["parseImports","imports","path","name","loadFn","interopES6Default","m","init","registerPropertyPolicies","modules","moduleName1","registerDynImportEntry","moduleName2","require"],"mappings":"AAAA;AACA;AAEA,SAAA,iBAAA,QAAA,SAAA;AACA,SAAA,sBAAA,QAAA,iBAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMA,YAAY,GAAGC,OAAO,IAAI,OAAO,CAAP,MAAA,CAAgB,CAAA,GAAA,EAAA,CAAA,KAC5C,GAAG,CAAH,MAAA,CAAY,CAAC,CAAD,IAAA,GAAA,GAAA,CAAcC,IAAI,KAAM;EAChCC,IAAI,EAD4B,IAAA;EAEhCC,MAAM,EAAE,YAAYC,iBAAiB,CAAE,MAAMC,CAAC,CAAT,IAAS,CAAT;AAFL,CAAN,CAAlB,CAAZ,CAD4B,EAAhC,EAAgC,CAAhC;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAG,MAAM;EACf;EACA,MAAMC,wBAAwB,GAAKP,OAAF,IAAe;IAC5C,MAAMQ,OAAO,GAAGT,YAAY,CAA5B,OAA4B,CAA5B;IACAS,OAAO,CAAPA,OAAAA,CAAmBH,CAAF,IAAS;MACtB;MACA,MAAMI,WAAW,GAAGJ,CAAC,CAADA,IAAAA,CAAAA,OAAAA,CAAAA,+CAAAA,EAApB,IAAoBA,CAApB;MACAK,sBAAsB,CAAA,WAAA,EAAeL,CAAC,CAHhB,MAGA,CAAtBK,CAHsB,CAItB;;MACA,MAAMC,WAAW,GAAGN,CAAC,CAADA,IAAAA,CAAAA,OAAAA,CAAAA,sDAAAA,EAApB,IAAoBA,CAApB;MACAK,sBAAsB,CAAA,WAAA,EAAeL,CAAC,CAAtCK,MAAsB,CAAtBA;IANJF,CAAAA;EAJW,CAEf,CAFe,CAaf;;;EACAD,wBAAwB,CAAE,CACtBK,OAAO,CAAPA,OAAAA,CAAAA,uFAAAA,EAAAA,IAAAA,EAAAA,oSAAAA,EADsB,MACtBA,CADsB,EACsYA,OAAO,CAAPA,OAAAA,CAAAA,gEAAAA,EAAAA,IAAAA,EAAAA,4FAAAA,EADhaL,MACgaK,CADtY,CAAF,CAAxBL;AAdJ,CAAA,C,CAmBA;;;AACAD,IAAI","sourcesContent":["/* eslint-disable complexity */\n// Copyright (c) 2020 Siemens\n\nimport { interopES6Default } from './utils';\nimport { registerDynImportEntry } from 'js/moduleLoader';\n\n/**\n * parse return value webpack.require.context to module object array\n * @param {Array} imports module structure return by webpack.require.context API\n * @returns {Object} module object array\n */\nconst parseImports = imports => imports.reduce( ( res, m ) =>\n    res.concat( m.keys().map( path => ( {\n        name: path,\n        loadFn: async () => interopES6Default( await m( path ) )\n    } ) ) ), [] );\n\n/**\n * property policy loader\n *\n * @module js/propertyPolicyLoaderService\n *\n * @namespace viewModelLoader\n */\nconst init = () => {\n    // this method will be used by build time injected code\n    const registerPropertyPolicies = ( imports ) => {\n        const modules = parseImports( imports );\n        modules.forEach( ( m ) => {\n            // register for with file name extension use case \"policies/favoritesLocationPropertyPolicy.json\"\n            const moduleName1 = m.name.replace( /^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)/, '$1' );\n            registerDynImportEntry( moduleName1, m.loadFn );\n            // register for without file name extension use case \"policies/favoritesLocationPropertyPolicy\"\n            const moduleName2 = m.name.replace( /^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)\\.json$/, '$1' );\n            registerDynImportEntry( moduleName2, m.loadFn );\n        } );\n    };\n    // AFX_PROPERTY_POLICY_REGISTRATION\n    registerPropertyPolicies( [\n        require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src',true,/(gaps|appbootstrap|config|services|kernel|declreact|layout|noty|popup|popuplegacy|pltable|propertyrender|uielements|uiwidget|declarativeui|ui|plstats|components|pagelevelcomponents|commonframe|command|i18n|tile|searchcore)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy' ),require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/src',true,/(helloModule|solution)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy' )\n    ] );\n};\n\n// pre-load property policy for dynamic import\ninit();\n"]},"metadata":{},"sourceType":"module"}