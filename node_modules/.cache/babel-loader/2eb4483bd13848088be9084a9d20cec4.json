{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyArrayValService.js\",\n    _s = $RefreshSig$(); // Copyright (c) 2021 Siemens\n\n/* eslint-disable react-hooks/rules-of-hooks */\n\n\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPropertyArrayEditVal from 'viewmodel/AwPropertyArrayEditValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwRadioButtonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwCheckboxVal from 'viewmodel/AwCheckboxValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport { useState } from 'react';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const onMount = elementRefList => {\n  //WCAG keyboard handling\n  const list = new ariaList();\n  let ul = elementRefList.get('arrayVal').current;\n\n  if (!ul) {\n    return;\n  }\n\n  var obj = {\n    setAriaAttributes: false,\n    autoScroll: false,\n    listSelector: '.aw-jswidgets-arrayValueCellListItem'\n  };\n  let childSelector = 'option';\n  list.init(ul, obj, childSelector);\n};\n\nconst focusOnSiblingLi = action => {\n  //manage focus & tabindex on moveUp/moveDown Command.\n  let li = document.querySelector('li.aw-state-selected');\n\n  if (li) {\n    li.setAttribute('tabindex', -1);\n    let siblingToFocus;\n\n    if (action === 'Move Up') {\n      siblingToFocus = li.previousElementSibling;\n    } else if (action === 'Move Down') {\n      siblingToFocus = li.nextElementSibling;\n    }\n\n    if (siblingToFocus) {\n      siblingToFocus.focus();\n      siblingToFocus.setAttribute('tabindex', 0);\n    } else {\n      //if no focusable sibling focus on current selected\n      li.focus();\n      li.setAttribute('tabindex', 0);\n    }\n  }\n};\n\nconst focusRequiredElement = (prop, event) => {\n  if ((event.target.type === 'button' || event.currentTarget.type === 'button') && event.currentTarget.attributes.title) {\n    let operation = event.currentTarget.attributes.title.value;\n\n    switch (operation) {\n      case 'Move Up':\n      case 'Move Down':\n        focusOnSiblingLi(operation);\n        break;\n\n      case 'Remove':\n        {\n          //set tabIndex of parent ul to 0 since no active tabIndex left after removal\n          let locator = `[data-locator='${prop.label}']`;\n          let inputEle = document.querySelector(`input${locator},textarea${locator}`);\n\n          if (inputEle && inputEle.previousElementSibling !== null) {\n            let ulEle = inputEle.previousElementSibling.firstElementChild;\n\n            if (ulEle !== null) {\n              propArrayLength(prop) > 0 ? ulEle.setAttribute('tabIndex', '0') : ulEle.setAttribute('tabIndex', '-1');\n            }\n          } // focus on input box once li element removed\n\n\n          inputEle && inputEle.focus();\n          break;\n        }\n    }\n  }\n};\n\nconst isLiItemSelected = event => {\n  return event.currentTarget.classList.contains('aw-state-selected');\n};\n\nconst propArrayLength = prop => prop.fielddata.displayValsModel.length;\n\nconst handleClick = (prop, event) => {\n  let isAnyValueSelected = false;\n\n  if (prop.fielddata.displayValsModel) {\n    for (var j = 0; j < propArrayLength(prop); j++) {\n      if (prop.fielddata.displayValsModel[j].selected && prop.fielddata.displayValsModel[j].isInEditMode) {\n        isAnyValueSelected = true;\n        break;\n      }\n    }\n  }\n\n  if (!isAnyValueSelected) {\n    event.preventDefault();\n    prop.onClick(event);\n  }\n\n  focusRequiredElement(prop, event);\n};\n\nconst handleKeyDown = (prop, event) => {\n  if (wcagSvc.isValidKeyPress(event, true)) {\n    handleClick(prop, event);\n  }\n};\n\nconst handleBlur = (prop, event) => {\n  event.isBlurFromInput = true;\n  prop.onBlur(event);\n};\n\nconst handleKeyPress = (prop, event) => {\n  if (event.key === 'Enter') {\n    event.updateArray = true;\n    event.preventDefault();\n    prop.onChange(event); // revisitme: what is the bext way to clear widget\n\n    event.target.value = '';\n  }\n};\n\nconst renderPropertyEditMode = (prop, displayValue, index) => {\n  if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex !== 'DATEARRAY' && prop.typex !== 'BOOLEANARRAY') {\n    // eslint-disable-next-line jsx-a11y/no-autofocus\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyPress: event => handleKeyPress(prop, event),\n      onBlur: event => handleBlur(prop, event),\n      id: index,\n      defaultValue: displayValue,\n      autoFocus: true,\n      className: \"aw-jswidgets-arrayValue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 16\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'DATEARRAY') {\n    return /*#__PURE__*/_jsxDEV(AwDateTimeVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'radiobutton') {\n    return /*#__PURE__*/_jsxDEV(AwRadioButtonVal, {\n      prop: prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'togglebutton') {\n    return /*#__PURE__*/_jsxDEV(AwToggleButtonVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'BOOLEANARRAY') {\n    return /*#__PURE__*/_jsxDEV(AwCheckboxVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"button\",\n    tabIndex: \"-1\",\n    id: index,\n    onKeyDown: event => handleKeyDown(prop, event),\n    onClick: event => handleClick(prop, event),\n    className: \"aw-jswidgets-arrayValue\",\n    children: displayValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderProperty = (prop, displayNode, index, setIsShown, isShown) => {\n  let displayValue = displayNode.displayValue;\n  let isAnyValueSelected = false;\n  let focusAndHoverEvents = {\n    onFocus: () => {\n      if (wcagSvc.areWeInKeyboardMode()) {\n        setIsShown(true);\n      }\n    },\n    onBlur: event => {\n      if (wcagSvc.areWeInKeyboardMode() && !isLiItemSelected(event)) {\n        setIsShown(false);\n      }\n    },\n    onMouseEnter: () => {\n      setIsShown(true);\n    },\n    onMouseLeave: () => {\n      setIsShown(false);\n    }\n  };\n\n  if (prop.fielddata.displayValsModel) {\n    for (var i = 0; i < propArrayLength(prop); i++) {\n      if (prop.fielddata.displayValsModel[i].selected && prop.fielddata.displayValsModel[i].isInEditMode) {\n        isAnyValueSelected = true;\n        break;\n      }\n    }\n  }\n\n  const getCellListItemClass = () => {\n    const selectedClass = propArrayLength(prop) > 0 && prop.fielddata.displayValsModel[index].selected ? ' aw-state-selected' : '';\n    return 'sw-aria-border aw-jswidgets-arrayValueCellListItem' + selectedClass;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    role: \"option\",\n    \"aria-selected\": isAnyValueSelected,\n    tabIndex: \"-1\",\n    id: index,\n    onKeyDown: event => handleKeyDown(prop, event),\n    className: getCellListItemClass(),\n    ...focusAndHoverEvents,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-jswidgets-arrayValueContainer\",\n      children: [renderPropertyEditMode(prop, displayValue, index), (isShown || displayNode.selected) && !isAnyValueSelected && !prop.disabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-layout-flexColumnContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-jswidgets-arrayIcons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleClick(prop, event),\n            id: index,\n            onKeyDown: event => handleKeyDown(prop, event),\n            type: \"button\",\n            className: \"aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton\",\n            disabled: prop.fielddata.displayValsModel[index].isInEditMode,\n            title: 'Move Up',\n            children: /*#__PURE__*/_jsxDEV(AwIcon, {\n              iconId: \"cmdMoveUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleClick(prop, event),\n            id: index + 1,\n            onKeyDown: event => handleKeyDown(prop, event),\n            type: \"button\",\n            className: \"aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton\",\n            disabled: prop.fielddata.displayValsModel[index].isInEditMode,\n            title: 'Move Down',\n            children: /*#__PURE__*/_jsxDEV(AwIcon, {\n              iconId: \"cmdMoveDown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleClick(prop, event),\n            id: index + 2,\n            onKeyDown: event => handleKeyDown(prop, event),\n            type: \"button\",\n            className: \"aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton\",\n            disabled: prop.fielddata.displayValsModel[index].isInEditMode,\n            title: 'Remove',\n            children: /*#__PURE__*/_jsxDEV(AwIcon, {\n              iconId: \"cmdRemove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 98\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\nexport const awPropertyArrayValRenderFunction = props => {\n  _s2();\n\n  _s();\n\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    elementRefList,\n    ...prop\n  } = props;\n\n  const getContainerClass = () => {\n    let borderClass = '';\n\n    if (prop.fielddata.displayValsModel && propArrayLength(prop) > 0) {\n      borderClass = ' sw-border';\n    }\n\n    return 'aw-jswidgets-arrayWidgetContainer' + borderClass;\n  };\n\n  const getPropContainerClass = () => {\n    let classVal = 'sw-array-val sw-property-val sw-column';\n    const changedClass = !prop.disabled && (prop.dirty === 'true' || prop.dirty === true) ? ' sw-changed' : '';\n    return classVal + changedClass;\n  };\n\n  const [isShown, setIsShown] = useState(false);\n  let ariaProp = {};\n\n  _.each(prop, (v, k) => {\n    k.startsWith('aria-') && (ariaProp[k] = v);\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getPropContainerClass(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getContainerClass(),\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        role: \"listbox\",\n        ...ariaProp,\n        className: \"aw-jswidgets-arrayEditValueCellList\",\n        tabIndex: propArrayLength(prop) > 0 ? '0' : '-1',\n        ref: elementRefList.get('arrayVal'),\n        children: prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map((displayNode, index) => renderProperty(prop, displayNode, index, setIsShown, isShown))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), !prop.disabled ? /*#__PURE__*/_jsxDEV(AwPropertyArrayEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 32\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(awPropertyArrayValRenderFunction, \"AfL4AMulNN2iutG1qDR77gnp7oc=\");\n\n_s(awPropertyArrayValRenderFunction, \"piNRvNB82iO0jBzHjvdV2zhEZ6g=\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyArrayValService.js"],"names":["onMount","elementRefList","list","ul","obj","setAriaAttributes","autoScroll","listSelector","childSelector","focusOnSiblingLi","action","li","document","siblingToFocus","focusRequiredElement","event","operation","locator","prop","label","inputEle","ulEle","propArrayLength","isLiItemSelected","handleClick","isAnyValueSelected","j","handleKeyDown","wcagSvc","handleBlur","handleKeyPress","renderPropertyEditMode","getValClass","displayValue","renderProperty","displayNode","focusAndHoverEvents","onFocus","setIsShown","onBlur","onMouseEnter","onMouseLeave","i","getCellListItemClass","selectedClass","isShown","index","awPropertyArrayValRenderFunction","props","getContainerClass","borderClass","getPropContainerClass","classVal","changedClass","useState","ariaProp","_","k"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable react-hooks/rules-of-hooks */\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPropertyArrayEditVal from 'viewmodel/AwPropertyArrayEditValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwRadioButtonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwCheckboxVal from 'viewmodel/AwCheckboxValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport { useState } from 'react';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport _ from 'lodash';\n\nexport const onMount = ( elementRefList ) => {\n    //WCAG keyboard handling\n    const list = new ariaList();\n    let ul = elementRefList.get( 'arrayVal' ).current;\n    if( !ul ) { return; }\n\n    var obj = {\n        setAriaAttributes: false,\n        autoScroll: false,\n        listSelector: '.aw-jswidgets-arrayValueCellListItem'\n    };\n\n    let childSelector = 'option';\n    list.init( ul, obj, childSelector );\n};\n\nconst focusOnSiblingLi = ( action ) => {\n    //manage focus & tabindex on moveUp/moveDown Command.\n    let li = document.querySelector( 'li.aw-state-selected' );\n    if( li ) {\n        li.setAttribute( 'tabindex', -1 );\n        let siblingToFocus;\n        if( action === 'Move Up' ) {\n            siblingToFocus = li.previousElementSibling;\n        } else if( action === 'Move Down' ) {\n            siblingToFocus = li.nextElementSibling;\n        }\n        if( siblingToFocus ) {\n            siblingToFocus.focus();\n            siblingToFocus.setAttribute( 'tabindex', 0 );\n        } else {\n            //if no focusable sibling focus on current selected\n            li.focus();\n            li.setAttribute( 'tabindex', 0 );\n        }\n    }\n};\n\nconst focusRequiredElement = ( prop, event ) => {\n    if( ( event.target.type === 'button' || event.currentTarget.type === 'button' ) && event.currentTarget.attributes.title ) {\n        let operation = event.currentTarget.attributes.title.value;\n        switch ( operation ) {\n            case 'Move Up':\n            case 'Move Down':\n                focusOnSiblingLi( operation );\n                break;\n            case 'Remove': {\n                //set tabIndex of parent ul to 0 since no active tabIndex left after removal\n                let locator = `[data-locator='${prop.label}']`;\n                let inputEle = document.querySelector( `input${locator},textarea${locator}` );\n                if( inputEle && inputEle.previousElementSibling !== null ) {\n                    let ulEle = inputEle.previousElementSibling.firstElementChild;\n                    if( ulEle !== null ) {\n                        propArrayLength( prop ) > 0 ? ulEle.setAttribute( 'tabIndex', '0' ) : ulEle.setAttribute( 'tabIndex', '-1' );\n                    }\n                }\n                // focus on input box once li element removed\n                inputEle && inputEle.focus();\n                break;\n            }\n        }\n    }\n};\n\nconst isLiItemSelected = ( event ) => {\n    return event.currentTarget.classList.contains( 'aw-state-selected' );\n};\n\nconst propArrayLength = ( prop ) => prop.fielddata.displayValsModel.length;\n\nconst handleClick = ( prop, event ) => {\n    let isAnyValueSelected = false;\n    if( prop.fielddata.displayValsModel ) {\n        for( var j = 0; j < propArrayLength( prop ); j++ ) {\n            if( prop.fielddata.displayValsModel[ j ].selected && prop.fielddata.displayValsModel[ j ].isInEditMode ) {\n                isAnyValueSelected = true;\n                break;\n            }\n        }\n    }\n    if( !isAnyValueSelected ) {\n        event.preventDefault();\n        prop.onClick( event );\n    }\n    focusRequiredElement( prop, event );\n};\n\nconst handleKeyDown = ( prop, event ) => {\n    if( wcagSvc.isValidKeyPress( event, true ) ) {\n        handleClick( prop, event );\n    }\n};\n\nconst handleBlur = ( prop, event ) => {\n    event.isBlurFromInput = true;\n    prop.onBlur( event );\n};\n\nconst handleKeyPress = ( prop, event ) => {\n    if( event.key === 'Enter' ) {\n        event.updateArray = true;\n        event.preventDefault();\n        prop.onChange( event );\n        // revisitme: what is the bext way to clear widget\n        event.target.value = '';\n    }\n};\n\nconst renderPropertyEditMode = ( prop, displayValue, index ) => {\n    if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex !== 'DATEARRAY' && prop.typex !== 'BOOLEANARRAY' ) {\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        return <input type='text' onKeyPress={( event ) => handleKeyPress( prop, event )} onBlur={( event ) => handleBlur( prop, event )} id={index} defaultValue={displayValue} autoFocus className='aw-jswidgets-arrayValue'/>;\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'DATEARRAY' ) {\n        return (\n            <AwDateTimeVal {...prop} className={ getValClass( prop ) }/>\n        );\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'radiobutton' ) {\n        return (\n            <AwRadioButtonVal prop={prop} className={ getValClass( prop ) }/>\n        );\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'togglebutton' ) {\n        return (\n            <AwToggleButtonVal {...prop} className={ getValClass( prop ) }/>\n        );\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'BOOLEANARRAY' ) {\n        return (\n            <AwCheckboxVal {...prop} className={ getValClass( prop ) }/>\n        );\n    }\n    return (\n        <div role='button' tabIndex='-1' id={index} onKeyDown={( event ) => handleKeyDown( prop, event )} onClick={( event ) => handleClick( prop, event )} className='aw-jswidgets-arrayValue'>{displayValue}</div>\n    );\n};\n\nconst renderProperty = ( prop, displayNode, index, setIsShown, isShown ) => {\n    let displayValue = displayNode.displayValue;\n    let isAnyValueSelected = false;\n    let focusAndHoverEvents = {\n        onFocus: () => {\n            if( wcagSvc.areWeInKeyboardMode() ) {\n                setIsShown( true );\n            }\n        },\n        onBlur: ( event ) => {\n            if( wcagSvc.areWeInKeyboardMode() && !isLiItemSelected( event ) ) {\n                setIsShown( false );\n            }\n        },\n        onMouseEnter: () => { setIsShown( true ); },\n        onMouseLeave: () => { setIsShown( false ); }\n    };\n    if( prop.fielddata.displayValsModel ) {\n        for( var i = 0; i < propArrayLength( prop ); i++ ) {\n            if( prop.fielddata.displayValsModel[ i ].selected && prop.fielddata.displayValsModel[ i ].isInEditMode ) {\n                isAnyValueSelected = true;\n                break;\n            }\n        }\n    }\n    const getCellListItemClass = () => {\n        const selectedClass = propArrayLength( prop ) > 0 && prop.fielddata.displayValsModel[ index ].selected ? ' aw-state-selected' : '';\n        return 'sw-aria-border aw-jswidgets-arrayValueCellListItem' + selectedClass;\n    };\n\n    return (\n        <li role='option' aria-selected={isAnyValueSelected} tabIndex='-1' key={index} id={index} onKeyDown={( event )=> handleKeyDown( prop, event )} className={ getCellListItemClass() } {...focusAndHoverEvents}>\n            <div className='aw-jswidgets-arrayValueContainer'>\n                {\n                    renderPropertyEditMode( prop, displayValue, index )\n                }\n                { ( isShown || displayNode.selected ) && !isAnyValueSelected && !prop.disabled ? <div className='aw-layout-flexColumnContainer'>\n                    <div className='aw-jswidgets-arrayIcons'>\n                        <button onClick={( event ) => handleClick( prop, event )} id={index} onKeyDown={( event )=> handleKeyDown( prop, event )} type='button' className='aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton'\n                            disabled={prop.fielddata.displayValsModel[ index ].isInEditMode} title={'Move Up'} >\n                            <AwIcon iconId='cmdMoveUp'/>\n                        </button>\n                        <button onClick={( event ) => handleClick( prop, event )} id={index + 1} onKeyDown={( event )=> handleKeyDown( prop, event )} type='button' className='aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton'\n                            disabled={prop.fielddata.displayValsModel[ index ].isInEditMode} title={'Move Down'} >\n                            <AwIcon iconId='cmdMoveDown'/>\n                        </button>\n                        <button onClick={( event ) => handleClick( prop, event )} id={index + 2} onKeyDown={( event )=> handleKeyDown( prop, event )} type='button' className='aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton'\n                            disabled={prop.fielddata.displayValsModel[ index ].isInEditMode} title={'Remove'} >\n                            <AwIcon iconId='cmdRemove'/>\n                        </button>\n                    </div>\n                </div> : ''}\n            </div>\n        </li>\n    );\n};\n\nexport const awPropertyArrayValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        elementRefList,\n        ...prop\n    } = props;\n\n    const getContainerClass = () => {\n        let borderClass = '';\n        if( prop.fielddata.displayValsModel && propArrayLength( prop ) > 0 ) {\n            borderClass = ' sw-border';\n        }\n\n        return 'aw-jswidgets-arrayWidgetContainer' + borderClass;\n    };\n\n    const getPropContainerClass = () => {\n        let classVal = 'sw-array-val sw-property-val sw-column';\n        const changedClass = !prop.disabled && ( prop.dirty === 'true' || prop.dirty === true ) ? ' sw-changed' : '';\n        return classVal + changedClass;\n    };\n\n    const [ isShown, setIsShown ] = useState( false );\n\n    let ariaProp = {};\n    _.each( prop, ( v, k ) => { k.startsWith( 'aria-' ) && ( ariaProp[ k ] = v ); } );\n\n    return (\n        <div className={ getPropContainerClass() }>\n            <div className={ getContainerClass() } >\n                <ul role='listbox' {...ariaProp} className='aw-jswidgets-arrayEditValueCellList' tabIndex={propArrayLength( prop ) > 0 ? '0' : '-1'} ref={elementRefList.get( 'arrayVal' )}>\n                    {\n                        prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map( ( displayNode, index ) =>\n                            renderProperty( prop, displayNode, index, setIsShown, isShown )\n                        )\n                    }\n                </ul>\n            </div>\n            { !prop.disabled ? <AwPropertyArrayEditVal {...prop}/> : '' }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}