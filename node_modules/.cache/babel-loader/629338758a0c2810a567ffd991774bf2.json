{"ast":null,"code":"// Copyright (c) 2020 Siemens\nimport { DerivedStateResult } from 'js/derivedContextService';\n/**\n * DEPRECATED: no longer needed since components inherit class automatically now. Only used in a few rare cases\n * where class propagation was skipping a level. This is not best-practice and should be fixed too.\n *\n * Constructs component classes. Need a new name since component already means something else in terms of layout.\n * In this context, this is just an swf/react component (could be section, component, or element)...\n * All swf components should inherit class from their view element\n * @param {String} className class to use on component\n * @param {Object} prop property vm\n * @returns {String} ready to use classe names\n */\n\nexport function getCompClass(className, prop) {\n  let classes = [];\n\n  if (className) {\n    classes.push(className);\n  }\n\n  if (prop.className) {\n    classes.push(prop.className);\n  }\n\n  return classes.join(' ');\n}\n/**\n * Constructs property widget classes for properties.\n * Look at property vmo and set appropriate classes\n * @param {String} className any additional class to use on this property\n * @param {Object} prop property vm\n * @returns {String} ready to use classe names\n */\n\nexport function getPropClass(className, prop) {\n  let classes = ['sw-property', 'sw-component'];\n\n  if (className) {\n    classes.unshift(className);\n  }\n\n  if (prop.className) {\n    classes.push(prop.className);\n  }\n\n  const isEnabled = prop.fielddata.isEnabled;\n  const isEditable = prop.fielddata.isEditable;\n  const modifiable = prop.modifiable;\n  const hint = prop.fielddata.renderingHint;\n\n  if (prop.fielddata.labelPlacement === 'default') {\n    prop.fielddata.labelPlacement = isEditable === false || modifiable === false ? 'start' : 'top'; // override for special-cases\n\n    if (isEditable && prop.typex === 'BOOLEAN' || hint === 'radiobutton') {\n      if (hint === 'radiobutton' || hint === 'togglebutton') {\n        prop.fielddata.labelPlacement = 'start';\n      } else {\n        // reverse label/val order for editable checkbox\n        prop.fielddata.labelPlacement = 'end';\n      }\n    }\n  }\n\n  if (isEditable && prop.typex === 'BOOLEAN' || hint === 'radiobutton' || hint === 'togglebutton' || hint === 'checkbox') {\n    // used to align label with value\n    classes.push('sw-nonText');\n  } // apply label position - by default, it is top\n\n\n  if (!classes.includes('sw-column') && !classes.includes('sw-row')) {\n    if (prop.fielddata.labelPlacement === 'end') {\n      classes.push('sw-reverse sw-row');\n    } else if (prop.fielddata.labelPlacement === 'start') {\n      classes.push('sw-row');\n    } else if (prop.fielddata.labelPlacement === 'none') {\n      classes.push('sw-hideLabelName');\n    }\n  } // special-case sizing\n\n\n  if (prop.typex === 'BOOLEAN') {\n    classes.push('sw-autoSize');\n  }\n\n  if (isEditable === false || modifiable === false || hint === 'label') {\n    classes.push('sw-readOnly'); //prop.fielddata.disabled = true;\n  } else if (isEnabled === false) {\n    // only set disabled on the prop level if it's editable. (disabled will still get set on the input)\n    classes.push('sw-disabled');\n  }\n\n  if (prop.error && prop.error.length > 0) {\n    classes.push('sw-errorFlag');\n  }\n\n  return classes.join(' ');\n}\n/**\n * Constructs property val classes.\n * @param {Object} prop property vm\n * @returns {String} ready to use classe names\n */\n\nexport function getValClass(prop) {\n  let classes = ['sw-property-val'];\n\n  if ((prop.dirty === 'true' || prop.dirty === true) && prop.fielddata.isEditable) {\n    classes.push('sw-changed');\n  }\n\n  return classes.join(' ');\n}\n/**\n * A version of getValClass that uses derived state to improve performance\n *\n * @param {Object} vmDef View model\n * @param {Object} prop Current properties\n * @returns {[DerivedStateResult]} Derived state configurations\n */\n\nexport const getValClassMemo = (vmDef, prop) => {\n  return [new DerivedStateResult({\n    ctxParameters: [],\n    additionalParameters: [prop.dirty],\n    compute: (renderContext, isDirty) => {\n      let classes = ['sw-property-val'];\n\n      if (isDirty === 'true' || isDirty === true) {\n        classes.push('sw-changed');\n      }\n\n      return classes.join(' ');\n    }\n  })];\n};\n/**\n * Get list item classes for aw-list\n * @param {Boolean} isSelectionEnabled true/false\n * @param {Boolean} isGroupList true/false\n * @param {Boolean} fixedCellHeight true/false\n * @returns {String} classes\n */\n\nexport function getListItemClasses(selected, isSelectionEnabled, isGroupList, fixedCellHeight, isFocused, selectionModelActivated) {\n  let classes = ['sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop'];\n\n  if (selected) {\n    classes.push('aw-widgets-cellListItemSelected');\n  }\n\n  if (isFocused) {\n    classes.push('aw-list-itemFocused');\n  }\n\n  if (!isSelectionEnabled) {\n    classes.push('aw-widgets-hideCellListSelEffect');\n  }\n\n  if (isGroupList) {\n    classes.push('aw-widgets-groupCellListItem');\n  }\n\n  if (fixedCellHeight) {\n    classes.push('aw-widgets-fixedCellHeight');\n  }\n\n  if (selected && !selectionModelActivated) {\n    classes.push('aw-widgets-cellListItemInactivated');\n  }\n\n  return classes.join(' ');\n}","map":{"version":3,"names":["DerivedStateResult","getCompClass","className","prop","classes","push","join","getPropClass","unshift","isEnabled","fielddata","isEditable","modifiable","hint","renderingHint","labelPlacement","typex","includes","error","length","getValClass","dirty","getValClassMemo","vmDef","ctxParameters","additionalParameters","compute","renderContext","isDirty","getListItemClasses","selected","isSelectionEnabled","isGroupList","fixedCellHeight","isFocused","selectionModelActivated"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/componentUtils.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\nimport { DerivedStateResult } from 'js/derivedContextService';\n\n/**\n * DEPRECATED: no longer needed since components inherit class automatically now. Only used in a few rare cases\n * where class propagation was skipping a level. This is not best-practice and should be fixed too.\n *\n * Constructs component classes. Need a new name since component already means something else in terms of layout.\n * In this context, this is just an swf/react component (could be section, component, or element)...\n * All swf components should inherit class from their view element\n * @param {String} className class to use on component\n * @param {Object} prop property vm\n * @returns {String} ready to use classe names\n */\nexport function getCompClass( className, prop ) {\n    let classes = [];\n\n    if( className ) {\n        classes.push( className );\n    }\n    if( prop.className ) {\n        classes.push( prop.className );\n    }\n\n    return classes.join( ' ' );\n}\n\n/**\n * Constructs property widget classes for properties.\n * Look at property vmo and set appropriate classes\n * @param {String} className any additional class to use on this property\n * @param {Object} prop property vm\n * @returns {String} ready to use classe names\n */\nexport function getPropClass( className, prop ) {\n    let classes = [ 'sw-property', 'sw-component' ];\n\n    if( className ) {\n        classes.unshift( className );\n    }\n\n    if( prop.className ) {\n        classes.push( prop.className );\n    }\n\n    const isEnabled = prop.fielddata.isEnabled;\n    const isEditable = prop.fielddata.isEditable;\n    const modifiable = prop.modifiable;\n    const hint = prop.fielddata.renderingHint;\n\n    if( prop.fielddata.labelPlacement === 'default' ) {\n        prop.fielddata.labelPlacement = isEditable === false || modifiable === false ? 'start' : 'top';\n\n        // override for special-cases\n        if( isEditable && prop.typex === 'BOOLEAN' || hint === 'radiobutton' ) {\n            if( hint === 'radiobutton' || hint === 'togglebutton' ) {\n                prop.fielddata.labelPlacement = 'start';\n            } else {\n                // reverse label/val order for editable checkbox\n                prop.fielddata.labelPlacement = 'end';\n            }\n        }\n    }\n\n    if( isEditable && prop.typex === 'BOOLEAN' || hint === 'radiobutton' || hint === 'togglebutton' || hint === 'checkbox' ) {\n        // used to align label with value\n        classes.push( 'sw-nonText' );\n    }\n\n    // apply label position - by default, it is top\n    if( !classes.includes( 'sw-column' ) && !classes.includes( 'sw-row' ) ) {\n        if( prop.fielddata.labelPlacement === 'end' ) {\n            classes.push( 'sw-reverse sw-row' );\n        } else if( prop.fielddata.labelPlacement === 'start' ) {\n            classes.push( 'sw-row' );\n        } else if( prop.fielddata.labelPlacement === 'none' ) {\n            classes.push( 'sw-hideLabelName' );\n        }\n    }\n\n    // special-case sizing\n    if( prop.typex === 'BOOLEAN' ) {\n        classes.push( 'sw-autoSize' );\n    }\n\n    if( isEditable === false || modifiable === false || hint === 'label' ) {\n        classes.push( 'sw-readOnly' );\n        //prop.fielddata.disabled = true;\n    } else if( isEnabled === false ) {\n        // only set disabled on the prop level if it's editable. (disabled will still get set on the input)\n        classes.push( 'sw-disabled' );\n    }\n\n    if( prop.error && prop.error.length > 0 ) {\n        classes.push( 'sw-errorFlag' );\n    }\n\n    return classes.join( ' ' );\n}\n\n/**\n * Constructs property val classes.\n * @param {Object} prop property vm\n * @returns {String} ready to use classe names\n */\nexport function getValClass( prop ) {\n    let classes = [ 'sw-property-val' ];\n    if( ( prop.dirty === 'true' || prop.dirty === true ) && prop.fielddata.isEditable ) {\n        classes.push( 'sw-changed' );\n    }\n    return classes.join( ' ' );\n}\n\n/**\n * A version of getValClass that uses derived state to improve performance\n *\n * @param {Object} vmDef View model\n * @param {Object} prop Current properties\n * @returns {[DerivedStateResult]} Derived state configurations\n */\nexport const getValClassMemo = ( vmDef, prop ) => {\n    return [ new DerivedStateResult( {\n        ctxParameters: [],\n        additionalParameters: [ prop.dirty ],\n        compute: ( renderContext, isDirty ) => {\n            let classes = [ 'sw-property-val' ];\n            if( isDirty === 'true' || isDirty === true ) {\n                classes.push( 'sw-changed' );\n            }\n            return classes.join( ' ' );\n        }\n    } ) ];\n};\n\n/**\n * Get list item classes for aw-list\n * @param {Boolean} isSelectionEnabled true/false\n * @param {Boolean} isGroupList true/false\n * @param {Boolean} fixedCellHeight true/false\n * @returns {String} classes\n */\nexport function getListItemClasses( selected, isSelectionEnabled, isGroupList, fixedCellHeight, isFocused, selectionModelActivated ) {\n    let classes = [ 'sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop' ];\n    if( selected ) {\n        classes.push( 'aw-widgets-cellListItemSelected' );\n    }\n    if( isFocused ) {\n        classes.push( 'aw-list-itemFocused' );\n    }\n    if( !isSelectionEnabled ) {\n        classes.push( 'aw-widgets-hideCellListSelEffect' );\n    }\n    if( isGroupList ) {\n        classes.push( 'aw-widgets-groupCellListItem' );\n    }\n    if( fixedCellHeight ) {\n        classes.push( 'aw-widgets-fixedCellHeight' );\n    }\n    if( selected && !selectionModelActivated ) {\n        classes.push( 'aw-widgets-cellListItemInactivated' );\n    }\n    return classes.join( ' ' );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}