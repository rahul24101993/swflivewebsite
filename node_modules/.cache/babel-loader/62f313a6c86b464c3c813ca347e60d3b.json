{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/* eslint-env es6 */ /**\n * This module provides core angularJS services abstraction.\n * This is autogenerated file. If you hand modify this file, please remove this line.\n *\n * @module js/awInterpolateService\n */import _ from'lodash';import{splitExpressionForInterpolate}from'js/serviceUtils';import AwParseService from'js/awParseService';export default class AwInterpolateService{/**\n     * Algo\n     * 1. Spilt statment into statement + Filters by |\n     * 2. Evaluate expression then apply filters on it if any.\n     * @param {String} expression - The String expression which needs to be evaluated\n     * @returns {Object} the interpolate function\n     */static instance(expression){return evalCtx=>{if(!expression){return undefined;}let expressions=splitExpressionForInterpolate(expression);expressions=_.map(expressions,subExpr=>{if(subExpr.expr){let containsOR=false;let localExpression=subExpr.expr;if(localExpression.includes('||')){//Replace || for now till we split with |\nlocalExpression=localExpression.replace(/\\|\\|/g,'@#@#');containsOR=true;}if(/\\|/g.test(localExpression)){throw new Error('Filter expressions are not supported by interpolate');}if(containsOR){localExpression=localExpression.replace(/\\@\\#\\@\\#/g,'||');}//If the length of the array is > 1 means filter exists, in that case 0th entry is going to be expression\n//split removes seperators\nconst toParse=localExpression.trim();try{return AwParseService.instance(toParse)(evalCtx);}catch(error){return undefined;}}return subExpr;});return expressions.join('');};}}","map":null,"metadata":{},"sourceType":"module"}