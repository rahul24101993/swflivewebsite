{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * @module js/splmStatsLocationService\n */\n// import { wrapFunction } from 'js/splmStatsJsService';\nimport { setReportAnalytics } from 'js/splmStatsUtils';\nconst POPSTATE = 'popState';\nconst HASHCHANGE = 'hashchange';\nlet _procs = [];\nconst globalHistoryPushState = history.pushState;\nconst globalHistoryReplaceState = history.replaceState;\n\nconst wrapFunction = function (thisArg, func) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (_procs.length === 0) {\n      return func.apply(thisArg, args);\n    }\n\n    try {\n      _procs.forEach(function (proc) {\n        proc.start();\n      });\n    } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n    }\n\n    const res = func.apply(thisArg, args);\n\n    try {\n      _procs.forEach(function (proc) {\n        proc.stop();\n      });\n    } catch (ex) {// TODO: Do nothing for now, will fill it up before EOD 1905\n    }\n\n    return res;\n  };\n};\n\nconst watcherFn = wrapFunction(null, () => null);\nexport const install = function () {\n  history.pushState = wrapFunction(history, globalHistoryPushState);\n  history.replaceState = wrapFunction(history, globalHistoryReplaceState); // instead of popstate hashchange gives the old and new url information.\n  // win.addEventListener( 'popstate', () => {\n  //     win.dispatchEvent( new Event( 'locationchange' ) );\n  // } );\n  // https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onhashchange\n\n  window.addEventListener(HASHCHANGE, () => {\n    watcherFn();\n    setReportAnalytics(true);\n  });\n};\nexport const uninstall = function () {\n  history.pushState = globalHistoryPushState;\n  history.replaceState = globalHistoryReplaceState;\n  window.removeEventListener(HASHCHANGE, watcherFn);\n};\nexport const addProc = function (proc) {\n  _procs.push(proc);\n};\nexport const removeProc = function (proc) {\n  _procs = _procs.filter(procObj => proc !== procObj);\n};\nexport default {\n  install,\n  uninstall,\n  addProc,\n  removeProc\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/plstats/src/js/splmStatsLocationService.js"],"names":["POPSTATE","HASHCHANGE","_procs","globalHistoryPushState","history","globalHistoryReplaceState","wrapFunction","args","func","proc","res","watcherFn","install","window","setReportAnalytics","uninstall","addProc","removeProc","procObj"],"mappings":"AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAA,kBAAA,QAAA,mBAAA;AAEA,MAAMA,QAAQ,GAAd,UAAA;AACA,MAAMC,UAAU,GAAhB,YAAA;AAEA,IAAIC,MAAM,GAAV,EAAA;AAEA,MAAMC,sBAAsB,GAAGC,OAAO,CAAtC,SAAA;AAEA,MAAMC,yBAAyB,GAAGD,OAAO,CAAzC,YAAA;;AAEA,MAAME,YAAY,GAAG,UAAA,OAAA,EAAA,IAAA,EAA0B;EAC3C,OAAO,YAAe;IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAVC,IAAU,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAAVA,IAAU,CAAA,IAAA,CAAVA,GAAU,SAAA,CAAA,IAAA,CAAVA;IAAU;;IAClB,IAAIL,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAA0B;MACtB,OAAOM,IAAI,CAAJA,KAAAA,CAAAA,OAAAA,EAAP,IAAOA,CAAP;IACH;;IAED,IAAI;MACAN,MAAM,CAANA,OAAAA,CAAgB,UAAA,IAAA,EAAiB;QAC7BO,IAAI,CAAJA,KAAAA;MADJP,CAAAA;IADJ,CAAA,CAIE,OAAA,EAAA,EAAa,CACX;IACH;;IACD,MAAMQ,GAAG,GAAGF,IAAI,CAAJA,KAAAA,CAAAA,OAAAA,EAAZ,IAAYA,CAAZ;;IACA,IAAI;MACAN,MAAM,CAANA,OAAAA,CAAgB,UAAA,IAAA,EAAiB;QAC7BO,IAAI,CAAJA,IAAAA;MADJP,CAAAA;IADJ,CAAA,CAIE,OAAA,EAAA,EAAa,CACX;IACH;;IACD,OAAA,GAAA;EApBJ,CAAA;AADJ,CAAA;;AAyBA,MAAMS,SAAS,GAAGL,YAAY,CAAA,IAAA,EAAQ,MAAtC,IAA8B,CAA9B;AAEA,OAAO,MAAMM,OAAO,GAAG,YAAW;EAC9BR,OAAO,CAAPA,SAAAA,GAAoBE,YAAY,CAAA,OAAA,EAAhCF,sBAAgC,CAAhCA;EAEAA,OAAO,CAAPA,YAAAA,GAAuBE,YAAY,CAAA,OAAA,EAHL,yBAGK,CAAnCF,CAH8B,CAK9B;EACA;EACA;EACA;EAEA;;EACAS,MAAM,CAANA,gBAAAA,CAAAA,UAAAA,EAAqC,MAAM;IACvCF,SAAS;IACTG,kBAAkB,CAAlBA,IAAkB,CAAlBA;EAFJD,CAAAA;AAXG,CAAA;AAiBP,OAAO,MAAME,SAAS,GAAG,YAAW;EAChCX,OAAO,CAAPA,SAAAA,GAAAA,sBAAAA;EACAA,OAAO,CAAPA,YAAAA,GAAAA,yBAAAA;EACAS,MAAM,CAANA,mBAAAA,CAAAA,UAAAA,EAAAA,SAAAA;AAHG,CAAA;AAMP,OAAO,MAAMG,OAAO,GAAG,UAAA,IAAA,EAAiB;EACpCd,MAAM,CAANA,IAAAA,CAAAA,IAAAA;AADG,CAAA;AAIP,OAAO,MAAMe,UAAU,GAAG,UAAA,IAAA,EAAiB;EACvCf,MAAM,GAAGA,MAAM,CAANA,MAAAA,CAAegB,OAAO,IAAIT,IAAI,KAAvCP,OAASA,CAATA;AADG,CAAA;AAIP,eAAe;EAAA,OAAA;EAAA,SAAA;EAAA,OAAA;EAIXe;AAJW,CAAf","sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * @module js/splmStatsLocationService\n */\n// import { wrapFunction } from 'js/splmStatsJsService';\nimport { setReportAnalytics } from 'js/splmStatsUtils';\n\nconst POPSTATE = 'popState';\nconst HASHCHANGE = 'hashchange';\n\nlet _procs = [];\n\nconst globalHistoryPushState = history.pushState;\n\nconst globalHistoryReplaceState = history.replaceState;\n\nconst wrapFunction = function( thisArg, func ) {\n    return ( ...args ) => {\n        if( _procs.length === 0 ) {\n            return func.apply( thisArg, args );\n        }\n\n        try {\n            _procs.forEach( function( proc ) {\n                proc.start();\n            } );\n        } catch ( ex ) {\n            // TODO: Do nothing for now, will fill it up before EOD 1905\n        }\n        const res = func.apply( thisArg, args );\n        try {\n            _procs.forEach( function( proc ) {\n                proc.stop();\n            } );\n        } catch ( ex ) {\n            // TODO: Do nothing for now, will fill it up before EOD 1905\n        }\n        return res;\n    };\n};\n\nconst watcherFn = wrapFunction( null, () => null );\n\nexport const install = function() {\n    history.pushState = wrapFunction( history, globalHistoryPushState );\n\n    history.replaceState = wrapFunction( history, globalHistoryReplaceState );\n\n    // instead of popstate hashchange gives the old and new url information.\n    // win.addEventListener( 'popstate', () => {\n    //     win.dispatchEvent( new Event( 'locationchange' ) );\n    // } );\n\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onhashchange\n    window.addEventListener( HASHCHANGE, () => {\n        watcherFn();\n        setReportAnalytics( true );\n    } );\n};\n\nexport const uninstall = function() {\n    history.pushState = globalHistoryPushState;\n    history.replaceState = globalHistoryReplaceState;\n    window.removeEventListener( HASHCHANGE, watcherFn );\n};\n\nexport const addProc = function( proc ) {\n    _procs.push( proc );\n};\n\nexport const removeProc = function( proc ) {\n    _procs = _procs.filter( procObj => proc !== procObj );\n};\n\nexport default {\n    install,\n    uninstall,\n    addProc,\n    removeProc\n};\n"]},"metadata":{},"sourceType":"module"}