{"ast":null,"code":"// Copyright (c) 2022 Siemens\n/**\n * Defines the {@link NgServices.narrowModeService}\n *\n * @module js/aw.narrowMode.service\n */import eventBus from'js/eventBus';let exports;/**\n * The narrow mode breakpoint in px\n *\n * @private\n * @member narrowModeBreakPoint\n */let narrowModeBreakPoint=460;/**\n * Whether currently in narrow mode\n *\n * @private\n * @member isCurrentlyNarrowMode\n */let isCurrentlyNarrowMode=false;/**\n * Returns if the user is in narrow mode or not.\n *\n * @function isNarrowMode\n * @return {Boolean} Whether currently in narrow mode\n */export let isNarrowMode=function(){return isCurrentlyNarrowMode;};/**\n * Checks to see if the current width matches the criteria for being in narrow mode\n *\n * @function checkNarrowMode\n * @param {number} windowWidth - Current Browser Window width\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */export let checkNarrowMode=function(){return setNarrowMode(window.innerWidth<=narrowModeBreakPoint);};/**\n * Updates the internal cached narrow mode state if different and fires narrowModeChangeEvent.\n *\n * @function setNarrowMode\n * @param {boolean} narrowModeState - true if the criteria has been satisfied for narrow mode; false otherwise\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */var setNarrowMode=function(narrowModeState){// Only fire events if mode is different than it was prior\nif(isCurrentlyNarrowMode!==narrowModeState){isCurrentlyNarrowMode=narrowModeState;eventBus.publish('narrowModeChangeEvent',{isEnterNarrowMode:isCurrentlyNarrowMode});}var narrowModeStyle='';if(isCurrentlyNarrowMode){narrowModeStyle='awRootNarrowMode';}return narrowModeStyle;};/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowModeChangeEvent\n *\n * @function narrowModeChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */export let narrowModeChange=function(eventData,layoutSummaryOnlyStyle,headerTitle,preNarrowTitle){var output={layoutSummaryOnlyStyle:layoutSummaryOnlyStyle,headerTitle:headerTitle,preNarrowTitle:preNarrowTitle};if(!eventData.isEnterNarrowMode){output.layoutSummaryOnlyStyle='';if(preNarrowTitle){output.headerTitle=preNarrowTitle;output.preNarrowTitle=null;}}return output;};/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"gwt.subLocationContentSelectionChangeEvent\"\n *\n * @function subLocationContentSelectionChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @param {object} subLocationTabs - subLocation tabs information\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */export let subLocationContentSelectionChange=function(eventData,layoutSummaryOnlyStyle,headerTitle,preNarrowTitle,subLocationTabs){var output={layoutSummaryOnlyStyle:layoutSummaryOnlyStyle,headerTitle:headerTitle,preNarrowTitle:preNarrowTitle};if(eventData.isPrimaryWorkArea&&eventData.haveObjectsSelected&&window.innerWidth<460){output.layoutSummaryOnlyStyle='aw-layout-summaryOnly';var activeTab=subLocationTabs.filter(function(tab){return tab.selectedTab;})[0];if(!activeTab){activeTab={name:'null'};}if(preNarrowTitle){output.headerTitle=preNarrowTitle+' ('+activeTab.name+')';}else{output.preNarrowTitle=headerTitle;output.headerTitle=headerTitle+' ('+activeTab.name+')';}}return output;};/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowSummaryLocationTitleClickEvent\"\n *\n * @function narrowSummaryLocationTitleClick\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */export let narrowSummaryLocationTitleClick=function(layoutSummaryOnlyStyle,headerTitle,preNarrowTitle){var output={layoutSummaryOnlyStyle:layoutSummaryOnlyStyle,headerTitle:headerTitle,preNarrowTitle:preNarrowTitle};output.layoutSummaryOnly='';if(preNarrowTitle){output.headerTitle=preNarrowTitle;output.preNarrowTitle=null;}return output;};/**\n * Since this module can be loaded as a dependent DUI module we need to return an object indicating which\n * service should be injected to provide the API for this module.\n */exports={isNarrowMode,checkNarrowMode,narrowModeChange,subLocationContentSelectionChange,narrowSummaryLocationTitleClick};export default exports;","map":null,"metadata":{},"sourceType":"module"}