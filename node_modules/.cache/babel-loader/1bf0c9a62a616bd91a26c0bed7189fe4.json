{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This utility module provides helpful functions intended to efficiently manipulate array contents.\n *\n * @module js/arrayUtils\n */\nimport _ from 'lodash';\nvar exports = {};\n/**\n * Insert a 'source' array into a 'target' array starting at a given location.\n *\n * @param {ObjectArray} targetArray - Array elements where the 'source' element will be inserted into.\n *\n * @param {Number} index - The index in the 'target' array *at which* the 1st 'source' element should be placed\n *            (e.g. '0' indicates the 1st 'source' element will be the 1st element in the 'target' when done).\n *\n * @param {ObjectArray} sourceArray - Array elements to be inserted into the 'target' array.\n */\n\nexport let insert = function (targetArray, index, sourceArray) {\n  /**\n   * Check for simple case of appending into an empty array.\n   */\n  if (targetArray.length === 0 && index === 0) {\n    _.forEach(sourceArray, function (value) {\n      targetArray.push(value);\n    });\n  } else {\n    index = Math.min(index, targetArray.length);\n    var destNdx = index + 1;\n\n    _.forEach(sourceArray, function (sourceObj) {\n      targetArray.splice(destNdx, 0, sourceObj);\n      destNdx++;\n    });\n  }\n};\n/**\n * Insert a 'source' array into a 'target' array starting at just before a given location.\n *\n * @param {ObjectArray} targetArray - Array elements where the 'source' elements will be inserted into.\n *\n * @param {Number} index - The index in the 'target' array *at which* the last 'source' element should be placed\n *            (i.e. 'source' elements are inserted such that the last element of the 'source' would be placed before\n *            the element currently at this index).\n *\n * @param {ObjectArray} sourceArray - Array elements to be inserted into the 'target' array.\n */\n\nexport let insertBefore = function (targetArray, index, sourceArray) {\n  /**\n   * Check for simple case of appending into an empty array.\n   */\n  if (targetArray.length === 0 && index === 0) {\n    _.forEach(sourceArray, function (value) {\n      targetArray.push(value);\n    });\n  } else {\n    index = Math.min(index, targetArray.length);\n    var destNdx = index;\n\n    _.forEach(sourceArray, function (sourceObj) {\n      targetArray.splice(destNdx, 0, sourceObj);\n      destNdx++;\n    });\n  }\n};\nexports = {\n  insert,\n  insertBefore\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/kernel/src/js/arrayUtils.js"],"names":["exports","insert","targetArray","index","_","Math","destNdx","insertBefore"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,IAAIA,OAAO,GAAX,EAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,MAAM,GAAG,UAAA,WAAA,EAAA,KAAA,EAAA,WAAA,EAA4C;EAC5D;AACJ;AACA;EACI,IAAIC,WAAW,CAAXA,MAAAA,KAAAA,CAAAA,IAA4BC,KAAK,KAArC,CAAA,EAA8C;IAC1CC,CAAC,CAADA,OAAAA,CAAAA,WAAAA,EAAwB,UAAA,KAAA,EAAkB;MACtCF,WAAW,CAAXA,IAAAA,CAAAA,KAAAA;IADJE,CAAAA;EADJ,CAAA,MAIO;IACHD,KAAK,GAAGE,IAAI,CAAJA,GAAAA,CAAAA,KAAAA,EAAiBH,WAAW,CAApCC,MAAQE,CAARF;IAEA,IAAIG,OAAO,GAAGH,KAAK,GAAnB,CAAA;;IAEAC,CAAC,CAADA,OAAAA,CAAAA,WAAAA,EAAwB,UAAA,SAAA,EAAsB;MAC1CF,WAAW,CAAXA,MAAAA,CAAAA,OAAAA,EAAAA,CAAAA,EAAAA,SAAAA;MACAI,OAAO;IAFXF,CAAAA;EAIH;AAjBE,CAAA;AAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,YAAY,GAAG,UAAA,WAAA,EAAA,KAAA,EAAA,WAAA,EAA4C;EAClE;AACJ;AACA;EACI,IAAIL,WAAW,CAAXA,MAAAA,KAAAA,CAAAA,IAA4BC,KAAK,KAArC,CAAA,EAA8C;IAC1CC,CAAC,CAADA,OAAAA,CAAAA,WAAAA,EAAwB,UAAA,KAAA,EAAkB;MACtCF,WAAW,CAAXA,IAAAA,CAAAA,KAAAA;IADJE,CAAAA;EADJ,CAAA,MAIO;IACHD,KAAK,GAAGE,IAAI,CAAJA,GAAAA,CAAAA,KAAAA,EAAiBH,WAAW,CAApCC,MAAQE,CAARF;IAEA,IAAIG,OAAO,GAAX,KAAA;;IAEAF,CAAC,CAADA,OAAAA,CAAAA,WAAAA,EAAwB,UAAA,SAAA,EAAsB;MAC1CF,WAAW,CAAXA,MAAAA,CAAAA,OAAAA,EAAAA,CAAAA,EAAAA,SAAAA;MACAI,OAAO;IAFXF,CAAAA;EAIH;AAjBE,CAAA;AAoBPJ,OAAO,GAAG;EAAA,MAAA;EAENO;AAFM,CAAVP;AAIA,eAAA,OAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This utility module provides helpful functions intended to efficiently manipulate array contents.\n *\n * @module js/arrayUtils\n */\nimport _ from 'lodash';\n\nvar exports = {};\n\n/**\n * Insert a 'source' array into a 'target' array starting at a given location.\n *\n * @param {ObjectArray} targetArray - Array elements where the 'source' element will be inserted into.\n *\n * @param {Number} index - The index in the 'target' array *at which* the 1st 'source' element should be placed\n *            (e.g. '0' indicates the 1st 'source' element will be the 1st element in the 'target' when done).\n *\n * @param {ObjectArray} sourceArray - Array elements to be inserted into the 'target' array.\n */\nexport let insert = function( targetArray, index, sourceArray ) {\n    /**\n     * Check for simple case of appending into an empty array.\n     */\n    if( targetArray.length === 0 && index === 0 ) {\n        _.forEach( sourceArray, function( value ) {\n            targetArray.push( value );\n        } );\n    } else {\n        index = Math.min( index, targetArray.length );\n\n        var destNdx = index + 1;\n\n        _.forEach( sourceArray, function( sourceObj ) {\n            targetArray.splice( destNdx, 0, sourceObj );\n            destNdx++;\n        } );\n    }\n};\n\n/**\n * Insert a 'source' array into a 'target' array starting at just before a given location.\n *\n * @param {ObjectArray} targetArray - Array elements where the 'source' elements will be inserted into.\n *\n * @param {Number} index - The index in the 'target' array *at which* the last 'source' element should be placed\n *            (i.e. 'source' elements are inserted such that the last element of the 'source' would be placed before\n *            the element currently at this index).\n *\n * @param {ObjectArray} sourceArray - Array elements to be inserted into the 'target' array.\n */\nexport let insertBefore = function( targetArray, index, sourceArray ) {\n    /**\n     * Check for simple case of appending into an empty array.\n     */\n    if( targetArray.length === 0 && index === 0 ) {\n        _.forEach( sourceArray, function( value ) {\n            targetArray.push( value );\n        } );\n    } else {\n        index = Math.min( index, targetArray.length );\n\n        var destNdx = index;\n\n        _.forEach( sourceArray, function( sourceObj ) {\n            targetArray.splice( destNdx, 0, sourceObj );\n            destNdx++;\n        } );\n    }\n};\n\nexports = {\n    insert,\n    insertBefore\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}