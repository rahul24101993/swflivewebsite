{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwFileUploadService.js\";\n// Copyright (c) 2020 Siemens\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport fileSvc from 'js/awFileService';\nimport AwFileUploadLabel from 'viewmodel/AwFileUploadLabelViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport domUtils from 'js/domUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst domApis = domUtils.DOMAPIs;\nvar fileLabelElement;\nvar fileNameElement;\nvar fileNameElementAfterFileUploaded;\nvar classesForFileLabelElementFocus = ['aw-file-uploadFocus', 'aw-file-uploadFileLabelFocus'];\nvar classesForFileNameElementFocus = ['aw-file-uploadFocus', 'aw-file-uploadFileNameFocus'];\n\nconst addStyleToElem = elem => {\n  elem.classList.add('aw-widgets-dropframe');\n  elem.classList.add('aw-theme-dropframe');\n};\n\nconst removeStyleFromElem = elem => {\n  elem.classList.remove('aw-widgets-dropframe');\n  elem.classList.remove('aw-theme-dropframe');\n};\n\nconst highlightWidget = eventData => {\n  if (!_.isUndefined(eventData) && !_.isUndefined(eventData.targetElement) && eventData.targetElement.classList) {\n    let isHighlightFlag = eventData.isHighlightFlag;\n    let target = eventData.targetElement;\n\n    if (target.classList.contains('aw-widgets-chooseordropfile')) {\n      if (isHighlightFlag) {\n        addStyleToElem(target);\n      } else {\n        removeStyleFromElem(target);\n      }\n    }\n  }\n};\n\nexport const handleViewFileSelection = function (props, data) {\n  const {\n    dispatch\n  } = data;\n  const {\n    selectionData\n  } = props;\n\n  if (selectionData.value && selectionData.value.files) {\n    const updatedFileChosen = {\n      now: true,\n      uploadModelProviderSelected: true,\n      _attachedFiles: selectionData.value.files\n    };\n    dispatch({\n      path: 'data.fileChosen',\n      value: updatedFileChosen\n    });\n  }\n};\nexport const awFileUploadRenderFunction = _ref => {\n  let {\n    viewModel,\n    i18n,\n    removeTooltip,\n    fileChangeAction,\n    typeFilter,\n    multiple,\n    dndHandler,\n    formData,\n    chooseFileName,\n    uploadModel,\n    selectionData,\n    actions,\n    elementRefList\n  } = _ref;\n  let {\n    providerPopup,\n    customViewPopup\n  } = actions;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  const providerPopupRef = elementRefList.get('providerPopupRef');\n  const customViewPopupRef = elementRefList.get('customViewPopupRef');\n\n  if (uploadModel && uploadModel.length > 1) {\n    uploadModel = _.sortBy(uploadModel, ['priority']);\n  }\n\n  let attachedFiles;\n  let attachedFile = [];\n\n  if (formData instanceof FormData) {\n    for (var value of formData.values()) {\n      attachedFile.push(value);\n    }\n  }\n\n  if (!multiple && formData instanceof FormData && attachedFile.length > 0) {\n    attachedFiles = formData;\n    data.fileChosen.now = true;\n    let fileExt = fileSvc.getFileExtension(attachedFile[0].name);\n\n    if (fileExt !== '') {\n      fileExt = _.replace(fileExt, '.', '');\n    }\n\n    let validFile = fileSvc.fileMatchTypes(typeFilter, fileExt);\n\n    if (!validFile) {\n      eventBus.publish('invalidFileSelected', {});\n      dispatch({\n        path: 'data.fileChosen',\n        value: {\n          now: false,\n          uploadModelProviderSelected: false\n        }\n      });\n    }\n  } else {\n    attachedFiles = data.fileChosen._attachedFiles ? data.fileChosen._attachedFiles : new FormData();\n  }\n\n  data.fileChosen._attachedFiles = attachedFiles; // ChangeEvent<HTMLInputElement>\n\n  const updateData = (files, isAppend) => {\n    let validFile = true;\n\n    if (files.length > 0) {\n      let fileNames = [];\n      let fileNameNoExts = [];\n      let fileExts = [];\n      let fileInputForms = [];\n      files.forEach(fileItem => {\n        let fileName = fileItem.name;\n        let fileNameNoExt = fileSvc.getFileNameWithoutExtension(fileName);\n        let fileExt = fileSvc.getFileExtension(fileName);\n\n        if (fileExt !== '') {\n          fileExt = _.replace(fileExt, '.', '');\n        }\n\n        validFile = fileSvc.fileMatchTypes(typeFilter, fileExt);\n        fileNames.push(fileName);\n        fileNameNoExts.push(fileNameNoExt);\n        fileExts.push(fileExt);\n        fileInputForms.push({\n          selectedFile: fileName,\n          file: fileItem\n        });\n      });\n\n      if (!multiple) {\n        if (!validFile) {\n          eventBus.publish('invalidFileSelected', {});\n          dispatch({\n            path: 'data.fileChosen',\n            value: {\n              now: false,\n              uploadModelProviderSelected: false\n            }\n          });\n        }\n\n        data.formData = new FormData();\n        data.formData.append('fmsFile', files[0]);\n        data.fileInputForms = data.formData;\n        data.fileName = fileNames[0];\n        data.fileNameNoExt = fileNameNoExts[0];\n        data.fileExt = fileExts[0];\n      } else {\n        data.fileName = data.fileName && isAppend ? [...data.fileName, ...fileNames] : fileNames;\n        data.fileNameNoExt = data.fileNameNoExt && isAppend ? [...data.fileNameNoExt, ...fileNameNoExts] : fileNameNoExts;\n        data.fileExt = data.fileExt && isAppend ? [...data.fileExt, ...fileExts] : fileExts;\n        data.fileInputForms = data.fileInputForms && isAppend ? [...fileInputForms, ...data.fileInputForms] : fileInputForms;\n      }\n\n      data.validFile = validFile;\n      data.fileChosen.now = true;\n\n      if (validFile && data.fileChosen.uploadModelProviderSelected) {\n        attachedFiles = new FormData();\n      }\n\n      dispatch({\n        path: 'data.fileChosen',\n        value: {\n          now: true,\n          uploadModelProviderSelected: false\n        }\n      });\n      const fileInfo = {\n        fileName: data.fileName,\n        fileNameNoExt: data.fileNameNoExt,\n        validFile: data.validFile,\n        fileExt: data.fileExt,\n        formData: data.fileInputForms\n      }; // call action when file selection changed, inputData : {{ data.formData}}\n\n      if (fileChangeAction) {\n        fileChangeAction(fileInfo);\n      }\n\n      if (selectionData) {\n        // Required model info & file info updates\n        const updateInfo = selectionData.value;\n        updateInfo.selectedFileInfo = fileInfo;\n\n        if (_.isEmpty(updateInfo.modelInfo) && uploadModel && uploadModel.length > 0) {\n          updateInfo.modelInfo = uploadModel[0];\n        }\n\n        selectionData.update(updateInfo);\n      }\n    } else {\n      const fileInfo = {\n        fileName: undefined,\n        fileNameNoExt: undefined,\n        validFile: undefined,\n        fileExt: undefined,\n        formData: undefined\n      };\n\n      if (fileChangeAction) {\n        fileChangeAction(fileInfo);\n      }\n\n      if (selectionData) {\n        // Required model info & file info updates\n        const updateInfo = selectionData.value;\n        updateInfo.modelInfo = undefined;\n        updateInfo.selectedFileInfo = fileInfo;\n        selectionData.update(updateInfo);\n      }\n    }\n\n    return validFile;\n  };\n\n  let typesSet = null;\n\n  if (typeFilter && '*' !== typeFilter && '.' !== typeFilter) {\n    typesSet = new Set(typeFilter.split(',').map(item => {\n      const validFileExt = item.trim();\n      return _.replace(validFileExt.toLowerCase(), '.', '');\n    }));\n  }\n\n  const allFileMatchTypes = items => {\n    if (!typesSet) {\n      return true;\n    }\n\n    let allMatched = true;\n    const fileItemsArray = Array.from(items);\n    fileItemsArray.forEach(fileItem => {\n      let fileExt = fileSvc.getFileExtension(fileItem.name);\n\n      if (fileExt !== '') {\n        fileExt = _.replace(fileExt, '.', '');\n      }\n\n      if (!typesSet.has(fileExt.toLowerCase())) {\n        allMatched = false;\n      }\n    });\n    return allMatched;\n  }; // ChangeEvent<HTMLInputElement>\n\n\n  const handleFileChange = e => {\n    const files = e.target.files;\n    let filesArr = Array.from(files);\n    updateAttachedFiles(filesArr);\n    e.target.value = '';\n  }; // ClickEvent<HTMLInputElement>\n\n\n  const handleClick = e => {\n    if (uploadModel) {\n      let providerPopupToDisplay = true; // By default if there is a single configuration without popupViewId then the local file selection is invoked.\n\n      if (uploadModel.length === 1 && !uploadModel[0].popupViewId) {\n        providerPopupToDisplay = false;\n\n        if (selectionData) {\n          // Required model info update\n          selectionData.value.modelInfo = uploadModel[0];\n        }\n      }\n\n      if (providerPopupToDisplay) {\n        const inputElement = providerPopupRef.current;\n        const isUploadModelOptionClick = inputElement.getAttribute('isUploadModelOptionClick');\n\n        if (!isUploadModelOptionClick) {\n          e.preventDefault(); // case click or enter\n\n          providerPopup.show({\n            reference: inputElement,\n            width: inputElement.offsetWidth,\n            className: 'sw-lov-popup'\n          });\n        } else {\n          domApis.removeAttribute(inputElement, 'isUploadModelOptionClick');\n          providerPopup.hide();\n        }\n      }\n    }\n  };\n\n  const handleUploadModelOptionSelect = (e, model) => {\n    if (model.name && model.popupViewId) {\n      e.preventDefault();\n      customViewPopup.show({\n        reference: customViewPopupRef.current,\n        view: model.popupViewId,\n        subPanelContext: {\n          selectionData: selectionData,\n          ...model\n        },\n        caption: model.caption\n      });\n      providerPopup.hide();\n    } else {\n      if (selectionData) {\n        // Required model info update\n        selectionData.value.modelInfo = model;\n      }\n\n      const inputElement = providerPopupRef.current;\n      domApis.setAttribute(inputElement, 'isUploadModelOptionClick', true);\n      inputElement.click();\n    }\n  }; // KeyDownEvent<HTMLInputElement>\n\n\n  const handleUploadModelOptionKeyDown = (e, optionName) => {\n    if (e.key && (e.key === 'Enter' || e.key === ' ')) {\n      handleUploadModelOptionSelect(e, optionName);\n    }\n  };\n\n  const isFileUploadWidgetFocused = () => {\n    let fileInputElement = document.getElementsByClassName('aw-file-upload-fileInput');\n\n    if (fileInputElement && fileInputElement.length > 0) {\n      return document.activeElement === fileInputElement[0];\n    }\n\n    return false;\n  };\n\n  const handleFocus = () => {\n    fileLabelElement = document.getElementsByClassName('aw-file-upload-fileLabel');\n\n    if (fileLabelElement && fileLabelElement.length > 0) {\n      fileLabelElement[0].classList.add(...classesForFileLabelElementFocus);\n    }\n\n    fileNameElement = document.getElementsByClassName('aw-file-upload-fileName');\n\n    if (fileNameElement && fileNameElement.length > 0) {\n      fileNameElement[0].classList.add(...classesForFileNameElementFocus);\n    }\n  };\n\n  const handleBlur = () => {\n    if (fileLabelElement && fileLabelElement.length > 0) {\n      fileLabelElement[0].classList.remove(...classesForFileLabelElementFocus);\n    }\n\n    if (fileNameElement && fileNameElement.length > 0) {\n      fileNameElement[0].classList.remove(...classesForFileNameElementFocus);\n    }\n\n    fileNameElementAfterFileUploaded = document.getElementsByClassName('file-upload-selected-file');\n\n    if (fileNameElementAfterFileUploaded && fileNameElementAfterFileUploaded.length > 0) {\n      fileNameElementAfterFileUploaded[0].classList.remove(...classesForFileNameElementFocus);\n    }\n  };\n\n  const getClassesAfterFileUpload = () => {\n    if (isFileUploadWidgetFocused()) {\n      return 'aw-file-upload-fileName '.concat('file-upload-selected-file ').concat('aw-file-uploadFocus ').concat('aw-file-uploadFileNameFocus');\n    }\n\n    return 'aw-file-upload-fileName '.concat('file-upload-selected-file');\n  };\n\n  const refreshFileListInfo = isChosen => {\n    dispatch({\n      path: 'data.fileChosen',\n      value: {\n        now: isChosen,\n        uploadModelProviderSelected: false,\n        _attachedFiles: attachedFiles\n      }\n    });\n  }; // Deletes file from attachedFiles list\n\n\n  const deleteFile = name => {\n    let fileNames = data.fileName;\n\n    if (_.isArray(fileNames)) {\n      let indxToRemove = fileNames.indexOf(name);\n      data.fileName.splice(indxToRemove, 1);\n      data.fileNameNoExt.splice(indxToRemove, 1);\n      data.fileInputForms.splice(indxToRemove, 1);\n      data.fileExt.splice(indxToRemove, 1);\n    }\n\n    attachedFiles.delete(name);\n  };\n  /**\n   * @param { File[] } files - files\n   * @return {File[] } resultFiles\n   */\n\n\n  const filterTypes = function (files) {\n    let allMatchedType = true;\n\n    if (!typesSet) {\n      return files;\n    }\n\n    const resultFiles = files.filter(file => {\n      const fileTypes = file.name.split('.'); // in case of 1.x.dat\n\n      const fileType = fileTypes[fileTypes.length - 1];\n\n      if (!multiple || typesSet.has(fileType)) {\n        return true;\n      }\n\n      allMatchedType = false;\n      return false;\n    });\n\n    if (!allMatchedType) {\n      eventBus.publish('invalidFileSelected', {});\n    }\n\n    return resultFiles;\n  };\n  /**\n   *\n   * @param { File[] } filesArray - array of files to be uploaded\n   * @param { Boolean } isAppend - isAppend\n   */\n\n\n  const updateAttachedFiles = function (filesArray) {\n    let isAppend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    updateData(filesArray, isAppend);\n    const typeFilterFiles = filterTypes(filesArray);\n\n    if (!multiple && typeFilterFiles.length > 0) {\n      //If single mode and typeFilterFiles are valid , delete existing file before updating\n      for (var file of attachedFiles.values()) {\n        deleteFile(file.name);\n      }\n    }\n\n    typeFilterFiles.forEach(file => {\n      attachedFiles.set(file.name, file);\n    });\n    refreshFileListInfo(true);\n  };\n\n  const handleImplicitFilesAttachment = e => {\n    if (fileSvc.dataTransferContainsFiles(e) && allFileMatchTypes(e.dataTransfer.files)) {\n      const filesArray = Array.from(e.dataTransfer.files);\n      updateAttachedFiles(filesArray);\n    }\n  };\n\n  const callbackAPIs = {\n    highlightTarget: highlightWidget,\n    updateFileData: handleImplicitFilesAttachment,\n    getTargetElementAndVmo: event => {\n      let targetVMO = null;\n      let target = event.currentTarget;\n      return {\n        targetElement: target,\n        targetVMO: targetVMO\n      };\n    }\n  }; //DragEvent<HTMLElement>\n\n  const handleDrop = e => {\n    let targetEle = e.currentTarget; // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n    // hence NOT leaving it to contributed handlers to implement it\n\n    removeStyleFromElem(targetEle);\n\n    if (e.dataTransfer) {\n      e.dataTransfer.dropEffect = 'none';\n      e.preventDefault();\n    }\n\n    handleDrag(false);\n\n    if (dndHandler && dndHandler[e.type]) {\n      let fun = dndHandler[e.type];\n      fun(e, {\n        targetElement: targetEle,\n        targetVMO: null\n      }, callbackAPIs);\n    } else {\n      handleImplicitFilesAttachment(e);\n    }\n  };\n\n  const handleClickDeselect = (e, name) => {\n    if (!data.fileChosen.uploadModelProviderSelected) {\n      e.preventDefault();\n      deleteFile(name);\n      updateAttachedFiles(getAttachedFiles(), false);\n    } else {\n      const currentAttachedFiles = data.fileChosen._attachedFiles;\n      const index = currentAttachedFiles.findIndex(file => file.name === name);\n      currentAttachedFiles.splice(index, 1);\n\n      if (currentAttachedFiles.length === 0) {\n        updateData([], false);\n      }\n\n      dispatch({\n        path: 'data.fileChosen',\n        value: {\n          now: true,\n          uploadModelProviderSelected: true,\n          _attachedFiles: currentAttachedFiles\n        }\n      });\n    }\n  };\n\n  const getAttachedFiles = () => {\n    let attachedFileArray = [];\n\n    for (var value of attachedFiles.values()) {\n      attachedFileArray.push(value);\n    }\n\n    return attachedFileArray;\n  }; // set Dragger highlight when over: boolean\n\n\n  const handleDrag = over => {\n    dispatch({\n      path: 'data.isDragOn',\n      value: over\n    });\n  };\n\n  const fileDragOver = e => {\n    let targetEle = e.currentTarget; // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n    // hence NOT leaving it to contributed handlers to implement it\n\n    addStyleToElem(targetEle);\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (dndHandler && dndHandler[e.type]) {\n      let fun = dndHandler[e.type];\n      fun(e, {\n        targetElement: targetEle,\n        targetVMO: null\n      }, callbackAPIs);\n    }\n  }; // clear the drag style after drop or drop leave\n\n  /**\n   * @param {DragEvent<HtmlElement>} e : the drag event\n   */\n\n\n  const fileDragLeave = e => {\n    let targetEle = e.currentTarget; // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n    // hence NOT leaving it to contributed handlers to implement it\n\n    removeStyleFromElem(targetEle);\n\n    if (e.dataTransfer) {\n      e.dataTransfer.dropEffect = 'none';\n      e.preventDefault();\n    }\n\n    handleDrag(false);\n\n    if (dndHandler && dndHandler[e.type]) {\n      let fun = dndHandler[e.type];\n      fun(e, {\n        targetElement: targetEle,\n        targetVMO: null\n      }, callbackAPIs);\n    }\n  };\n\n  let filesToDisp = getAttachedFiles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-file-upload-container aw-file-upload-initial aw-widgets-chooseordropfile\",\n    onDragOver: e => fileDragOver(e),\n    onDragLeave: e => {\n      fileDragLeave(e);\n    },\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sw-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-file-upload-fileLabel\",\n        ref: customViewPopupRef,\n        children: [\"  \", chooseFileName ? chooseFileName : i18n.ChooseFile, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), filesToDisp && filesToDisp.length === 0 && !multiple && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-file-upload-fileName\",\n        children: [\" \", i18n.singleUpload, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 75\n      }, this), multiple && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-file-upload-fileName\",\n        children: [\" \", i18n.multipleUpload, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 32\n      }, this), filesToDisp && filesToDisp.length > 0 && data.fileChosen.now && !multiple && /*#__PURE__*/_jsxDEV(\"div\", {\n        onDrop: handleDrop,\n        className: getClassesAfterFileUpload(),\n        children: /*#__PURE__*/_jsxDEV(AwFileUploadLabel, {\n          removeTooltip: removeTooltip,\n          item: filesToDisp[0],\n          removeFileHandler: handleClickDeselect\n        }, filesToDisp[0].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: providerPopupRef,\n        \"data-locator\": \"aw-fileUpload\",\n        multiple: multiple,\n        className: \"aw-file-upload-fileInput\",\n        type: \"file\",\n        accept: typeFilter,\n        onChange: handleFileChange,\n        onClick: handleClick,\n        title: filesToDisp && filesToDisp[0] && filesToDisp[0].name,\n        onFocus: handleFocus,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }, this), providerPopup.open && /*#__PURE__*/_jsxDEV(AwPopup, { ...providerPopup.options,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-base-scrollPanel\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            role: \"listbox\",\n            tabIndex: 0,\n            className: \"sw-column\",\n            children: uploadModel.map(model => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                role: \"option\",\n                \"aria-selected\": \"false\",\n                tabIndex: -1,\n                onClick: e => handleUploadModelOptionSelect(e, model),\n                onKeyDown: e => handleUploadModelOptionKeyDown(e, model.name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sw-row sw-component\",\n                    children: [/*#__PURE__*/_jsxDEV(AwPic, {\n                      className: \"aw-widget-thumbnail\",\n                      iconId: model.iconName,\n                      source: model.iconName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sw-cell-valName\",\n                      title: model.name,\n                      children: model.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 37\n                }, this)\n              }, model.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 41\n      }, this), customViewPopup.open && /*#__PURE__*/_jsxDEV(AwPopup, { ...customViewPopup.options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }, this), multiple && filesToDisp && filesToDisp.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"aw-upload-list-items\",\n      children: filesToDisp.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"sw-flex-row\",\n          children: /*#__PURE__*/_jsxDEV(AwFileUploadLabel, {\n            removeTooltip: removeTooltip,\n            item: item,\n            removeFileHandler: handleClickDeselect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 41\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["_","eventBus","fileSvc","AwFileUploadLabel","AwPopup","AwPic","domUtils","domApis","DOMAPIs","fileLabelElement","fileNameElement","fileNameElementAfterFileUploaded","classesForFileLabelElementFocus","classesForFileNameElementFocus","addStyleToElem","elem","classList","add","removeStyleFromElem","remove","highlightWidget","eventData","isUndefined","targetElement","isHighlightFlag","target","contains","handleViewFileSelection","props","data","dispatch","selectionData","value","files","updatedFileChosen","now","uploadModelProviderSelected","_attachedFiles","path","awFileUploadRenderFunction","viewModel","i18n","removeTooltip","fileChangeAction","typeFilter","multiple","dndHandler","formData","chooseFileName","uploadModel","actions","elementRefList","providerPopup","customViewPopup","providerPopupRef","get","customViewPopupRef","length","sortBy","attachedFiles","attachedFile","FormData","values","push","fileChosen","fileExt","getFileExtension","name","replace","validFile","fileMatchTypes","publish","updateData","isAppend","fileNames","fileNameNoExts","fileExts","fileInputForms","forEach","fileItem","fileName","fileNameNoExt","getFileNameWithoutExtension","selectedFile","file","append","fileInfo","updateInfo","selectedFileInfo","isEmpty","modelInfo","update","undefined","typesSet","Set","split","map","item","validFileExt","trim","toLowerCase","allFileMatchTypes","items","allMatched","fileItemsArray","Array","from","has","handleFileChange","e","filesArr","updateAttachedFiles","handleClick","providerPopupToDisplay","popupViewId","inputElement","current","isUploadModelOptionClick","getAttribute","preventDefault","show","reference","width","offsetWidth","className","removeAttribute","hide","handleUploadModelOptionSelect","model","view","subPanelContext","caption","setAttribute","click","handleUploadModelOptionKeyDown","optionName","key","isFileUploadWidgetFocused","fileInputElement","document","getElementsByClassName","activeElement","handleFocus","handleBlur","getClassesAfterFileUpload","concat","refreshFileListInfo","isChosen","deleteFile","isArray","indxToRemove","indexOf","splice","delete","filterTypes","allMatchedType","resultFiles","filter","fileTypes","fileType","filesArray","typeFilterFiles","set","handleImplicitFilesAttachment","dataTransferContainsFiles","dataTransfer","callbackAPIs","highlightTarget","updateFileData","getTargetElementAndVmo","event","targetVMO","currentTarget","handleDrop","targetEle","dropEffect","handleDrag","type","fun","handleClickDeselect","getAttachedFiles","currentAttachedFiles","index","findIndex","attachedFileArray","over","fileDragOver","stopPropagation","fileDragLeave","filesToDisp","ChooseFile","singleUpload","multipleUpload","open","options","iconName"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwFileUploadService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport fileSvc from 'js/awFileService';\nimport AwFileUploadLabel from 'viewmodel/AwFileUploadLabelViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport domUtils from 'js/domUtils';\n\nconst domApis = domUtils.DOMAPIs;\nvar fileLabelElement;\nvar fileNameElement;\nvar fileNameElementAfterFileUploaded;\nvar classesForFileLabelElementFocus = [\n    'aw-file-uploadFocus',\n    'aw-file-uploadFileLabelFocus'\n];\nvar classesForFileNameElementFocus = [\n    'aw-file-uploadFocus',\n    'aw-file-uploadFileNameFocus'\n];\n\nconst addStyleToElem = elem => {\n    elem.classList.add( 'aw-widgets-dropframe' );\n    elem.classList.add( 'aw-theme-dropframe' );\n};\n\nconst removeStyleFromElem = elem => {\n    elem.classList.remove( 'aw-widgets-dropframe' );\n    elem.classList.remove( 'aw-theme-dropframe' );\n};\n\nconst highlightWidget = ( eventData ) => {\n    if( !_.isUndefined( eventData ) && !_.isUndefined( eventData.targetElement ) && eventData.targetElement.classList ) {\n        let isHighlightFlag = eventData.isHighlightFlag;\n        let target = eventData.targetElement;\n        if( target.classList.contains( 'aw-widgets-chooseordropfile' ) ) {\n            if( isHighlightFlag ) {\n                addStyleToElem( target );\n            } else {\n                removeStyleFromElem( target );\n            }\n        }\n    }\n};\n\nexport const handleViewFileSelection = function( props, data ) {\n    const { dispatch } = data;\n    const { selectionData } = props;\n\n    if( selectionData.value && selectionData.value.files ) {\n        const updatedFileChosen = {\n            now: true,\n            uploadModelProviderSelected: true,\n            _attachedFiles: selectionData.value.files\n        };\n        dispatch( { path: 'data.fileChosen', value: updatedFileChosen } );\n    }\n};\n\nexport const awFileUploadRenderFunction = ( {\n    viewModel,\n    i18n,\n    removeTooltip,\n    fileChangeAction,\n    typeFilter,\n    multiple,\n    dndHandler,\n    formData,\n    chooseFileName,\n    uploadModel,\n    selectionData,\n    actions,\n    elementRefList\n} ) => {\n    let { providerPopup, customViewPopup } = actions;\n    const { data, dispatch } = viewModel;\n\n    const providerPopupRef = elementRefList.get( 'providerPopupRef' );\n    const customViewPopupRef = elementRefList.get( 'customViewPopupRef' );\n\n    if( uploadModel && uploadModel.length > 1 ) {\n        uploadModel = _.sortBy( uploadModel, [ 'priority' ] );\n    }\n\n    let attachedFiles;\n    let attachedFile = [];\n    if( formData instanceof FormData ) {\n        for( var value of formData.values() ) {\n            attachedFile.push( value );\n        }\n    }\n    if( !multiple && formData instanceof FormData && attachedFile.length > 0 ) {\n        attachedFiles = formData;\n        data.fileChosen.now = true;\n        let fileExt = fileSvc.getFileExtension( attachedFile[ 0 ].name );\n        if( fileExt !== '' ) {\n            fileExt = _.replace( fileExt, '.', '' );\n        }\n        let validFile = fileSvc.fileMatchTypes( typeFilter, fileExt );\n        if( !validFile ) {\n            eventBus.publish( 'invalidFileSelected', {} );\n            dispatch( { path: 'data.fileChosen', value: { now: false, uploadModelProviderSelected: false } } );\n        }\n    } else {\n        attachedFiles = data.fileChosen._attachedFiles ? data.fileChosen._attachedFiles : new FormData();\n    }\n    data.fileChosen._attachedFiles = attachedFiles;\n\n    // ChangeEvent<HTMLInputElement>\n    const updateData = ( files, isAppend ) => {\n        let validFile = true;\n        if( files.length > 0 ) {\n            let fileNames = [];\n            let fileNameNoExts = [];\n            let fileExts = [];\n            let fileInputForms = [];\n            files.forEach( fileItem => {\n                let fileName = fileItem.name;\n                let fileNameNoExt = fileSvc.getFileNameWithoutExtension( fileName );\n                let fileExt = fileSvc.getFileExtension( fileName );\n                if( fileExt !== '' ) {\n                    fileExt = _.replace( fileExt, '.', '' );\n                }\n                validFile = fileSvc.fileMatchTypes( typeFilter, fileExt );\n                fileNames.push( fileName );\n                fileNameNoExts.push( fileNameNoExt );\n                fileExts.push( fileExt );\n                fileInputForms.push( { selectedFile: fileName, file: fileItem } );\n            } );\n            if( !multiple ) {\n                if( !validFile ) {\n                    eventBus.publish( 'invalidFileSelected', {} );\n                    dispatch( { path: 'data.fileChosen', value: { now: false, uploadModelProviderSelected: false } } );\n                }\n                data.formData = new FormData();\n                data.formData.append( 'fmsFile', files[ 0 ] );\n                data.fileInputForms = data.formData;\n                data.fileName = fileNames[ 0 ];\n                data.fileNameNoExt = fileNameNoExts[ 0 ];\n                data.fileExt = fileExts[ 0 ];\n            } else {\n                data.fileName = data.fileName && isAppend ? [ ...data.fileName, ...fileNames ] : fileNames;\n                data.fileNameNoExt = data.fileNameNoExt && isAppend ? [ ...data.fileNameNoExt, ...fileNameNoExts ] : fileNameNoExts;\n                data.fileExt = data.fileExt && isAppend ? [ ...data.fileExt, ...fileExts ] : fileExts;\n                data.fileInputForms = data.fileInputForms && isAppend ? [ ...fileInputForms, ...data.fileInputForms ] : fileInputForms;\n            }\n            data.validFile = validFile;\n            data.fileChosen.now = true;\n            if( validFile && data.fileChosen.uploadModelProviderSelected ) {\n                attachedFiles = new FormData();\n            }\n            dispatch( { path: 'data.fileChosen', value: { now: true, uploadModelProviderSelected: false } } );\n\n            const fileInfo = {\n                fileName: data.fileName,\n                fileNameNoExt: data.fileNameNoExt,\n                validFile: data.validFile,\n                fileExt: data.fileExt,\n                formData: data.fileInputForms\n            };\n\n            // call action when file selection changed, inputData : {{ data.formData}}\n            if( fileChangeAction ) {\n                fileChangeAction( fileInfo );\n            }\n            if( selectionData ) {\n                // Required model info & file info updates\n                const updateInfo = selectionData.value;\n                updateInfo.selectedFileInfo = fileInfo;\n                if ( _.isEmpty( updateInfo.modelInfo ) && uploadModel && uploadModel.length > 0 ) {\n                    updateInfo.modelInfo = uploadModel[0];\n                }\n                selectionData.update( updateInfo );\n            }\n        } else {\n            const fileInfo = {\n                fileName: undefined,\n                fileNameNoExt: undefined,\n                validFile: undefined,\n                fileExt: undefined,\n                formData: undefined\n            };\n            if( fileChangeAction ) {\n                fileChangeAction( fileInfo );\n            }\n            if( selectionData ) {\n                // Required model info & file info updates\n                const updateInfo = selectionData.value;\n                updateInfo.modelInfo = undefined;\n                updateInfo.selectedFileInfo = fileInfo;\n                selectionData.update( updateInfo );\n            }\n        }\n        return validFile;\n    };\n\n    let typesSet = null;\n\n    if( typeFilter && '*' !== typeFilter && '.' !== typeFilter ) {\n        typesSet = new Set( typeFilter.split( ',' ).map( item => {\n            const validFileExt = item.trim();\n            return _.replace( validFileExt.toLowerCase(), '.', '' );\n        } ) );\n    }\n\n    const allFileMatchTypes = ( items ) => {\n        if( !typesSet ) {\n            return true;\n        }\n        let allMatched = true;\n        const fileItemsArray = Array.from( items );\n        fileItemsArray.forEach( fileItem => {\n            let fileExt = fileSvc.getFileExtension( fileItem.name );\n            if( fileExt !== '' ) {\n                fileExt = _.replace( fileExt, '.', '' );\n            }\n            if( !typesSet.has( fileExt.toLowerCase() ) ) {\n                allMatched = false;\n            }\n        } );\n        return allMatched;\n    };\n\n    // ChangeEvent<HTMLInputElement>\n    const handleFileChange = ( e ) => {\n        const files = e.target.files;\n        let filesArr = Array.from( files );\n        updateAttachedFiles( filesArr );\n        e.target.value = '';\n    };\n\n    // ClickEvent<HTMLInputElement>\n    const handleClick = ( e ) => {\n        if( uploadModel ) {\n            let providerPopupToDisplay = true;\n            // By default if there is a single configuration without popupViewId then the local file selection is invoked.\n            if( uploadModel.length === 1 && !uploadModel[ 0 ].popupViewId ) {\n                providerPopupToDisplay = false;\n                if( selectionData ) {\n                    // Required model info update\n                    selectionData.value.modelInfo = uploadModel[ 0 ];\n                }\n            }\n\n            if( providerPopupToDisplay ) {\n                const inputElement = providerPopupRef.current;\n                const isUploadModelOptionClick = inputElement.getAttribute( 'isUploadModelOptionClick' );\n                if( !isUploadModelOptionClick ) {\n                    e.preventDefault();\n\n                    // case click or enter\n                    providerPopup.show( {\n                        reference: inputElement,\n                        width: inputElement.offsetWidth,\n                        className: 'sw-lov-popup'\n                    } );\n                } else {\n                    domApis.removeAttribute( inputElement, 'isUploadModelOptionClick' );\n                    providerPopup.hide();\n                }\n            }\n        }\n    };\n\n    const handleUploadModelOptionSelect = ( e, model ) => {\n        if( model.name && model.popupViewId ) {\n            e.preventDefault();\n\n            customViewPopup.show( {\n                reference: customViewPopupRef.current,\n                view: model.popupViewId,\n                subPanelContext: {\n                    selectionData: selectionData,\n                    ...model\n                },\n                caption: model.caption\n            } );\n\n            providerPopup.hide();\n        } else {\n            if( selectionData ) {\n                // Required model info update\n                selectionData.value.modelInfo = model;\n            }\n            const inputElement = providerPopupRef.current;\n            domApis.setAttribute( inputElement, 'isUploadModelOptionClick', true );\n            inputElement.click();\n        }\n    };\n\n    // KeyDownEvent<HTMLInputElement>\n    const handleUploadModelOptionKeyDown = ( e, optionName ) => {\n        if( e.key && ( e.key === 'Enter' || e.key === ' ' ) ) {\n            handleUploadModelOptionSelect( e, optionName );\n        }\n    };\n\n    const isFileUploadWidgetFocused = () => {\n        let fileInputElement = document.getElementsByClassName( 'aw-file-upload-fileInput' );\n        if( fileInputElement && fileInputElement.length > 0 ) {\n            return document.activeElement === fileInputElement[ 0 ];\n        }\n        return false;\n    };\n\n    const handleFocus = () => {\n        fileLabelElement = document.getElementsByClassName( 'aw-file-upload-fileLabel' );\n        if( fileLabelElement && fileLabelElement.length > 0 ) {\n            fileLabelElement[ 0 ].classList.add( ...classesForFileLabelElementFocus );\n        }\n\n        fileNameElement = document.getElementsByClassName( 'aw-file-upload-fileName' );\n        if( fileNameElement && fileNameElement.length > 0 ) {\n            fileNameElement[ 0 ].classList.add( ...classesForFileNameElementFocus );\n        }\n    };\n\n    const handleBlur = () => {\n        if( fileLabelElement && fileLabelElement.length > 0 ) {\n            fileLabelElement[ 0 ].classList.remove( ...classesForFileLabelElementFocus );\n        }\n        if( fileNameElement && fileNameElement.length > 0 ) {\n            fileNameElement[ 0 ].classList.remove( ...classesForFileNameElementFocus );\n        }\n\n        fileNameElementAfterFileUploaded = document.getElementsByClassName( 'file-upload-selected-file' );\n        if( fileNameElementAfterFileUploaded && fileNameElementAfterFileUploaded.length > 0 ) {\n            fileNameElementAfterFileUploaded[ 0 ].classList.remove( ...classesForFileNameElementFocus );\n        }\n    };\n\n    const getClassesAfterFileUpload = () => {\n        if( isFileUploadWidgetFocused() ) {\n            return 'aw-file-upload-fileName '\n                .concat( 'file-upload-selected-file ' )\n                .concat( 'aw-file-uploadFocus ' )\n                .concat( 'aw-file-uploadFileNameFocus' );\n        }\n        return 'aw-file-upload-fileName '\n            .concat( 'file-upload-selected-file' );\n    };\n\n    const refreshFileListInfo = ( isChosen ) => {\n        dispatch( { path: 'data.fileChosen', value: { now: isChosen, uploadModelProviderSelected: false, _attachedFiles: attachedFiles } } );\n    };\n\n    // Deletes file from attachedFiles list\n    const deleteFile = ( name ) => {\n        let fileNames = data.fileName;\n        if( _.isArray( fileNames ) ) {\n            let indxToRemove = fileNames.indexOf( name );\n            data.fileName.splice( indxToRemove, 1 );\n            data.fileNameNoExt.splice( indxToRemove, 1 );\n            data.fileInputForms.splice( indxToRemove, 1 );\n            data.fileExt.splice( indxToRemove, 1 );\n        }\n        attachedFiles.delete( name );\n    };\n\n    /**\n     * @param { File[] } files - files\n     * @return {File[] } resultFiles\n     */\n    const filterTypes = function( files ) {\n        let allMatchedType = true;\n\n        if( !typesSet ) {\n            return files;\n        }\n        const resultFiles = files.filter( file => {\n            const fileTypes = file.name.split( '.' );\n            // in case of 1.x.dat\n            const fileType = fileTypes[ fileTypes.length - 1 ];\n            if( !multiple || typesSet.has( fileType ) ) {\n                return true;\n            }\n            allMatchedType = false;\n            return false;\n        } );\n        if( !allMatchedType ) {\n            eventBus.publish( 'invalidFileSelected', {} );\n        }\n        return resultFiles;\n    };\n\n    /**\n     *\n     * @param { File[] } filesArray - array of files to be uploaded\n     * @param { Boolean } isAppend - isAppend\n     */\n    const updateAttachedFiles = ( filesArray, isAppend = true ) => {\n        updateData( filesArray, isAppend );\n        const typeFilterFiles = filterTypes( filesArray );\n        if( !multiple && typeFilterFiles.length > 0 ) {\n            //If single mode and typeFilterFiles are valid , delete existing file before updating\n            for( var file of attachedFiles.values() ) {\n                deleteFile( file.name );\n            }\n        }\n        typeFilterFiles.forEach( ( file ) => {\n            attachedFiles.set( file.name, file );\n        } );\n        refreshFileListInfo( true );\n    };\n\n    const handleImplicitFilesAttachment = e => {\n        if( fileSvc.dataTransferContainsFiles( e ) && allFileMatchTypes( e.dataTransfer.files ) ) {\n            const filesArray = Array.from( e.dataTransfer.files );\n            updateAttachedFiles( filesArray );\n        }\n    };\n\n    const callbackAPIs = {\n        highlightTarget: highlightWidget,\n        updateFileData: handleImplicitFilesAttachment,\n        getTargetElementAndVmo: ( event ) => {\n            let targetVMO = null;\n            let target = event.currentTarget;\n            return {\n                targetElement: target,\n                targetVMO: targetVMO\n            };\n        }\n    };\n\n    //DragEvent<HTMLElement>\n    const handleDrop = ( e ) => {\n        let targetEle = e.currentTarget;\n        // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n        // hence NOT leaving it to contributed handlers to implement it\n        removeStyleFromElem( targetEle );\n        if( e.dataTransfer ) {\n            e.dataTransfer.dropEffect = 'none';\n            e.preventDefault();\n        }\n        handleDrag( false );\n\n        if( dndHandler && dndHandler[ e.type ] ) {\n            let fun = dndHandler[ e.type ];\n            fun( e, { targetElement: targetEle, targetVMO: null }, callbackAPIs );\n        } else {\n            handleImplicitFilesAttachment( e );\n        }\n    };\n    const handleClickDeselect = ( e, name ) => {\n        if( !data.fileChosen.uploadModelProviderSelected ) {\n            e.preventDefault();\n            deleteFile( name );\n            updateAttachedFiles( getAttachedFiles(), false );\n        } else {\n            const currentAttachedFiles = data.fileChosen._attachedFiles;\n            const index = currentAttachedFiles.findIndex( ( file ) => file.name === name );\n            currentAttachedFiles.splice( index, 1 );\n            if( currentAttachedFiles.length === 0 ) {\n                updateData( [], false );\n            }\n            dispatch( { path: 'data.fileChosen', value: { now: true, uploadModelProviderSelected: true, _attachedFiles: currentAttachedFiles } } );\n        }\n    };\n\n    const getAttachedFiles = () => {\n        let attachedFileArray = [];\n        for( var value of attachedFiles.values() ) {\n            attachedFileArray.push( value );\n        }\n        return attachedFileArray;\n    };\n\n    // set Dragger highlight when over: boolean\n    const handleDrag = ( over ) => {\n        dispatch( { path: 'data.isDragOn', value: over } );\n    };\n\n    const fileDragOver = ( e ) => {\n        let targetEle = e.currentTarget;\n        // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n        // hence NOT leaving it to contributed handlers to implement it\n        addStyleToElem( targetEle );\n        e.preventDefault();\n        e.stopPropagation();\n\n        if( dndHandler && dndHandler[ e.type ] ) {\n            let fun = dndHandler[ e.type ];\n            fun( e, { targetElement: targetEle, targetVMO: null }, callbackAPIs );\n        }\n    };\n    // clear the drag style after drop or drop leave\n    /**\n     * @param {DragEvent<HtmlElement>} e : the drag event\n     */\n    const fileDragLeave = e => {\n        let targetEle = e.currentTarget;\n        // logic of applying DnD style on element and DnD cursor change is assumed to be implicit functionalities\n        // hence NOT leaving it to contributed handlers to implement it\n        removeStyleFromElem( targetEle );\n        if( e.dataTransfer ) {\n            e.dataTransfer.dropEffect = 'none';\n            e.preventDefault();\n        }\n        handleDrag( false );\n        if( dndHandler && dndHandler[ e.type ] ) {\n            let fun = dndHandler[ e.type ];\n            fun( e, { targetElement: targetEle, targetVMO: null }, callbackAPIs );\n        }\n    };\n\n    let filesToDisp = getAttachedFiles();\n    return (\n        <div className = 'aw-file-upload-container aw-file-upload-initial aw-widgets-chooseordropfile' onDragOver = { e => fileDragOver( e )}\n            onDragLeave={e => { fileDragLeave( e ); } } onDrop={handleDrop}>\n            <div className = 'sw-row'>\n                <div className = 'aw-file-upload-fileLabel' ref={customViewPopupRef}>  { chooseFileName ? chooseFileName : i18n.ChooseFile } </div>\n                { filesToDisp && filesToDisp.length === 0 && !multiple && <div className='aw-file-upload-fileName'> { i18n.singleUpload } </div> }\n                {  multiple && <div className='aw-file-upload-fileName'> { i18n.multipleUpload } </div> }\n                { filesToDisp && filesToDisp.length > 0 && data.fileChosen.now && !multiple && <div onDrop={handleDrop} className={ getClassesAfterFileUpload() }>\n                    <AwFileUploadLabel removeTooltip={removeTooltip} key={filesToDisp[0].name} item={filesToDisp[0]} removeFileHandler={handleClickDeselect}/>\n                </div> }\n                <input ref={providerPopupRef} data-locator='aw-fileUpload' multiple =  { multiple } className = 'aw-file-upload-fileInput' type='file'  accept = { typeFilter }\n                    onChange={ handleFileChange } onClick={ handleClick } title={filesToDisp && filesToDisp[0] && filesToDisp[0].name} onFocus={ handleFocus } onBlur={ handleBlur }\n                />\n                { providerPopup.open && <AwPopup {...providerPopup.options}>\n                    <div className='aw-base-scrollPanel'>\n                        <ul role='listbox' tabIndex={0}  className='sw-column'>\n                            { uploadModel.map( ( model ) => {\n                                return <li role='option' aria-selected='false' key={model.name} tabIndex={-1}\n                                    onClick={( e ) => handleUploadModelOptionSelect( e, model ) }\n                                    onKeyDown={( e ) => handleUploadModelOptionKeyDown( e, model.name ) }>\n                                    <div className='sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop'>\n                                        <div className='sw-row sw-component'>\n                                            <AwPic className='aw-widget-thumbnail' iconId={model.iconName} source={model.iconName}></AwPic>\n                                            <div className='sw-cell-valName' title={model.name}>{model.name}</div>\n                                        </div>\n                                    </div>\n                                </li>;\n                            } )}\n                        </ul>\n                    </div>\n                </AwPopup> }\n                {\n                    customViewPopup.open && <AwPopup {...customViewPopup.options} />\n                }\n            </div>\n            {\n                multiple && filesToDisp && filesToDisp.length > 0 &&\n                    <ul className = 'aw-upload-list-items'>\n                        {\n                            filesToDisp.map( item=>{\n                                return (\n                                    <li className = 'sw-flex-row' key={item.name}>\n                                        <AwFileUploadLabel removeTooltip={removeTooltip}  item={item} removeFileHandler={handleClickDeselect}></AwFileUploadLabel>\n                                    </li>\n                                );\n                            } )\n                        }\n                    </ul>\n            }\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}