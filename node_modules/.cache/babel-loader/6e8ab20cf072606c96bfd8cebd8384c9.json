{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListCommandService.js\";\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport conditionService from 'js/conditionService';\nimport AwExtendedTooltip from 'viewmodel/AwExtendedTooltipViewModel';\nimport wcagSvc from 'js/wcagService';\nimport { noop } from 'js/declUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setDisplayOption = displayOption => {\n  let options = {};\n\n  switch (displayOption) {\n    case 'ON_HOVER':\n      options.showOnHover = true;\n      break;\n\n    case 'ON_HOVER_AND_SELECTION':\n      options.showOnHover = true;\n      options.showOnSelection = true;\n      break;\n\n    case 'ON_SELECTION':\n      options.showOnSelection = true;\n      break;\n\n    case 'ALWAYS':\n      options.showAlways = true;\n      break;\n\n    default:\n      options.showOnHover = true;\n      options.showOnSelection = true;\n      break;\n  }\n\n  return options;\n};\n\nconst setPosition = position => {\n  // unify\n  position = (position || 'TOP_RIGHT').toLowerCase().replace(/_(.)/, (match, key1) => key1.toUpperCase());\n  let input = 'topRight';\n\n  if (['topRight', 'middleRight', 'bottomRight', 'topLeft', 'middleLeft', 'bottomLeft'].indexOf(position) !== -1) {\n    input = position;\n  }\n\n  let firstChar = input[0];\n  input = input.replace(firstChar, firstChar.toUpperCase());\n  return `aw-commands-cellCommand${input}`;\n};\n\nexport const awListCommandRenderFunction = props => {\n  const {\n    viewModel,\n    ctx,\n    elementRefList,\n    command,\n    vmo,\n    itemOptions\n  } = props;\n  let cmdElement = elementRefList.get('cmdElement');\n  let {\n    data\n  } = viewModel;\n  let commandContext = {\n    vmo\n  };\n  let $scope = {\n    command,\n    vmo,\n    parameters: commandContext\n  };\n  var position = null;\n  var displayOption = null;\n\n  if (command && vmo) {\n    $scope.cellCommandVisiblilty = true;\n    position = $scope.command.position;\n    displayOption = $scope.command.displayOption;\n\n    if (command.handler && command.handler.setCommandContext) {\n      command.handler.setCommandContext($scope.vmo, $scope);\n    }\n\n    if (command.action && command.condition) {\n      const evaluationEnvironment = {\n        ctx,\n        data\n      };\n      $scope.cellCommandVisiblilty = conditionService.evaluateCondition(data, command.condition, evaluationEnvironment);\n    }\n  }\n\n  $scope.positionClass = setPosition(position);\n  Object.assign($scope, setDisplayOption(displayOption));\n\n  const executeCommand = event => {\n    event.stopPropagation();\n\n    if (command.handler && command.handler.execute) {\n      command.handler.execute(vmo, $scope);\n    } else if (command.action) {\n      const dataCtxNode = {\n        commandContext,\n        data: viewModel,\n        ctx: ctx,\n        ports: viewModel.ports\n      };\n\n      if (itemOptions.actions && itemOptions.actions[command.action]) {\n        itemOptions.actions[command.action](null, {\n          vmo\n        });\n      }\n    }\n  };\n\n  let getClassName = () => {\n    let result = `${$scope.positionClass} `;\n\n    if (!$scope.cellCommandVisiblilty || $scope.showOnSelection && !vmo.selected) {\n      result += 'hiddenCell ';\n    }\n\n    if ($scope.cellCommandVisiblilty && $scope.showOnHover && !vmo.selected) {\n      result += 'aw-widgets-cellListCellCommandHover ';\n    }\n\n    if ($scope.showAlways || $scope.showOnSelection && vmo.selected) {\n      result += 'visible ';\n    }\n\n    return result.trim();\n  };\n\n  const handleKeyDown = event => {\n    if (wcagSvc.isValidKeyPress(event)) {\n      executeCommand(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: noop,\n    role: \"button\",\n    tabIndex: \"0\",\n    onClick: executeCommand,\n    onKeyDown: e => handleKeyDown(e),\n    className: `sw-aria-border aw-commands-cellCommandCommon ${getClassName()}`,\n    title: command.title && command.title.value ? command.title.value : command.title,\n    \"aria-label\": command.title && command.title.value ? command.title.value : command.title,\n    ref: cmdElement,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-commands-svg\",\n      children: /*#__PURE__*/_jsxDEV(AwIcon, {\n        iconId: command.iconId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AwExtendedTooltip, {\n      reference: cmdElement,\n      extendedTooltipOptions: null,\n      extendedTooltipContext: command,\n      extendedTooltip: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["AwIcon","conditionService","AwExtendedTooltip","wcagSvc","noop","setDisplayOption","displayOption","options","showOnHover","showOnSelection","showAlways","setPosition","position","toLowerCase","replace","match","key1","toUpperCase","input","indexOf","firstChar","awListCommandRenderFunction","props","viewModel","ctx","elementRefList","command","vmo","itemOptions","cmdElement","get","data","commandContext","$scope","parameters","cellCommandVisiblilty","handler","setCommandContext","action","condition","evaluationEnvironment","evaluateCondition","positionClass","Object","assign","executeCommand","event","stopPropagation","execute","dataCtxNode","ports","actions","getClassName","result","selected","trim","handleKeyDown","isValidKeyPress","e","title","value","iconId"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListCommandService.js"],"sourcesContent":["import AwIcon from 'viewmodel/AwIconViewModel';\nimport conditionService from 'js/conditionService';\nimport AwExtendedTooltip from 'viewmodel/AwExtendedTooltipViewModel';\nimport wcagSvc from 'js/wcagService';\nimport { noop } from 'js/declUtils';\n\nconst setDisplayOption = ( displayOption ) => {\n    let options = {};\n    switch ( displayOption ) {\n        case 'ON_HOVER':\n            options.showOnHover = true;\n            break;\n        case 'ON_HOVER_AND_SELECTION':\n            options.showOnHover = true;\n            options.showOnSelection = true;\n            break;\n        case 'ON_SELECTION':\n            options.showOnSelection = true;\n            break;\n        case 'ALWAYS':\n            options.showAlways = true;\n            break;\n        default:\n            options.showOnHover = true;\n            options.showOnSelection = true;\n            break;\n    }\n    return options;\n};\n\nconst setPosition = ( position ) => {\n    // unify\n    position = ( position || 'TOP_RIGHT' ).toLowerCase().replace( /_(.)/, ( match, key1 ) => key1.toUpperCase() );\n    let input = 'topRight';\n    if( [ 'topRight', 'middleRight', 'bottomRight',\n        'topLeft', 'middleLeft', 'bottomLeft'\n    ].indexOf( position ) !== -1 ) {\n        input = position;\n    }\n    let firstChar = input[ 0 ];\n    input = input.replace( firstChar, firstChar.toUpperCase() );\n    return `aw-commands-cellCommand${input}`;\n};\n\nexport const awListCommandRenderFunction = ( props ) => {\n    const { viewModel, ctx, elementRefList, command, vmo, itemOptions } = props;\n    let cmdElement = elementRefList.get( 'cmdElement' );\n    let { data } = viewModel;\n    let commandContext = { vmo };\n    let $scope = { command, vmo, parameters: commandContext };\n\n    var position = null;\n    var displayOption = null;\n    if( command && vmo ) {\n        $scope.cellCommandVisiblilty = true;\n        position = $scope.command.position;\n        displayOption = $scope.command.displayOption;\n        if( command.handler && command.handler.setCommandContext ) {\n            command.handler.setCommandContext( $scope.vmo, $scope );\n        }\n\n        if( command.action && command.condition ) {\n            const evaluationEnvironment = { ctx, data };\n            $scope.cellCommandVisiblilty = conditionService.evaluateCondition( data, command.condition, evaluationEnvironment );\n        }\n    }\n    $scope.positionClass = setPosition( position );\n    Object.assign( $scope, setDisplayOption( displayOption ) );\n\n    const executeCommand = ( event ) => {\n        event.stopPropagation();\n\n        if( command.handler && command.handler.execute ) {\n            command.handler.execute( vmo, $scope );\n        } else if( command.action ) {\n            const dataCtxNode = {\n                commandContext,\n                data: viewModel,\n                ctx: ctx,\n                ports: viewModel.ports\n            };\n            if( itemOptions.actions && itemOptions.actions[ command.action ] ) {\n                itemOptions.actions[ command.action ]( null, { vmo } );\n            }\n        }\n    };\n\n    let getClassName = () => {\n        let result = `${$scope.positionClass} `;\n        if( !$scope.cellCommandVisiblilty || $scope.showOnSelection && !vmo.selected ) {\n            result += 'hiddenCell ';\n        }\n        if( $scope.cellCommandVisiblilty && $scope.showOnHover && !vmo.selected ) {\n            result += 'aw-widgets-cellListCellCommandHover ';\n        }\n        if( $scope.showAlways || $scope.showOnSelection && vmo.selected ) {\n            result += 'visible ';\n        }\n        return result.trim();\n    };\n\n    const handleKeyDown = ( event ) => {\n        if( wcagSvc.isValidKeyPress( event ) ) {\n            executeCommand( event );\n        }\n    };\n\n    return (\n        <a href={noop} role='button' tabIndex='0' onClick={executeCommand} onKeyDown={( e )=> handleKeyDown( e )} className={`sw-aria-border aw-commands-cellCommandCommon ${getClassName()}`}\n            title={command.title && command.title.value ? command.title.value : command.title}\n            aria-label={command.title && command.title.value ? command.title.value : command.title}\n            ref={cmdElement}>\n            <div className='aw-commands-svg'>\n                <AwIcon iconId={command.iconId}></AwIcon>\n            </div>\n\n            <AwExtendedTooltip\n                reference={cmdElement}\n                extendedTooltipOptions={null}\n                extendedTooltipContext={command}\n                extendedTooltip={null} >\n            </AwExtendedTooltip>\n        </a>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}