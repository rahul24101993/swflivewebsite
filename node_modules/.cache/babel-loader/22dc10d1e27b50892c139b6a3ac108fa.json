{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\command\\\\src\\\\js\\\\AwToolbarInternalService.js\";\nimport AwCommand from 'viewmodel/AwCommandViewModel';\nimport AwExtendedTooltip from 'viewmodel/AwExtendedTooltipViewModel';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport AwPopupCommandCell from 'viewmodel/AwPopupCommandCellViewModel';\nimport { getCommandStates } from 'js/command.service';\nimport { getCompClass } from 'js/componentUtils';\n/**\n * Configuration for the overflow popup\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst overflowPopupOptions = {\n  advancePositioning: true,\n  autoFocus: true,\n  clickOutsideToClose: true,\n  closeWhenEsc: true,\n  flipBehavior: 'opposite',\n  resizeContainer: 'div.aw-layout-popup',\n  selectedElementCSS: '.aw-state-selected',\n  toggleMode: true,\n  whenParentScrolls: 'follow',\n  forceCloseOthers: false\n};\n/**\n * Get any class to use based on the \"showCommandLabels\" option\n *\n * @param {Boolean} showCommandLabels true/false\n * @returns {String} Class to use\n */\n\nconst getCommandLabelClass = showCommandLabels => {\n  if (showCommandLabels === false) {\n    return 'aw-commands-noLabel';\n  }\n\n  if (showCommandLabels === true) {\n    return 'aw-commands-showIconLabel';\n  }\n\n  return '';\n};\n\nexport const awToolbarInternalRenderFunction = _ref => {\n  let {\n    alignment,\n    visibilityLoader,\n    commandContext,\n    firstAnchor,\n    secondAnchor,\n    ctxMin: {\n      firstCommandDisplays: fcd,\n      secondCommandDisplays: scd\n    },\n    className,\n    showCommandLabels,\n    elementRefList,\n    overflow,\n    hideMore,\n    trace = () => null,\n    reverse = false,\n    reverseSecond = false,\n    actions: {\n      overflowPopup\n    },\n    i18n,\n    viewModel: {\n      _observer,\n      _overflownCommands\n    }\n  } = _ref;\n  //Reverse the second cmd displays for backward compibility with ng\n  scd = scd.reverse();\n  const firstCommandDisplays = reverse ? fcd.reverse() : fcd;\n  let secondCommandDisplays = reverseSecond ? scd.reverse() : scd;\n  const alignmentCls = alignment === 'VERTICAL' ? 'aw-commands-commandBarVertical' : 'aw-commands-commandBarHorizontal';\n  const commandLabelsClass = getCommandLabelClass(showCommandLabels);\n  const commandBarMain = elementRefList.get('commandBarMain');\n\n  const childCommandClickCallback = hasPopup => {\n    if (hasPopup) {\n      return;\n    }\n\n    overflowPopup.hide();\n  }; // give vertical toolbar a default background color\n\n\n  const orientationCls = alignment === 'VERTICAL' ? ' aw-toolbar-vertical aw-layout-infoCommandbar' : ' aw-toolbar-horizontal';\n\n  const renderCommand = command => {\n    return /*#__PURE__*/_jsxDEV(AwCommand, {\n      commandContext: commandContext,\n      command: command,\n      alignment: alignment,\n      visibilityLoader: visibilityLoader,\n      commandObserver: _observer,\n      overflow: _overflownCommands[command.id] ? true : null\n    }, command && command.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  };\n\n  const isVisible = command => command && command.visible;\n\n  const renderVerticalContent = (alignmentCls, secondBarClass, firstAnchor, secondAnchor, renderOverflowButton, overflownCommandsCount) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-commandBars aw-commandBar-vertical\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `aw-command-bar ${alignmentCls}`,\n          anchor: firstAnchor,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`,\n            children: renderOverflowButton ? _observer && firstCommandDisplays.filter(isVisible).map(renderCommand) : firstCommandDisplays.filter(isVisible).map(renderCommand)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row aw-bottom-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `aw-command-bar ${alignmentCls} ${secondBarClass}`,\n          anchor: secondAnchor,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`,\n            children: renderOverflowButton ? _observer && secondCommandDisplays.filter(isVisible).map(renderCommand) : secondCommandDisplays.filter(isVisible).map(renderCommand)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), renderOverflowButton && overflownCommandsCount ? renderOverflowButton() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  };\n\n  const renderWithOverflow = () => {\n    let overflownCommandsCount = 0;\n\n    const isVisibleCmd = cmd => {\n      if (cmd && cmd.visible) {\n        _overflownCommands[cmd.id] && overflownCommandsCount++;\n        return true;\n      }\n\n      return null;\n    };\n\n    const secondBarClass = alignment === 'VERTICAL' ? 'aw-second-barVertical' : 'aw-second-barHorizontal';\n    const firstVisibleCommands = firstCommandDisplays.filter(isVisibleCmd);\n    const secondVisibleCommands = secondCommandDisplays.filter(isVisibleCmd);\n    const visibleCommandCount = firstVisibleCommands.length + secondVisibleCommands.length;\n    trace(`${visibleCommandCount} commands are visible, computing command overflow`);\n\n    const overflowClickHandler = e => {\n      e.stopPropagation();\n\n      if (overflowPopup.open) {\n        overflowPopup.hide();\n      } else {\n        overflowPopup.show({ ...overflowPopupOptions,\n          placement: alignment === 'VERTICAL' ? 'left-start' : 'bottom-start'\n        });\n      }\n    };\n\n    const getOverflownCommands = () => {\n      let firstOverflownCmds = [];\n      let secondOverflownCmds = [];\n\n      for (const cmdId in _overflownCommands) {\n        let overflownCmd = firstVisibleCommands.find(command => command && command.id === cmdId);\n\n        if (!overflownCmd) {\n          overflownCmd = secondVisibleCommands.find(command => command && command.id === cmdId);\n          overflownCmd && secondOverflownCmds.unshift(overflownCmd);\n        } else {\n          firstOverflownCmds.unshift(overflownCmd);\n        }\n      }\n\n      return firstOverflownCmds.concat(secondOverflownCmds);\n    };\n\n    const renderOverflowPopup = () => {\n      return overflowPopup.open && /*#__PURE__*/_jsxDEV(AwPopup, { ...overflowPopup.options,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-popup-command-bar\",\n          children: getOverflownCommands().map(command => /*#__PURE__*/_jsxDEV(AwPopupCommandCell, {\n            commandContext: commandContext,\n            command: command,\n            alignment: alignment,\n            visibilityLoader: visibilityLoader,\n            overflow: true,\n            childCommandClickCallback: childCommandClickCallback\n          }, command && command.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 42\n      }, this);\n    };\n\n    const renderOverflowButton = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'aw-toolbarIcon aw-commands-moreButton aw-command-overflowIcon',\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `aw-commands-commandToolbarIconButton ${overflowPopup.open ? 'aw-state-selected' : ''}`,\n          \"aria-label\": i18n.MORE_BUTTON_TITLE,\n          onClick: overflowClickHandler,\n          ref: overflowPopup.reference,\n          children: /*#__PURE__*/_jsxDEV(AwIcon, {\n            iconId: \"cmdMore\",\n            className: \"aw-commands-svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AwExtendedTooltip, {\n          reference: overflowPopup.reference,\n          extendedTooltipContext: {\n            title: i18n.MORE_BUTTON_TITLE\n          },\n          extendedTooltipOptions: {\n            isCommand: true,\n            placement: 'left'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 20\n      }, this);\n    };\n\n    const renderHorizontalContent = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-commandBars aw-commandBar-horizontal\",\n        children: [firstVisibleCommands.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `aw-command-bar aw-use-commandOverflow ${alignmentCls}`,\n          anchor: firstAnchor,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`,\n            children: _observer && firstVisibleCommands.map(renderCommand)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-commandBars aw-commandBar-horizontal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 26\n        }, this), secondVisibleCommands.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `aw-command-bar aw-use-commandOverflow ${alignmentCls} ${secondBarClass}`,\n          anchor: secondAnchor,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`,\n            children: _observer && secondVisibleCommands.map(renderCommand)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 50\n        }, this) : null, overflownCommandsCount ? renderOverflowButton() : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 20\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCompClass('aw-toolbar-layout', {\n        className\n      }) + ' ' + orientationCls,\n      ref: commandBarMain,\n      children: [alignment === 'VERTICAL' ? renderVerticalContent(alignmentCls, secondBarClass, firstAnchor, secondAnchor, renderOverflowButton, overflownCommandsCount) : renderHorizontalContent(), renderOverflowPopup()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 16\n    }, this);\n  };\n\n  const renderToolbarNoOverflow = () => {\n    const cmdBarOrientationCls = alignment === 'VERTICAL' ? 'aw-commandBar-vertical' : 'aw-commandBar-horizontal';\n    const secondBarClass = alignment === 'VERTICAL' ? 'aw-second-barVertical' : 'aw-second-barHorizontal';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCompClass('aw-toolbar-layout aw-toolbar-nooverflow', {\n        className\n      }) + ' ' + orientationCls,\n      ref: commandBarMain,\n      children: alignment === 'VERTICAL' ? renderVerticalContent(alignmentCls, secondBarClass, firstAnchor, secondAnchor, null) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'aw-commandBars ' + cmdBarOrientationCls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `aw-command-bar ${alignmentCls} `,\n          anchor: firstAnchor,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`,\n            children: firstCommandDisplays.filter(isVisible).map(renderCommand)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `aw-command-bar ${alignmentCls}  ${secondBarClass}`,\n          anchor: secondAnchor,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`,\n            children: secondCommandDisplays.filter(isVisible).map(renderCommand)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 134\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this);\n  };\n\n  if (overflow && overflow !== 'false') {\n    return renderWithOverflow();\n  }\n\n  return renderToolbarNoOverflow();\n};\n/**\n * Derived state config for first set of CommandOverlay\n *\n * @param {*} vmDef vmDef\n * @param {*} param1 param1\n * @returns {[DerivedStateResult]} result\n */\n\nexport const getFirstCommandStates = (vmDef, _ref2) => {\n  let {\n    firstCommandList = [],\n    commandContext = {},\n    visibleServerCommands = {}\n  } = _ref2;\n  return getCommandStates(vmDef, {\n    commandList: firstCommandList,\n    commandContext,\n    visibleServerCommands\n  });\n};\n/**\n * Derived state config for second set of CommandOverlay\n *\n * @param {*} vmDef vmDef\n * @param {*} param1 param1\n * @returns {[DerivedStateResult]} result\n */\n\nexport const getSecondCommandStates = (vmDef, _ref3) => {\n  let {\n    secondCommandList = [],\n    commandContext = {},\n    visibleServerCommands = {}\n  } = _ref3;\n  return getCommandStates(vmDef, {\n    commandList: secondCommandList,\n    commandContext,\n    visibleServerCommands\n  });\n};","map":{"version":3,"names":["AwCommand","AwExtendedTooltip","AwIcon","AwPopup","AwPopupCommandCell","getCommandStates","getCompClass","overflowPopupOptions","advancePositioning","autoFocus","clickOutsideToClose","closeWhenEsc","flipBehavior","resizeContainer","selectedElementCSS","toggleMode","whenParentScrolls","forceCloseOthers","getCommandLabelClass","showCommandLabels","awToolbarInternalRenderFunction","alignment","visibilityLoader","commandContext","firstAnchor","secondAnchor","ctxMin","firstCommandDisplays","fcd","secondCommandDisplays","scd","className","elementRefList","overflow","hideMore","trace","reverse","reverseSecond","actions","overflowPopup","i18n","viewModel","_observer","_overflownCommands","alignmentCls","commandLabelsClass","commandBarMain","get","childCommandClickCallback","hasPopup","hide","orientationCls","renderCommand","command","id","isVisible","visible","renderVerticalContent","secondBarClass","renderOverflowButton","overflownCommandsCount","filter","map","renderWithOverflow","isVisibleCmd","cmd","firstVisibleCommands","secondVisibleCommands","visibleCommandCount","length","overflowClickHandler","e","stopPropagation","open","show","placement","getOverflownCommands","firstOverflownCmds","secondOverflownCmds","cmdId","overflownCmd","find","unshift","concat","renderOverflowPopup","options","MORE_BUTTON_TITLE","reference","title","isCommand","renderHorizontalContent","renderToolbarNoOverflow","cmdBarOrientationCls","getFirstCommandStates","vmDef","firstCommandList","visibleServerCommands","commandList","getSecondCommandStates","secondCommandList"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/command/src/js/AwToolbarInternalService.js"],"sourcesContent":["import AwCommand from 'viewmodel/AwCommandViewModel';\nimport AwExtendedTooltip from 'viewmodel/AwExtendedTooltipViewModel';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPopup from 'viewmodel/AwPopupViewModel';\nimport AwPopupCommandCell from 'viewmodel/AwPopupCommandCellViewModel';\nimport { getCommandStates } from 'js/command.service';\nimport { getCompClass } from 'js/componentUtils';\n\n/**\n * Configuration for the overflow popup\n */\nconst overflowPopupOptions = {\n    advancePositioning: true,\n    autoFocus: true,\n    clickOutsideToClose: true,\n    closeWhenEsc: true,\n    flipBehavior: 'opposite',\n    resizeContainer: 'div.aw-layout-popup',\n    selectedElementCSS: '.aw-state-selected',\n    toggleMode: true,\n    whenParentScrolls: 'follow',\n    forceCloseOthers: false\n};\n\n/**\n * Get any class to use based on the \"showCommandLabels\" option\n *\n * @param {Boolean} showCommandLabels true/false\n * @returns {String} Class to use\n */\nconst getCommandLabelClass = ( showCommandLabels ) => {\n    if( showCommandLabels === false ) {\n        return 'aw-commands-noLabel';\n    }\n    if( showCommandLabels === true ) {\n        return 'aw-commands-showIconLabel';\n    }\n    return '';\n};\n\nexport const awToolbarInternalRenderFunction = ( { alignment, visibilityLoader, commandContext, firstAnchor, secondAnchor, ctxMin: { firstCommandDisplays: fcd, secondCommandDisplays: scd },\n    className, showCommandLabels, elementRefList, overflow, hideMore, trace = () => null, reverse = false, reverseSecond = false,\n    actions: { overflowPopup }, i18n, viewModel: { _observer, _overflownCommands  } } ) => {\n    //Reverse the second cmd displays for backward compibility with ng\n    scd = scd.reverse();\n    const firstCommandDisplays = reverse ? fcd.reverse() : fcd;\n    let secondCommandDisplays = reverseSecond ? scd.reverse() : scd;\n\n    const alignmentCls = alignment === 'VERTICAL' ? 'aw-commands-commandBarVertical' : 'aw-commands-commandBarHorizontal';\n    const commandLabelsClass = getCommandLabelClass( showCommandLabels );\n    const commandBarMain = elementRefList.get( 'commandBarMain' );\n\n    const childCommandClickCallback = ( hasPopup ) => {\n        if( hasPopup ) {\n            return;\n        }\n        overflowPopup.hide();\n    };\n\n    // give vertical toolbar a default background color\n    const orientationCls = alignment === 'VERTICAL' ? ' aw-toolbar-vertical aw-layout-infoCommandbar' : ' aw-toolbar-horizontal';\n    const renderCommand =  command => {\n        return <AwCommand commandContext={commandContext}\n            key={command && command.id}\n            command={command}\n            alignment={alignment}\n            visibilityLoader={visibilityLoader}\n            commandObserver={_observer}\n            overflow={_overflownCommands[ command.id ] ? true : null}></AwCommand>;\n    };\n    const isVisible = command => command && command.visible;\n\n    const renderVerticalContent = ( alignmentCls, secondBarClass, firstAnchor, secondAnchor, renderOverflowButton, overflownCommandsCount ) => {\n        return <div className='aw-commandBars aw-commandBar-vertical'>\n            <div className='sw-row'>\n                <div className={`aw-command-bar ${alignmentCls}` } anchor={firstAnchor}>\n                    <div className={`aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`}>\n                        { renderOverflowButton ? _observer && firstCommandDisplays.filter( isVisible ).map( renderCommand ) : firstCommandDisplays.filter( isVisible ).map( renderCommand ) }\n                    </div>\n                </div>\n            </div>\n            <div className='sw-row aw-bottom-bar'>\n                <div className={`aw-command-bar ${alignmentCls} ${secondBarClass}` } anchor={secondAnchor}>\n                    <div className={`aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`}>\n                        { renderOverflowButton ? _observer && secondCommandDisplays.filter( isVisible ).map( renderCommand ) : secondCommandDisplays.filter( isVisible ).map( renderCommand ) }\n                    </div>\n                </div>\n            </div>\n            {/* Overflow button */}\n            { renderOverflowButton && overflownCommandsCount ? renderOverflowButton() : null }\n        </div>;\n    };\n\n    const renderWithOverflow = () => {\n        let overflownCommandsCount = 0;\n        const isVisibleCmd = cmd => {\n            if( cmd && cmd.visible ) {\n                _overflownCommands[ cmd.id ] && overflownCommandsCount++;\n                return true;\n            }\n            return null;\n        };\n\n        const secondBarClass = alignment === 'VERTICAL' ? 'aw-second-barVertical' : 'aw-second-barHorizontal';\n        const firstVisibleCommands = firstCommandDisplays.filter( isVisibleCmd );\n        const secondVisibleCommands = secondCommandDisplays.filter( isVisibleCmd );\n        const visibleCommandCount = firstVisibleCommands.length + secondVisibleCommands.length;\n        trace( `${visibleCommandCount} commands are visible, computing command overflow` );\n\n        const overflowClickHandler = ( e ) => {\n            e.stopPropagation();\n            if( overflowPopup.open ) {\n                overflowPopup.hide();\n            } else {\n                overflowPopup.show( {\n                    ...overflowPopupOptions,\n                    placement: alignment === 'VERTICAL' ? 'left-start' : 'bottom-start'\n                } );\n            }\n        };\n\n        const getOverflownCommands = () => {\n            let firstOverflownCmds = [];\n            let secondOverflownCmds = [];\n\n            for( const cmdId in _overflownCommands ) {\n                let overflownCmd = firstVisibleCommands.find( command =>  command && command.id === cmdId );\n                if( !overflownCmd ) {\n                    overflownCmd = secondVisibleCommands.find( command =>  command && command.id === cmdId );\n                    overflownCmd && secondOverflownCmds.unshift( overflownCmd );\n                } else {\n                    firstOverflownCmds.unshift( overflownCmd );\n                }\n            }\n            return firstOverflownCmds.concat( secondOverflownCmds );\n        };\n\n        const renderOverflowPopup = () => {\n            return overflowPopup.open && <AwPopup {...overflowPopup.options}>\n                <div className='aw-popup-command-bar'>\n                    { getOverflownCommands().map( command =>\n                        <AwPopupCommandCell commandContext={commandContext} key={command && command.id}\n                            command={command} alignment={alignment} visibilityLoader={visibilityLoader}\n                            overflow={true} childCommandClickCallback={childCommandClickCallback}></AwPopupCommandCell> )}\n                </div>\n            </AwPopup>;\n        };\n\n        const renderOverflowButton = () => {\n            return <div className={'aw-toolbarIcon aw-commands-moreButton aw-command-overflowIcon'}>\n                <button type='button'\n                    className={`aw-commands-commandToolbarIconButton ${ overflowPopup.open ? 'aw-state-selected' : '' }`}\n                    aria-label={i18n.MORE_BUTTON_TITLE}\n                    onClick={overflowClickHandler}\n                    ref={overflowPopup.reference}>\n                    <AwIcon iconId='cmdMore' className='aw-commands-svg'></AwIcon>\n                </button>\n                <AwExtendedTooltip\n                    reference={overflowPopup.reference}\n                    extendedTooltipContext={{ title: i18n.MORE_BUTTON_TITLE }}\n                    extendedTooltipOptions={{ isCommand: true, placement : 'left' }}>\n                </AwExtendedTooltip>\n            </div>;\n        };\n\n        const renderHorizontalContent = () => {\n            return <div className='aw-commandBars aw-commandBar-horizontal'>\n                { firstVisibleCommands.length ? <div className={`aw-command-bar aw-use-commandOverflow ${alignmentCls}` } anchor={firstAnchor}>\n                    <div className={`aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`}>\n                        { _observer && firstVisibleCommands.map( renderCommand )}\n                    </div>\n                </div> : <div className='aw-commandBars aw-commandBar-horizontal'></div> }\n                { secondVisibleCommands.length ? <div className={`aw-command-bar aw-use-commandOverflow ${alignmentCls} ${secondBarClass}` } anchor={secondAnchor}>\n                    <div className={`aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`}>\n                        { _observer && secondVisibleCommands.map( renderCommand )}\n                    </div>\n                </div> : null }\n                {/* Overflow button */}\n                { overflownCommandsCount ? renderOverflowButton() : null }\n            </div>;\n        };\n\n        return <div className={ getCompClass( 'aw-toolbar-layout', { className } ) + ' ' + orientationCls} ref={commandBarMain}>\n            {/* Non overflow commands */}\n            { alignment === 'VERTICAL' ? renderVerticalContent( alignmentCls, secondBarClass, firstAnchor, secondAnchor, renderOverflowButton, overflownCommandsCount ) : renderHorizontalContent() }\n            {/* Overflow popup */}\n            { renderOverflowPopup() }\n        </div>;\n    };\n\n    const renderToolbarNoOverflow = () => {\n        const cmdBarOrientationCls = alignment === 'VERTICAL' ? 'aw-commandBar-vertical' : 'aw-commandBar-horizontal';\n        const secondBarClass = alignment === 'VERTICAL' ? 'aw-second-barVertical' : 'aw-second-barHorizontal';\n\n        return (\n            <div className={ getCompClass( 'aw-toolbar-layout aw-toolbar-nooverflow', { className } ) + ' ' + orientationCls} ref={commandBarMain}>\n                {alignment === 'VERTICAL' ? renderVerticalContent( alignmentCls, secondBarClass, firstAnchor, secondAnchor, null ) : <div className={'aw-commandBars ' + cmdBarOrientationCls}>\n                    <div className={`aw-command-bar ${alignmentCls} ` } anchor={firstAnchor}>\n                        <div className={`aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`}>\n                            { firstCommandDisplays.filter( isVisible ).map( renderCommand )}\n                        </div>\n                    </div>\n                    <div className={`aw-command-bar ${alignmentCls}  ${secondBarClass}` } anchor={secondAnchor}>\n                        <div className={`aw-commands-wrapper ${commandLabelsClass} aw-no-overflow`}>\n                            { secondCommandDisplays.filter( isVisible ).map( renderCommand )}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n\n        );\n    };\n\n    if( overflow && overflow !== 'false' ) {\n        return renderWithOverflow();\n    }\n    return renderToolbarNoOverflow();\n};\n\n/**\n * Derived state config for first set of CommandOverlay\n *\n * @param {*} vmDef vmDef\n * @param {*} param1 param1\n * @returns {[DerivedStateResult]} result\n */\nexport const getFirstCommandStates = ( vmDef, { firstCommandList = [], commandContext = {}, visibleServerCommands = {} } ) => {\n    return getCommandStates( vmDef, { commandList: firstCommandList,  commandContext, visibleServerCommands } );\n};\n\n/**\n * Derived state config for second set of CommandOverlay\n *\n * @param {*} vmDef vmDef\n * @param {*} param1 param1\n * @returns {[DerivedStateResult]} result\n */\nexport const getSecondCommandStates = ( vmDef, { secondCommandList = [], commandContext = {}, visibleServerCommands = {} } ) => {\n    return getCommandStates( vmDef, { commandList: secondCommandList,  commandContext, visibleServerCommands } );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}