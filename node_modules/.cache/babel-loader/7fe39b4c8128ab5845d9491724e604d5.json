{"ast":null,"code":"// Copyright (c) 2021 Siemens\n/**\n * @module js/awSearchLocationService\n */import AwStateService from'js/awStateService';import logger from'js/logger';let exports;export const getFilteredTabsInfo=sublocationTabs=>{return{sublocationTabs:sublocationTabs.filter(tab=>tab.displayTab===true),tabCallbackApi:tabCallbackApi};};export const handleStateChange=sublocationTabs=>{const activeTab=sublocationTabs.filter(tab=>tab.selectedTab)[0];if(activeTab&&activeTab.state!==AwStateService.instance.current.name){return sublocationTabs.map(tab=>{if(tab.state===AwStateService.instance.current.name){tab.selectedTab=true;}else{tab.selectedTab=false;}return tab;});}return sublocationTabs;};export const tabCallbackApi=(pageId,tabTitle,sublocationTabs)=>{var tabToSelect;if(tabTitle){tabToSelect=sublocationTabs.filter(function(tab){return tab.name===tabTitle;})[0];}else{// Should only happen when api is called before tapTitle is loaded from i18n file\ntabToSelect=sublocationTabs.filter(function(tab){return tab.pageId===pageId;})[0];}if(tabToSelect){// When the tab widget is forced to update after the state has already changed it will still trigger callback\nif(tabToSelect.state!==AwStateService.instance.current.name){// Switch to the new state\nif(tabToSelect.params){AwStateService.instance.go(tabToSelect.state,tabToSelect.params);}else{AwStateService.instance.go(tabToSelect.state);}}}else{logger.error('Missing tab was selected: '+tabTitle);}};exports={getFilteredTabsInfo,handleStateChange,tabCallbackApi};export default exports;","map":null,"metadata":{},"sourceType":"module"}