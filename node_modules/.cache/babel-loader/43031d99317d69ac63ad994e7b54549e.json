{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This module is used to adapt the functionality provided by NodeJS module, 'assert', to work within an AngularJS based\n * application.\n *\n * @module js/assert\n */\nimport logger from 'js/logger';\n/**\n * This function throws an exception with the given message text if the given 'expression' evaluates to FALSE.\n *\n * @param {Object} condition - Expression to evaluate.\n * @param {string} message - Message text to use in any exception thrown.\n */\n\nexport default function (condition, message) {\n  if (!condition) {\n    logger.warn('assert failed: ' + message);\n    throw new Error('assert failed: ' + message);\n  }\n}","map":{"version":3,"names":["logger","condition","message","warn","Error"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/kernel/src/js/assert.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This module is used to adapt the functionality provided by NodeJS module, 'assert', to work within an AngularJS based\n * application.\n *\n * @module js/assert\n */\nimport logger from 'js/logger';\n\n/**\n * This function throws an exception with the given message text if the given 'expression' evaluates to FALSE.\n *\n * @param {Object} condition - Expression to evaluate.\n * @param {string} message - Message text to use in any exception thrown.\n */\nexport default function( condition, message ) {\n    if( !condition ) {\n        logger.warn( 'assert failed: ' + message );\n        throw new Error( 'assert failed: ' + message );\n    }\n}\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,WAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,UAAUC,SAAV,EAAqBC,OAArB,EAA+B;EAC1C,IAAI,CAACD,SAAL,EAAiB;IACbD,MAAM,CAACG,IAAP,CAAa,oBAAoBD,OAAjC;IACA,MAAM,IAAIE,KAAJ,CAAW,oBAAoBF,OAA/B,CAAN;EACH;AACJ"},"metadata":{},"sourceType":"module"}