{"ast":null,"code":"// Copyright (c) 2021 Siemens\n/**\n * @module js/urlArgsUtilsService\n */import AwStateService from'js/awStateService';import AwTimeoutService from'js/awTimeoutService';import commandService from'js/command.service';import logger from'js/logger';import appCtxService from'js/appCtxService';let _urlCommandCheckPromise=null;export const executeUrlCommand=function(commandContext){let{runActionWithViewModel}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const commandId=AwStateService.instance.params.cmdId||AwStateService.instance.params.commandID;if(commandId&&!_urlCommandCheckPromise&&runActionWithViewModel){//Flag to avoid execution of cmd action multiple times.\n//Keeping this as a local variable for now, considering that even if there are\n//multiple components calling this particular api, the url is singleton\n//Hence, the execution should only happen once\n_urlCommandCheckPromise=true;return AwTimeoutService.instance(function(){let cmdContext={ctx:appCtxService.getCtx(),commandContext};return commandService.executeCommand(commandId,AwStateService.instance.params.cmdArg,{},cmdContext,runActionWithViewModel)// Log error or success message\n.then(function(){logger.trace('Executed command: '+commandId+' with args '+AwStateService.instance.params.cmdArg+' from url');},function(errorMessage){logger.error(errorMessage);})// clear cmdId and cmdArg\n.then(function(){if(AwStateService.instance.params.commandId){return;}return AwStateService.instance.go('.',{cmdId:null,cmdArg:null},{location:'replace'});}).then(function(){_urlCommandCheckPromise=null;});},500);}};export default{executeUrlCommand};","map":null,"metadata":{},"sourceType":"module"}