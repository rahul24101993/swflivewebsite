{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * @module js/reactHelper\n */\nimport React, { useState } from 'react';\nimport parse from 'html-react-parser';\nimport _ from 'lodash';\n/**\n * useReducer hook\n * @param {function} reducer reducer function\n * @param {object} initStateObj init state object\n * @param {function} initStateFn function to init state\n * @returns {Array} react hook in data-dispatch pair\n */\n\nexport function useReducer(reducer, initStateObj, initStateFn) {\n  _s();\n\n  const [data, setDataState] = React.useState(initStateObj || initStateFn); // overlay for async practice, using ref\n  // https://github.com/nathanbuchar/react-hook-thunk-reducer\n\n  const dataRef = React.useRef(data);\n  const getData = React.useCallback(() => dataRef.current, [dataRef]);\n  const setData = React.useCallback(newState => {\n    dataRef.current = newState;\n    setDataState(newState);\n  }, [dataRef, setDataState]); // dispatch\n\n  const dispatch = React.useCallback(action => {\n    const newData = reducer(getData(), action); // NOTE: blindly set data will cause update issue without comparison\n\n    if (newData !== data) {\n      setData(newData);\n    }\n  }, [reducer, getData]);\n  return [data, dispatch, getData];\n}\n/**\n * General chainable init hook\n * @param {function} fn call back function for useEffect hook\n * @param {boolean} initialized true if former hook is done\n */\n\n_s(useReducer, \"jMfEV3jokd8yXg3YBHW//woB++4=\");\n\nexport function useInitHook(fn) {\n  _s2();\n\n  let initialized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  React.useEffect(() => initialized ? fn() : undefined, [initialized]);\n} // Follow Stu's suggestion to add a cache\n\n_s2(useInitHook, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport const convertToHtml = value => parse(value); // revisitme Charu - please see discussion on MR476\n\n/**\n * Maps the objects on the child elements\n * @param {Array} children child elements\n * @param {object} context context to be mapped\n * @returns {Array} mapped child elements\n */\n\nexport function mapChildren(children, context) {\n  // case1: children is functions in form of {}\n  // case2: children in normal form\n  children = _.concat([], children);\n  let final_children = children.map(item => typeof item === 'function' ? item(context) : item);\n  return React.Children.map(final_children, child => {\n    let {\n      children\n    } = child.props || {}; // should always keep the children\n    // case1: children is functions in form of {}\n    // case2: children in normal form\n\n    if (typeof children === 'function') {\n      children = children(context);\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, context, children);\n  });\n}\nexport function forwardComponent(children, context) {\n  return /*#__PURE__*/React.forwardRef();\n}\nexport const useAtomicDataReducer = declViewModelJson => {\n  _s3();\n\n  // fieldsdata\n  const atomicDataHook = {};\n  const atomicDataRef = {};\n\n  for (const prop in declViewModelJson.data) {\n    if (declViewModelJson.data[prop] && declViewModelJson.data[prop].meta) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const [atomicData, dataUpdater] = useState(declViewModelJson.data[prop].initialValues);\n      atomicDataHook[prop] = [atomicData, dataUpdater]; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n      const dataRef = React.useRef(atomicData); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n      const getAtomicData = React.useCallback(() => dataRef.current, [dataRef]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n      const setAtomicData = newState => {\n        dataRef.current = newState;\n        dataUpdater(newState);\n      };\n\n      atomicDataRef[prop] = {\n        getAtomicData,\n        setAtomicData\n      };\n    }\n  }\n\n  return {\n    atomicDataHook,\n    atomicDataRef\n  };\n};\n\n_s3(useAtomicDataReducer, \"vXu7zk0TXgsKXb9d4INd+nVjUZg=\");","map":{"version":3,"names":["React","useState","parse","_","useReducer","reducer","initStateObj","initStateFn","data","setDataState","dataRef","useRef","getData","useCallback","current","setData","newState","dispatch","action","newData","useInitHook","fn","initialized","useEffect","undefined","convertToHtml","value","mapChildren","children","context","concat","final_children","map","item","Children","child","props","cloneElement","forwardComponent","forwardRef","useAtomicDataReducer","declViewModelJson","atomicDataHook","atomicDataRef","prop","meta","atomicData","dataUpdater","initialValues","getAtomicData","setAtomicData"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/reactHelper.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * @module js/reactHelper\n */\nimport React, { useState } from 'react';\nimport parse from 'html-react-parser';\nimport _ from 'lodash';\n\n/**\n * useReducer hook\n * @param {function} reducer reducer function\n * @param {object} initStateObj init state object\n * @param {function} initStateFn function to init state\n * @returns {Array} react hook in data-dispatch pair\n */\nexport function useReducer( reducer, initStateObj, initStateFn ) {\n    const [ data, setDataState ] = React.useState( initStateObj || initStateFn );\n\n    // overlay for async practice, using ref\n    // https://github.com/nathanbuchar/react-hook-thunk-reducer\n    const dataRef = React.useRef( data );\n    const getData = React.useCallback( () => dataRef.current, [ dataRef ] );\n    const setData = React.useCallback( ( newState ) => {\n        dataRef.current = newState;\n        setDataState( newState );\n    }, [ dataRef, setDataState ] );\n\n    // dispatch\n    const dispatch = React.useCallback( ( action ) => {\n        const newData = reducer( getData(), action );\n        // NOTE: blindly set data will cause update issue without comparison\n        if( newData !== data ) {\n            setData( newData );\n        }\n    }, [ reducer, getData ] );\n\n    return [ data, dispatch, getData ];\n}\n\n/**\n * General chainable init hook\n * @param {function} fn call back function for useEffect hook\n * @param {boolean} initialized true if former hook is done\n */\nexport function useInitHook( fn, initialized = true ) {\n    React.useEffect( () => initialized ? fn() : undefined, [ initialized ] );\n}\n\n// Follow Stu's suggestion to add a cache\nexport const convertToHtml = value => parse( value );\n\n// revisitme Charu - please see discussion on MR476\n/**\n * Maps the objects on the child elements\n * @param {Array} children child elements\n * @param {object} context context to be mapped\n * @returns {Array} mapped child elements\n */\nexport function mapChildren( children, context ) {\n    // case1: children is functions in form of {}\n    // case2: children in normal form\n    children = _.concat( [], children );\n    let final_children = children.map( ( item )=> typeof item === 'function' ? item( context ) : item );\n\n    return React.Children.map( final_children, child => {\n        let { children } = child.props || {};\n        // should always keep the children\n        // case1: children is functions in form of {}\n        // case2: children in normal form\n        if ( typeof children === 'function' ) {\n            children = children( context );\n        }\n        return React.cloneElement( child, context, children );\n    } );\n}\n\nexport function forwardComponent( children, context ) {\n    return React.forwardRef();\n}\n\nexport const useAtomicDataReducer = ( declViewModelJson ) => {\n    // fieldsdata\n    const atomicDataHook = {};\n    const atomicDataRef = {};\n    for( const prop in declViewModelJson.data ) {\n        if( declViewModelJson.data[ prop ] && declViewModelJson.data[ prop ].meta ) {\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            const [ atomicData, dataUpdater ] = useState( declViewModelJson.data[ prop ].initialValues );\n            atomicDataHook[ prop ] = [ atomicData, dataUpdater ];\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            const dataRef = React.useRef( atomicData );\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            const getAtomicData = React.useCallback( () => dataRef.current, [ dataRef ] );\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            const setAtomicData = ( newState ) => {\n                dataRef.current = newState;\n                dataUpdater( newState );\n            };\n\n            atomicDataRef[ prop ] = {\n                getAtomicData,\n                setAtomicData\n            };\n        }\n    }\n    return { atomicDataHook, atomicDataRef };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}