{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * XHR related utilities\n *\n * @module js/splmStatsXhrService\n */\nimport { logger } from 'js/splmStatsUtils';\nimport jsService from 'js/splmStatsJsService';\nlet _procs = [];\nlet _xhrCounter = 0;\nlet _realOpen = null;\nlet _xhrSender = null;\nlet _enabled = false;\nlet _mainProc = null;\nexport const getCount = function () {\n  return _xhrCounter;\n};\nexport const setMainProc = function (processor) {\n  _mainProc = processor;\n};\nexport const install = function () {\n  if (!_enabled) {\n    _realOpen = XMLHttpRequest.prototype.open;\n\n    XMLHttpRequest.prototype.open = function (method, url, async, user, password) {\n      _xhrCounter++; //Try to add as early as possible to avoid pre-finishing pollyfill\n\n      _realOpen.call(this, method, url, async, user, password);\n\n      this.requestURL = url;\n    };\n\n    _xhrSender = XMLHttpRequest.prototype.send;\n\n    XMLHttpRequest.prototype.send = function (data) {\n      let xhr = this;\n      _xhrCounter++; // Side Effect fix (helper) - More accurate to have +1 on open and +1 on send and then -2 on receive response\n\n      xhr.addEventListener('readystatechange', function () {\n        if (xhr.readyState === 4) {\n          _xhrCounter -= 2;\n\n          _procs.forEach(proc => {\n            try {\n              proc.done();\n            } catch (error) {\n              logger.warn(error);\n            }\n          });\n        }\n      }, true);\n      /**\n       * Only wrap the function if there is an 'onload' function to wrap (i.e. NOT trying to do a\n       * Socket.IO/WebSocket call which has no such function).\n       */\n\n      if (jsService.enabled() && xhr.onload) {\n        xhr.onload = jsService.wrapFunction(xhr, xhr.onload, xhr.requestURL);\n      }\n\n      try {\n        if (_mainProc) {\n          _mainProc(xhr, data);\n        }\n      } catch (error) {\n        logger.warn(error);\n      } // procs\n\n\n      _procs.forEach(proc => {\n        try {\n          proc.start();\n        } catch (error) {\n          logger.warn(error);\n        }\n      });\n\n      _xhrSender.call(xhr, data);\n    };\n\n    _enabled = true;\n  }\n};\nexport const uninstall = function () {\n  return true;\n};\nexport const addProc = function (proc) {\n  _procs.push(proc);\n};\nexport const removeProc = function (proc) {\n  _procs = _procs.filter(procObj => proc !== procObj);\n};\nexport default {\n  getCount,\n  setMainProc,\n  install,\n  uninstall,\n  addProc,\n  removeProc\n};","map":{"version":3,"names":["logger","jsService","_procs","_xhrCounter","_realOpen","_xhrSender","_enabled","_mainProc","getCount","setMainProc","processor","install","XMLHttpRequest","prototype","open","method","url","async","user","password","call","requestURL","send","data","xhr","addEventListener","readyState","forEach","proc","done","error","warn","enabled","onload","wrapFunction","start","uninstall","addProc","push","removeProc","filter","procObj"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/plstats/src/js/splmStatsXhrService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * XHR related utilities\n *\n * @module js/splmStatsXhrService\n */\nimport { logger } from 'js/splmStatsUtils';\nimport jsService from 'js/splmStatsJsService';\n\nlet _procs = [];\nlet _xhrCounter = 0;\n\nlet _realOpen = null;\nlet _xhrSender = null;\n\nlet _enabled = false;\n\nlet _mainProc = null;\n\nexport const getCount = function() {\n    return _xhrCounter;\n};\n\nexport const setMainProc = function( processor ) {\n    _mainProc = processor;\n};\n\nexport const install = function() {\n    if( !_enabled ) {\n        _realOpen = XMLHttpRequest.prototype.open;\n        XMLHttpRequest.prototype.open = function( method, url, async, user, password ) {\n            _xhrCounter++; //Try to add as early as possible to avoid pre-finishing pollyfill\n            _realOpen.call( this, method, url, async, user, password );\n            this.requestURL = url;\n        };\n\n        _xhrSender = XMLHttpRequest.prototype.send;\n        XMLHttpRequest.prototype.send = function( data ) {\n            let xhr = this;\n            _xhrCounter++; // Side Effect fix (helper) - More accurate to have +1 on open and +1 on send and then -2 on receive response\n            xhr.addEventListener( 'readystatechange', function() {\n                if( xhr.readyState === 4 ) {\n                    _xhrCounter -= 2;\n\n                    _procs.forEach( proc => {\n                        try {\n                            proc.done();\n                        } catch ( error ) {\n                            logger.warn( error );\n                        }\n                    } );\n                }\n            }, true );\n\n            /**\n             * Only wrap the function if there is an 'onload' function to wrap (i.e. NOT trying to do a\n             * Socket.IO/WebSocket call which has no such function).\n             */\n            if( jsService.enabled() && xhr.onload ) {\n                xhr.onload = jsService.wrapFunction( xhr, xhr.onload, xhr.requestURL );\n            }\n\n            try {\n                if( _mainProc ) {\n                    _mainProc( xhr, data );\n                }\n            } catch ( error ) {\n                logger.warn( error );\n            }\n\n            // procs\n            _procs.forEach( proc => {\n                try {\n                    proc.start();\n                } catch ( error ) {\n                    logger.warn( error );\n                }\n            } );\n\n            _xhrSender.call( xhr, data );\n        };\n        _enabled = true;\n    }\n};\n\nexport const uninstall = function() {\n    return true;\n};\n\nexport const addProc = function( proc ) {\n    _procs.push( proc );\n};\n\nexport const removeProc = function( proc ) {\n    _procs = _procs.filter( procObj => proc !== procObj );\n};\n\nexport default {\n    getCount,\n    setMainProc,\n    install,\n    uninstall,\n    addProc,\n    removeProc\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}