{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _s = $RefreshSig$(); // Copyright (c) 2020 Siemens\n\n/**\n * @module js/draggable\n */\n\n\nimport { DOMAPIs as dom } from 'js/domUtils';\n/* eslint-disable require-jsdoc */\n\n/* eslint-disable max-statements-per-line */\n\nconst defaults = {\n  // settings\n  grid: 0,\n  // grid cell size for snapping to on drag\n  filterTarget: null,\n  // disallow drag for these target\n  limit: {\n    // limit the drag bounds\n    x: null,\n    // [minimum position, maximum position] || position\n    y: null // [minimum position, maximum position] || position\n\n  },\n  threshold: 0,\n  // threshold to move before drag begins (in px)\n  // flags\n  setCursor: false,\n  // change cursor to reflect draggable?\n  smoothDrag: true,\n  // snap to grid when dropped, but not during\n  // event hooks\n  onDrag: noop,\n  // function(element, X, Y, event)\n  onDragStart: noop,\n  // function(element, X, Y, event)\n  onDragEnd: noop // function(element, X, Y, event)\n\n};\n/**\n * usage: new Draggable (element, options)\n *\n * @param {DOMElement} element the element to enable drag\n * @param {Object} options the drag options\n */\n\nfunction Draggable(element, options) {\n  options = Object.assign({}, defaults, options);\n  var start = this.start.bind(this);\n  var drag = this.drag.bind(this);\n  var stop = this.stop.bind(this);\n  Object.assign(this, {\n    element,\n    options,\n    handle: options.handle && isElement(options.handle) ? options.handle : element,\n    handlers: {\n      start: {\n        mousedown: start,\n        touchstart: start\n      },\n      move: {\n        mousemove: drag,\n        mouseup: stop,\n        touchmove: drag,\n        touchend: stop\n      }\n    }\n  });\n  this.initialize();\n}\n\n_c2 = Draggable;\n_c = Draggable;\nObject.assign(Draggable.prototype, {\n  // internal\n  dragEvent: {\n    started: false,\n    x: 0,\n    y: 0\n  },\n  // public\n  setOption: function (property, value) {\n    this.options[property] = value;\n    this.initialize();\n    return this;\n  },\n  initialize: function () {\n    var element = this.element;\n    var options = this.options; // cache element dimensions (for performance)\n    // cannot work with advancePositioning\n\n    this._dimensions = {\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n      width: element.offsetWidth\n    };\n    options.setCursor && dom.addClass(this.handle, this.options.className); // set limit\n\n    this.setLimit(options.limit);\n\n    this.updateLimit = () => this.setLimit(options.limit); // update limit when page resized\n\n\n    window.addEventListener('resize', this.updateLimit, true); // attach mousedown event\n\n    on(this.handle, this.handlers.start);\n  },\n  start: _s2(_s(_s2(function (e) {\n    _s2();\n\n    _s(); // filter the target?\n\n\n    if (!this.useTarget(e.target || e.srcElement)) {\n      return;\n    } // set initial position\n\n\n    this.setCursor(this.getCursor(e));\n    this.setPosition(); // add event listeners\n\n    on(document, this.handlers.move);\n  }, \"LVTiDL44wlsuglqQheRU2PNMQCE=\", true), \"LVTiDL44wlsuglqQheRU2PNMQCE=\", true), \"LVTiDL44wlsuglqQheRU2PNMQCE=\", true),\n  drag: function (e) {\n    e.preventDefault();\n    var dragEvent = this.dragEvent;\n    var element = this.element;\n    var initialCursor = this._cursor;\n    var initialPosition = this._dimensions;\n    var options = this.options;\n    var cursor = this.getCursor(e);\n    var threshold = options.threshold;\n    var x = cursor.x - initialCursor.x + initialPosition.left;\n    var y = cursor.y - initialCursor.y + initialPosition.top; // check threshold\n\n    if (!dragEvent.started && threshold && Math.abs(initialCursor.x - cursor.x) < threshold && Math.abs(initialCursor.y - cursor.y) < threshold) {\n      return;\n    } // save original position?\n\n\n    if (!dragEvent.original) {\n      dragEvent.original = {\n        x: x,\n        y: y\n      };\n    } // trigger start event?\n\n\n    if (!dragEvent.started) {\n      options.onDragStart(element, x, y, e);\n      dragEvent.started = true;\n    } // move the element\n\n\n    if (this.move(x, y)) {\n      // trigger drag event\n      options.onDrag(element, dragEvent.x, dragEvent.y, e);\n    }\n  },\n  move: function (x, y) {\n    var dragEvent = this.dragEvent;\n    var options = this.options;\n    var grid = options.grid;\n    var style = this.element.style;\n    var pos = this.limit(x, y, dragEvent.original.x, dragEvent.original.y); // snap to grid?\n\n    if (!options.smoothDrag && grid) {\n      pos = this.round(pos, grid);\n    } // move it\n\n\n    if (pos.x !== dragEvent.x || pos.y !== dragEvent.y) {\n      dragEvent.x = pos.x;\n      dragEvent.y = pos.y;\n      style.left = pos.x + 'px';\n      style.top = pos.y + 'px';\n      return true;\n    }\n\n    return false;\n  },\n  stop: function (e) {\n    var dragEvent = this.dragEvent;\n    var element = this.element;\n    var options = this.options;\n    var grid = options.grid;\n    var pos; // remove event listeners\n\n    off(document, this.handlers.move); // snap to grid?\n\n    if (options.smoothDrag && grid) {\n      pos = this.round({\n        x: dragEvent.x,\n        y: dragEvent.y\n      }, grid);\n      this.move(pos.x, pos.y);\n      Object.assign(this.dragEvent, pos);\n    } // trigger dragend event\n\n\n    if (this.dragEvent.started) {\n      options.onDragEnd(element, dragEvent.x, dragEvent.y, e);\n    } // clear temp vars\n\n\n    this.reset();\n  },\n  reset: function () {\n    this.dragEvent.started = false;\n  },\n  round: function (pos) {\n    var grid = this.options.grid;\n    return {\n      x: grid * Math.round(pos.x / grid),\n      y: grid * Math.round(pos.y / grid)\n    };\n  },\n  getCursor: function (e) {\n    return {\n      x: (e.targetTouches ? e.targetTouches[0] : e).clientX,\n      y: (e.targetTouches ? e.targetTouches[0] : e).clientY\n    };\n  },\n  setCursor: function (xy) {\n    this._cursor = xy;\n  },\n  setLimit: function (limit) {\n    var _true = function (x, y) {\n      return {\n        x: x,\n        y: y\n      };\n    };\n\n    if (isFunction(limit)) {\n      this.limit = limit;\n    } else if (isElement(limit)) {\n      var draggableSize = this._dimensions;\n      var height = limit.scrollHeight - draggableSize.height;\n      var width = limit.scrollWidth - draggableSize.width;\n\n      this.limit = function (x, y) {\n        return {\n          x: checkLimit(x, [0, width]),\n          y: checkLimit(y, [0, height])\n        };\n      };\n    } else if (limit) {\n      var defined = {\n        x: isDefined(limit.x),\n        y: isDefined(limit.y)\n      };\n\n      if (!defined.x && !defined.y) {\n        this.limit = _true;\n      } else {\n        this.limit = function (x, y) {\n          return {\n            x: defined.x ? checkLimit(x, limit.x) : x,\n            y: defined.y ? checkLimit(y, limit.y) : y\n          };\n        };\n      }\n    } else {\n      this.limit = _true;\n    }\n  },\n  setPosition: function () {\n    var element = this.element;\n    var style = element.style;\n    Object.assign(this._dimensions, {\n      left: parse(style.left) || element.offsetLeft,\n      top: parse(style.top) || element.offsetTop\n    });\n  },\n  useTarget: function (element) {\n    var filterTarget = this.options.filterTarget;\n\n    if (filterTarget instanceof Function) {\n      return filterTarget(element);\n    }\n\n    return true;\n  },\n  destroy: function () {\n    this.handle && off(this.handle, this.handlers.start);\n    off(document, this.handlers.move);\n    window.removeEventListener('resize', this.updateLimit, true);\n    this.options.setCursor && dom.removeClass(this.handle, this.options.className);\n    delete this.element;\n    delete this.options;\n  }\n}); // helpers\n\nfunction parse(string) {\n  return parseInt(string, 10);\n}\n\nfunction isArray(thing) {\n  return thing instanceof Array;\n}\n\nfunction isDefined(thing) {\n  return thing !== void 0 && thing !== null;\n}\n\nfunction isElement(thing) {\n  return thing instanceof Element || typeof HTMLDocument !== 'undefined' && thing instanceof HTMLDocument;\n}\n\nfunction isFunction(thing) {\n  return thing instanceof Function;\n} // eslint-disable-next-line no-empty-function\n\n\nfunction noop() {}\n\nfunction on(element, obj) {\n  if (obj) {\n    for (var ee in obj) {\n      element.addEventListener(ee, obj[ee], false);\n    }\n  }\n}\n\nfunction off(element, obj) {\n  if (obj) {\n    for (var ee in obj) {\n      element.removeEventListener(ee, obj[ee]);\n    }\n  }\n}\n\nfunction checkLimit(n, limit) {\n  if (isArray(limit)) {\n    limit = [Number(limit[0]), Number(limit[1])];\n\n    if (n < limit[0]) {\n      n = limit[0];\n    } else if (n > limit[1]) {\n      n = limit[1];\n    }\n  } else {\n    n = Number(limit);\n  }\n\n  return n;\n}\n\nexport default Draggable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draggable\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Draggable\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/popup/src/js/draggable.js"],"names":["DOMAPIs","defaults","grid","filterTarget","limit","x","y","threshold","setCursor","smoothDrag","onDrag","onDragStart","onDragEnd","Draggable","options","Object","start","drag","stop","handle","isElement","handlers","mousedown","touchstart","move","mousemove","mouseup","touchmove","touchend","dragEvent","started","setOption","initialize","element","height","left","top","width","offsetWidth","dom","window","on","e","initialCursor","initialPosition","cursor","Math","style","pos","off","reset","round","getCursor","clientY","setLimit","_true","isFunction","draggableSize","checkLimit","defined","isDefined","setPosition","parse","offsetTop","useTarget","destroy","parseInt","thing","obj","isArray","Number","n"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * @module js/draggable\n */\nimport { DOMAPIs as dom } from 'js/domUtils';\n\n/* eslint-disable require-jsdoc */\n/* eslint-disable max-statements-per-line */\nconst defaults = {\n    // settings\n    grid: 0, // grid cell size for snapping to on drag\n    filterTarget: null, // disallow drag for these target\n    limit: { // limit the drag bounds\n        x: null, // [minimum position, maximum position] || position\n        y: null // [minimum position, maximum position] || position\n    },\n    threshold: 0, // threshold to move before drag begins (in px)\n\n    // flags\n    setCursor: false, // change cursor to reflect draggable?\n    smoothDrag: true, // snap to grid when dropped, but not during\n\n    // event hooks\n    onDrag: noop, // function(element, X, Y, event)\n    onDragStart: noop, // function(element, X, Y, event)\n    onDragEnd: noop // function(element, X, Y, event)\n};\n\n/**\n * usage: new Draggable (element, options)\n *\n * @param {DOMElement} element the element to enable drag\n * @param {Object} options the drag options\n */\nfunction Draggable( element, options ) {\n    options = Object.assign( {}, defaults, options );\n\n    var start = this.start.bind( this );\n    var drag = this.drag.bind( this );\n    var stop = this.stop.bind( this );\n    Object.assign( this, {\n        element,\n        options,\n        handle: options.handle && isElement( options.handle ) ? options.handle : element,\n        handlers: {\n            start: {\n                mousedown: start,\n                touchstart: start\n            },\n            move: {\n                mousemove: drag,\n                mouseup: stop,\n                touchmove: drag,\n                touchend: stop\n            }\n        }\n    } );\n    this.initialize();\n}\n\nObject.assign( Draggable.prototype, {\n    // internal\n    dragEvent: {\n        started: false,\n        x: 0,\n        y: 0\n    },\n    // public\n    setOption: function( property, value ) {\n        this.options[ property ] = value;\n        this.initialize();\n        return this;\n    },\n    initialize: function() {\n        var element = this.element;\n        var options = this.options;\n\n        // cache element dimensions (for performance)\n        // cannot work with advancePositioning\n        this._dimensions = {\n            height: element.offsetHeight,\n            left: element.offsetLeft,\n            top: element.offsetTop,\n            width: element.offsetWidth\n        };\n\n        options.setCursor && dom.addClass( this.handle, this.options.className );\n\n        // set limit\n        this.setLimit( options.limit );\n        this.updateLimit = () => this.setLimit( options.limit );\n        // update limit when page resized\n        window.addEventListener( 'resize', this.updateLimit, true );\n\n        // attach mousedown event\n        on( this.handle, this.handlers.start );\n    },\n\n    start: function( e ) {\n        // filter the target?\n        if( !this.useTarget( e.target || e.srcElement ) ) {\n            return;\n        }\n\n        // set initial position\n        this.setCursor( this.getCursor( e ) );\n        this.setPosition();\n\n        // add event listeners\n        on( document, this.handlers.move );\n    },\n\n    drag: function( e ) {\n        e.preventDefault();\n        var dragEvent = this.dragEvent;\n        var element = this.element;\n        var initialCursor = this._cursor;\n        var initialPosition = this._dimensions;\n        var options = this.options;\n        var cursor = this.getCursor( e );\n        var threshold = options.threshold;\n        var x = cursor.x - initialCursor.x + initialPosition.left;\n        var y = cursor.y - initialCursor.y + initialPosition.top;\n\n        // check threshold\n        if( !dragEvent.started && threshold &&\n            Math.abs( initialCursor.x - cursor.x ) < threshold &&\n            Math.abs( initialCursor.y - cursor.y ) < threshold\n        ) {\n            return;\n        }\n\n        // save original position?\n        if( !dragEvent.original ) {\n            dragEvent.original = { x: x, y: y };\n        }\n\n        // trigger start event?\n        if( !dragEvent.started ) {\n            options.onDragStart( element, x, y, e );\n            dragEvent.started = true;\n        }\n\n        // move the element\n        if( this.move( x, y ) ) {\n            // trigger drag event\n            options.onDrag( element, dragEvent.x, dragEvent.y, e );\n        }\n    },\n\n    move: function( x, y ) {\n        var dragEvent = this.dragEvent;\n        var options = this.options;\n        var grid = options.grid;\n        var style = this.element.style;\n        var pos = this.limit( x, y, dragEvent.original.x, dragEvent.original.y );\n\n        // snap to grid?\n        if( !options.smoothDrag && grid ) {\n            pos = this.round( pos, grid );\n        }\n\n        // move it\n        if( pos.x !== dragEvent.x || pos.y !== dragEvent.y ) {\n            dragEvent.x = pos.x;\n            dragEvent.y = pos.y;\n            style.left = pos.x + 'px';\n            style.top = pos.y + 'px';\n            return true;\n        }\n        return false;\n    },\n\n    stop: function( e ) {\n        var dragEvent = this.dragEvent;\n        var element = this.element;\n        var options = this.options;\n        var grid = options.grid;\n        var pos;\n\n        // remove event listeners\n        off( document, this.handlers.move );\n\n        // snap to grid?\n        if( options.smoothDrag && grid ) {\n            pos = this.round( { x: dragEvent.x, y: dragEvent.y }, grid );\n            this.move( pos.x, pos.y );\n            Object.assign( this.dragEvent, pos );\n        }\n\n        // trigger dragend event\n        if( this.dragEvent.started ) {\n            options.onDragEnd( element, dragEvent.x, dragEvent.y, e );\n        }\n\n        // clear temp vars\n        this.reset();\n    },\n    reset: function() {\n        this.dragEvent.started = false;\n    },\n    round: function( pos ) {\n        var grid = this.options.grid;\n        return {\n            x: grid * Math.round( pos.x / grid ),\n            y: grid * Math.round( pos.y / grid )\n        };\n    },\n    getCursor: function( e ) {\n        return {\n            x: ( e.targetTouches ? e.targetTouches[ 0 ] : e ).clientX,\n            y: ( e.targetTouches ? e.targetTouches[ 0 ] : e ).clientY\n        };\n    },\n    setCursor: function( xy ) {\n        this._cursor = xy;\n    },\n    setLimit: function( limit ) {\n        var _true = function( x, y ) {\n            return { x: x, y: y };\n        };\n\n        if( isFunction( limit ) ) {\n            this.limit = limit;\n        } else if( isElement( limit ) ) {\n            var draggableSize = this._dimensions;\n            var height = limit.scrollHeight - draggableSize.height;\n            var width = limit.scrollWidth - draggableSize.width;\n\n            this.limit = function( x, y ) {\n                return {\n                    x: checkLimit( x, [ 0, width ] ),\n                    y: checkLimit( y, [ 0, height ] )\n                };\n            };\n        } else if( limit ) {\n            var defined = {\n                x: isDefined( limit.x ),\n                y: isDefined( limit.y )\n            };\n            if( !defined.x && !defined.y ) {\n                this.limit = _true;\n            } else {\n                this.limit = function( x, y ) {\n                    return {\n                        x: defined.x ? checkLimit( x, limit.x ) : x,\n                        y: defined.y ? checkLimit( y, limit.y ) : y\n                    };\n                };\n            }\n        } else {\n            this.limit = _true;\n        }\n    },\n\n    setPosition: function() {\n        var element = this.element;\n        var style = element.style;\n\n        Object.assign( this._dimensions, {\n            left: parse( style.left ) || element.offsetLeft,\n            top: parse( style.top ) || element.offsetTop\n        } );\n    },\n\n    useTarget: function( element ) {\n        var filterTarget = this.options.filterTarget;\n        if( filterTarget instanceof Function ) {\n            return filterTarget( element );\n        }\n        return true;\n    },\n\n    destroy: function() {\n        this.handle && off( this.handle, this.handlers.start );\n        off( document, this.handlers.move );\n        window.removeEventListener( 'resize', this.updateLimit, true );\n        this.options.setCursor && dom.removeClass( this.handle, this.options.className );\n        delete this.element;\n        delete this.options;\n    }\n} );\n\n// helpers\nfunction parse( string ) {\n    return parseInt( string, 10 );\n}\n\nfunction isArray( thing ) {\n    return thing instanceof Array;\n}\n\nfunction isDefined( thing ) {\n    return thing !== void 0 && thing !== null;\n}\n\nfunction isElement( thing ) {\n    return thing instanceof Element || typeof HTMLDocument !== 'undefined' && thing instanceof HTMLDocument;\n}\n\nfunction isFunction( thing ) {\n    return thing instanceof Function;\n}\n\n// eslint-disable-next-line no-empty-function\nfunction noop() {}\n\nfunction on( element, obj ) {\n    if( obj ) {\n        for( var ee in obj ) {\n            element.addEventListener( ee, obj[ ee ], false );\n        }\n    }\n}\n\nfunction off( element, obj ) {\n    if( obj ) {\n        for( var ee in obj ) {\n            element.removeEventListener( ee, obj[ ee ] );\n        }\n    }\n}\n\nfunction checkLimit( n, limit ) {\n    if( isArray( limit ) ) {\n        limit = [ Number( limit[ 0 ] ), Number( limit[ 1 ] ) ];\n        if( n < limit[ 0 ] ) { n = limit[ 0 ]; } else if( n > limit[ 1 ] ) { n = limit[ 1 ]; }\n    } else {\n        n = Number( limit );\n    }\n    return n;\n}\n\nexport default Draggable;\n"]},"metadata":{},"sourceType":"module"}