{"ast":null,"code":"import _ from 'lodash';\nimport appCtxService from 'js/appCtxService';\nimport eventBus from 'js/eventBus';\nimport AwStateService from 'js/awStateService';\nimport selectionService from 'js/selection.service';\nimport propertyPolicyService from 'soa/kernel/propertyPolicyService';\nimport { DerivedStateResult } from 'js/derivedContextService';\nconst SUBLOCATION_CONSTANTS = {\n  sublocation: 'sublocation',\n  taiCmd: 'activeToolsAndInfoCommand',\n  navCmd: 'activeNavigationCommand',\n  sidenavCmd: 'sidenavCommandId'\n};\n\nconst registerSubLocationContext = provider => {\n  var contextConstants = {\n    location: 'locationContext',\n    sublocationInLocation: 'ActiveWorkspace:SubLocation',\n    ...SUBLOCATION_CONSTANTS\n  }; // Update the location context\n\n  var locationContext = appCtxService.getCtx(contextConstants.location) || {};\n  locationContext[contextConstants.sublocationInLocation] = provider && provider.name.replace(/_/g, '.');\n  appCtxService.registerCtx(contextConstants.location, locationContext); // Update the sublocation context\n\n  var initialContext = {\n    clientScopeURI: provider.clientScopeURI,\n    historyNameToken: provider.name,\n    label: provider.label,\n    nameToken: provider.nameToken\n  };\n  appCtxService.registerCtx(contextConstants.sublocation, initialContext);\n  appCtxService.registerCtx('sublocationTitleErrorMessage', null);\n};\n/**\n * Register any predefined context that is in the state data\n */\n\n\nconst registerStateContext = provider => {\n  if (provider.context) {\n    const stateContexts = Object.keys(provider.context); // Register the state contexts\n\n    stateContexts.forEach(function (key) {\n      const newContext = provider.context[key];\n      const existingContext = appCtxService.getCtx(key);\n\n      if (!(newContext instanceof Array) && typeof newContext !== 'string' && existingContext) {\n        appCtxService.registerCtx(key, { ...existingContext,\n          ..._.cloneDeep(newContext)\n        });\n      } else {\n        appCtxService.registerCtx(key, _.cloneDeep(newContext));\n      }\n    });\n    return stateContexts;\n  }\n\n  return null;\n};\n\nexport const handleCompleteEvent = eventData => {\n  let id = eventData.id;\n  let commandId = appCtxService.getCtx('sidenavCommandId');\n\n  if (eventData.source === 'toolAndInfoPanel') {\n    var toolsAndInfoCommand = appCtxService.getCtx('activeToolsAndInfoCommand');\n\n    if (toolsAndInfoCommand) {\n      id = 'aw_toolsAndInfo';\n      commandId = toolsAndInfoCommand.commandId;\n    }\n\n    appCtxService.unRegisterCtx('activeToolsAndInfoCommand');\n  } else if (eventData.source === 'navigationPanel') {\n    var navigationCommand = appCtxService.getCtx('activeNavigationCommand');\n\n    if (navigationCommand) {\n      id = 'aw_navigation';\n      commandId = navigationCommand.commandId;\n    }\n\n    appCtxService.unRegisterCtx('activeNavigationCommand');\n  }\n\n  if (commandId) {\n    eventBus.publish('awsidenav.openClose', {\n      id: id,\n      commandId: commandId\n    });\n  }\n};\nexport const updateBaseSelection = function (baseSelection, parentSelectionData) {\n  let selectionQueryParamKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 's_uid';\n\n  if (baseSelection && !AwStateService.instance.params[selectionQueryParamKey]) {\n    selectionService.updateSelection([baseSelection], baseSelection);\n    parentSelectionData && parentSelectionData.update({\n      selected: [baseSelection],\n      pselected: baseSelection,\n      source: 'base'\n    });\n  }\n};\nexport const initializePage = async (provider, baseSelection) => {\n  if (!provider) {\n    provider = AwStateService.instance.current.data ? AwStateService.instance.current.data : {};\n  }\n\n  provider.name = provider.name ? provider.name : AwStateService.instance.current.name;\n  provider.parentStateName = provider.parentStateName ? provider.parentStateName : AwStateService.instance.current.parent;\n  registerSubLocationContext(provider);\n  const stateContext = registerStateContext(provider); //set base selection\n\n  selectionService.updateSelection(baseSelection ? [baseSelection] : undefined, baseSelection);\n  const propertyPolicyId = provider.policy && (await propertyPolicyService.registerPolicyAsync(provider.policy));\n  return {\n    subLocationPreference: provider.awSubLocationPref || provider.context || {},\n    stateContext,\n    propertyPolicyId\n  };\n};\nexport const cleanupPage = (stateContext, propertyPolicyId) => {\n  if (stateContext && stateContext.length > 0) {\n    stateContext.forEach(appCtxService.unRegisterCtx);\n  }\n\n  Object.keys(SUBLOCATION_CONSTANTS).forEach(appCtxService.unRegisterCtx); //clear selectiona\n\n  selectionService.updateSelection(undefined, undefined);\n  propertyPolicyService.unregister(propertyPolicyId);\n};\nexport const getContext = (vmDef, props) => {\n  return [new DerivedStateResult({\n    ctxParameters: [],\n    additionalParameters: [props.provider, props.subPanelContext],\n    compute: () => {\n      return {\n        provider: props.provider,\n        ...props.subPanelContext\n      };\n    }\n  })];\n};","map":{"version":3,"names":["_","appCtxService","eventBus","AwStateService","selectionService","propertyPolicyService","DerivedStateResult","SUBLOCATION_CONSTANTS","sublocation","taiCmd","navCmd","sidenavCmd","registerSubLocationContext","provider","contextConstants","location","sublocationInLocation","locationContext","getCtx","name","replace","registerCtx","initialContext","clientScopeURI","historyNameToken","label","nameToken","registerStateContext","context","stateContexts","Object","keys","forEach","key","newContext","existingContext","Array","cloneDeep","handleCompleteEvent","eventData","id","commandId","source","toolsAndInfoCommand","unRegisterCtx","navigationCommand","publish","updateBaseSelection","baseSelection","parentSelectionData","selectionQueryParamKey","instance","params","updateSelection","update","selected","pselected","initializePage","current","data","parentStateName","parent","stateContext","undefined","propertyPolicyId","policy","registerPolicyAsync","subLocationPreference","awSubLocationPref","cleanupPage","length","unregister","getContext","vmDef","props","ctxParameters","additionalParameters","subPanelContext","compute"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pagelevelcomponents/src/js/AwBaseSublocationService.js"],"sourcesContent":["import _ from 'lodash';\nimport appCtxService from 'js/appCtxService';\nimport eventBus from 'js/eventBus';\nimport AwStateService from 'js/awStateService';\nimport selectionService from 'js/selection.service';\nimport propertyPolicyService from 'soa/kernel/propertyPolicyService';\nimport { DerivedStateResult } from 'js/derivedContextService';\n\nconst SUBLOCATION_CONSTANTS = {\n    sublocation: 'sublocation',\n    taiCmd: 'activeToolsAndInfoCommand',\n    navCmd: 'activeNavigationCommand',\n    sidenavCmd: 'sidenavCommandId'\n};\n\nconst registerSubLocationContext = provider => {\n    var contextConstants = {\n        location: 'locationContext',\n        sublocationInLocation: 'ActiveWorkspace:SubLocation',\n        ...SUBLOCATION_CONSTANTS\n    };\n\n    // Update the location context\n    var locationContext = appCtxService.getCtx( contextConstants.location ) || {};\n    locationContext[ contextConstants.sublocationInLocation ] = provider && provider.name.replace( /_/g, '.' );\n    appCtxService.registerCtx( contextConstants.location, locationContext );\n\n    // Update the sublocation context\n    var initialContext = {\n        clientScopeURI: provider.clientScopeURI,\n        historyNameToken: provider.name,\n        label: provider.label,\n        nameToken: provider.nameToken\n    };\n    appCtxService.registerCtx( contextConstants.sublocation, initialContext );\n    appCtxService.registerCtx( 'sublocationTitleErrorMessage', null );\n};\n\n/**\n * Register any predefined context that is in the state data\n */\nconst registerStateContext = provider => {\n    if( provider.context ) {\n        const stateContexts = Object.keys( provider.context );\n        // Register the state contexts\n        stateContexts.forEach( function( key ) {\n            const newContext = provider.context[ key ];\n            const existingContext = appCtxService.getCtx( key );\n            if( !( newContext instanceof Array ) && typeof newContext !== 'string' && existingContext ) {\n                appCtxService.registerCtx( key, { ...existingContext, ..._.cloneDeep( newContext ) } );\n            } else {\n                appCtxService.registerCtx( key, _.cloneDeep( newContext ) );\n            }\n        } );\n        return stateContexts;\n    }\n    return null;\n};\n\nexport const handleCompleteEvent = ( eventData ) => {\n    let id = eventData.id;\n    let commandId = appCtxService.getCtx( 'sidenavCommandId' );\n    if( eventData.source === 'toolAndInfoPanel' ) {\n        var toolsAndInfoCommand = appCtxService.getCtx( 'activeToolsAndInfoCommand' );\n        if( toolsAndInfoCommand ) {\n            id = 'aw_toolsAndInfo';\n            commandId = toolsAndInfoCommand.commandId;\n        }\n        appCtxService.unRegisterCtx( 'activeToolsAndInfoCommand' );\n    } else if( eventData.source === 'navigationPanel' ) {\n        var navigationCommand = appCtxService.getCtx( 'activeNavigationCommand' );\n        if( navigationCommand ) {\n            id = 'aw_navigation';\n            commandId = navigationCommand.commandId;\n        }\n        appCtxService.unRegisterCtx( 'activeNavigationCommand' );\n    }\n    if( commandId ) {\n        eventBus.publish( 'awsidenav.openClose', {\n            id: id,\n            commandId: commandId\n        } );\n    }\n};\n\nexport const updateBaseSelection = ( baseSelection, parentSelectionData, selectionQueryParamKey = 's_uid' ) => {\n    if( baseSelection && !AwStateService.instance.params[ selectionQueryParamKey ] ) {\n        selectionService.updateSelection( [ baseSelection ], baseSelection );\n        parentSelectionData && parentSelectionData.update( {\n            selected: [ baseSelection ],\n            pselected: baseSelection,\n            source: 'base'\n        } );\n    }\n};\n\nexport const initializePage = async( provider, baseSelection ) => {\n    if( !provider ) {\n        provider = AwStateService.instance.current.data ? AwStateService.instance.current.data : {};\n    }\n    provider.name = provider.name ? provider.name : AwStateService.instance.current.name;\n    provider.parentStateName = provider.parentStateName ? provider.parentStateName : AwStateService.instance.current.parent;\n    registerSubLocationContext( provider );\n    const stateContext = registerStateContext( provider );\n    //set base selection\n    selectionService.updateSelection( baseSelection ? [ baseSelection ] : undefined, baseSelection );\n    const propertyPolicyId = provider.policy && await propertyPolicyService.registerPolicyAsync( provider.policy );\n    return {\n        subLocationPreference: provider.awSubLocationPref || provider.context || {},\n        stateContext,\n        propertyPolicyId\n    };\n};\n\nexport const cleanupPage = ( stateContext, propertyPolicyId ) => {\n    if( stateContext && stateContext.length > 0 ) {\n        stateContext.forEach( appCtxService.unRegisterCtx );\n    }\n    Object.keys( SUBLOCATION_CONSTANTS ).forEach( appCtxService.unRegisterCtx );\n    //clear selectiona\n    selectionService.updateSelection( undefined, undefined );\n    propertyPolicyService.unregister( propertyPolicyId );\n};\n\nexport const getContext = ( vmDef, props ) => {\n    return [ new DerivedStateResult( {\n        ctxParameters: [],\n        additionalParameters: [ props.provider, props.subPanelContext ],\n        compute: () => {\n            return {\n                provider: props.provider,\n                ...props.subPanelContext\n            };\n        }\n    } ) ];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}