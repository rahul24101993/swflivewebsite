{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * @module js/awSplitterService\n */\n// module\nimport eventBus from 'js/eventBus';\nimport localStorage from 'js/localStorage';\nimport logger from 'js/logger';\nimport _ from 'lodash';\nimport analyticsSvc from 'js/analyticsService';\nlet exports;\nexport const constants = {\n  minSize1: 20,\n  minSize2: 20\n}; // A structure set when a splitter is activated (only one splitter an be active at any time)\n// See exports.mouseDownEvent for structure definition\n\nexport let activeSplitterData = null;\nlet splitterAction = null; // Tell the world the areas have changed size through a debounce function.\n\nlet publishNotification = _.debounce(function (splitterData, area1, area2) {\n  splitterAction && splitterAction({\n    splitter: splitterData.splitter,\n    area1: area1,\n    area2: area2\n  });\n  eventBus.publish('aw-splitter-update', {\n    splitter: splitterData.splitter,\n    area1: area1,\n    area2: area2\n  });\n}, 1000, {\n  maxWait: 20000,\n  trailing: true,\n  leading: false\n});\n/**\n * Method to publish analytics to server\n * @param {Number} area1Size - size of area1 in the UI (in pixels)\n * @param {Number} area2Size - size of area2 in the UI (in pixels)\n */\n\n\nconst publishAnalytics = (area1Size, area2Size) => {\n  let splitterEventData = {};\n  splitterEventData.sanAnalyticsType = 'Splitter';\n  splitterEventData.sanCommandId = 'Splitter';\n  splitterEventData.sanCommandTitle = 'Splitter';\n  splitterEventData.sanPrimaryPercentage = (area1Size / (area1Size + area2Size) * 100).toFixed(2);\n  splitterEventData.sanPixelSize = area1Size;\n  analyticsSvc.logCommands(splitterEventData);\n};\n/**\n * Initialize a Given Splitter\n *\n * Set the onmousedown event for the splitter and establishes the type of splitter\n *\n * @param {object} elementRefList - The elements used to define the splitter\n * @param {object} prop - The React props defined on the splitter\n * @param {object} viewMode - The current viewMode on time on init\n */\n\n\nexport const initSplitter = (elementRefList, prop, viewMode) => {\n  let attributes = prop;\n  var initialSplitterState;\n  let splitter = elementRefList.get('splitter').current;\n  var area1 = splitter.previousElementSibling;\n  var area2 = splitter.nextElementSibling;\n\n  if (!area1 && !area2) {\n    // xrt-splitter\n    let colSplit = splitter.closest('.aw-xrt-columnContentPanel');\n\n    if (colSplit) {\n      area1 = colSplit.previousElementSibling;\n      area2 = colSplit.nextElementSibling;\n      colSplit.style['min-width'] = '16px';\n      colSplit.style.width = '16px';\n      colSplit.style['max-width'] = '16px';\n      colSplit.style.padding = '0px';\n      colSplit.style.overflow = 'hidden';\n      colSplit.parentElement.style.flexWrap = 'nowrap';\n      colSplit.parentElement.style.height = '100%';\n      colSplit.parentElement.parentElement.style.height = '100%';\n      area1.style.minWidth = '0px';\n      area2.style.minWidth = '0px';\n      splitter.style.height = window.getComputedStyle(colSplit).getPropertyValue('height');\n    }\n  } // If user defines a direction use that. If not, check for row/column on each side. Else default to vertical\n\n\n  if (attributes.direction && attributes.direction.toUpperCase() === 'HORIZONTAL') {\n    splitter.style.cursor = 'row-resize';\n  } else {\n    splitter.style.cursor = 'col-resize';\n  }\n\n  splitter.onmousedown = event => exports.mouseDownEvent(event, prop.action);\n\n  splitter.ontouchstart = event => exports.mouseDownEvent(event, prop.action); // If this is the primary sash, load its previous position for a specific view.\n\n\n  if (attributes.isPrimarySplitter === 'true') {\n    if (viewMode) {\n      exports.viewModeContext = viewMode;\n    }\n\n    if (localStorage.get(exports.viewModeContext)) {\n      initialSplitterState = JSON.parse(localStorage.get(exports.viewModeContext));\n\n      if (initialSplitterState && area1 && area2) {\n        area1.style.flexBasis = initialSplitterState.area1Size + 'px';\n        area1.style.webkitFlexBasis = initialSplitterState.area1Size + 'px';\n        area1.style.flexGrow = '1';\n        area1.style.flexShrink = '1';\n        area2.style.flexBasis = initialSplitterState.area2Size + 'px';\n        area2.style.webkitFlexBasis = initialSplitterState.area2Size + 'px';\n      }\n    }\n  }\n}; // Setup mousemove/mouseup event listeners for iframes\n\nlet bubbleIframeMouseMove = function (iframe) {\n  var existingOnMouseMove = iframe.contentWindow.onmousemove;\n\n  iframe.contentWindow.onmousemove = function (e) {\n    // Fire any existing onmousemove listener\n    if (existingOnMouseMove) {\n      existingOnMouseMove(e);\n    }\n\n    var evt = document.createEvent('MouseEvents');\n    var boundingClientRect = iframe.getBoundingClientRect();\n    evt.initMouseEvent('mousemove', true, // true bubbles the event\n    false, // not cancelable\n    window, e.detail, e.screenX, e.screenY, e.clientX + boundingClientRect.left, e.clientY + boundingClientRect.top, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, null // no related element\n    );\n    iframe.dispatchEvent(evt);\n  };\n\n  iframe.contentWindow.onmouseup = function (e) {\n    var evt = document.createEvent('MouseEvents');\n    var boundingClientRect = iframe.getBoundingClientRect();\n    evt.initMouseEvent('mouseup', true, // true bubbles the event\n    false, // not cancelable\n    window, e.detail, e.screenX, e.screenY, e.clientX + boundingClientRect.left, e.clientY + boundingClientRect.top, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, null // no related element\n    );\n    iframe.dispatchEvent(evt);\n  };\n}; // Removes iframe mouse event listeners\n\n\nlet removebubbleIframeMouseEvent = function (iframe) {\n  iframe.contentWindow.onmousemove = null;\n  iframe.contentWindow.onmouseup = null;\n}; // handling DOM exception: if we try to access any event(e.g. onmouseup,onmousedown,etc) for cross-origin, we get DOM exception.\n\n\nlet canAccessIFrame = function (iframe) {\n  try {\n    return 'onmousemove' in iframe.contentWindow;\n  } catch (err) {\n    return false;\n  }\n};\n/**\n * Mouse Down Event - initialize the active splitter\n *\n * @param {object} event - mouse down event object\n */\n\n\nexport let mouseDownEvent = function (event, action) {\n  // Do not allow accidental text selection - which will cause the splitter to lockup\n  // Note that there are various CSS properties to control this but not a common one yet (as far as I can tell)\n  // Look for user-select: none (also ms-user-select and webkit-user-select and moz-user-select)\n  // Until there is a common way to prevent accidental selection - here is the workaround\n  event = event || window.event;\n\n  if (window.getSelection) {\n    var selection = window.getSelection();\n    var node = selection.focusNode;\n\n    if (node !== null) {\n      selection.removeAllRanges();\n    }\n  } else {\n    if (document.selection) {\n      document.selection.empty();\n    }\n  }\n\n  event.stopPropagation();\n  event.preventDefault(); // Create the active splitter data structure\n\n  var x = event.clientX;\n  var y = event.clientY;\n\n  if (!x && !y) {\n    x = event.touches[0].clientX;\n    y = event.touches[0].clientY;\n  }\n\n  var splitter = event.currentTarget;\n  var area1 = splitter.previousElementSibling;\n  var area2 = splitter.nextElementSibling;\n\n  if (!area1 && !area2) {\n    // xrt-splitter\n    let colSplit = splitter.closest('.aw-xrt-columnContentPanel');\n\n    if (colSplit) {\n      area1 = colSplit.previousElementSibling;\n      area2 = colSplit.nextElementSibling;\n    }\n  }\n\n  var minSize1 = parseInt(splitter.getAttribute('min-size-1'));\n  var minSize2 = parseInt(splitter.getAttribute('min-size-2'));\n  var isPrimarySplitter = splitter.getAttribute('isPrimarySplitter');\n  var viewMode = splitter.getAttribute('viewMode'); // If user did not define minimum sizes, default to 20\n\n  if (!minSize1 && !minSize2) {\n    minSize1 = exports.constants.minSize1;\n    minSize2 = exports.constants.minSize2;\n  }\n\n  var direction = splitter.style.cursor;\n  exports.activeSplitterData = {\n    splitter: splitter,\n    // The splitter element\n    area1: area1,\n    // The element to the left or on top\n    area2: area2,\n    // The element to the right or on bottom\n    minSize1: minSize1,\n    // The element to the left or on top minimum length\n    minSize2: minSize2,\n    // The element to the right or on bottom minimum length\n    direction: direction,\n    // row-resize or column-resize\n    isPrimarySplitter: isPrimarySplitter,\n    // If the current splitter is the primary to remember its position\n    viewMode: viewMode,\n    x: x,\n    y: y\n  }; // Last mouse position used to update splitter\n\n  splitterAction = action; // iframes suppress mouse events so the iframe's mouse events need to be bubbled up to the document level\n\n  var iframes = document.getElementsByTagName('iframe');\n\n  for (var i = 0; i < iframes.length; i++) {\n    if (canAccessIFrame(iframes[i])) {\n      bubbleIframeMouseMove(iframes[i]);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveEventHandler);\n  document.addEventListener('mouseup', mouseUpEventHandler);\n  document.addEventListener('touchmove', mouseMoveEventHandler);\n  document.addEventListener('touchend', mouseUpEventHandler);\n  document.addEventListener('touchcancel', mouseUpEventHandler);\n};\n/**\n * Mouse Up Event Handler - stop the active splitter\n *\n * @param {event} event - Event object\n */\n\nexport let mouseUpEventHandler = function () {\n  document.removeEventListener('mousemove', mouseMoveEventHandler);\n  document.removeEventListener('mouseup', mouseUpEventHandler);\n  document.removeEventListener('touchmove', mouseMoveEventHandler);\n  document.removeEventListener('touchend', mouseUpEventHandler);\n  document.removeEventListener('touchcancel', mouseUpEventHandler); // Remove iframe mouse event listeners on mouseup\n\n  var iframes = document.getElementsByTagName('iframe');\n\n  for (var i = 0; i < iframes.length; i++) {\n    if (canAccessIFrame(iframes[i])) {\n      removebubbleIframeMouseEvent(iframes[i]);\n    }\n  } // Remember the sash's position for the specific view.\n\n\n  if (exports.activeSplitterData.viewMode) {\n    exports.viewModeContext = exports.activeSplitterData.viewMode;\n  }\n\n  if (exports.activeSplitterData.isPrimarySplitter && exports.viewModeContext) {\n    // After moving the primary splitter, we want the primary workarea to become a flex-item in order to resize on browser width changes.\n    exports.activeSplitterData.area1.style.flexGrow = '1';\n    exports.activeSplitterData.area1.style.flexShrink = '1';\n    var area1Size = exports.activeSplitterData.area1.clientWidth;\n    var area2Size = exports.activeSplitterData.area2.clientWidth;\n    var data = {\n      area1Size: area1Size,\n      area2Size: area2Size\n    };\n    localStorage.publish(exports.viewModeContext, JSON.stringify(data));\n    publishAnalytics(area1Size, area2Size);\n  }\n\n  exports.activeSplitterData = null;\n};\n/**\n * Mouse Move Event Handler - update the active splitter\n *\n * @param {event} event - Event object\n */\n\nexport let mouseMoveEventHandler = function (event) {\n  event = event || window.event;\n\n  if (exports.activeSplitterData === null) {\n    return;\n  }\n\n  event.preventDefault();\n  var x = event.clientX;\n  var y = event.clientY;\n\n  if (!x && !y) {\n    var touch = event.originalEvent.touches[0];\n    x = touch.clientX;\n    y = touch.clientY;\n  }\n\n  exports.updateActiveSplitter(x, y);\n};\n/**\n * Update Active Splitter\n *\n * For a given mouse position update the size of the associated DIV elements for the active splitter.\n *\n * @param {number} xPos - current mouse X position\n * @param {number} yPos - current mouse Y position\n */\n\nexport let updateActiveSplitter = function (xPos, yPos) {\n  var splitterData = exports.activeSplitterData;\n\n  if (!splitterData) {\n    return;\n  }\n\n  var xDelta = xPos - splitterData.x;\n  var yDelta = yPos - splitterData.y;\n\n  if (xDelta === 0 && yDelta === 0) {\n    return;\n  }\n\n  var area1 = splitterData.area1;\n  var area2 = splitterData.area2;\n  var minSize1 = splitterData.minSize1;\n  var minSize2 = splitterData.minSize2;\n  var size1 = parseFloat(area1.style.flexGrow);\n  var size2 = parseFloat(area2.style.flexGrow);\n  var direction = splitterData.direction;\n\n  if (direction === 'row-resize') {\n    var h1 = area1.clientHeight;\n    var h2 = area2.clientHeight;\n\n    if (exports.splitterLimit(h1, h2, yDelta, minSize1, minSize2)) {\n      // make max size/min size if we hit the limit, not at the limit yet & not using flex grow\n      if (!size1 && !size2) {\n        if (yDelta > 0 && h2 !== minSize2) {\n          exports.updateAreaSize(area1, size1, h1, h2 - minSize2);\n          exports.updateAreaSize(area2, size2, minSize2, '');\n        } else if (yDelta < 0 && h1 !== minSize1) {\n          exports.updateAreaSize(area1, size1, minSize1, '');\n          exports.updateAreaSize(area2, size2, h2, h1 - minSize1);\n        }\n\n        splitterData.y = splitterData.splitter.getBoundingClientRect().top - 10;\n        splitterData.x = xPos;\n      }\n\n      return;\n    }\n\n    exports.updateAreaSize(area1, size1, h1, yDelta);\n    exports.updateAreaSize(area2, size2, h2, -yDelta);\n  } else {\n    // direction is column-resize\n    var w1 = area1.offsetWidth;\n    var w2 = area2.offsetWidth;\n\n    if (exports.splitterLimit(w1, w2, xDelta, minSize1, minSize2)) {\n      // make max size/min size if we hit the limit, not at the limit yet & not using flex grow\n      if (!size1 && !size2) {\n        if (xDelta > 0 && w2 !== minSize2) {\n          exports.updateAreaSize(area1, size1, w1, w2 - minSize2);\n          exports.updateAreaSize(area2, size2, minSize2, '');\n        } else if (xDelta < 0 && w1 !== minSize1) {\n          exports.updateAreaSize(area1, size1, minSize1, '');\n          exports.updateAreaSize(area2, size2, w2, w1 - minSize1);\n        }\n\n        splitterData.x = splitterData.splitter.getBoundingClientRect().right - 10;\n        splitterData.y = yPos;\n      }\n\n      return;\n    }\n\n    exports.updateAreaSize(area1, size1, w1, xDelta);\n    exports.updateAreaSize(area2, size2, w2, -xDelta);\n  }\n\n  splitterData.x = xPos;\n  splitterData.y = yPos;\n  publishNotification(splitterData, area1, area2);\n};\n/**\n * Update Area Size\n *\n * Update the size of a given area based on a delta amount and the type of area (fixed or proportional)\n *\n * @param {object} area - a row or column element\n * @param {number} oldSize - the previous attribute size value for the row or column\n * @param {number} oldSizePx - the previous rendered size in px for the row or column\n * @param {number} deltaPx - the amount to change the area in px\n */\n\nexport let updateAreaSize = function (area, oldSize, oldSizePx, deltaPx) {\n  var newSizePx = oldSizePx + deltaPx;\n  var when = area.getAttribute('when'); // This is a fixed size\n  // Note the size is no longer in units of em because the user has set a fix px size\n\n  if (when) {\n    area.style.maxWidth = '100%';\n  }\n\n  area.style.flexBasis = newSizePx.toString() + 'px';\n  area.style.webkitFlexBasis = newSizePx.toString() + 'px';\n};\n/**\n * Splitter Limit - return true if a splitter has hit a limiting size\n *\n * Return true if the limit is being hit for one of the areas The test is done this way because it is possible for\n * areas to become smaller than the limit due to window resizing. We want to be able to grow areas that are too\n * small with a splitter but not continue to shrink those areas\n *\n * @param {number} size1 - Size (width or height) of left or top area for the active splitter\n * @param {number} size2 - Size (width or height) of right or bottom area for the active splitter\n * @param {number} delta - Amount the sizes are being changed\n * @param {number} minSize1 - Minimum size (width or height) of left or top area for the active splitter\n * @param {number} minSize2 - Minimum size (width or height) of right or bottom area for the active splitter\n *\n *\n * @return {boolean} - true if a limit would be hit by the delta change\n */\n\nexport let splitterLimit = function (size1, size2, delta, minSize1, minSize2) {\n  if (delta > 0) {\n    // The right or bottom area is being reduced in size\n    if (size2 - delta < minSize2) {\n      return true;\n    }\n  } else {\n    // delta < 0 - the left or top area is being reduced in size\n    if (size1 + delta < minSize1) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Report a usage error.\n *\n * @param {string} errorMessage - error to report.\n */\n\nexport let reportError = function (errorMessage) {\n  logger.warn('awSplitterService:' + errorMessage);\n};\n/**\n * Update viewMode based on context\n *\n * @param {string} viewModeKey - ctx key for viewMode\n * @returns {string} viewMode\n */\n\nexport let updateViewMode = function (viewModeKey) {\n  return viewModeKey;\n};\nexports = {\n  constants,\n  activeSplitterData,\n  initSplitter,\n  mouseDownEvent,\n  mouseUpEventHandler,\n  mouseMoveEventHandler,\n  updateActiveSplitter,\n  updateAreaSize,\n  splitterLimit,\n  reportError,\n  updateViewMode\n};\nexport default exports;","map":{"version":3,"names":["eventBus","localStorage","logger","_","analyticsSvc","exports","constants","minSize1","minSize2","activeSplitterData","splitterAction","publishNotification","debounce","splitterData","area1","area2","splitter","publish","maxWait","trailing","leading","publishAnalytics","area1Size","area2Size","splitterEventData","sanAnalyticsType","sanCommandId","sanCommandTitle","sanPrimaryPercentage","toFixed","sanPixelSize","logCommands","initSplitter","elementRefList","prop","viewMode","attributes","initialSplitterState","get","current","previousElementSibling","nextElementSibling","colSplit","closest","style","width","padding","overflow","parentElement","flexWrap","height","minWidth","window","getComputedStyle","getPropertyValue","direction","toUpperCase","cursor","onmousedown","event","mouseDownEvent","action","ontouchstart","isPrimarySplitter","viewModeContext","JSON","parse","flexBasis","webkitFlexBasis","flexGrow","flexShrink","bubbleIframeMouseMove","iframe","existingOnMouseMove","contentWindow","onmousemove","e","evt","document","createEvent","boundingClientRect","getBoundingClientRect","initMouseEvent","detail","screenX","screenY","clientX","left","clientY","top","ctrlKey","altKey","shiftKey","metaKey","button","dispatchEvent","onmouseup","removebubbleIframeMouseEvent","canAccessIFrame","err","getSelection","selection","node","focusNode","removeAllRanges","empty","stopPropagation","preventDefault","x","y","touches","currentTarget","parseInt","getAttribute","iframes","getElementsByTagName","i","length","addEventListener","mouseMoveEventHandler","mouseUpEventHandler","removeEventListener","clientWidth","data","stringify","touch","originalEvent","updateActiveSplitter","xPos","yPos","xDelta","yDelta","size1","parseFloat","size2","h1","clientHeight","h2","splitterLimit","updateAreaSize","w1","offsetWidth","w2","right","area","oldSize","oldSizePx","deltaPx","newSizePx","when","maxWidth","toString","delta","reportError","errorMessage","warn","updateViewMode","viewModeKey"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/awSplitterService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * @module js/awSplitterService\n */\n\n// module\nimport eventBus from 'js/eventBus';\nimport localStorage from 'js/localStorage';\nimport logger from 'js/logger';\nimport _ from 'lodash';\nimport analyticsSvc from 'js/analyticsService';\n\nlet exports;\n\nexport const constants = {\n    minSize1: 20,\n    minSize2: 20\n};\n\n// A structure set when a splitter is activated (only one splitter an be active at any time)\n// See exports.mouseDownEvent for structure definition\nexport let activeSplitterData = null;\nlet splitterAction = null;\n\n// Tell the world the areas have changed size through a debounce function.\nlet publishNotification = _.debounce( function( splitterData, area1, area2 ) {\n    splitterAction && splitterAction( {\n        splitter: splitterData.splitter,\n        area1: area1,\n        area2: area2\n    } );\n    eventBus.publish( 'aw-splitter-update', {\n        splitter: splitterData.splitter,\n        area1: area1,\n        area2: area2\n    } );\n}, 1000, {\n    maxWait: 20000,\n    trailing: true,\n    leading: false\n} );\n\n/**\n * Method to publish analytics to server\n * @param {Number} area1Size - size of area1 in the UI (in pixels)\n * @param {Number} area2Size - size of area2 in the UI (in pixels)\n */\nconst publishAnalytics = ( area1Size, area2Size ) => {\n    let splitterEventData = {};\n    splitterEventData.sanAnalyticsType = 'Splitter';\n    splitterEventData.sanCommandId = 'Splitter';\n    splitterEventData.sanCommandTitle = 'Splitter';\n    splitterEventData.sanPrimaryPercentage = ( area1Size / ( area1Size + area2Size ) * 100 ).toFixed( 2 );\n    splitterEventData.sanPixelSize = area1Size;\n    analyticsSvc.logCommands( splitterEventData );\n};\n\n/**\n * Initialize a Given Splitter\n *\n * Set the onmousedown event for the splitter and establishes the type of splitter\n *\n * @param {object} elementRefList - The elements used to define the splitter\n * @param {object} prop - The React props defined on the splitter\n * @param {object} viewMode - The current viewMode on time on init\n */\nexport const initSplitter = ( elementRefList, prop, viewMode ) => {\n    let attributes = prop;\n    var initialSplitterState;\n    let splitter = elementRefList.get( 'splitter' ).current;\n\n    var area1 = splitter.previousElementSibling;\n    var area2 = splitter.nextElementSibling;\n    if( !area1 && !area2 ) {\n        // xrt-splitter\n        let colSplit = splitter.closest( '.aw-xrt-columnContentPanel' );\n        if( colSplit ) {\n            area1 = colSplit.previousElementSibling;\n            area2 = colSplit.nextElementSibling;\n            colSplit.style[ 'min-width' ] = '16px';\n            colSplit.style.width = '16px';\n            colSplit.style[ 'max-width' ] = '16px';\n            colSplit.style.padding = '0px';\n            colSplit.style.overflow = 'hidden';\n            colSplit.parentElement.style.flexWrap = 'nowrap';\n            colSplit.parentElement.style.height = '100%';\n            colSplit.parentElement.parentElement.style.height = '100%';\n            area1.style.minWidth = '0px';\n            area2.style.minWidth = '0px';\n            splitter.style.height = window.getComputedStyle( colSplit ).getPropertyValue( 'height' );\n        }\n    }\n\n    // If user defines a direction use that. If not, check for row/column on each side. Else default to vertical\n    if( attributes.direction && attributes.direction.toUpperCase() === 'HORIZONTAL' ) {\n        splitter.style.cursor = 'row-resize';\n    } else {\n        splitter.style.cursor = 'col-resize';\n    }\n\n    splitter.onmousedown = ( event ) => exports.mouseDownEvent( event, prop.action );\n    splitter.ontouchstart = ( event ) => exports.mouseDownEvent( event, prop.action );\n\n    // If this is the primary sash, load its previous position for a specific view.\n    if( attributes.isPrimarySplitter === 'true' ) {\n        if( viewMode ) {\n            exports.viewModeContext = viewMode;\n        }\n        if( localStorage.get( exports.viewModeContext ) ) {\n            initialSplitterState = JSON.parse( localStorage.get( exports.viewModeContext ) );\n\n            if( initialSplitterState && area1 && area2 ) {\n                area1.style.flexBasis = initialSplitterState.area1Size + 'px';\n                area1.style.webkitFlexBasis = initialSplitterState.area1Size + 'px';\n                area1.style.flexGrow = '1';\n                area1.style.flexShrink = '1';\n\n                area2.style.flexBasis = initialSplitterState.area2Size + 'px';\n                area2.style.webkitFlexBasis = initialSplitterState.area2Size + 'px';\n            }\n        }\n    }\n};\n\n// Setup mousemove/mouseup event listeners for iframes\nlet bubbleIframeMouseMove = function( iframe ) {\n    var existingOnMouseMove = iframe.contentWindow.onmousemove;\n\n    iframe.contentWindow.onmousemove = function( e ) {\n        // Fire any existing onmousemove listener\n        if( existingOnMouseMove ) { existingOnMouseMove( e ); }\n\n        var evt = document.createEvent( 'MouseEvents' );\n\n        var boundingClientRect = iframe.getBoundingClientRect();\n\n        evt.initMouseEvent(\n            'mousemove',\n            true, // true bubbles the event\n            false, // not cancelable\n            window,\n            e.detail,\n            e.screenX,\n            e.screenY,\n            e.clientX + boundingClientRect.left,\n            e.clientY + boundingClientRect.top,\n            e.ctrlKey,\n            e.altKey,\n            e.shiftKey,\n            e.metaKey,\n            e.button,\n            null // no related element\n        );\n\n        iframe.dispatchEvent( evt );\n    };\n\n    iframe.contentWindow.onmouseup = function( e ) {\n        var evt = document.createEvent( 'MouseEvents' );\n\n        var boundingClientRect = iframe.getBoundingClientRect();\n\n        evt.initMouseEvent(\n            'mouseup',\n            true, // true bubbles the event\n            false, // not cancelable\n            window,\n            e.detail,\n            e.screenX,\n            e.screenY,\n            e.clientX + boundingClientRect.left,\n            e.clientY + boundingClientRect.top,\n            e.ctrlKey,\n            e.altKey,\n            e.shiftKey,\n            e.metaKey,\n            e.button,\n            null // no related element\n        );\n\n        iframe.dispatchEvent( evt );\n    };\n};\n\n// Removes iframe mouse event listeners\nlet removebubbleIframeMouseEvent = function( iframe ) {\n    iframe.contentWindow.onmousemove = null;\n    iframe.contentWindow.onmouseup = null;\n};\n\n// handling DOM exception: if we try to access any event(e.g. onmouseup,onmousedown,etc) for cross-origin, we get DOM exception.\nlet canAccessIFrame = function( iframe ) {\n    try {\n        return 'onmousemove' in iframe.contentWindow;\n    } catch ( err ) {\n        return false;\n    }\n};\n\n/**\n * Mouse Down Event - initialize the active splitter\n *\n * @param {object} event - mouse down event object\n */\nexport let mouseDownEvent = function( event, action ) {\n    // Do not allow accidental text selection - which will cause the splitter to lockup\n    // Note that there are various CSS properties to control this but not a common one yet (as far as I can tell)\n    // Look for user-select: none (also ms-user-select and webkit-user-select and moz-user-select)\n    // Until there is a common way to prevent accidental selection - here is the workaround\n    event = event || window.event;\n\n    if( window.getSelection ) {\n        var selection = window.getSelection();\n        var node = selection.focusNode;\n        if( node !== null ) {\n            selection.removeAllRanges();\n        }\n    } else {\n        if( document.selection ) {\n            document.selection.empty();\n        }\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    // Create the active splitter data structure\n    var x = event.clientX;\n    var y = event.clientY;\n    if( !x && !y ) {\n        x = event.touches[ 0 ].clientX;\n        y = event.touches[ 0 ].clientY;\n    }\n    var splitter = event.currentTarget;\n\n    var area1 = splitter.previousElementSibling;\n    var area2 = splitter.nextElementSibling;\n\n    if( !area1 && !area2 ) {\n        // xrt-splitter\n        let colSplit = splitter.closest( '.aw-xrt-columnContentPanel' );\n        if( colSplit ) {\n            area1 = colSplit.previousElementSibling;\n            area2 = colSplit.nextElementSibling;\n        }\n    }\n\n    var minSize1 = parseInt( splitter.getAttribute( 'min-size-1' ) );\n    var minSize2 = parseInt( splitter.getAttribute( 'min-size-2' ) );\n    var isPrimarySplitter = splitter.getAttribute( 'isPrimarySplitter' );\n    var viewMode = splitter.getAttribute( 'viewMode' );\n\n    // If user did not define minimum sizes, default to 20\n    if( !minSize1 && !minSize2 ) {\n        minSize1 = exports.constants.minSize1;\n        minSize2 = exports.constants.minSize2;\n    }\n\n    var direction = splitter.style.cursor;\n\n    exports.activeSplitterData = {\n        splitter: splitter, // The splitter element\n        area1: area1, // The element to the left or on top\n        area2: area2, // The element to the right or on bottom\n        minSize1: minSize1, // The element to the left or on top minimum length\n        minSize2: minSize2, // The element to the right or on bottom minimum length\n        direction: direction, // row-resize or column-resize\n        isPrimarySplitter: isPrimarySplitter, // If the current splitter is the primary to remember its position\n        viewMode: viewMode,\n        x: x,\n        y: y\n    }; // Last mouse position used to update splitter\n\n    splitterAction = action;\n    // iframes suppress mouse events so the iframe's mouse events need to be bubbled up to the document level\n    var iframes = document.getElementsByTagName( 'iframe' );\n    for( var i = 0; i < iframes.length; i++ ) {\n        if( canAccessIFrame( iframes[ i ] ) ) {\n            bubbleIframeMouseMove( iframes[ i ] );\n        }\n    }\n\n    document.addEventListener( 'mousemove', mouseMoveEventHandler );\n    document.addEventListener( 'mouseup', mouseUpEventHandler );\n\n    document.addEventListener( 'touchmove', mouseMoveEventHandler );\n    document.addEventListener( 'touchend', mouseUpEventHandler );\n    document.addEventListener( 'touchcancel', mouseUpEventHandler );\n};\n\n/**\n * Mouse Up Event Handler - stop the active splitter\n *\n * @param {event} event - Event object\n */\nexport let mouseUpEventHandler = function() {\n    document.removeEventListener( 'mousemove', mouseMoveEventHandler );\n    document.removeEventListener( 'mouseup', mouseUpEventHandler );\n\n    document.removeEventListener( 'touchmove', mouseMoveEventHandler );\n    document.removeEventListener( 'touchend', mouseUpEventHandler );\n    document.removeEventListener( 'touchcancel', mouseUpEventHandler );\n\n    // Remove iframe mouse event listeners on mouseup\n    var iframes = document.getElementsByTagName( 'iframe' );\n    for( var i = 0; i < iframes.length; i++ ) {\n        if( canAccessIFrame( iframes[ i ] ) ) {\n            removebubbleIframeMouseEvent( iframes[ i ] );\n        }\n    }\n\n    // Remember the sash's position for the specific view.\n    if( exports.activeSplitterData.viewMode ) {\n        exports.viewModeContext = exports.activeSplitterData.viewMode;\n    }\n    if( exports.activeSplitterData.isPrimarySplitter && exports.viewModeContext ) {\n        // After moving the primary splitter, we want the primary workarea to become a flex-item in order to resize on browser width changes.\n        exports.activeSplitterData.area1.style.flexGrow = '1';\n        exports.activeSplitterData.area1.style.flexShrink = '1';\n        var area1Size = exports.activeSplitterData.area1.clientWidth;\n        var area2Size = exports.activeSplitterData.area2.clientWidth;\n        var data = {\n            area1Size: area1Size,\n            area2Size: area2Size\n        };\n        localStorage.publish( exports.viewModeContext, JSON.stringify( data ) );\n        publishAnalytics( area1Size, area2Size );\n    }\n\n    exports.activeSplitterData = null;\n};\n\n/**\n * Mouse Move Event Handler - update the active splitter\n *\n * @param {event} event - Event object\n */\nexport let mouseMoveEventHandler = function( event ) {\n    event = event || window.event;\n    if( exports.activeSplitterData === null ) {\n        return;\n    }\n\n    event.preventDefault();\n\n    var x = event.clientX;\n    var y = event.clientY;\n    if( !x && !y ) {\n        var touch = event.originalEvent.touches[ 0 ];\n        x = touch.clientX;\n        y = touch.clientY;\n    }\n\n    exports.updateActiveSplitter( x, y );\n};\n\n/**\n * Update Active Splitter\n *\n * For a given mouse position update the size of the associated DIV elements for the active splitter.\n *\n * @param {number} xPos - current mouse X position\n * @param {number} yPos - current mouse Y position\n */\nexport let updateActiveSplitter = function( xPos, yPos ) {\n    var splitterData = exports.activeSplitterData;\n    if( !splitterData ) {\n        return;\n    }\n\n    var xDelta = xPos - splitterData.x;\n    var yDelta = yPos - splitterData.y;\n    if( xDelta === 0 && yDelta === 0 ) {\n        return;\n    }\n\n    var area1 = splitterData.area1;\n    var area2 = splitterData.area2;\n\n    var minSize1 = splitterData.minSize1;\n    var minSize2 = splitterData.minSize2;\n\n    var size1 = parseFloat( area1.style.flexGrow );\n    var size2 = parseFloat( area2.style.flexGrow );\n\n    var direction = splitterData.direction;\n\n    if( direction === 'row-resize' ) {\n        var h1 = area1.clientHeight;\n        var h2 = area2.clientHeight;\n\n        if( exports.splitterLimit( h1, h2, yDelta, minSize1, minSize2 ) ) {\n            // make max size/min size if we hit the limit, not at the limit yet & not using flex grow\n            if( !size1 && !size2 ) {\n                if( yDelta > 0 && h2 !== minSize2 ) {\n                    exports.updateAreaSize( area1, size1, h1, h2 - minSize2 );\n                    exports.updateAreaSize( area2, size2, minSize2, '' );\n                } else if( yDelta < 0 && h1 !== minSize1 ) {\n                    exports.updateAreaSize( area1, size1, minSize1, '' );\n                    exports.updateAreaSize( area2, size2, h2, h1 - minSize1 );\n                }\n                splitterData.y = splitterData.splitter.getBoundingClientRect().top - 10;\n                splitterData.x = xPos;\n            }\n            return;\n        }\n\n        exports.updateAreaSize( area1, size1, h1, yDelta );\n        exports.updateAreaSize( area2, size2, h2, -yDelta );\n    } else {\n        // direction is column-resize\n        var w1 = area1.offsetWidth;\n        var w2 = area2.offsetWidth;\n\n        if( exports.splitterLimit( w1, w2, xDelta, minSize1, minSize2 ) ) {\n            // make max size/min size if we hit the limit, not at the limit yet & not using flex grow\n            if( !size1 && !size2 ) {\n                if( xDelta > 0 && w2 !== minSize2 ) {\n                    exports.updateAreaSize( area1, size1, w1, w2 - minSize2 );\n                    exports.updateAreaSize( area2, size2, minSize2, '' );\n                } else if( xDelta < 0 && w1 !== minSize1 ) {\n                    exports.updateAreaSize( area1, size1, minSize1, '' );\n                    exports.updateAreaSize( area2, size2, w2, w1 - minSize1 );\n                }\n                splitterData.x = splitterData.splitter.getBoundingClientRect().right - 10;\n                splitterData.y = yPos;\n            }\n            return;\n        }\n\n        exports.updateAreaSize( area1, size1, w1, xDelta );\n        exports.updateAreaSize( area2, size2, w2, -xDelta );\n    }\n    splitterData.x = xPos;\n    splitterData.y = yPos;\n    publishNotification( splitterData, area1, area2 );\n};\n\n/**\n * Update Area Size\n *\n * Update the size of a given area based on a delta amount and the type of area (fixed or proportional)\n *\n * @param {object} area - a row or column element\n * @param {number} oldSize - the previous attribute size value for the row or column\n * @param {number} oldSizePx - the previous rendered size in px for the row or column\n * @param {number} deltaPx - the amount to change the area in px\n */\nexport let updateAreaSize = function( area, oldSize, oldSizePx, deltaPx ) {\n    var newSizePx = oldSizePx + deltaPx;\n    var when = area.getAttribute( 'when' );\n\n    // This is a fixed size\n    // Note the size is no longer in units of em because the user has set a fix px size\n    if( when ) {\n        area.style.maxWidth = '100%';\n    }\n    area.style.flexBasis = newSizePx.toString() + 'px';\n    area.style.webkitFlexBasis = newSizePx.toString() + 'px';\n};\n\n/**\n * Splitter Limit - return true if a splitter has hit a limiting size\n *\n * Return true if the limit is being hit for one of the areas The test is done this way because it is possible for\n * areas to become smaller than the limit due to window resizing. We want to be able to grow areas that are too\n * small with a splitter but not continue to shrink those areas\n *\n * @param {number} size1 - Size (width or height) of left or top area for the active splitter\n * @param {number} size2 - Size (width or height) of right or bottom area for the active splitter\n * @param {number} delta - Amount the sizes are being changed\n * @param {number} minSize1 - Minimum size (width or height) of left or top area for the active splitter\n * @param {number} minSize2 - Minimum size (width or height) of right or bottom area for the active splitter\n *\n *\n * @return {boolean} - true if a limit would be hit by the delta change\n */\nexport let splitterLimit = function( size1, size2, delta, minSize1, minSize2 ) {\n    if( delta > 0 ) { // The right or bottom area is being reduced in size\n        if( size2 - delta < minSize2 ) {\n            return true;\n        }\n    } else { // delta < 0 - the left or top area is being reduced in size\n        if( size1 + delta < minSize1 ) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n/**\n * Report a usage error.\n *\n * @param {string} errorMessage - error to report.\n */\nexport let reportError = function( errorMessage ) {\n    logger.warn( 'awSplitterService:' + errorMessage );\n};\n\n/**\n * Update viewMode based on context\n *\n * @param {string} viewModeKey - ctx key for viewMode\n * @returns {string} viewMode\n */\nexport let updateViewMode = function( viewModeKey ) {\n    return viewModeKey;\n};\n\nexports = {\n    constants,\n    activeSplitterData,\n    initSplitter,\n    mouseDownEvent,\n    mouseUpEventHandler,\n    mouseMoveEventHandler,\n    updateActiveSplitter,\n    updateAreaSize,\n    splitterLimit,\n    reportError,\n    updateViewMode\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}