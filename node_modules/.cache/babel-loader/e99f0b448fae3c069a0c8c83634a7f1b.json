{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\commonframe\\\\src\\\\js\\\\AwGlobalAvatarService.js\"; // Copyright (c) 2021 Siemens\n\n/**\n * @module js/AwGlobalAvatarService\n */\n\nimport _ from 'lodash';\nimport AwAvatar from 'viewmodel/AwAvatarViewModel';\nimport AwHeaderContext from 'viewmodel/AwHeaderContextViewModel';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\nimport AwLink from 'viewmodel/AwLinkViewModel';\n/**\n * render function for Common Global Navigation\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awGlobalAvatarRenderFunction = _ref => {\n  let {\n    ctx,\n    actions,\n    fields,\n    viewModel,\n    i18n\n  } = _ref;\n\n  let hasThumbnail = _.get(ctx, 'user.hasThumbnail');\n\n  let typeIconURL = _.get(ctx, 'user.typeIconURL');\n\n  let thumbnailURL = _.get(ctx, 'user.thumbnailURL');\n\n  let tcSessionData = _.get(ctx, 'tcSessionData');\n\n  let cellHeader1 = _.get(ctx, 'user.cellHeader1');\n\n  const {\n    data\n  } = viewModel;\n  const updateHook = {\n    data,\n    actions\n  };\n  let avatar;\n\n  if (hasThumbnail) {\n    avatar = /*#__PURE__*/_jsxDEV(AwAvatar, {\n      size: \"xlarge\",\n      source: thumbnailURL,\n      action: actions.userAvatarAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this);\n  } else if (cellHeader1 && cellHeader1.length > 0) {\n    avatar = /*#__PURE__*/_jsxDEV(AwAvatar, {\n      size: \"xlarge\",\n      action: actions.userAvatarAction,\n      initials: cellHeader1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // LHN (Bottom) AVATAR AREA which opens LHN Panel\n    _jsxDEV(\"div\", {\n      className: \"sw-column h-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row flex-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row justify-center\",\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-row justify-center\",\n        children: tcSessionData && /*#__PURE__*/_jsxDEV(AwLink, { ...fields.userName,\n          action: actions.viewProfile,\n          \"link-id\": \"avatarPanelUserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(AwHeaderContext, {\n          anchor: data.dockUnDockUserSettingsAnchor,\n          updateHook: updateHook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AwCommandBar, {\n          anchor: \"aw_userLink\",\n          alignment: \"VERTICAL\",\n          showCommandLabels: true,\n          hideMore: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/commonframe/src/js/AwGlobalAvatarService.js"],"names":["awGlobalAvatarRenderFunction","i18n","hasThumbnail","_","typeIconURL","thumbnailURL","tcSessionData","cellHeader1","data","updateHook","actions","avatar","userAvatarAction","fields"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/AwGlobalAvatarService\n */\nimport _ from 'lodash';\nimport AwAvatar from 'viewmodel/AwAvatarViewModel';\nimport AwHeaderContext from 'viewmodel/AwHeaderContextViewModel';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\nimport AwLink from 'viewmodel/AwLinkViewModel';\n\n/**\n * render function for Common Global Navigation\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awGlobalAvatarRenderFunction = ( { ctx, actions, fields, viewModel, i18n } ) => {\n    let hasThumbnail = _.get( ctx, 'user.hasThumbnail' );\n    let typeIconURL = _.get( ctx, 'user.typeIconURL' );\n    let thumbnailURL = _.get( ctx, 'user.thumbnailURL' );\n    let tcSessionData = _.get( ctx, 'tcSessionData' );\n    let cellHeader1 = _.get( ctx, 'user.cellHeader1' );\n\n    const { data } = viewModel;\n    const updateHook = { data, actions };\n    let avatar;\n\n    if( hasThumbnail  ) {\n        avatar = <AwAvatar size='xlarge' source={thumbnailURL} action={actions.userAvatarAction}></AwAvatar>;\n    } else if ( cellHeader1 && cellHeader1.length > 0 ) {\n        avatar = <AwAvatar size='xlarge' action={actions.userAvatarAction} initials={cellHeader1}></AwAvatar>;\n    }\n    return (\n        // LHN (Bottom) AVATAR AREA which opens LHN Panel\n        <div className='sw-column h-12'>\n            <div className='sw-row flex-auto'></div>\n            <div className='sw-row justify-center'>\n                {avatar}\n            </div>\n            <div className='sw-row justify-center'>\n                {\n                    tcSessionData &&\n                    <AwLink {...fields.userName} action={actions.viewProfile} link-id='avatarPanelUserName'></AwLink>\n                }\n            </div>\n            <div className='align-flex-end'>\n                <AwHeaderContext anchor={data.dockUnDockUserSettingsAnchor} updateHook={updateHook}></AwHeaderContext>\n                <AwCommandBar anchor='aw_userLink' alignment='VERTICAL' showCommandLabels={true} hideMore={true}></AwCommandBar>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}