{"ast":null,"code":"/* eslint-disable complexity */\n// Copyright (c) 2020 Siemens\nimport { interopES6Default } from './utils';\nimport { registerDynImportEntry } from 'js/moduleLoader';\n/**\n * parse return value webpack.require.context to module object array\n * @param {Array} imports module structure return by webpack.require.context API\n * @returns {Object} module object array\n */\n\nconst parseImports = imports => imports.reduce((res, m) => res.concat(m.keys().map(path => ({\n  name: path,\n  loadFn: async () => interopES6Default(await m(path))\n}))), []);\n/**\n * property policy loader\n *\n * @module js/propertyPolicyLoaderService\n *\n * @namespace viewModelLoader\n */\n\n\nconst init = () => {\n  // this method will be used by build time injected code\n  const registerPropertyPolicies = imports => {\n    const modules = parseImports(imports);\n    modules.forEach(m => {\n      // register for with file name extension use case \"policies/favoritesLocationPropertyPolicy.json\"\n      const moduleName1 = m.name.replace(/^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)/, '$1');\n      registerDynImportEntry(moduleName1, m.loadFn); // register for without file name extension use case \"policies/favoritesLocationPropertyPolicy\"\n\n      const moduleName2 = m.name.replace(/^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)\\.json$/, '$1');\n      registerDynImportEntry(moduleName2, m.loadFn);\n    });\n  }; // AFX_PROPERTY_POLICY_REGISTRATION\n\n\n  registerPropertyPolicies([require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src', true, /(gaps|appbootstrap|config|services|kernel|declreact|layout|noty|popup|popuplegacy|pltable|propertyrender|uielements|uiwidget|declarativeui|ui|plstats|components|pagelevelcomponents|commonframe|command|i18n|tile|searchcore)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy'), require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/src', true, /(helloModule|solution)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy')]);\n}; // pre-load property policy for dynamic import\n\n\ninit();","map":{"version":3,"names":["interopES6Default","registerDynImportEntry","parseImports","imports","reduce","res","m","concat","keys","map","path","name","loadFn","init","registerPropertyPolicies","modules","forEach","moduleName1","replace","moduleName2","require","context"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/config/src/js/propertyPolicyLoaderService.js"],"sourcesContent":["/* eslint-disable complexity */\n// Copyright (c) 2020 Siemens\n\nimport { interopES6Default } from './utils';\nimport { registerDynImportEntry } from 'js/moduleLoader';\n\n/**\n * parse return value webpack.require.context to module object array\n * @param {Array} imports module structure return by webpack.require.context API\n * @returns {Object} module object array\n */\nconst parseImports = imports => imports.reduce( ( res, m ) =>\n    res.concat( m.keys().map( path => ( {\n        name: path,\n        loadFn: async () => interopES6Default( await m( path ) )\n    } ) ) ), [] );\n\n/**\n * property policy loader\n *\n * @module js/propertyPolicyLoaderService\n *\n * @namespace viewModelLoader\n */\nconst init = () => {\n    // this method will be used by build time injected code\n    const registerPropertyPolicies = ( imports ) => {\n        const modules = parseImports( imports );\n        modules.forEach( ( m ) => {\n            // register for with file name extension use case \"policies/favoritesLocationPropertyPolicy.json\"\n            const moduleName1 = m.name.replace( /^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)/, '$1' );\n            registerDynImportEntry( moduleName1, m.loadFn );\n            // register for without file name extension use case \"policies/favoritesLocationPropertyPolicy\"\n            const moduleName2 = m.name.replace( /^.*[\\\\/](policies[\\\\/][^\\\\//]*PropertyPolicy)\\.json$/, '$1' );\n            registerDynImportEntry( moduleName2, m.loadFn );\n        } );\n    };\n    // AFX_PROPERTY_POLICY_REGISTRATION\n    registerPropertyPolicies( [\n        require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src',true,/(gaps|appbootstrap|config|services|kernel|declreact|layout|noty|popup|popuplegacy|pltable|propertyrender|uielements|uiwidget|declarativeui|ui|plstats|components|pagelevelcomponents|commonframe|command|i18n|tile|searchcore)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy' ),require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/src',true,/(helloModule|solution)[\\\\/]src[\\\\/](assets[\\\\/])?policies[\\\\/][^\\\\/]*PropertyPolicy\\.json$/, 'lazy' )\n    ] );\n};\n\n// pre-load property policy for dynamic import\ninit();\n"],"mappings":"AAAA;AACA;AAEA,SAASA,iBAAT,QAAkC,SAAlC;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAGC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAgB,CAAEC,GAAF,EAAOC,CAAP,KAC5CD,GAAG,CAACE,MAAJ,CAAYD,CAAC,CAACE,IAAF,GAASC,GAAT,CAAcC,IAAI,KAAM;EAChCC,IAAI,EAAED,IAD0B;EAEhCE,MAAM,EAAE,YAAYZ,iBAAiB,CAAE,MAAMM,CAAC,CAAEI,IAAF,CAAT;AAFL,CAAN,CAAlB,CAAZ,CAD4B,EAInB,EAJmB,CAAhC;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,IAAI,GAAG,MAAM;EACf;EACA,MAAMC,wBAAwB,GAAKX,OAAF,IAAe;IAC5C,MAAMY,OAAO,GAAGb,YAAY,CAAEC,OAAF,CAA5B;IACAY,OAAO,CAACC,OAAR,CAAmBV,CAAF,IAAS;MACtB;MACA,MAAMW,WAAW,GAAGX,CAAC,CAACK,IAAF,CAAOO,OAAP,CAAgB,+CAAhB,EAAiE,IAAjE,CAApB;MACAjB,sBAAsB,CAAEgB,WAAF,EAAeX,CAAC,CAACM,MAAjB,CAAtB,CAHsB,CAItB;;MACA,MAAMO,WAAW,GAAGb,CAAC,CAACK,IAAF,CAAOO,OAAP,CAAgB,sDAAhB,EAAwE,IAAxE,CAApB;MACAjB,sBAAsB,CAAEkB,WAAF,EAAeb,CAAC,CAACM,MAAjB,CAAtB;IACH,CAPD;EAQH,CAVD,CAFe,CAaf;;;EACAE,wBAAwB,CAAE,CACtBM,OAAO,CAACC,OAAR,CAAgB,uFAAhB,EAAwG,IAAxG,EAA6G,oSAA7G,EAAmZ,MAAnZ,CADsB,EACsYD,OAAO,CAACC,OAAR,CAAgB,gEAAhB,EAAiF,IAAjF,EAAsF,4FAAtF,EAAoL,MAApL,CADtY,CAAF,CAAxB;AAGH,CAjBD,C,CAmBA;;;AACAR,IAAI"},"metadata":{},"sourceType":"module"}