{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\pltable\\\\src\\\\js\\\\splmTableDirectEditUtils.js\";\n// Copyright (c) 2020 Siemens\n\n/**\n * This module defines the utils for direct edit in PL Table.\n *\n * @module js/splmTableDirectEditUtils\n */\nimport localeService from 'js/localeService';\nimport { includeComponent } from 'js/moduleLoader';\nimport { renderComponent } from 'js/declReactUtils';\nimport { AppCtxComponent } from 'js/reactAppCtx';\n/**\n * Gets the editContext for the table\n *\n * @param {Object} tableInstance - the table's tableInstance object\n *\n * @return {string} the name of the editContext for this table\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getEditContext = tableInstance => {\n  if (tableInstance.dataProvider.json && tableInstance.dataProvider.json.editContext) {\n    // Edit context of edit handler for this dataProvider\n    return tableInstance.dataProvider.json.editContext;\n  } else if (tableInstance.dataProvider.json && tableInstance.dataProvider.json.customPanelEditContext) {\n    // Edit context of parent summary view model ( html panel table using edit via nativeDataLoadEvent usecase )\n    return tableInstance.dataProvider.json.customPanelEditContext;\n  } else if (tableInstance.declViewModel._internal.editContext) {\n    // Edit context of edit handler for this view model\n    return tableInstance.declViewModel._internal.editContext;\n  }\n\n  return null;\n};\n\nconst _displayGuidanceMessage = (message, tableElem) => {\n  const prop = {\n    message: {\n      messageType: 'INFO',\n      messageText: message\n    },\n    showType: 'false',\n    closable: true\n  };\n  const guidanceMessageElem = includeComponent('AwGuidanceMessage', prop);\n  let docFrag = document.createDocumentFragment();\n  renderComponent( /*#__PURE__*/_jsxDEV(AppCtxComponent, {\n    children: guidanceMessageElem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 22\n  }, this), docFrag);\n  tableElem.parentElement.insertBefore(docFrag, tableElem);\n};\n/**\n * Displays guidance message above the table to let the user know that auto save is one despite global auto save being turned off\n *\n * @param {HTMLElement} tableElem - the table element\n */\n\n\nexport const displayAutoSaveOnGuidanceMessage = tableElem => {\n  localeService.getLocalizedTextFromKey('BaseMessages.AUTO_SAVE_ONLY_TABLE', true).then(message => {\n    _displayGuidanceMessage(message, tableElem);\n  });\n};\n/**\n * Displays guidance message above the table to let the user know that cell editing is disabled\n *\n * @param {HTMLElement} tableElem - the table element\n */\n\nexport const displayCellEditDisabledGuidanceMessage = tableElem => {\n  localeService.getLocalizedTextFromKey('BaseMessages.CELL_EDITING_DISABLED', true).then(message => {\n    _displayGuidanceMessage(message, tableElem);\n  });\n};\nexport default {\n  getEditContext,\n  displayAutoSaveOnGuidanceMessage,\n  displayCellEditDisabledGuidanceMessage\n};","map":{"version":3,"names":["localeService","includeComponent","renderComponent","AppCtxComponent","getEditContext","tableInstance","dataProvider","json","editContext","customPanelEditContext","declViewModel","_internal","_displayGuidanceMessage","message","tableElem","prop","messageType","messageText","showType","closable","guidanceMessageElem","docFrag","document","createDocumentFragment","parentElement","insertBefore","displayAutoSaveOnGuidanceMessage","getLocalizedTextFromKey","then","displayCellEditDisabledGuidanceMessage"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/splmTableDirectEditUtils.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This module defines the utils for direct edit in PL Table.\n *\n * @module js/splmTableDirectEditUtils\n */\nimport localeService from 'js/localeService';\nimport { includeComponent } from 'js/moduleLoader';\nimport { renderComponent } from 'js/declReactUtils';\nimport { AppCtxComponent } from 'js/reactAppCtx';\n\n/**\n * Gets the editContext for the table\n *\n * @param {Object} tableInstance - the table's tableInstance object\n *\n * @return {string} the name of the editContext for this table\n */\nexport const getEditContext = ( tableInstance ) => {\n    if( tableInstance.dataProvider.json && tableInstance.dataProvider.json.editContext ) {\n        // Edit context of edit handler for this dataProvider\n        return tableInstance.dataProvider.json.editContext;\n    } else if( tableInstance.dataProvider.json && tableInstance.dataProvider.json.customPanelEditContext ) {\n        // Edit context of parent summary view model ( html panel table using edit via nativeDataLoadEvent usecase )\n        return tableInstance.dataProvider.json.customPanelEditContext;\n    } else if( tableInstance.declViewModel._internal.editContext ) {\n        // Edit context of edit handler for this view model\n        return tableInstance.declViewModel._internal.editContext;\n    }\n    return null;\n};\n\nconst _displayGuidanceMessage = ( message, tableElem ) => {\n    const prop = {\n        message: {\n            messageType: 'INFO',\n            messageText: message\n        },\n        showType: 'false',\n        closable: true\n    };\n\n    const guidanceMessageElem = includeComponent( 'AwGuidanceMessage', prop );\n    let docFrag = document.createDocumentFragment();\n    renderComponent( <AppCtxComponent>{guidanceMessageElem}</AppCtxComponent>, docFrag );\n    tableElem.parentElement.insertBefore( docFrag, tableElem );\n};\n\n/**\n * Displays guidance message above the table to let the user know that auto save is one despite global auto save being turned off\n *\n * @param {HTMLElement} tableElem - the table element\n */\nexport const displayAutoSaveOnGuidanceMessage = ( tableElem ) => {\n    localeService.getLocalizedTextFromKey( 'BaseMessages.AUTO_SAVE_ONLY_TABLE', true ).then( ( message ) => {\n        _displayGuidanceMessage( message, tableElem );\n    } );\n};\n\n/**\n * Displays guidance message above the table to let the user know that cell editing is disabled\n *\n * @param {HTMLElement} tableElem - the table element\n */\nexport const displayCellEditDisabledGuidanceMessage = ( tableElem ) => {\n    localeService.getLocalizedTextFromKey( 'BaseMessages.CELL_EDITING_DISABLED', true ).then( ( message ) => {\n        _displayGuidanceMessage( message, tableElem );\n    } );\n};\n\nexport default {\n    getEditContext,\n    displayAutoSaveOnGuidanceMessage,\n    displayCellEditDisabledGuidanceMessage\n};\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAKC,aAAF,IAAqB;EAC/C,IAAIA,aAAa,CAACC,YAAd,CAA2BC,IAA3B,IAAmCF,aAAa,CAACC,YAAd,CAA2BC,IAA3B,CAAgCC,WAAvE,EAAqF;IACjF;IACA,OAAOH,aAAa,CAACC,YAAd,CAA2BC,IAA3B,CAAgCC,WAAvC;EACH,CAHD,MAGO,IAAIH,aAAa,CAACC,YAAd,CAA2BC,IAA3B,IAAmCF,aAAa,CAACC,YAAd,CAA2BC,IAA3B,CAAgCE,sBAAvE,EAAgG;IACnG;IACA,OAAOJ,aAAa,CAACC,YAAd,CAA2BC,IAA3B,CAAgCE,sBAAvC;EACH,CAHM,MAGA,IAAIJ,aAAa,CAACK,aAAd,CAA4BC,SAA5B,CAAsCH,WAA1C,EAAwD;IAC3D;IACA,OAAOH,aAAa,CAACK,aAAd,CAA4BC,SAA5B,CAAsCH,WAA7C;EACH;;EACD,OAAO,IAAP;AACH,CAZM;;AAcP,MAAMI,uBAAuB,GAAG,CAAEC,OAAF,EAAWC,SAAX,KAA0B;EACtD,MAAMC,IAAI,GAAG;IACTF,OAAO,EAAE;MACLG,WAAW,EAAE,MADR;MAELC,WAAW,EAAEJ;IAFR,CADA;IAKTK,QAAQ,EAAE,OALD;IAMTC,QAAQ,EAAE;EAND,CAAb;EASA,MAAMC,mBAAmB,GAAGnB,gBAAgB,CAAE,mBAAF,EAAuBc,IAAvB,CAA5C;EACA,IAAIM,OAAO,GAAGC,QAAQ,CAACC,sBAAT,EAAd;EACArB,eAAe,eAAE,QAAC,eAAD;IAAA,UAAkBkB;EAAlB;IAAA;IAAA;IAAA;EAAA,QAAF,EAA4DC,OAA5D,CAAf;EACAP,SAAS,CAACU,aAAV,CAAwBC,YAAxB,CAAsCJ,OAAtC,EAA+CP,SAA/C;AACH,CAdD;AAgBA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMY,gCAAgC,GAAKZ,SAAF,IAAiB;EAC7Dd,aAAa,CAAC2B,uBAAd,CAAuC,mCAAvC,EAA4E,IAA5E,EAAmFC,IAAnF,CAA2Ff,OAAF,IAAe;IACpGD,uBAAuB,CAAEC,OAAF,EAAWC,SAAX,CAAvB;EACH,CAFD;AAGH,CAJM;AAMP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMe,sCAAsC,GAAKf,SAAF,IAAiB;EACnEd,aAAa,CAAC2B,uBAAd,CAAuC,oCAAvC,EAA6E,IAA7E,EAAoFC,IAApF,CAA4Ff,OAAF,IAAe;IACrGD,uBAAuB,CAAEC,OAAF,EAAWC,SAAX,CAAvB;EACH,CAFD;AAGH,CAJM;AAMP,eAAe;EACXV,cADW;EAEXsB,gCAFW;EAGXG;AAHW,CAAf"},"metadata":{},"sourceType":"module"}