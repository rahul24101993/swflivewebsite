{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwWidgetService.js\";\n// Copyright (c) 2021 Siemens\nimport AwPropertyLabel from 'viewmodel/AwPropertyLabelViewModel';\nimport AwWidgetVal from 'viewmodel/AwWidgetValViewModel';\nimport uwPropSvc from 'js/uwPropertyService';\nimport uwSupportSvc from 'js/uwSupportService'; // --------------------------------\n// widgets\n// --------------------------------\n\n/**\n * render function for AwWidget\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awWidgetRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const hint = prop.hint || prop.renderingHint;\n\n  if (hint) {\n    prop.fielddata.renderingHint = hint;\n\n    if (prop.vmo) {\n      uwPropSvc.setRenderingHint(prop.vmo.props[prop.name], hint);\n    }\n  }\n\n  if (prop && prop.modifiable && prop.modifiable !== 'false') {\n    uwPropSvc.setIsPropertyModifiable(prop, prop.modifiable);\n  }\n\n  if (prop && prop.labeldisplay) {\n    const labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay(prop.labeldisplay);\n    uwPropSvc.setPropertyLabelDisplay(prop, labelDisplay);\n\n    if (labelDisplay === 'NO_PROPERTY_LABEL') {\n      return /*#__PURE__*/_jsxDEV(AwWidgetVal, { ...prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    }\n  } // in future, do we want a className='sw-property-valWrapper' on the AwWidgetVal?\n  // would need to do similar from all prop widget wrappers\n\n\n  return /*#__PURE__*/_jsxDEV(AwPropertyLabel, { ...prop,\n    children: /*#__PURE__*/_jsxDEV(AwWidgetVal, { ...prop,\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["AwPropertyLabel","AwWidgetVal","uwPropSvc","uwSupportSvc","awWidgetRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","prop","hint","renderingHint","fielddata","vmo","setRenderingHint","name","modifiable","setIsPropertyModifiable","labeldisplay","labelDisplay","retrievePropertyLabelDisplay","setPropertyLabelDisplay"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwWidgetService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyLabel from 'viewmodel/AwPropertyLabelViewModel';\nimport AwWidgetVal from 'viewmodel/AwWidgetValViewModel';\nimport uwPropSvc from 'js/uwPropertyService';\nimport uwSupportSvc from 'js/uwSupportService';\n\n// --------------------------------\n// widgets\n// --------------------------------\n/**\n * render function for AwWidget\n * @param {*} props context for render function\n * @returns {JSX.Element} react component\n */\nexport const awWidgetRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    const hint = prop.hint || prop.renderingHint;\n\n    if( hint ) {\n        prop.fielddata.renderingHint = hint;\n        if( prop.vmo ) {\n            uwPropSvc.setRenderingHint( prop.vmo.props[ prop.name ], hint );\n        }\n    }\n\n    if( prop && prop.modifiable && prop.modifiable !== 'false' ) {\n        uwPropSvc.setIsPropertyModifiable( prop, prop.modifiable );\n    }\n\n    if( prop && prop.labeldisplay ) {\n        const labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay( prop.labeldisplay );\n        uwPropSvc.setPropertyLabelDisplay( prop, labelDisplay );\n\n        if( labelDisplay === 'NO_PROPERTY_LABEL' ) {\n            return <AwWidgetVal {...prop}></AwWidgetVal>;\n        }\n    }\n\n    // in future, do we want a className='sw-property-valWrapper' on the AwWidgetVal?\n    // would need to do similar from all prop widget wrappers\n    return (\n        <AwPropertyLabel {...prop}>\n            <AwWidgetVal {...prop} className=''></AwWidgetVal>\n        </AwPropertyLabel>\n    );\n};\n"],"mappings":";AAAA;AACA,OAAOA,eAAP,MAA4B,oCAA5B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,sBAAsB,GAAKC,KAAF,IAAa;EAC/C,MAAM;IACFC,SADE;IAEFC,MAFE;IAGFC,OAHE;IAIFC,IAJE;IAKFC,MALE;IAMFC,KANE;IAOFC,QAPE;IAQFC,QARE;IASF,GAAGC;EATD,IAUFT,KAVJ;EAYA,MAAMU,IAAI,GAAGD,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACE,aAA/B;;EAEA,IAAID,IAAJ,EAAW;IACPD,IAAI,CAACG,SAAL,CAAeD,aAAf,GAA+BD,IAA/B;;IACA,IAAID,IAAI,CAACI,GAAT,EAAe;MACXhB,SAAS,CAACiB,gBAAV,CAA4BL,IAAI,CAACI,GAAL,CAASb,KAAT,CAAgBS,IAAI,CAACM,IAArB,CAA5B,EAAyDL,IAAzD;IACH;EACJ;;EAED,IAAID,IAAI,IAAIA,IAAI,CAACO,UAAb,IAA2BP,IAAI,CAACO,UAAL,KAAoB,OAAnD,EAA6D;IACzDnB,SAAS,CAACoB,uBAAV,CAAmCR,IAAnC,EAAyCA,IAAI,CAACO,UAA9C;EACH;;EAED,IAAIP,IAAI,IAAIA,IAAI,CAACS,YAAjB,EAAgC;IAC5B,MAAMC,YAAY,GAAGrB,YAAY,CAACsB,4BAAb,CAA2CX,IAAI,CAACS,YAAhD,CAArB;IACArB,SAAS,CAACwB,uBAAV,CAAmCZ,IAAnC,EAAyCU,YAAzC;;IAEA,IAAIA,YAAY,KAAK,mBAArB,EAA2C;MACvC,oBAAO,QAAC,WAAD,OAAiBV;MAAjB;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;EACJ,CAjC8C,CAmC/C;EACA;;;EACA,oBACI,QAAC,eAAD,OAAqBA,IAArB;IAAA,uBACI,QAAC,WAAD,OAAiBA,IAAjB;MAAuB,SAAS,EAAC;IAAjC;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA1CM"},"metadata":{},"sourceType":"module"}