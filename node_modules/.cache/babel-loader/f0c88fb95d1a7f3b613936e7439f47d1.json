{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwHeaderPropertiesService.js\";\nimport AwHeaderProps from 'viewmodel/AwHeaderPropsViewModel';\nimport AwInclude from 'viewmodel/AwIncludeViewModel';\nimport conditionSvc from 'js/conditionService';\nimport { DerivedStateResult } from 'js/derivedContextService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getHeaderState = header => {\n  if (header.visibleWhen) {\n    const conditionSplits = header.visibleWhen.split(' ');\n    let abc = [];\n    conditionSplits.forEach(split => {\n      if (/^!?ctx\\.?/.test(split)) {\n        abc.push(split.replace(/^!?ctx\\.?/, ''));\n      }\n    });\n    return abc;\n  }\n\n  return [];\n};\n\nexport const getApplicableViews = (vmDef, props) => {\n  const {\n    contributedHeaders,\n    context\n  } = props.props;\n  return contributedHeaders.map(contributedHeader => {\n    const ctxParameters = getHeaderState(contributedHeader);\n\n    const compute = _ref => {\n      let {\n        ctx\n      } = _ref;\n      var isActive = conditionSvc.evaluateCondition({\n        ctx: ctx,\n        subPanelContext: context //The selection info was being sent in ng-afx, not sure why it is needed\n        //Keeping it here for reference if a usecase is found\n        //selection: selection,\n\n      }, contributedHeader.visibleWhen);\n\n      if (isActive) {\n        return contributedHeader.view;\n      }\n\n      return null;\n    };\n\n    return new DerivedStateResult({\n      ctxParameters,\n      additionalParameters: [context],\n      compute\n    });\n  });\n};\nexport const awHeaderPropertiesRenderFn = props => {\n  const {\n    ctxMin,\n    ...prop\n  } = props;\n  const {\n    headerProps,\n    context\n  } = prop.props;\n  const {\n    contributedHeaders\n  } = ctxMin;\n  let headerContributedView = contributedHeaders && contributedHeaders.find(header => header !== null);\n  let headerPropsRenderers = [];\n\n  if (headerContributedView) {\n    headerPropsRenderers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-layout-flexRowContainer aw-layout-headerContribution\",\n      children: /*#__PURE__*/_jsxDEV(AwInclude, {\n        name: headerContributedView,\n        subPanelContext: context\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, 'headerPropertiesRender0', false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 36\n    }, this));\n  }\n\n  if (headerProps && headerProps.length) {\n    headerPropsRenderers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-layout-flexRowContainer aw-layout-headerContribution\",\n      children: /*#__PURE__*/_jsxDEV(AwHeaderProps, {\n        headerProperties: headerProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, 'headerPropertiesRender1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 36\n    }, this));\n  }\n\n  return headerPropsRenderers;\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwHeaderPropertiesService.js"],"names":["getHeaderState","header","conditionSplits","abc","split","getApplicableViews","context","props","contributedHeader","ctxParameters","compute","ctx","isActive","subPanelContext","additionalParameters","awHeaderPropertiesRenderFn","prop","contributedHeaders","headerContributedView","headerPropsRenderers","headerProps"],"mappings":"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","sourcesContent":["import AwHeaderProps from 'viewmodel/AwHeaderPropsViewModel';\nimport AwInclude from 'viewmodel/AwIncludeViewModel';\nimport conditionSvc from 'js/conditionService';\nimport { DerivedStateResult } from 'js/derivedContextService';\n\nconst getHeaderState = ( header ) => {\n    if( header.visibleWhen ) {\n        const conditionSplits = header.visibleWhen.split( ' ' );\n        let abc = [];\n        conditionSplits.forEach( split => {\n            if( /^!?ctx\\.?/.test( split ) ) {\n                abc.push( split.replace( /^!?ctx\\.?/, '' ) );\n            }\n        } );\n        return abc;\n    }\n    return [];\n};\n\nexport const getApplicableViews = ( vmDef, props ) => {\n    const { contributedHeaders, context } = props.props;\n    return contributedHeaders.map( contributedHeader => {\n        const ctxParameters = getHeaderState( contributedHeader );\n        const compute = ( { ctx } ) => {\n            var isActive = conditionSvc.evaluateCondition( {\n                ctx: ctx,\n                subPanelContext: context\n                //The selection info was being sent in ng-afx, not sure why it is needed\n                //Keeping it here for reference if a usecase is found\n                //selection: selection,\n            }, contributedHeader.visibleWhen );\n\n            if( isActive ) {\n                return contributedHeader.view;\n            }\n            return null;\n        };\n        return new DerivedStateResult( {\n            ctxParameters,\n            additionalParameters: [ context ],\n            compute\n        } );\n    } );\n};\n\nexport const awHeaderPropertiesRenderFn = ( props ) => {\n    const {\n        ctxMin,\n        ...prop\n    } = props;\n    const { headerProps, context } = prop.props;\n    const { contributedHeaders } = ctxMin;\n    let headerContributedView = contributedHeaders && contributedHeaders.find( header => header !== null );\n\n    let headerPropsRenderers = [];\n    if( headerContributedView ) {\n        headerPropsRenderers.push( <div key={'headerPropertiesRender0'} className='aw-layout-flexRowContainer aw-layout-headerContribution' >\n            <AwInclude name={headerContributedView} subPanelContext={context}></AwInclude>\n        </div> );\n    }\n    if( headerProps && headerProps.length ) {\n        headerPropsRenderers.push( <div key={'headerPropertiesRender1'}  className='aw-layout-flexRowContainer aw-layout-headerContribution'>\n            <AwHeaderProps headerProperties={headerProps}></AwHeaderProps>\n        </div> );\n    }\n    return headerPropsRenderers;\n};\n"]},"metadata":{},"sourceType":"module"}