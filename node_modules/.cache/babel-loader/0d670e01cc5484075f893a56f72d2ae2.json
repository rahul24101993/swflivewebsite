{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwIconButtonService.js\";\nimport AwButton from 'viewmodel/AwButtonViewModel';\nimport eventBus from 'js/eventBus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getNavigatePanelAction = prop => {\n  const {\n    destPanelId,\n    title,\n    recreatePanel,\n    mainPanelCaption,\n    isolateMode,\n    supportGoBack\n  } = prop.command.fielddata;\n\n  if (destPanelId) {\n    return function NavAction() {\n      const context = {\n        destPanelId,\n        title,\n        recreatePanel,\n        mainPanelCaption,\n        isolateMode,\n        supportGoBack,\n        backNavigation: true,\n\n        /*\n         * In afx, aw-icon-button directive used to figure out the closest command panel container using jquery\n         * and set the id attribute here. Now the containerId will need to be passed fromt the command panel component\n         */\n        id: prop.containerid\n      };\n      eventBus.publish('awPanel.navigate', context);\n    };\n  }\n};\n\nexport const AwIconButtonRenderFunction = props => {\n  let action;\n  let ariaLabel = '';\n  let icon = null;\n  let commandDef = null;\n\n  if (props.fielddata) {\n    commandDef = props.fielddata;\n  } else if (props.command) {\n    commandDef = props.command.fielddata || props.command;\n  } //const commandDef = props.fielddata ? props.fielddata : props.command.fielddata || props.command;\n\n\n  if (commandDef) {\n    if (commandDef.destPanelId && !commandDef.action) {\n      action = getNavigatePanelAction(props);\n    } else if (commandDef.action) {\n      action = commandDef.action;\n    }\n\n    ariaLabel = commandDef.propertyDisplayName || commandDef.tooltip || '';\n    icon = commandDef.iconName;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AwButton, {\n    \"aria-label\": ariaLabel,\n    \"aria-disabled\": commandDef && commandDef.disabled,\n    className: props.size === 'large' ? 'large' : '',\n    iconId: icon,\n    action: action,\n    tooltip: commandDef && commandDef.tooltip\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c = AwIconButtonRenderFunction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AwIconButtonRenderFunction\");","map":{"version":3,"names":["AwButton","eventBus","getNavigatePanelAction","prop","destPanelId","title","recreatePanel","mainPanelCaption","isolateMode","supportGoBack","command","fielddata","NavAction","context","backNavigation","id","containerid","publish","AwIconButtonRenderFunction","props","action","ariaLabel","icon","commandDef","propertyDisplayName","tooltip","iconName","disabled","size"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwIconButtonService.js"],"sourcesContent":["import AwButton from 'viewmodel/AwButtonViewModel';\nimport eventBus from 'js/eventBus';\n\nconst getNavigatePanelAction = ( prop ) => {\n    const { destPanelId, title, recreatePanel, mainPanelCaption, isolateMode, supportGoBack } = prop.command.fielddata;\n    if( destPanelId ) {\n        return function NavAction() {\n            const context = {\n                destPanelId,\n                title,\n                recreatePanel,\n                mainPanelCaption,\n                isolateMode,\n                supportGoBack,\n                backNavigation: true,\n                /*\n                 * In afx, aw-icon-button directive used to figure out the closest command panel container using jquery\n                 * and set the id attribute here. Now the containerId will need to be passed fromt the command panel component\n                 */\n                id: prop.containerid\n            };\n            eventBus.publish( 'awPanel.navigate', context );\n        };\n    }\n};\n\nexport const AwIconButtonRenderFunction = ( props ) => {\n    let action;\n    let ariaLabel = '';\n    let icon = null;\n    let commandDef = null;\n    if( props.fielddata ) {\n        commandDef = props.fielddata;\n    }else if( props.command ) {\n        commandDef = props.command.fielddata || props.command;\n    }\n    //const commandDef = props.fielddata ? props.fielddata : props.command.fielddata || props.command;\n    if( commandDef ) {\n        if( commandDef.destPanelId && !commandDef.action  ) {\n            action = getNavigatePanelAction( props );\n        } else if( commandDef.action ) {\n            action = commandDef.action;\n        }\n\n        ariaLabel = commandDef.propertyDisplayName || commandDef.tooltip || '';\n        icon = commandDef.iconName;\n    }\n\n    return (\n        <AwButton\n            aria-label={ariaLabel}\n            aria-disabled={commandDef && commandDef.disabled}\n            className={ props.size === 'large' ? 'large' : '' }\n            iconId={icon}\n            action={action}\n            tooltip={commandDef && commandDef.tooltip}>\n        </AwButton>\n    );\n};\n"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,sBAAsB,GAAKC,IAAF,IAAY;EACvC,MAAM;IAAEC,WAAF;IAAeC,KAAf;IAAsBC,aAAtB;IAAqCC,gBAArC;IAAuDC,WAAvD;IAAoEC;EAApE,IAAsFN,IAAI,CAACO,OAAL,CAAaC,SAAzG;;EACA,IAAIP,WAAJ,EAAkB;IACd,OAAO,SAASQ,SAAT,GAAqB;MACxB,MAAMC,OAAO,GAAG;QACZT,WADY;QAEZC,KAFY;QAGZC,aAHY;QAIZC,gBAJY;QAKZC,WALY;QAMZC,aANY;QAOZK,cAAc,EAAE,IAPJ;;QAQZ;AAChB;AACA;AACA;QACgBC,EAAE,EAAEZ,IAAI,CAACa;MAZG,CAAhB;MAcAf,QAAQ,CAACgB,OAAT,CAAkB,kBAAlB,EAAsCJ,OAAtC;IACH,CAhBD;EAiBH;AACJ,CArBD;;AAuBA,OAAO,MAAMK,0BAA0B,GAAKC,KAAF,IAAa;EACnD,IAAIC,MAAJ;EACA,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,IAAI,GAAG,IAAX;EACA,IAAIC,UAAU,GAAG,IAAjB;;EACA,IAAIJ,KAAK,CAACR,SAAV,EAAsB;IAClBY,UAAU,GAAGJ,KAAK,CAACR,SAAnB;EACH,CAFD,MAEM,IAAIQ,KAAK,CAACT,OAAV,EAAoB;IACtBa,UAAU,GAAGJ,KAAK,CAACT,OAAN,CAAcC,SAAd,IAA2BQ,KAAK,CAACT,OAA9C;EACH,CATkD,CAUnD;;;EACA,IAAIa,UAAJ,EAAiB;IACb,IAAIA,UAAU,CAACnB,WAAX,IAA0B,CAACmB,UAAU,CAACH,MAA1C,EAAoD;MAChDA,MAAM,GAAGlB,sBAAsB,CAAEiB,KAAF,CAA/B;IACH,CAFD,MAEO,IAAII,UAAU,CAACH,MAAf,EAAwB;MAC3BA,MAAM,GAAGG,UAAU,CAACH,MAApB;IACH;;IAEDC,SAAS,GAAGE,UAAU,CAACC,mBAAX,IAAkCD,UAAU,CAACE,OAA7C,IAAwD,EAApE;IACAH,IAAI,GAAGC,UAAU,CAACG,QAAlB;EACH;;EAED,oBACI,QAAC,QAAD;IACI,cAAYL,SADhB;IAEI,iBAAeE,UAAU,IAAIA,UAAU,CAACI,QAF5C;IAGI,SAAS,EAAGR,KAAK,CAACS,IAAN,KAAe,OAAf,GAAyB,OAAzB,GAAmC,EAHnD;IAII,MAAM,EAAEN,IAJZ;IAKI,MAAM,EAAEF,MALZ;IAMI,OAAO,EAAEG,UAAU,IAAIA,UAAU,CAACE;EANtC;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAhCM;KAAMP,0B"},"metadata":{},"sourceType":"module"}