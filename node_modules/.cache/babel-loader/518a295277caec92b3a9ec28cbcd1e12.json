{"ast":null,"code":"// Compiler result to JSON file\nimport{createComponent}from'js/declViewModelService';import{registerDynImportEntry}from'js/moduleLoader';import AwParseService from'js/awParseService';import AwFilterService from'js/awFilterService';import{getField}from'js/utils';import{Fragment}from'react';let filterSer=AwFilterService.instance;import AwAdvancedBar from'viewmodel/AwAdvancedBarViewModel';import AwFlexRow from'viewmodel/AwFlexRowViewModel';import AwHeaderContext from'viewmodel/AwHeaderContextViewModel';import AwIconButton from'viewmodel/AwIconButtonViewModel';import{ExistWhen,AwClass,VisibleWhen}from'js/hocCollection';const DivExistWhenAwClass=AwClass(ExistWhen('div'));const AwHeaderContextVisibleWhen=VisibleWhen(AwHeaderContext);/*\nrender function\n*/import{commonUserSettingsRenderFunction}from'js/CommonUserSettingsBarService';/*\nctx imports\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ctxImportObj={};/*\ndynamic import\n */registerDynImportEntry('js/CommonUserSettingsBarService',()=>import('js/CommonUserSettingsBarService'));;/*\nview model\n */const declViewModelJson={\"schemaVersion\":\"1.0.0\",\"data\":{\"close\":{\"action\":\"toggleShowUserSettingsBarValue\",\"iconName\":\"Close\",\"tooltip\":\"{{i18n.COMMON_USER_SETTING_BAR_CLOSE}}\"}},\"actions\":{\"render\":{\"method\":\"commonUserSettingsRenderFunction\",\"deps\":\"js/CommonUserSettingsBarService\"},\"toggleShowUserSettingsBarValue\":{\"actionType\":\"modifyCtx\",\"inputData\":{\"methodType\":\"update\",\"name\":\"showUserSettingsBar\",\"value\":\"{{!(ctx.showUserSettingsBar=='true')}}\"}}},\"conditions\":{\"isUserSettingsBarVisible\":{\"expression\":\"ctx.showUserSettingsBar == 'true'\"}},\"i18n\":{\"COMMON_USER_SETTING_BAR_CLOSE\":[\"commonFrameMessages\"]},\"ctx\":{\"showUserSettingsBar\":null},\"lifecycleHooks\":{\"render\":\"render\"},\"_viewModelId\":\"CommonUserSettingsBar\",\"_uniqueViewModelId\":\"CommonUserSettingsBar\"};/*\n<footer>\n    <div\n    exist-when=\"conditions.isUserSettingsBarVisible\"\n        aw-class=\"[{ 'aw-roll-out': conditions.isUserSettingsBarVisible }, { 'aw-roll-in': !conditions.isUserSettingsBarVisible }]\"\n        class=\"aw-user-settings-bar\"\n    >\n        <aw-advanced-bar type=\"FOOTER\">\n            <aw-flex-row justify=\"center\" align-content=\"center\">\n                <aw-header-context\n                    visible-when=\"ctx.showUserSettingsBar\"\n                    alignment=\"HORIZONTAL\"\n                ></aw-header-context>\n                <div class=\"sw-userSettings-closeButton\">\n                    <aw-icon-button command=\"fields.close\"></aw-icon-button>\n                </div>\n            </aw-flex-row>\n        </aw-advanced-bar>\n    </div>\n</footer>\n\n*/const renderFn=props=>{let subPanelContext=props.subPanelContext;let{viewModel:{data,dataProviders,dispatch,conditions,selectionModels,editHandlers,chartProviders,ports},grids,ctx,actions,fields,messages,i18n,formProp,viewPath}=props;data={...data,dataProviders};if(subPanelContext&&subPanelContext.fields){fields={...fields,...subPanelContext.fields};}let $index=null;return/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(DivExistWhenAwClass,{className:\"aw-user-settings-bar\",existWhen:AwParseService.instance(\"conditions.isUserSettingsBarVisible\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),awClass:AwParseService.instance(\"[{ 'aw-roll-out': conditions.isUserSettingsBarVisible }, { 'aw-roll-in': !conditions.isUserSettingsBarVisible }]\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports}),children:/*#__PURE__*/_jsx(AwAdvancedBar,{type:\"FOOTER\",children:/*#__PURE__*/_jsxs(AwFlexRow,{justify:\"center\",alignContent:\"center\",children:[/*#__PURE__*/_jsx(AwHeaderContextVisibleWhen,{alignment:\"HORIZONTAL\",visibleWhen:AwParseService.instance(\"ctx.showUserSettingsBar\")({props,data,fields,dataProviders,ctx,i18n,actions,subPanelContext,viewPath,conditions,formProp,dispatch,selectionModels,editHandlers,chartProviders,ports})}),/*#__PURE__*/_jsx(\"div\",{className:\"sw-userSettings-closeButton\",children:/*#__PURE__*/_jsx(AwIconButton,{...getField(\"fields.close\",fields,$index,null,null)})})]})})})});};/*\ndefine component\n*/const Component=createComponent(declViewModelJson,commonUserSettingsRenderFunction,undefined,ctxImportObj);export default Component;","map":null,"metadata":{},"sourceType":"module"}