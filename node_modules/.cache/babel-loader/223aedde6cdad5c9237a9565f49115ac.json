{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwDateTimeValService.js\";\n// Copyright (c) 2021 Siemens\nimport AwDateVal from 'viewmodel/AwDateValViewModel';\nimport AwTimeVal from 'viewmodel/AwTimeValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport dateTimeSvc from 'js/dateTimeService';\nimport uwPropSvc from 'js/uwPropertyService';\nimport uwSupportSvc from 'js/uwSupportService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awDatetimeValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const isEnabled = prop.fielddata.isEnabled;\n  const hasLov = prop.fielddata.hasLov;\n  const isArray = prop.fielddata.isArray;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  let fielddata = { ...prop.fielddata\n  };\n  let dateApi = { ...prop.fielddata.dateApi\n  };\n  dateApi.isNotLov = true;\n  fielddata.dateApi = dateApi;\n  let otherProps = { ...prop,\n    fielddata\n  };\n\n  if (data._isRefreshNeeded) {\n    otherProps.parentSelected = true;\n    data._isRefreshNeeded = false;\n  }\n\n  if (fielddata.dateApi.isDateEnabled && fielddata.dateApi.isTimeEnabled) {\n    //If date and time enabled then time popup should be handled\n    otherProps.onChange = event => {\n      if (!isArray) {\n        prop.onChange(event);\n      } else {\n        data.selectedDate = event.target.value;\n        dispatch({\n          path: 'data._isRefreshNeeded',\n          value: true\n        });\n      }\n    };\n\n    otherProps.onTimeSelectedOrEntered = timeValue => {\n      let timeInMilliSec = dateTimeSvc.getTimeInMilliSec(timeValue);\n      let dateAndTime;\n\n      if (timeInMilliSec === null) {\n        dateAndTime = null;\n      } else {\n        dateAndTime = data.selectedDate ? new Date(Number(data.selectedDate) + timeInMilliSec) : new Date(Number(dateTimeSvc.getDefaultDate(fielddata.dateApi)) + timeInMilliSec);\n      }\n\n      prop.onChange({\n        target: {\n          value: dateAndTime\n        }\n      });\n      dispatch({\n        path: 'data._isRefreshNeeded',\n        value: false\n      });\n    };\n  }\n\n  let labelDisplay;\n\n  if (prop && prop.labeldisplay) {\n    labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay(prop.labeldisplay);\n    uwPropSvc.setPropertyLabelDisplay(prop, labelDisplay);\n  }\n\n  const getApplicableClasses = () => {\n    return getValClass(otherProps);\n  };\n\n  const renderDateTime = () => {\n    if (!isEnabled) {\n      otherProps.fielddata.uiValue = otherProps.value;\n      return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (hasLov) {\n      return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (!prop.fielddata.dateApi.isTimeEnabled) {\n      return /*#__PURE__*/_jsxDEV(AwDateVal, { ...otherProps,\n        className: getApplicableClasses()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this);\n    } else if (!prop.fielddata.dateApi.isDateEnabled) {\n      return /*#__PURE__*/_jsxDEV(AwTimeVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    } // renderFn for Date and Time\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getApplicableClasses() + ' sw-row sw-date-time-container propertyLabelTopContainer',\n      children: [/*#__PURE__*/_jsxDEV(AwDateVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AwTimeVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  };\n\n  if (isArray) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getApplicableClasses() + ' sw-row sw-date-time-container propertyLabelTopContainer',\n      children: [/*#__PURE__*/_jsxDEV(AwDateVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AwTimeVal, { ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (labelDisplay === 'NO_PROPERTY_LABEL') {\n    return renderDateTime();\n  }\n\n  return renderDateTime();\n};","map":{"version":3,"names":["AwDateVal","AwTimeVal","getValClass","AwPropertyNonEditVal","AwPropertyLovVal","dateTimeSvc","uwPropSvc","uwSupportSvc","awDatetimeValRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","prop","isEnabled","fielddata","hasLov","isArray","data","dispatch","dateApi","isNotLov","otherProps","_isRefreshNeeded","parentSelected","isDateEnabled","isTimeEnabled","onChange","event","selectedDate","target","value","path","onTimeSelectedOrEntered","timeValue","timeInMilliSec","getTimeInMilliSec","dateAndTime","Date","Number","getDefaultDate","labelDisplay","labeldisplay","retrievePropertyLabelDisplay","setPropertyLabelDisplay","getApplicableClasses","renderDateTime","uiValue"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwDateTimeValService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwDateVal from 'viewmodel/AwDateValViewModel';\nimport AwTimeVal from 'viewmodel/AwTimeValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport dateTimeSvc from 'js/dateTimeService';\nimport uwPropSvc from 'js/uwPropertyService';\nimport uwSupportSvc from 'js/uwSupportService';\n\nexport const awDatetimeValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    const isEnabled = prop.fielddata.isEnabled;\n    const hasLov = prop.fielddata.hasLov;\n    const isArray = prop.fielddata.isArray;\n    const { data, dispatch } = viewModel;\n\n    let fielddata = { ...prop.fielddata };\n    let dateApi = { ...prop.fielddata.dateApi };\n    dateApi.isNotLov = true;\n    fielddata.dateApi = dateApi;\n\n    let otherProps = { ...prop, fielddata };\n\n    if( data._isRefreshNeeded ) {\n        otherProps.parentSelected = true;\n        data._isRefreshNeeded = false;\n    }\n\n    if( fielddata.dateApi.isDateEnabled && fielddata.dateApi.isTimeEnabled ) {\n        //If date and time enabled then time popup should be handled\n        otherProps.onChange = ( event ) => {\n            if( !isArray ) {\n                prop.onChange( event );\n            } else {\n                data.selectedDate = event.target.value;\n                dispatch( { path: 'data._isRefreshNeeded', value: true } );\n            }\n        };\n\n        otherProps.onTimeSelectedOrEntered = ( timeValue ) => {\n            let timeInMilliSec = dateTimeSvc.getTimeInMilliSec( timeValue );\n            let dateAndTime;\n            if( timeInMilliSec === null ) {\n                dateAndTime = null;\n            } else{\n                dateAndTime = data.selectedDate ?\n                    new Date( Number( data.selectedDate ) + timeInMilliSec ) :\n                    new Date( Number( dateTimeSvc.getDefaultDate( fielddata.dateApi ) ) + timeInMilliSec );\n            }\n            prop.onChange( { target: { value: dateAndTime } } );\n            dispatch( { path: 'data._isRefreshNeeded', value: false } );\n        };\n    }\n\n    let labelDisplay;\n    if( prop && prop.labeldisplay ) {\n        labelDisplay = uwSupportSvc.retrievePropertyLabelDisplay( prop.labeldisplay );\n        uwPropSvc.setPropertyLabelDisplay( prop, labelDisplay );\n    }\n\n    const getApplicableClasses = () => {\n        return getValClass( otherProps );\n    };\n\n    const renderDateTime = () => {\n        if( !isEnabled ) {\n            otherProps.fielddata.uiValue = otherProps.value;\n            return (\n                <AwPropertyNonEditVal {...otherProps}></AwPropertyNonEditVal>\n            );\n        }\n\n        if( hasLov ) {\n            return (\n                <AwPropertyLovVal {...otherProps} ></AwPropertyLovVal>\n            );\n        }\n\n        if( !prop.fielddata.dateApi.isTimeEnabled ) {\n            return (\n                <AwDateVal {...otherProps} className={getApplicableClasses()} ></AwDateVal>\n            );\n        } else if( !prop.fielddata.dateApi.isDateEnabled ) {\n            return (\n                <AwTimeVal {...otherProps}></AwTimeVal>\n            );\n        }\n\n        // renderFn for Date and Time\n        return (\n            <div className={ getApplicableClasses( ) + ' sw-row sw-date-time-container propertyLabelTopContainer'}>\n                <AwDateVal {...otherProps}></AwDateVal>\n                <AwTimeVal {...otherProps}></AwTimeVal>\n            </div>\n        );\n    };\n\n    if( isArray ) {\n        return (\n            <div className={ getApplicableClasses( ) + ' sw-row sw-date-time-container propertyLabelTopContainer'}>\n                <AwDateVal {...otherProps}></AwDateVal>\n                <AwTimeVal {...otherProps}></AwTimeVal>\n            </div>\n        );\n    }\n    if( labelDisplay === 'NO_PROPERTY_LABEL' ) {\n        return renderDateTime();\n    }\n    return renderDateTime();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}