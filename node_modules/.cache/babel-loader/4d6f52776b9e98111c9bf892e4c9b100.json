{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyStringValService.js\";\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport AwTextareaVal from 'viewmodel/AwTextareaValViewModel';\nimport AwTextBoxVal from 'viewmodel/AwTextBoxValViewModel';\nimport AwPropertyRichTextAreaVal from 'viewmodel/AwPropertyRichTextAreaValViewModel';\nimport AwPropertyRenderingHint from 'viewmodel/AwPropertyRenderingHintViewModel';\nimport { getValClass } from 'js/componentUtils';\n/**\n * render function for AwPropertyStringVal\n * @deprecated afx@4.3.0\n * @alternative <AwWidget>\n * @obsoleteIn afx@6.0.0\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awPropertyStringValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n\n  const renderPropertyBasedOnProps = () => {\n    const {\n      hasLov,\n      renderingHint,\n      isRichText\n    } = prop.fielddata;\n    const {\n      maxLength\n    } = prop;\n\n    if (hasLov) {\n      return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    } else if (!hasLov && renderingHint) {\n      return /*#__PURE__*/_jsxDEV(AwPropertyRenderingHint, { ...prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    } else if (!hasLov && !renderingHint) {\n      const {\n        inTableCell\n      } = prop;\n\n      if (maxLength && maxLength < 60 && !isRichText) {\n        return /*#__PURE__*/_jsxDEV(AwTextBoxVal, { ...prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this);\n      } else if (isRichText) {\n        if (inTableCell) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup\",\n            children: /*#__PURE__*/_jsxDEV(AwPropertyRichTextAreaVal, { ...prop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(AwPropertyRichTextAreaVal, { ...prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this);\n      } else if ((!maxLength || maxLength >= 60) && !isRichText) {\n        if (inTableCell) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup\",\n            children: /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...prop,\n              className: getValClass(prop)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...prop,\n          className: getValClass(prop)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this);\n      }\n    } // default\n\n\n    return /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  };\n\n  return renderPropertyBasedOnProps();\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyStringValService.js"],"names":["awPropertyStringValRenderFunction","props","prop","renderPropertyBasedOnProps","isRichText","maxLength","inTableCell","getValClass"],"mappings":";AAAA,OAAA,gBAAA,MAAA,qCAAA;AACA,OAAA,aAAA,MAAA,kCAAA;AACA,OAAA,YAAA,MAAA,iCAAA;AACA,OAAA,yBAAA,MAAA,8CAAA;AACA,OAAA,uBAAA,MAAA,4CAAA;AACA,SAAA,WAAA,QAAA,mBAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMA,iCAAiC,GAAKC,KAAF,IAAa;EAC1D,MAAM;IAAA,SAAA;IAAA,MAAA;IAAA,OAAA;IAAA,IAAA;IAAA,MAAA;IAAA,KAAA;IAAA,QAAA;IAAA,QAAA;IASF,GAAGC;EATD,IAAN,KAAA;;EAYA,MAAMC,0BAA0B,GAAG,MAAM;IACrC,MAAM;MAAA,MAAA;MAAA,aAAA;MAAyBC;IAAzB,IAAwCF,IAAI,CAAlD,SAAA;IACA,MAAM;MAAEG;IAAF,IAAN,IAAA;;IAEA,IAAA,MAAA,EAAa;MACT,OAAA,aAAO,OAAA,CAAA,gBAAA,EAAA,EAAA,GAAsBH;MAAtB,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EAAP,IAAO,CAAP;IADJ,CAAA,MAEO,IAAI,CAAA,MAAA,IAAJ,aAAA,EAA+B;MAClC,OAAA,aAAO,OAAA,CAAA,uBAAA,EAAA,EAAA,GAA6BA;MAA7B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EAAP,IAAO,CAAP;IADG,CAAA,MAEA,IAAI,CAAA,MAAA,IAAW,CAAf,aAAA,EAAgC;MACnC,MAAM;QAAEI;MAAF,IAAN,IAAA;;MACA,IAAID,SAAS,IAAIA,SAAS,GAAtBA,EAAAA,IAA+B,CAAnC,UAAA,EAAiD;QAC7C,OAAA,aACI,OAAA,CAAA,YAAA,EAAA,EAAA,GAAkBH;QAAlB,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA,EAAA;UAAA,YAAA,EAAA;QAAA,CAAA,EADJ,IACI,CADJ;MADJ,CAAA,MAIO,IAAA,UAAA,EAAiB;QACpB,IAAA,WAAA,EAAkB;UACd,OAAA,aACI,OAAA,CAAA,KAAA,EAAA;YAAK,SAAS,EAAd,4DAAA;YAAA,QAAA,EAAA,aACI,OAAA,CAAA,yBAAA,EAAA,EAAA,GAA+BA;YAA/B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;cAAA,QAAA,EAAA,YAAA;cAAA,UAAA,EAAA,EAAA;cAAA,YAAA,EAAA;YAAA,CAAA,EAAA,IAAA;UADJ,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA,EAAA;YAAA,YAAA,EAAA;UAAA,CAAA,EADJ,IACI,CADJ;QAKH;;QACD,OAAA,aAAO,OAAA,CAAA,yBAAA,EAAA,EAAA,GAA+BA;QAA/B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA,EAAA;UAAA,YAAA,EAAA;QAAA,CAAA,EAAP,IAAO,CAAP;MARG,CAAA,MASA,IAAI,CAAE,CAAA,SAAA,IAAcG,SAAS,IAAzB,EAAA,KAAqC,CAAzC,UAAA,EAAuD;QAC1D,IAAA,WAAA,EAAkB;UACd,OAAA,aACI,OAAA,CAAA,KAAA,EAAA;YAAK,SAAS,EAAd,4DAAA;YAAA,QAAA,EAAA,aACI,OAAA,CAAA,aAAA,EAAA,EAAA,GAAA,IAAA;cAA0B,SAAS,EAAGE,WAAW,CAAA,IAAA;YAAjD,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;cAAA,QAAA,EAAA,YAAA;cAAA,UAAA,EAAA,EAAA;cAAA,YAAA,EAAA;YAAA,CAAA,EAAA,IAAA;UADJ,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA,EAAA;YAAA,YAAA,EAAA;UAAA,CAAA,EADJ,IACI,CADJ;QAMH;;QACD,OAAA,aAAO,OAAA,CAAA,aAAA,EAAA,EAAA,GAAA,IAAA;UAA0B,SAAS,EAAGA,WAAW,CAAA,IAAA;QAAjD,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA,EAAA;UAAA,YAAA,EAAA;QAAA,CAAA,EAAP,IAAO,CAAP;MACH;IAjCgC,CAAA,CAmCrC;;;IACA,OAAA,aAAO,OAAA,CAAA,aAAA,EAAA,EAAA,GAAA,IAAA;MAA2B,SAAS,EAAGA,WAAW,CAAA,IAAA;IAAlD,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAP,IAAO,CAAP;EApCJ,CAAA;;EAsCA,OAAOJ,0BAAP,EAAA;AAnDG,CAAA","sourcesContent":["import AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport AwTextareaVal from 'viewmodel/AwTextareaValViewModel';\nimport AwTextBoxVal from 'viewmodel/AwTextBoxValViewModel';\nimport AwPropertyRichTextAreaVal from 'viewmodel/AwPropertyRichTextAreaValViewModel';\nimport AwPropertyRenderingHint from 'viewmodel/AwPropertyRenderingHintViewModel';\nimport { getValClass } from 'js/componentUtils';\n\n/**\n * render function for AwPropertyStringVal\n * @deprecated afx@4.3.0\n * @alternative <AwWidget>\n * @obsoleteIn afx@6.0.0\n * @returns {JSX.Element} react component\n */\nexport const awPropertyStringValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    const renderPropertyBasedOnProps = () => {\n        const { hasLov, renderingHint, isRichText } = prop.fielddata;\n        const { maxLength } = prop;\n\n        if( hasLov ) {\n            return <AwPropertyLovVal {...prop} ></AwPropertyLovVal>;\n        } else if( !hasLov && renderingHint ) {\n            return <AwPropertyRenderingHint {...prop} ></AwPropertyRenderingHint>;\n        } else if( !hasLov && !renderingHint ) {\n            const { inTableCell } = prop;\n            if( maxLength && maxLength < 60 && !isRichText ) {\n                return (\n                    <AwTextBoxVal {...prop} ></AwTextBoxVal>\n                );\n            } else if( isRichText ) {\n                if( inTableCell ) {\n                    return (\n                        <div className='aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup'>\n                            <AwPropertyRichTextAreaVal {...prop} ></AwPropertyRichTextAreaVal>\n                        </div>\n                    );\n                }\n                return <AwPropertyRichTextAreaVal {...prop} ></AwPropertyRichTextAreaVal>;\n            } else if( ( !maxLength || maxLength >= 60 ) && !isRichText ) {\n                if( inTableCell ) {\n                    return (\n                        <div className='aw-layout-popup aw-propertyrenderjs-tableCellArrayValPopup'>\n                            <AwTextareaVal {...prop}  className={ getValClass( prop ) } ></AwTextareaVal>\n                        </div>\n\n                    );\n                }\n                return <AwTextareaVal {...prop}  className={ getValClass( prop ) } ></AwTextareaVal>;\n            }\n        }\n        // default\n        return <AwTextareaVal  {...prop}  className={ getValClass( prop ) }></AwTextareaVal>;\n    };\n    return renderPropertyBasedOnProps();\n};\n"]},"metadata":{},"sourceType":"module"}