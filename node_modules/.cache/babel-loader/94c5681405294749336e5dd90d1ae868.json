{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\commonframe\\\\src\\\\viewmodel\\\\CommonUserSettingsBarViewModel.json\";\n// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwAdvancedBar from 'viewmodel/AwAdvancedBarViewModel';\nimport AwFlexRow from 'viewmodel/AwFlexRowViewModel';\nimport AwHeaderContext from 'viewmodel/AwHeaderContextViewModel';\nimport AwIconButton from 'viewmodel/AwIconButtonViewModel';\nimport { ExistWhen, AwClass, VisibleWhen } from 'js/hocCollection';\nconst DivExistWhenAwClass = AwClass(ExistWhen('div'));\n_c = DivExistWhenAwClass;\nconst AwHeaderContextVisibleWhen = VisibleWhen(AwHeaderContext);\n/*\nrender function\n*/\n\n_c2 = AwHeaderContextVisibleWhen;\nimport { commonUserSettingsRenderFunction } from 'js/CommonUserSettingsBarService';\n/*\nctx imports\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ctxImportObj = {};\n/*\ndynamic import\n */\n\nregisterDynImportEntry('js/CommonUserSettingsBarService', () => import('js/CommonUserSettingsBarService'));\n;\n/*\nview model\n */\n\nconst declViewModelJson = {\n  \"schemaVersion\": \"1.0.0\",\n  \"data\": {\n    \"close\": {\n      \"action\": \"toggleShowUserSettingsBarValue\",\n      \"iconName\": \"Close\",\n      \"tooltip\": \"{{i18n.COMMON_USER_SETTING_BAR_CLOSE}}\"\n    }\n  },\n  \"actions\": {\n    \"render\": {\n      \"method\": \"commonUserSettingsRenderFunction\",\n      \"deps\": \"js/CommonUserSettingsBarService\"\n    },\n    \"toggleShowUserSettingsBarValue\": {\n      \"actionType\": \"modifyCtx\",\n      \"inputData\": {\n        \"methodType\": \"update\",\n        \"name\": \"showUserSettingsBar\",\n        \"value\": \"{{!(ctx.showUserSettingsBar=='true')}}\"\n      }\n    }\n  },\n  \"conditions\": {\n    \"isUserSettingsBarVisible\": {\n      \"expression\": \"ctx.showUserSettingsBar == 'true'\"\n    }\n  },\n  \"i18n\": {\n    \"COMMON_USER_SETTING_BAR_CLOSE\": [\"commonFrameMessages\"]\n  },\n  \"ctx\": {\n    \"showUserSettingsBar\": null\n  },\n  \"lifecycleHooks\": {\n    \"render\": \"render\"\n  },\n  \"_viewModelId\": \"CommonUserSettingsBar\",\n  \"_uniqueViewModelId\": \"CommonUserSettingsBar\"\n};\n/*\n<footer>\n    <div\n    exist-when=\"conditions.isUserSettingsBarVisible\"\n        aw-class=\"[{ 'aw-roll-out': conditions.isUserSettingsBarVisible }, { 'aw-roll-in': !conditions.isUserSettingsBarVisible }]\"\n        class=\"aw-user-settings-bar\"\n    >\n        <aw-advanced-bar type=\"FOOTER\">\n            <aw-flex-row justify=\"center\" align-content=\"center\">\n                <aw-header-context\n                    visible-when=\"ctx.showUserSettingsBar\"\n                    alignment=\"HORIZONTAL\"\n                ></aw-header-context>\n                <div class=\"sw-userSettings-closeButton\">\n                    <aw-icon-button command=\"fields.close\"></aw-icon-button>\n                </div>\n            </aw-flex-row>\n        </aw-advanced-bar>\n    </div>\n</footer>\n\n*/\n\nconst renderFn = props => {\n  let subPanelContext = props.subPanelContext;\n  let {\n    viewModel: {\n      data,\n      dataProviders,\n      dispatch,\n      conditions,\n      selectionModels,\n      editHandlers,\n      chartProviders,\n      ports\n    },\n    grids,\n    ctx,\n    actions,\n    fields,\n    messages,\n    i18n,\n    formProp,\n    viewPath\n  } = props;\n  data = { ...data,\n    dataProviders\n  };\n\n  if (subPanelContext && subPanelContext.fields) {\n    fields = { ...fields,\n      ...subPanelContext.fields\n    };\n  }\n\n  let $index = null;\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(DivExistWhenAwClass, {\n      className: \"aw-user-settings-bar\",\n      existWhen: AwParseService.instance(\"conditions.isUserSettingsBarVisible\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      }),\n      awClass: AwParseService.instance(\"[{ 'aw-roll-out': conditions.isUserSettingsBarVisible }, { 'aw-roll-in': !conditions.isUserSettingsBarVisible }]\")({\n        props,\n        data,\n        fields,\n        dataProviders,\n        ctx,\n        i18n,\n        actions,\n        subPanelContext,\n        viewPath,\n        conditions,\n        formProp,\n        dispatch,\n        selectionModels,\n        editHandlers,\n        chartProviders,\n        ports\n      }),\n      children: /*#__PURE__*/_jsxDEV(AwAdvancedBar, {\n        type: \"FOOTER\",\n        children: /*#__PURE__*/_jsxDEV(AwFlexRow, {\n          justify: \"center\",\n          alignContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(AwHeaderContextVisibleWhen, {\n            alignment: \"HORIZONTAL\",\n            visibleWhen: AwParseService.instance(\"ctx.showUserSettingsBar\")({\n              props,\n              data,\n              fields,\n              dataProviders,\n              ctx,\n              i18n,\n              actions,\n              subPanelContext,\n              viewPath,\n              conditions,\n              formProp,\n              dispatch,\n              selectionModels,\n              editHandlers,\n              chartProviders,\n              ports\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sw-userSettings-closeButton\",\n            children: /*#__PURE__*/_jsxDEV(AwIconButton, { ...getField(\"fields.close\", fields, $index, null, null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 13\n  }, this);\n};\n/*\ndefine component\n*/\n\n\nconst Component = createComponent(declViewModelJson, commonUserSettingsRenderFunction, undefined, ctxImportObj);\nexport default Component;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DivExistWhenAwClass\");\n$RefreshReg$(_c2, \"AwHeaderContextVisibleWhen\");","map":{"version":3,"names":["createComponent","registerDynImportEntry","AwParseService","AwFilterService","getField","Fragment","filterSer","instance","AwAdvancedBar","AwFlexRow","AwHeaderContext","AwIconButton","ExistWhen","AwClass","VisibleWhen","DivExistWhenAwClass","AwHeaderContextVisibleWhen","commonUserSettingsRenderFunction","ctxImportObj","declViewModelJson","renderFn","props","subPanelContext","viewModel","data","dataProviders","dispatch","conditions","selectionModels","editHandlers","chartProviders","ports","grids","ctx","actions","fields","messages","i18n","formProp","viewPath","$index","Component","undefined"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/commonframe/src/viewmodel/CommonUserSettingsBarViewModel.json"],"sourcesContent":["// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\nimport AwAdvancedBar from 'viewmodel/AwAdvancedBarViewModel';\nimport AwFlexRow from 'viewmodel/AwFlexRowViewModel';\nimport AwHeaderContext from 'viewmodel/AwHeaderContextViewModel';\nimport AwIconButton from 'viewmodel/AwIconButtonViewModel';\nimport { ExistWhen,AwClass,VisibleWhen } from 'js/hocCollection';\nconst DivExistWhenAwClass = AwClass(ExistWhen('div'));\nconst AwHeaderContextVisibleWhen = VisibleWhen(AwHeaderContext);\n\n/*\nrender function\n*/\nimport { commonUserSettingsRenderFunction } from 'js/CommonUserSettingsBarService';\n\n\n/*\nctx imports\n*/\n\nconst ctxImportObj = {  };\n\n\n/*\ndynamic import\n */\nregisterDynImportEntry('js/CommonUserSettingsBarService', () => import('js/CommonUserSettingsBarService'));;\n\n/*\nview model\n */\nconst declViewModelJson = {\n    \"schemaVersion\": \"1.0.0\",\n    \"data\": {\n        \"close\": {\n            \"action\": \"toggleShowUserSettingsBarValue\",\n            \"iconName\": \"Close\",\n            \"tooltip\": \"{{i18n.COMMON_USER_SETTING_BAR_CLOSE}}\"\n        }\n    },\n    \"actions\": {\n        \"render\": {\n            \"method\": \"commonUserSettingsRenderFunction\",\n            \"deps\": \"js/CommonUserSettingsBarService\"\n        },\n        \"toggleShowUserSettingsBarValue\": {\n            \"actionType\": \"modifyCtx\",\n            \"inputData\": {\n                \"methodType\": \"update\",\n                \"name\": \"showUserSettingsBar\",\n                \"value\": \"{{!(ctx.showUserSettingsBar=='true')}}\"\n            }\n        }\n    },\n    \"conditions\": {\n        \"isUserSettingsBarVisible\": {\n            \"expression\": \"ctx.showUserSettingsBar == 'true'\"\n        }\n    },\n    \"i18n\": {\n        \"COMMON_USER_SETTING_BAR_CLOSE\": [\n            \"commonFrameMessages\"\n        ]\n    },\n    \"ctx\": {\n        \"showUserSettingsBar\": null\n    },\n    \"lifecycleHooks\": {\n        \"render\": \"render\"\n    },\n    \"_viewModelId\": \"CommonUserSettingsBar\",\n    \"_uniqueViewModelId\": \"CommonUserSettingsBar\"\n};\n\n/*\n<footer>\n    <div\n    exist-when=\"conditions.isUserSettingsBarVisible\"\n        aw-class=\"[{ 'aw-roll-out': conditions.isUserSettingsBarVisible }, { 'aw-roll-in': !conditions.isUserSettingsBarVisible }]\"\n        class=\"aw-user-settings-bar\"\n    >\n        <aw-advanced-bar type=\"FOOTER\">\n            <aw-flex-row justify=\"center\" align-content=\"center\">\n                <aw-header-context\n                    visible-when=\"ctx.showUserSettingsBar\"\n                    alignment=\"HORIZONTAL\"\n                ></aw-header-context>\n                <div class=\"sw-userSettings-closeButton\">\n                    <aw-icon-button command=\"fields.close\"></aw-icon-button>\n                </div>\n            </aw-flex-row>\n        </aw-advanced-bar>\n    </div>\n</footer>\n\n*/\nconst renderFn =(props)=> {\n    let subPanelContext = props.subPanelContext ;\n    let { viewModel: { data, dataProviders, dispatch, conditions, selectionModels, editHandlers, chartProviders, ports  }, grids, ctx, actions, fields, messages, i18n, formProp, viewPath  } = props;\n    data = {...data, dataProviders};\n    if( subPanelContext && subPanelContext.fields ){\n        fields = { ...fields, ...subPanelContext.fields };\n    }\n    let $index = null;\n    return (\n            <footer>\n        <DivExistWhenAwClass className=\"aw-user-settings-bar\" existWhen={AwParseService.instance( \"conditions.isUserSettingsBarVisible\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )} awClass={AwParseService.instance( \"[{ 'aw-roll-out': conditions.isUserSettingsBarVisible }, { 'aw-roll-in': !conditions.isUserSettingsBarVisible }]\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )}>\n            <AwAdvancedBar type=\"FOOTER\">\n                <AwFlexRow justify=\"center\" alignContent=\"center\">\n                    <AwHeaderContextVisibleWhen alignment=\"HORIZONTAL\" visibleWhen={AwParseService.instance( \"ctx.showUserSettingsBar\" )( { props, data, fields, dataProviders, ctx, i18n, actions, subPanelContext, viewPath, conditions, formProp, dispatch, selectionModels, editHandlers, chartProviders, ports } )}>\n                    </AwHeaderContextVisibleWhen>\n                    <div className=\"sw-userSettings-closeButton\">\n                        <AwIconButton {...getField(\"fields.close\", fields, $index, null, null )}>\n                        </AwIconButton>\n                    </div>\n                </AwFlexRow>\n            </AwAdvancedBar>\n        </DivExistWhenAwClass>\n    </footer>\n    )\n};\n\n\n/*\ndefine component\n*/\nconst Component = createComponent( declViewModelJson, commonUserSettingsRenderFunction, undefined, ctxImportObj );\n\nexport default Component;"],"mappings":";AAAA;AACA,SAASA,eAAT,QAAgC,yBAAhC;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,IAAIC,SAAS,GAAGH,eAAe,CAACI,QAAhC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,SAAT,EAAmBC,OAAnB,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,MAAMC,mBAAmB,GAAGF,OAAO,CAACD,SAAS,CAAC,KAAD,CAAV,CAAnC;KAAMG,mB;AACN,MAAMC,0BAA0B,GAAGF,WAAW,CAACJ,eAAD,CAA9C;AAEA;AACA;AACA;;MAJMM,0B;AAKN,SAASC,gCAAT,QAAiD,iCAAjD;AAGA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAGA;AACA;AACA;;AACAjB,sBAAsB,CAAC,iCAAD,EAAoC,MAAM,OAAO,iCAAP,CAA1C,CAAtB;AAA2G;AAE3G;AACA;AACA;;AACA,MAAMkB,iBAAiB,GAAG;EACtB,iBAAiB,OADK;EAEtB,QAAQ;IACJ,SAAS;MACL,UAAU,gCADL;MAEL,YAAY,OAFP;MAGL,WAAW;IAHN;EADL,CAFc;EAStB,WAAW;IACP,UAAU;MACN,UAAU,kCADJ;MAEN,QAAQ;IAFF,CADH;IAKP,kCAAkC;MAC9B,cAAc,WADgB;MAE9B,aAAa;QACT,cAAc,QADL;QAET,QAAQ,qBAFC;QAGT,SAAS;MAHA;IAFiB;EAL3B,CATW;EAuBtB,cAAc;IACV,4BAA4B;MACxB,cAAc;IADU;EADlB,CAvBQ;EA4BtB,QAAQ;IACJ,iCAAiC,CAC7B,qBAD6B;EAD7B,CA5Bc;EAiCtB,OAAO;IACH,uBAAuB;EADpB,CAjCe;EAoCtB,kBAAkB;IACd,UAAU;EADI,CApCI;EAuCtB,gBAAgB,uBAvCM;EAwCtB,sBAAsB;AAxCA,CAA1B;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,KAAD,IAAU;EACtB,IAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;EACA,IAAI;IAAEC,SAAS,EAAE;MAAEC,IAAF;MAAQC,aAAR;MAAuBC,QAAvB;MAAiCC,UAAjC;MAA6CC,eAA7C;MAA8DC,YAA9D;MAA4EC,cAA5E;MAA4FC;IAA5F,CAAb;IAAmHC,KAAnH;IAA0HC,GAA1H;IAA+HC,OAA/H;IAAwIC,MAAxI;IAAgJC,QAAhJ;IAA0JC,IAA1J;IAAgKC,QAAhK;IAA0KC;EAA1K,IAAwLlB,KAA5L;EACAG,IAAI,GAAG,EAAC,GAAGA,IAAJ;IAAUC;EAAV,CAAP;;EACA,IAAIH,eAAe,IAAIA,eAAe,CAACa,MAAvC,EAA+C;IAC3CA,MAAM,GAAG,EAAE,GAAGA,MAAL;MAAa,GAAGb,eAAe,CAACa;IAAhC,CAAT;EACH;;EACD,IAAIK,MAAM,GAAG,IAAb;EACA,oBACQ;IAAA,uBACJ,QAAC,mBAAD;MAAqB,SAAS,EAAC,sBAA/B;MAAsD,SAAS,EAAEtC,cAAc,CAACK,QAAf,CAAyB,qCAAzB,EAAkE;QAAEc,KAAF;QAASG,IAAT;QAAeW,MAAf;QAAuBV,aAAvB;QAAsCQ,GAAtC;QAA2CI,IAA3C;QAAiDH,OAAjD;QAA0DZ,eAA1D;QAA2EiB,QAA3E;QAAqFZ,UAArF;QAAiGW,QAAjG;QAA2GZ,QAA3G;QAAqHE,eAArH;QAAsIC,YAAtI;QAAoJC,cAApJ;QAAoKC;MAApK,CAAlE,CAAjE;MAAkT,OAAO,EAAE7B,cAAc,CAACK,QAAf,CAAyB,kHAAzB,EAA+I;QAAEc,KAAF;QAASG,IAAT;QAAeW,MAAf;QAAuBV,aAAvB;QAAsCQ,GAAtC;QAA2CI,IAA3C;QAAiDH,OAAjD;QAA0DZ,eAA1D;QAA2EiB,QAA3E;QAAqFZ,UAArF;QAAiGW,QAAjG;QAA2GZ,QAA3G;QAAqHE,eAArH;QAAsIC,YAAtI;QAAoJC,cAApJ;QAAoKC;MAApK,CAA/I,CAA3T;MAAA,uBACI,QAAC,aAAD;QAAe,IAAI,EAAC,QAApB;QAAA,uBACI,QAAC,SAAD;UAAW,OAAO,EAAC,QAAnB;UAA4B,YAAY,EAAC,QAAzC;UAAA,wBACI,QAAC,0BAAD;YAA4B,SAAS,EAAC,YAAtC;YAAmD,WAAW,EAAE7B,cAAc,CAACK,QAAf,CAAyB,yBAAzB,EAAsD;cAAEc,KAAF;cAASG,IAAT;cAAeW,MAAf;cAAuBV,aAAvB;cAAsCQ,GAAtC;cAA2CI,IAA3C;cAAiDH,OAAjD;cAA0DZ,eAA1D;cAA2EiB,QAA3E;cAAqFZ,UAArF;cAAiGW,QAAjG;cAA2GZ,QAA3G;cAAqHE,eAArH;cAAsIC,YAAtI;cAAoJC,cAApJ;cAAoKC;YAApK,CAAtD;UAAhE;YAAA;YAAA;YAAA;UAAA,QADJ,eAGI;YAAK,SAAS,EAAC,6BAAf;YAAA,uBACI,QAAC,YAAD,OAAkB3B,QAAQ,CAAC,cAAD,EAAiB+B,MAAjB,EAAyBK,MAAzB,EAAiC,IAAjC,EAAuC,IAAvC;YAA1B;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADI;IAAA;IAAA;IAAA;EAAA,QADR;AAgBH,CAxBD;AA2BA;AACA;AACA;;;AACA,MAAMC,SAAS,GAAGzC,eAAe,CAAEmB,iBAAF,EAAqBF,gCAArB,EAAuDyB,SAAvD,EAAkExB,YAAlE,CAAjC;AAEA,eAAeuB,SAAf"},"metadata":{},"sourceType":"module"}