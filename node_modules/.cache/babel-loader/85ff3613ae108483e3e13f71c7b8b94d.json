{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwClickableTitleService.js\";\nimport { noop } from 'js/declUtils';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport clickableTitleService from 'js/clickableTitleService';\nimport _ from 'lodash';\nimport { AwHighlightPropertyHtml, DisplayVal } from 'js/hocCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpanAwHighlightPropertyHtmlDisplayVal = DisplayVal(AwHighlightPropertyHtml('span'));\n/**\n * render function for AwClickableTitle\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\n_c = SpanAwHighlightPropertyHtmlDisplayVal;\nexport const awClickableTitleRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    runActionWithViewModel,\n    ...prop\n  } = props;\n  let {\n    cellTitleId,\n    source,\n    title,\n    vmo\n  } = props;\n  let commandContext = {\n    vmo: vmo\n  };\n  let isTitleClickable = clickableTitleService.hasClickableCellTitleActions();\n\n  const doIt = event => {\n    clickableTitleService.doIt(event, commandContext, runActionWithViewModel);\n  };\n\n  let titleClass = [];\n\n  switch (source) {\n    case 'table':\n      titleClass = ['aw-jswidgets-text'];\n      break;\n\n    case 'splmtable':\n      titleClass = ['aw-splm-tableCellText'];\n      break;\n\n    case 'tree':\n      titleClass = ['aw-jswidgets-dataGridCellText'];\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-base-normal\",\n    children: [isTitleClickable && source === 'list' && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: noop,\n      onClick: e => doIt(e),\n      \"data-locator\": \"aw-clickable-title\",\n      className: \"aw-widgets-cellListCellTitle aw-widgets-propertyValueLink aw-uiwidgets-cellClickableTitle\",\n      celltitleid: cellTitleId,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), // revisitme: include aw-highlight-property-html to <span> once the attribute directive is implemented using HOC\n    !isTitleClickable && source === 'list' && /*#__PURE__*/_jsxDEV(SpanAwHighlightPropertyHtmlDisplayVal, {\n      title: title,\n      className: \"aw-widgets-cellListCellTitle\",\n      celltitleid: cellTitleId,\n      awHighlightPropertyHtml: true,\n      displayVal: title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), isTitleClickable && ['table', 'splmtable', 'tree'].includes(source) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleClass,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-locator\": \"aw-clickable-title\",\n        className: \"aw-widgets-propertyValueLink aw-uiwidgets-clickableTitle\",\n        href: noop,\n        onClick: e => doIt(e),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), !isTitleClickable && source === 'table' && /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop,\n      inTableCell: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), !isTitleClickable && ['splmtable', 'tree'].includes(source) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleClass,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SpanAwHighlightPropertyHtmlDisplayVal\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwClickableTitleService.js"],"names":["SpanAwHighlightPropertyHtmlDisplayVal","DisplayVal","AwHighlightPropertyHtml","awClickableTitleRenderFunction","props","prop","vmo","commandContext","isTitleClickable","clickableTitleService","doIt","event","titleClass","source","e","title"],"mappings":"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","sourcesContent":["import { noop } from 'js/declUtils';\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport clickableTitleService from 'js/clickableTitleService';\nimport _ from 'lodash';\nimport { AwHighlightPropertyHtml, DisplayVal } from 'js/hocCollection';\n\nconst SpanAwHighlightPropertyHtmlDisplayVal = DisplayVal( AwHighlightPropertyHtml( 'span' ) );\n/**\n * render function for AwClickableTitle\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awClickableTitleRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        runActionWithViewModel,\n        ...prop\n    } = props;\n    let { cellTitleId, source, title, vmo } = props;\n    let commandContext = {\n        vmo: vmo\n    };\n    let isTitleClickable = clickableTitleService.hasClickableCellTitleActions();\n\n    const doIt = ( event ) => {\n        clickableTitleService.doIt( event, commandContext, runActionWithViewModel );\n    };\n\n    let titleClass = [];\n    switch ( source ) {\n        case 'table':\n            titleClass = [ 'aw-jswidgets-text' ];\n            break;\n        case 'splmtable':\n            titleClass = [ 'aw-splm-tableCellText' ];\n            break;\n        case 'tree':\n            titleClass = [ 'aw-jswidgets-dataGridCellText' ];\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className='aw-base-normal'>\n            {\n                isTitleClickable && source === 'list' &&\n                <a href={noop} onClick={( e )=> doIt( e )} data-locator='aw-clickable-title' className='aw-widgets-cellListCellTitle aw-widgets-propertyValueLink aw-uiwidgets-cellClickableTitle' celltitleid={cellTitleId}>\n                    {title}\n                </a>\n            }\n            {\n                // revisitme: include aw-highlight-property-html to <span> once the attribute directive is implemented using HOC\n                !isTitleClickable && source === 'list' &&\n                <SpanAwHighlightPropertyHtmlDisplayVal title={title} className='aw-widgets-cellListCellTitle' celltitleid={cellTitleId} awHighlightPropertyHtml displayVal={title}>\n                    { title }\n                </SpanAwHighlightPropertyHtmlDisplayVal>\n            }\n\n            {\n                isTitleClickable && [ 'table', 'splmtable', 'tree' ].includes( source ) &&\n                <div className={titleClass}>\n                    <a data-locator='aw-clickable-title' className='aw-widgets-propertyValueLink aw-uiwidgets-clickableTitle' href={noop} onClick={( e )=> doIt( e )}>{title}</a>\n                </div>\n            }\n            {\n                !isTitleClickable && source === 'table' &&\n                <AwPropertyNonEditVal {...prop} inTableCell='true'></AwPropertyNonEditVal>\n            }\n            {\n                !isTitleClickable && [ 'splmtable', 'tree' ].includes( source ) &&\n                <div className={titleClass}>{title}</div>\n            }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}