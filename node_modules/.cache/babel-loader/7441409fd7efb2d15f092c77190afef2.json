{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\uielements\\\\src\\\\js\\\\PwaCommandBarService.js\"; // Copyright (c) 2021 Siemens\n\n/**\n * @module js/PwaCommandBarService\n */\n\nimport { AwServerVisibilityToolbar } from 'js/AwServerVisibilityCommandBarService';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pwaCommandBarRenderFunction = props => {\n  let pwaAnchor = 'aw_primaryWorkArea';\n\n  if (props.subPanelContext && props.subPanelContext.clientScopeURI && props.subPanelContext.clientScopeURI !== '') {\n    pwaAnchor = pwaAnchor + ',' + 'aw_primaryWorkArea' + '_' + props.subPanelContext.clientScopeURI;\n  }\n\n  if (props.subPanelContext && props.subPanelContext.name !== '') {\n    pwaAnchor = pwaAnchor + ',' + 'aw_primaryWorkArea' + '_' + props.subPanelContext.name;\n  }\n\n  if (props.subPanelContext && props.subPanelContext.parentStateName !== '') {\n    pwaAnchor = pwaAnchor + ',' + 'aw_primaryWorkArea' + '_' + props.subPanelContext.parentStateName;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AwServerVisibilityToolbar, {\n    firstAnchor: pwaAnchor,\n    secondAnchor: \"aw_workArea_right\",\n    orientation: \"HORIZONTAL\",\n    context: props.subPanelContext,\n    mselected: props.mselected || _.get(props, 'subPanelContext.selectionData.selected'),\n    pselected: props.pselected || _.get(props, 'subPanelContext.baseSelection')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uielements/src/js/PwaCommandBarService.js"],"names":["pwaCommandBarRenderFunction","props","pwaAnchor","_"],"mappings":"mKAAA;;AAEA;AACA;AACA;;AACA,SAAA,yBAAA,QAAA,wCAAA;AACA,OAAA,CAAA,MAAA,QAAA;;AACA,OAAO,MAAMA,2BAA2B,GAAKC,KAAF,IAAa;EACpD,IAAIC,SAAS,GAAb,oBAAA;;EACA,IAAID,KAAK,CAALA,eAAAA,IAAyBA,KAAK,CAALA,eAAAA,CAAzBA,cAAAA,IAAiEA,KAAK,CAALA,eAAAA,CAAAA,cAAAA,KAArE,EAAA,EAAmH;IAC/GC,SAAS,GAAGA,SAAS,GAATA,GAAAA,GAAAA,oBAAAA,GAAAA,GAAAA,GAA+CD,KAAK,CAALA,eAAAA,CAA3DC,cAAAA;EACH;;EACD,IAAID,KAAK,CAALA,eAAAA,IAAyBA,KAAK,CAALA,eAAAA,CAAAA,IAAAA,KAA7B,EAAA,EAAiE;IAC7DC,SAAS,GAAGA,SAAS,GAATA,GAAAA,GAAAA,oBAAAA,GAAAA,GAAAA,GAA+CD,KAAK,CAALA,eAAAA,CAA3DC,IAAAA;EACH;;EACD,IAAID,KAAK,CAALA,eAAAA,IAAyBA,KAAK,CAALA,eAAAA,CAAAA,eAAAA,KAA7B,EAAA,EAA4E;IACxEC,SAAS,GAAGA,SAAS,GAATA,GAAAA,GAAAA,oBAAAA,GAAAA,GAAAA,GAA+CD,KAAK,CAALA,eAAAA,CAA3DC,eAAAA;EACH;;EACD,OAAA,aACI,OAAA,CAAA,yBAAA,EAAA;IACI,WAAW,EADf,SAAA;IAEI,YAAY,EAFhB,mBAAA;IAGI,WAAW,EAHf,YAAA;IAII,OAAO,EAAED,KAAK,CAJlB,eAAA;IAKI,SAAS,EAAEA,KAAK,CAALA,SAAAA,IAAmBE,CAAC,CAADA,GAAAA,CAAAA,KAAAA,EALlC,wCAKkCA,CALlC;IAMI,SAAS,EAAEF,KAAK,CAALA,SAAAA,IAAoBE,CAAC,CAADA,GAAAA,CAAAA,KAAAA,EAAAA,+BAAAA;EANnC,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADJ,IACI,CADJ;AAXG,CAAA","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/PwaCommandBarService\n */\nimport { AwServerVisibilityToolbar } from 'js/AwServerVisibilityCommandBarService';\nimport _ from 'lodash';\nexport const pwaCommandBarRenderFunction = ( props ) => {\n    let pwaAnchor = 'aw_primaryWorkArea';\n    if( props.subPanelContext && props.subPanelContext.clientScopeURI && props.subPanelContext.clientScopeURI !== '' ) {\n        pwaAnchor = pwaAnchor + ',' + 'aw_primaryWorkArea' + '_' + props.subPanelContext.clientScopeURI;\n    }\n    if( props.subPanelContext && props.subPanelContext.name !== '' ) {\n        pwaAnchor = pwaAnchor + ',' + 'aw_primaryWorkArea' + '_' + props.subPanelContext.name;\n    }\n    if( props.subPanelContext && props.subPanelContext.parentStateName !== '' ) {\n        pwaAnchor = pwaAnchor + ',' + 'aw_primaryWorkArea' + '_' + props.subPanelContext.parentStateName;\n    }\n    return (\n        <AwServerVisibilityToolbar\n            firstAnchor={pwaAnchor}\n            secondAnchor='aw_workArea_right'\n            orientation='HORIZONTAL'\n            context={props.subPanelContext}\n            mselected={props.mselected || _.get( props, 'subPanelContext.selectionData.selected' )}\n            pselected={props.pselected ||  _.get( props, 'subPanelContext.baseSelection' )}>\n        </AwServerVisibilityToolbar>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}