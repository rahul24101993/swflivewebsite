{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\declreact\\\\src\\\\js\\\\awVisibleWhenHOC.js\"; // Copyright (c) 2021 Siemens\n\n/* eslint-disable react/display-name */\n\n/**\n * @module js/awVisibleWhenHOC\n */\n\nimport React from 'react';\nimport sanitizer from 'js/sanitizer';\nimport { nonMemoizedComponents } from 'js/hocCollectionConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst displayName = 'AwVisibleWhen';\n\nconst awVisibleWhenHOC = Component => {\n  // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n  let ActualComponent = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n    let {\n      children,\n      ...props\n    } = _ref;\n    let {\n      visibleWhen\n    } = props;\n    let finalProps = { ...props\n    };\n    ref && (finalProps.ref = ref);\n\n    if (typeof Component === 'object') {\n      Component.displayName = displayName;\n    }\n\n    if (visibleWhen) {\n      if (typeof Component === 'string') {\n        return /*#__PURE__*/_jsxDEV(Component, { ...sanitizer.sanitizeHTMLTagProps(finalProps, Component),\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...finalProps,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    return null;\n  });\n\n  if (nonMemoizedComponents.includes(Component.displayName)) {\n    return ActualComponent;\n  }\n\n  return /*#__PURE__*/React.memo(ActualComponent);\n};\n\nexport default awVisibleWhenHOC;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declreact/src/js/awVisibleWhenHOC.js"],"names":["displayName","awVisibleWhenHOC","Component","ActualComponent","props","visibleWhen","finalProps","ref","sanitizer","children","nonMemoizedComponents","React"],"mappings":"8JAAA;;AACA;;AAEA;AACA;AACA;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,cAAA;AACA,SAAA,qBAAA,QAAA,2BAAA;;AACA,MAAMA,WAAW,GAAjB,eAAA;;AAEA,MAAMC,gBAAgB,GAAKC,SAAF,IAAiB;EACtC;EACA,IAAIC,eAAe,GAAA,aAAG,KAAK,CAAL,UAAA,CAAkB,CAAA,IAAA,EAAA,GAAA,KAAmC;IAAA,IAAjC;MAAA,QAAA;MAAY,GAAGC;IAAf,IAAiC,IAAA;IACvE,IAAI;MAAEC;IAAF,IAAJ,KAAA;IACA,IAAIC,UAAU,GAAG,EAAE,GAAGF;IAAL,CAAjB;IACAG,GAAG,KAAMD,UAAU,CAAVA,GAAAA,GAATC,GAAG,CAAHA;;IACA,IAAI,OAAA,SAAA,KAAJ,QAAA,EAAoC;MAChCL,SAAS,CAATA,WAAAA,GAAAA,WAAAA;IACH;;IACD,IAAA,WAAA,EAAkB;MACd,IAAI,OAAA,SAAA,KAAJ,QAAA,EAAoC;QAChC,OAAA,aACI,OAAA,CAAA,SAAA,EAAA,EAAA,GAAiBM,SAAS,CAATA,oBAAAA,CAAAA,UAAAA,EAAjB,SAAiBA,CAAjB;UAAA,QAAA,EAA6EC;QAA7E,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA,EAAA;UAAA,YAAA,EAAA;QAAA,CAAA,EADJ,IACI,CADJ;MAGH;;MACD,OAAA,aAAO,OAAA,CAAA,SAAA,EAAA,EAAA,GAAA,UAAA;QAAA,QAAA,EAA4BA;MAA5B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EAAP,IAAO,CAAP;IACH;;IACD,OAAA,IAAA;EAfJ,CAAsB,CAAtB;;EAiBA,IAAIC,qBAAqB,CAArBA,QAAAA,CAAgCR,SAAS,CAA7C,WAAIQ,CAAJ,EAA8D;IAC1D,OAAA,eAAA;EACH;;EACD,OAAA,aAAOC,KAAK,CAALA,IAAAA,CAAP,eAAOA,CAAP;AAtBJ,CAAA;;AAyBA,eAAA,gBAAA","sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable react/display-name */\n\n/**\n * @module js/awVisibleWhenHOC\n */\nimport React from 'react';\nimport sanitizer from 'js/sanitizer';\nimport { nonMemoizedComponents } from 'js/hocCollectionConstants';\nconst displayName = 'AwVisibleWhen';\n\nconst awVisibleWhenHOC = ( Component ) => {\n    // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n    let ActualComponent = React.forwardRef( ( { children, ...props }, ref ) => {\n        let { visibleWhen } = props;\n        let finalProps = { ...props };\n        ref && ( finalProps.ref = ref );\n        if( typeof Component === 'object' ) {\n            Component.displayName = displayName;\n        }\n        if( visibleWhen ) {\n            if( typeof Component === 'string' ) {\n                return (\n                    <Component {...( sanitizer.sanitizeHTMLTagProps( finalProps, Component ) )}>{children}</Component>\n                );\n            }\n            return <Component {...finalProps}>{children}</Component>;\n        }\n        return null;\n    } );\n    if( nonMemoizedComponents.includes( Component.displayName ) ) {\n        return ActualComponent;\n    }\n    return React.memo( ActualComponent );\n};\n\nexport default awVisibleWhenHOC;\n"]},"metadata":{},"sourceType":"module"}