{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwLinkPopupMenuService.js\";\nimport AwList from 'viewmodel/AwListViewModel';\nimport AwLinkPopupMenuItem from 'viewmodel/AwLinkPopupMenuItemViewModel';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDisplayText = displayProperty => item => {\n  let result = item.propDisplayValue || item.staticDisplayValue; // case object has props\n\n  if (item.props) {\n    let displayStr;\n\n    if (displayProperty) {\n      displayStr = _.get(item, displayProperty);\n    } else {\n      displayStr = _.get(item.props, 'object_string');\n    }\n\n    result = displayStr.uiValue;\n  }\n\n  return result;\n};\n\nexport const awLinkPopupMenuRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const {\n    linkProp,\n    dataProvider,\n    options,\n    linkPopup,\n    propKey,\n    displayProperty,\n    updateCallback\n  } = prop;\n  const text = getDisplayText(displayProperty); // 1, set selection value back to awlink\n  // 2, close popup\n\n  const selectionHandler = vmo => {\n    // if selected a different item, then set selection value back to awlink\n    const displayValue = vmo && text(vmo);\n\n    if (displayValue && displayValue !== linkProp.fielddata[propKey]) {\n      // we don't need to cache title, it should always came from prop\n      // update link display value\n      // updateCallback( displayValue );\n      // update linkProp\n      // take care legacy\n      const lovEntry = {\n        propInternalValue: vmo.propInternalValue || vmo.staticInternalValue,\n        propDisplayValue: displayValue\n      };\n      linkProp.setLovVal({\n        lovEntry,\n        dataProvider\n      }, '').then(linkProp.setLovVal({\n        lovEntry,\n        dataProvider\n      }, 'validate'));\n    } // why event? remove this in future\n    // - dataProvider already have <dpName>.selectionChangeEvent\n    // aw require a propertyName in their conditions\n\n\n    let propertyName = linkProp.name && linkProp.name.split('.').pop();\n    let property = {\n      propertyName,\n      ...vmo,\n      dbValue: { ...vmo\n      }\n    };\n\n    if (displayProperty) {\n      const updatedprop = _.get(vmo, displayProperty);\n\n      property = {\n        propertyName,\n        ...updatedprop,\n        dbValue: { ...vmo\n        }\n      };\n    }\n\n    var eventData = {\n      property,\n      // previousSelect: $scope.previousSelect,\n      propScope: vmo\n    };\n    eventBus.publish('awlinkPopup.selected', eventData);\n    linkPopup.hide();\n  }; // ng-afx - link menu specific selection checker\n  // dp use uid as selection checker\n\n\n  const selectionCheck = vmo => {\n    return text(vmo) === linkProp.fielddata[propKey];\n  };\n\n  const listOptions = {\n    selectionHandler,\n    selectionCheck\n  };\n  const itemOptions = options;\n  return /*#__PURE__*/_jsxDEV(AwList, {\n    dataprovider: dataProvider,\n    listOptions: listOptions,\n    itemOptions: itemOptions,\n    children: /*#__PURE__*/_jsxDEV(AwLinkPopupMenuItem, {\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["AwList","AwLinkPopupMenuItem","eventBus","_","getDisplayText","displayProperty","item","result","propDisplayValue","staticDisplayValue","props","displayStr","get","uiValue","awLinkPopupMenuRenderFunction","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","prop","linkProp","dataProvider","options","linkPopup","propKey","updateCallback","text","selectionHandler","vmo","displayValue","fielddata","lovEntry","propInternalValue","staticInternalValue","setLovVal","then","propertyName","name","split","pop","property","dbValue","updatedprop","eventData","propScope","publish","hide","selectionCheck","listOptions","itemOptions"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwLinkPopupMenuService.js"],"sourcesContent":["import AwList from 'viewmodel/AwListViewModel';\nimport AwLinkPopupMenuItem from 'viewmodel/AwLinkPopupMenuItemViewModel';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\n\nconst getDisplayText = displayProperty => item => {\n    let result = item.propDisplayValue || item.staticDisplayValue;\n\n    // case object has props\n    if( item.props ) {\n        let displayStr;\n        if( displayProperty ) {\n            displayStr = _.get( item, displayProperty );\n        } else {\n            displayStr = _.get( item.props, 'object_string' );\n        }\n        result = displayStr.uiValue;\n    }\n\n    return result;\n};\n\nexport const awLinkPopupMenuRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    const {\n        linkProp,\n        dataProvider,\n        options,\n        linkPopup,\n        propKey,\n        displayProperty,\n        updateCallback\n    } = prop;\n\n    const text = getDisplayText( displayProperty );\n\n    // 1, set selection value back to awlink\n    // 2, close popup\n    const selectionHandler = ( vmo ) => {\n        // if selected a different item, then set selection value back to awlink\n        const displayValue = vmo && text( vmo );\n        if( displayValue && displayValue !== linkProp.fielddata[ propKey ] ) {\n            // we don't need to cache title, it should always came from prop\n            // update link display value\n            // updateCallback( displayValue );\n\n            // update linkProp\n            // take care legacy\n            const lovEntry = {\n                propInternalValue: vmo.propInternalValue || vmo.staticInternalValue,\n                propDisplayValue: displayValue\n            };\n            linkProp.setLovVal( { lovEntry, dataProvider }, '' )\n                .then( linkProp.setLovVal( { lovEntry, dataProvider }, 'validate' ) );\n        }\n\n        // why event? remove this in future\n        // - dataProvider already have <dpName>.selectionChangeEvent\n\n        // aw require a propertyName in their conditions\n        let propertyName = linkProp.name && linkProp.name.split( '.' ).pop();\n\n        let property = { propertyName, ...vmo, dbValue: { ...vmo } };\n        if( displayProperty ) {\n            const updatedprop = _.get( vmo, displayProperty );\n            property = { propertyName, ...updatedprop, dbValue: { ...vmo } };\n        }\n        var eventData = {\n            property,\n            // previousSelect: $scope.previousSelect,\n            propScope: vmo\n        };\n        eventBus.publish( 'awlinkPopup.selected', eventData );\n\n        linkPopup.hide();\n    };\n\n    // ng-afx - link menu specific selection checker\n    // dp use uid as selection checker\n    const selectionCheck = ( vmo ) => {\n        return text( vmo ) === linkProp.fielddata[ propKey ];\n    };\n\n    const listOptions = { selectionHandler, selectionCheck };\n    const itemOptions = options;\n    return (\n        <AwList dataprovider={dataProvider}\n            listOptions={listOptions}\n            itemOptions={itemOptions} >\n            <AwLinkPopupMenuItem text={text}/>\n        </AwList>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}