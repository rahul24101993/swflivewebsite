{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwDateValService.js\";\nimport Flatpickr from 'js/flatpickerWrapper';\nimport dateTimeSvc from 'js/dateTimeService';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport _ from 'lodash';\nimport { getValClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awDateValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ctxDeprecated,\n    gridContextDispatcher,\n    gridContextPlaceholder,\n    runActionWithViewModel,\n    viewPath,\n    __vmprop__,\n    quickNav,\n    parentSelected,\n    setLovVal,\n    ...prop\n  } = props;\n  const inputClass = getValClass(prop);\n  const isDisabledClassDefined = prop && inputClass && /disabled/.test(inputClass);\n  const isEnabled = !isDisabledClassDefined && prop.fielddata.isEnabled;\n  const VALID_DATESTRING_LENGTH = 10;\n  let dateVal = null;\n  const dateContainerClass = 'sw-date-container';\n\n  if (_.isArray(prop.value)) {\n    prop.fielddata.displayValsModel.every(dateTimeEntry => {\n      if (dateTimeEntry.isInEditMode) {\n        dateVal = dateTimeSvc.formatDate(dateTimeEntry.displayValue);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!dateVal) {\n      dateVal = dateTimeSvc.formatDate(prop.value[prop.value.length - 1]);\n    }\n  } else {\n    dateVal = dateTimeSvc.formatDate(prop.value);\n  }\n\n  const monthSelType = quickNav === 'false' ? 'static' : 'dropdown';\n  const wrapElems = prop.fielddata.renderingHint === 'wrap';\n  let placeholder = dateTimeSvc.getDateFormatPlaceholder();\n  let otherProps = { ...prop,\n    placeholder\n  };\n\n  if (prop.fielddata.hasLov) {\n    otherProps.setLovVal = setLovVal;\n  }\n\n  const handleClick = event => {\n    if (event.currentTarget) {\n      const fp = event.currentTarget._flatpickr;\n\n      if (fp) {\n        fp.toggle();\n      }\n    }\n  };\n\n  const handleCalendarClick = event => {\n    const currentTarNode = event.currentTarget;\n\n    if (currentTarNode) {\n      const fp = (currentTarNode.previousSibling || currentTarNode)._flatpickr;\n\n      _.defer(() => {\n        fp.open();\n      });\n    }\n  };\n\n  const handleKeyUp = event => {\n    if (event.currentTarget) {\n      const dateInput = event.currentTarget.value;\n      const fp = event.currentTarget._flatpickr;\n\n      if (dateInput.length > VALID_DATESTRING_LENGTH) {\n        fp.setDate(fp.parseDate(dateInput));\n      } else {\n        fp.jumpToDate(fp.parseDate(dateInput));\n      }\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (event.key && event.key !== 'Enter' && event.key !== ' ') {\n      return;\n    }\n\n    handleClick(event);\n  };\n\n  const onChange = event => prop.onChange({\n    target: {\n      value: event[0]\n    }\n  });\n\n  const onBlur = event => {\n    if (event.currentTarget && !_.isUndefined(event.currentTarget.value) && dateVal !== event.currentTarget.value) {\n      const fp = event.currentTarget._flatpickr;\n\n      if (fp) {\n        fp.setDate(event.currentTarget.value, true);\n      }\n    }\n  };\n\n  const focusOnDateWidget = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _.defer(() => {\n      args[2].input.focus();\n    });\n  };\n\n  const addQuickNavClass = function () {\n    let yearContainer = this.calendarContainer;\n\n    if (quickNav && quickNav === 'false') {\n      yearContainer.classList.add('flatpickr-disable-quickNav');\n    }\n  };\n\n  const getConfig = () => {\n    return {\n      dateFormat: 'd-M-Y',\n      defaultDate: dateVal,\n      allowInput: isEnabled,\n      monthSelectorType: monthSelType,\n      clickOpens: false,\n      onReady: addQuickNavClass,\n      onOpen: focusOnDateWidget\n    };\n  };\n\n  if (prop.fielddata.hasLov) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!wrapElems) {\n    delete otherProps.checked;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClass ? dateContainerClass + ' ' + inputClass : dateContainerClass,\n      children: [/*#__PURE__*/_jsxDEV(Flatpickr, { ...otherProps,\n        autoComplete: \"off\",\n        className: inputClass,\n        value: dateVal,\n        options: getConfig(),\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onChange: onChange,\n        onBlur: onBlur,\n        disabled: !isEnabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sw-widget-iconContainer\",\n        role: \"button\",\n        tabIndex: 0,\n        onClick: handleCalendarClick,\n        onKeyDown: handleKeyDown,\n        children: /*#__PURE__*/_jsxDEV(AwIcon, {\n          iconId: \"cmdCalendar\",\n          className: \"aw-widget-icon\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  } else if (wrapElems) {\n    delete otherProps.checked;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dateContainerClass,\n      children: /*#__PURE__*/_jsxDEV(Flatpickr, { ...otherProps,\n        autoComplete: \"off\",\n        className: inputClass ? inputClass : '',\n        options: {\n          dateFormat: 'd-M-Y',\n          defaultDate: dateVal,\n          allowInput: isEnabled,\n          monthSelectorType: monthSelType,\n          wrap: true,\n          clickOpens: false\n        },\n        onChange: onChange,\n        onClick: handleClick,\n        onBlur: onBlur,\n        onKeyDown: handleKeyDown,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: inputClass,\n          placeholder: prop.placeholder,\n          \"data-input\": true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-toggle\": true,\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-clear\": true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwDateValService.js"],"names":["awDateValRenderFunction","props","prop","inputClass","getValClass","isDisabledClassDefined","isEnabled","VALID_DATESTRING_LENGTH","dateVal","dateContainerClass","_","dateTimeEntry","dateTimeSvc","monthSelType","quickNav","wrapElems","placeholder","otherProps","handleClick","event","fp","handleCalendarClick","currentTarNode","handleKeyUp","dateInput","handleKeyDown","onChange","target","value","onBlur","focusOnDateWidget","args","addQuickNavClass","yearContainer","getConfig","dateFormat","defaultDate","allowInput","monthSelectorType","clickOpens","onReady","onOpen","wrap"],"mappings":"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","sourcesContent":["import Flatpickr from 'js/flatpickerWrapper';\nimport dateTimeSvc from 'js/dateTimeService';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport _ from 'lodash';\nimport { getValClass } from 'js/componentUtils';\n\nexport const awDateValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ctxDeprecated,\n        gridContextDispatcher,\n        gridContextPlaceholder,\n        runActionWithViewModel,\n        viewPath,\n        __vmprop__,\n        quickNav,\n        parentSelected,\n        setLovVal,\n        ...prop\n    } = props;\n\n    const inputClass = getValClass( prop );\n    const isDisabledClassDefined = prop && inputClass && /disabled/.test( inputClass );\n    const isEnabled = !isDisabledClassDefined && prop.fielddata.isEnabled;\n    const VALID_DATESTRING_LENGTH = 10;\n    let dateVal = null;\n    const dateContainerClass = 'sw-date-container';\n\n    if( _.isArray( prop.value ) ) {\n        prop.fielddata.displayValsModel.every( dateTimeEntry => {\n            if( dateTimeEntry.isInEditMode ) {\n                dateVal = dateTimeSvc.formatDate( dateTimeEntry.displayValue );\n                return false;\n            }\n            return true;\n        } );\n        if( !dateVal ) {\n            dateVal = dateTimeSvc.formatDate( prop.value[ prop.value.length - 1 ] );\n        }\n    } else {\n        dateVal = dateTimeSvc.formatDate( prop.value );\n    }\n\n    const monthSelType = quickNav === 'false' ? 'static' : 'dropdown';\n    const wrapElems = prop.fielddata.renderingHint === 'wrap';\n    let placeholder = dateTimeSvc.getDateFormatPlaceholder();\n    let otherProps = { ...prop, placeholder };\n    if( prop.fielddata.hasLov ) {\n        otherProps.setLovVal = setLovVal;\n    }\n\n    const handleClick = ( event ) => {\n        if( event.currentTarget ) {\n            const fp = event.currentTarget._flatpickr;\n            if( fp ) {\n                fp.toggle();\n            }\n        }\n    };\n\n    const handleCalendarClick = ( event ) => {\n        const currentTarNode = event.currentTarget;\n        if( currentTarNode ) {\n            const fp = ( currentTarNode.previousSibling || currentTarNode )._flatpickr;\n            _.defer( () => {\n                fp.open();\n            } );\n        }\n    };\n\n\n    const handleKeyUp = ( event ) => {\n        if( event.currentTarget ) {\n            const dateInput = event.currentTarget.value;\n            const fp = event.currentTarget._flatpickr;\n            if( dateInput.length > VALID_DATESTRING_LENGTH ) {\n                fp.setDate( fp.parseDate( dateInput ) );\n            } else { fp.jumpToDate( fp.parseDate( dateInput ) ); }\n        }\n    };\n\n    const handleKeyDown = ( event ) => {\n        if( event.key && ( event.key !== 'Enter' && event.key !== ' ' ) ) { return; }\n        handleClick( event );\n    };\n\n    const onChange = event => prop.onChange( { target: { value: event[ 0 ] } } );\n\n    const onBlur = ( event ) => {\n        if( event.currentTarget && !_.isUndefined( event.currentTarget.value ) && dateVal !== event.currentTarget.value ) {\n            const fp = event.currentTarget._flatpickr;\n            if( fp ) {\n                fp.setDate( event.currentTarget.value, true );\n            }\n        }\n    };\n\n    const focusOnDateWidget = ( ...args ) => {\n        _.defer( () => {\n            args[ 2 ].input.focus();\n        } );\n    };\n\n    const addQuickNavClass = function() {\n        let yearContainer = this.calendarContainer;\n        if( quickNav && quickNav === 'false' ) {\n            yearContainer.classList.add( 'flatpickr-disable-quickNav' );\n        }\n    };\n\n    const getConfig = () => {\n        return {\n            dateFormat: 'd-M-Y',\n            defaultDate: dateVal,\n            allowInput: isEnabled,\n            monthSelectorType: monthSelType,\n            clickOpens: false,\n            onReady: addQuickNavClass,\n            onOpen: focusOnDateWidget\n        };\n    };\n\n    if( prop.fielddata.hasLov ) {\n        return (\n            <AwPropertyLovVal {...otherProps}></AwPropertyLovVal>\n        );\n    }\n\n    if( !wrapElems ) {\n        delete otherProps.checked;\n        return (\n            <div className={inputClass ? dateContainerClass + ' ' + inputClass : dateContainerClass}>\n                <Flatpickr\n                    {...otherProps}\n                    autoComplete='off'\n                    className={inputClass}\n                    value={dateVal}\n                    options={getConfig()}\n                    onClick={handleClick}\n                    onKeyDown={handleKeyDown}\n                    onKeyUp={handleKeyUp}\n                    onChange ={onChange}\n                    onBlur={onBlur}\n                    disabled = {!isEnabled}/>\n                <div className='sw-widget-iconContainer' role='button' tabIndex={0} onClick={handleCalendarClick} onKeyDown={handleKeyDown}>\n                    <AwIcon iconId='cmdCalendar' className='aw-widget-icon'> </AwIcon>\n                </div>\n            </div>\n        );\n    } else if( wrapElems ) {\n        delete otherProps.checked;\n        return (\n            <div className={dateContainerClass}>\n                <Flatpickr\n                    {...otherProps}\n                    autoComplete='off'\n                    className={inputClass ? inputClass : ''}\n                    options={{ dateFormat: 'd-M-Y', defaultDate: dateVal, allowInput: isEnabled, monthSelectorType: monthSelType, wrap: true, clickOpens: false }}\n                    onChange ={onChange}\n                    onClick={handleClick}\n                    onBlur={onBlur}\n                    onKeyDown={handleKeyDown}\n                >\n                    <input type='text' className={inputClass} placeholder={prop.placeholder} data-input/>\n                    <button type='button' data-toggle>Toggle</button>\n                    <button type='button' data-clear>Clear</button>\n                </Flatpickr>\n            </div>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}