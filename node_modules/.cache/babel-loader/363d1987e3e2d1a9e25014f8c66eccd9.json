{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This service is used for simpletabe as Column Resizer, all column resize logic are here for now\n *\n * @module js/splmTableColumnResizer\n *\n */\nimport splmTableDragHandler from 'js/splmTableDragHandler';\nimport Const from 'js/splmTableConstants'; // Write it here for reuse purporse\n\nvar exports = {};\n/**\n * @memberOf js/splmTableColumnResizer\n *\n * apply column resize logic to splitter\n * @param {Object} tableCtrl - PL Table Controller\n * @param {DOMElement} elem - Column header splitter element\n */\n\nexport let applyColumnResizeHandler = function (tableCtrl, elem, menuService) {\n  var _startPageX = -1;\n\n  var _gripPosX = -1;\n\n  var _deltaWidth = -1;\n\n  var columDef = elem.parentElement.children[1].columnDef;\n  var _columnIdx = columDef.index;\n  splmTableDragHandler.enableDragging(elem);\n  elem.addEventListener(Const.EVENT_ON_ELEM_DRAG_START, function (customEvent) {\n    var e = customEvent.detail;\n    _startPageX = e.pageX;\n    _deltaWidth = 0; // Clean up menu if exist\n\n    menuService.ensureAllTableMenusDismissed(); // Scroll left adjustment is not needed if the column is pinned\n\n    var scrollLeft = columDef.pinnedLeft === true ? tableCtrl.getPinCanvasScrollLeftPosition() : tableCtrl.getScrollCanvasScrollLeftPosition();\n    _gripPosX = tableCtrl.getTotalColumnWidth(_columnIdx) - (Const.WIDTH_COLUMN_SPLITTER - e.offsetX) + scrollLeft;\n    tableCtrl.showColumnGrip(_gripPosX);\n  });\n  elem.addEventListener(Const.EVENT_ON_ELEM_DRAG, function (customEvent) {\n    var e = customEvent.detail;\n    var deltaWidth = e.pageX - _startPageX;\n\n    if (tableCtrl.isColumnWidthChangeValid(_columnIdx, deltaWidth)) {\n      _deltaWidth = deltaWidth;\n      tableCtrl.setColumnGripPosition(_gripPosX + _deltaWidth);\n    }\n  });\n  elem.addEventListener(Const.EVENT_ON_ELEM_DRAG_END, function () {\n    tableCtrl.hideColumnGrip();\n    tableCtrl.updateColumnWidth(_columnIdx, _deltaWidth);\n  });\n  elem.addEventListener('dblclick', function () {\n    tableCtrl.fitColumnWidth(_columnIdx);\n  });\n};\nexports = {\n  applyColumnResizeHandler\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/splmTableColumnResizer.js"],"names":["exports","applyColumnResizeHandler","_startPageX","_gripPosX","_deltaWidth","columDef","elem","_columnIdx","splmTableDragHandler","Const","e","customEvent","menuService","scrollLeft","tableCtrl","deltaWidth"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,oBAAA,MAAA,yBAAA;AACA,OAAA,KAAA,MAAA,uBAAA,C,CAEA;;AAEA,IAAIA,OAAO,GAAX,EAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,wBAAwB,GAAG,UAAA,SAAA,EAAA,IAAA,EAAA,WAAA,EAAyC;EAC3E,IAAIC,WAAW,GAAG,CAAlB,CAAA;;EACA,IAAIC,SAAS,GAAG,CAAhB,CAAA;;EACA,IAAIC,WAAW,GAAG,CAAlB,CAAA;;EACA,IAAIC,QAAQ,GAAGC,IAAI,CAAJA,aAAAA,CAAAA,QAAAA,CAAAA,CAAAA,EAAf,SAAA;EACA,IAAIC,UAAU,GAAGF,QAAQ,CAAzB,KAAA;EAEAG,oBAAoB,CAApBA,cAAAA,CAAAA,IAAAA;EACAF,IAAI,CAAJA,gBAAAA,CAAuBG,KAAK,CAA5BH,wBAAAA,EAAuD,UAAA,WAAA,EAAwB;IAC3E,IAAII,CAAC,GAAGC,WAAW,CAAnB,MAAA;IACAT,WAAW,GAAGQ,CAAC,CAAfR,KAAAA;IACAE,WAAW,GAHgE,CAG3EA,CAH2E,CAK3E;;IACAQ,WAAW,CANgE,4BAM3EA,GAN2E,CAQ3E;;IACA,IAAIC,UAAU,GAAGR,QAAQ,CAARA,UAAAA,KAAAA,IAAAA,GAA+BS,SAAS,CAAxCT,8BAA+BS,EAA/BT,GAA4ES,SAAS,CAAtG,iCAA6FA,EAA7F;IAEAX,SAAS,GAAGW,SAAS,CAATA,mBAAAA,CAAAA,UAAAA,KAAgDL,KAAK,CAALA,qBAAAA,GAA8BC,CAAC,CAA/EI,OAAAA,IAAZX,UAAAA;IAEAW,SAAS,CAATA,cAAAA,CAAAA,SAAAA;EAbJR,CAAAA;EAgBAA,IAAI,CAAJA,gBAAAA,CAAuBG,KAAK,CAA5BH,kBAAAA,EAAiD,UAAA,WAAA,EAAwB;IACrE,IAAII,CAAC,GAAGC,WAAW,CAAnB,MAAA;IACA,IAAII,UAAU,GAAGL,CAAC,CAADA,KAAAA,GAAjB,WAAA;;IACA,IAAII,SAAS,CAATA,wBAAAA,CAAAA,UAAAA,EAAJ,UAAIA,CAAJ,EAAmE;MAC/DV,WAAW,GAAXA,UAAAA;MACAU,SAAS,CAATA,qBAAAA,CAAiCX,SAAS,GAA1CW,WAAAA;IACH;EANLR,CAAAA;EASAA,IAAI,CAAJA,gBAAAA,CAAuBG,KAAK,CAA5BH,sBAAAA,EAAqD,YAAW;IAC5DQ,SAAS,CAATA,cAAAA;IACAA,SAAS,CAATA,iBAAAA,CAAAA,UAAAA,EAAAA,WAAAA;EAFJR,CAAAA;EAKAA,IAAI,CAAJA,gBAAAA,CAAAA,UAAAA,EAAmC,YAAW;IAC1CQ,SAAS,CAATA,cAAAA,CAAAA,UAAAA;EADJR,CAAAA;AAtCG,CAAA;AA2CPN,OAAO,GAAG;EACNC;AADM,CAAVD;AAGA,eAAA,OAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This service is used for simpletabe as Column Resizer, all column resize logic are here for now\n *\n * @module js/splmTableColumnResizer\n *\n */\nimport splmTableDragHandler from 'js/splmTableDragHandler';\nimport Const from 'js/splmTableConstants';\n\n// Write it here for reuse purporse\n\nvar exports = {};\n\n/**\n * @memberOf js/splmTableColumnResizer\n *\n * apply column resize logic to splitter\n * @param {Object} tableCtrl - PL Table Controller\n * @param {DOMElement} elem - Column header splitter element\n */\nexport let applyColumnResizeHandler = function( tableCtrl, elem, menuService ) {\n    var _startPageX = -1;\n    var _gripPosX = -1;\n    var _deltaWidth = -1;\n    var columDef = elem.parentElement.children[ 1 ].columnDef;\n    var _columnIdx = columDef.index;\n\n    splmTableDragHandler.enableDragging( elem );\n    elem.addEventListener( Const.EVENT_ON_ELEM_DRAG_START, function( customEvent ) {\n        var e = customEvent.detail;\n        _startPageX = e.pageX;\n        _deltaWidth = 0;\n\n        // Clean up menu if exist\n        menuService.ensureAllTableMenusDismissed();\n\n        // Scroll left adjustment is not needed if the column is pinned\n        var scrollLeft = columDef.pinnedLeft === true ? tableCtrl.getPinCanvasScrollLeftPosition() : tableCtrl.getScrollCanvasScrollLeftPosition();\n\n        _gripPosX = tableCtrl.getTotalColumnWidth( _columnIdx ) - ( Const.WIDTH_COLUMN_SPLITTER - e.offsetX ) + scrollLeft;\n\n        tableCtrl.showColumnGrip( _gripPosX );\n    } );\n\n    elem.addEventListener( Const.EVENT_ON_ELEM_DRAG, function( customEvent ) {\n        var e = customEvent.detail;\n        var deltaWidth = e.pageX - _startPageX;\n        if( tableCtrl.isColumnWidthChangeValid( _columnIdx, deltaWidth ) ) {\n            _deltaWidth = deltaWidth;\n            tableCtrl.setColumnGripPosition( _gripPosX + _deltaWidth );\n        }\n    } );\n\n    elem.addEventListener( Const.EVENT_ON_ELEM_DRAG_END, function() {\n        tableCtrl.hideColumnGrip();\n        tableCtrl.updateColumnWidth( _columnIdx, _deltaWidth );\n    } );\n\n    elem.addEventListener( 'dblclick', function() {\n        tableCtrl.fitColumnWidth( _columnIdx );\n    } );\n};\n\nexports = {\n    applyColumnResizeHandler\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}