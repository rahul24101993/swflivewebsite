{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This service is for js based momentum scrolling for touch scrolling.\n *\n * @module js/splmTableMomentumScrolling\n */\n\n/**\n * Momentum Scrolling.\n *\n * @constructor\n */\nvar SPLMTableMomentumScrolling = function () {\n  var self = this;\n  var _pinCanvasElement = null;\n  var _scrollCanvasElement = null;\n\n  var _referenceY;\n\n  var _referenceX;\n\n  var _velocityX;\n\n  var _velocityY;\n\n  var _timestamp;\n\n  var _ticker;\n\n  var _amplitudeX;\n\n  var _amplitudeY;\n\n  var _deltaX = 0;\n  var _deltaY = 0;\n\n  var yPosition = function (e) {\n    return e.touches[0].pageY;\n  };\n\n  var xPosition = function (e) {\n    return e.touches[0].pageX;\n  };\n\n  var scroll = function () {\n    if (_scrollCanvasElement.scrollTop - _deltaY >= 0) {\n      _scrollCanvasElement.scrollTop -= _deltaY;\n    }\n\n    if (_scrollCanvasElement.scrollLeft - _deltaX >= 0) {\n      _scrollCanvasElement.scrollLeft -= _deltaX;\n    }\n  };\n\n  var track = function () {\n    var now = Date.now();\n    var elapsed = now - _timestamp;\n    _timestamp = now;\n    var vY = 1000 * _deltaY / (1 + elapsed);\n    var vX = 1000 * _deltaX / (1 + elapsed);\n    _deltaY = 0;\n    _deltaX = 0;\n    _velocityY = Math.round(0.4 * vY + 0.2 * _velocityY);\n    _velocityX = Math.round(0.4 * vX + 0.2 * _velocityX);\n  };\n\n  var autoScroll = function () {\n    if (_amplitudeY || _amplitudeX) {\n      var elapsed = Date.now() - _timestamp;\n\n      var timeConstant = 325;\n      _deltaY = -_amplitudeY * Math.exp(-elapsed / timeConstant);\n      _deltaX = -_amplitudeX * Math.exp(-elapsed / timeConstant);\n\n      if (_deltaY > 0.5 || _deltaY < -0.5 || _deltaX > 0.5 || _deltaX < -0.5) {\n        scroll();\n        requestAnimationFrame(autoScroll);\n      } else {\n        scroll();\n      }\n    }\n  };\n\n  var tap = function (e) {\n    _referenceY = yPosition(e);\n    _referenceX = xPosition(e);\n    _velocityY = 0;\n    _velocityX = 0;\n    _amplitudeY = 0;\n    _amplitudeX = 0;\n    _timestamp = Date.now();\n    clearInterval(_ticker);\n    _ticker = setInterval(track, 50);\n  };\n\n  var drag = function (e) {\n    if (_scrollCanvasElement.scrollTop - (_referenceY - yPosition(e)) <= 0 || _scrollCanvasElement.scrollLeft - (_referenceX - xPosition(e)) <= 0) {\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      var y = yPosition(e);\n      _deltaY = _referenceY - y;\n      _referenceY = y;\n      var x = xPosition(e);\n      _deltaX = _referenceX - x;\n      _referenceX = x;\n    }\n  };\n\n  var release = function () {\n    clearInterval(_ticker);\n\n    if (_velocityY > 10 || _velocityY < -10 || _velocityX > 10 || _velocityX < -10) {\n      _amplitudeY = 0.6 * _velocityY;\n      _amplitudeX = 0.6 * _velocityX;\n      _timestamp = Date.now();\n      requestAnimationFrame(autoScroll);\n    }\n  };\n\n  self.enable = function (pinCanvasElement, scrollCanvasElement) {\n    if (pinCanvasElement !== null) {\n      _pinCanvasElement = pinCanvasElement;\n\n      _pinCanvasElement.addEventListener('touchstart', tap, {\n        passive: true\n      });\n\n      _pinCanvasElement.addEventListener('touchmove', drag, {\n        passive: true\n      });\n\n      _pinCanvasElement.addEventListener('touchend', release, {\n        passive: true\n      });\n    }\n\n    if (scrollCanvasElement !== null) {\n      _scrollCanvasElement = scrollCanvasElement;\n\n      _scrollCanvasElement.addEventListener('touchstart', tap, {\n        passive: true\n      });\n\n      _scrollCanvasElement.addEventListener('touchmove', drag, {\n        passive: true\n      });\n\n      _scrollCanvasElement.addEventListener('touchend', release, {\n        passive: true\n      });\n    }\n  };\n\n  self.disable = function () {\n    if (_pinCanvasElement !== null) {\n      _pinCanvasElement.removeEventListener('touchstart', tap);\n\n      _pinCanvasElement.removeEventListener('touchmove', drag);\n\n      _pinCanvasElement.removeEventListener('touchend', release);\n\n      _pinCanvasElement = null;\n    }\n\n    if (_scrollCanvasElement !== null) {\n      _scrollCanvasElement.removeEventListener('touchstart', tap);\n\n      _scrollCanvasElement.removeEventListener('touchmove', drag);\n\n      _scrollCanvasElement.removeEventListener('touchend', release);\n\n      _scrollCanvasElement = null;\n    }\n  };\n};\n\n_c2 = SPLMTableMomentumScrolling;\n_c = SPLMTableMomentumScrolling;\nexport default SPLMTableMomentumScrolling;\n\nvar _c;\n\n$RefreshReg$(_c, \"SPLMTableMomentumScrolling\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"SPLMTableMomentumScrolling\");","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/splmTableMomentumScrolling.js"],"names":["SPLMTableMomentumScrolling","self","_pinCanvasElement","_scrollCanvasElement","_deltaX","_deltaY","yPosition","e","xPosition","scroll","track","now","Date","elapsed","_timestamp","vY","vX","_velocityY","Math","_velocityX","autoScroll","_amplitudeY","timeConstant","requestAnimationFrame","tap","_referenceY","_referenceX","_amplitudeX","clearInterval","_ticker","setInterval","drag","y","x","release","pinCanvasElement","passive","scrollCanvasElement"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This service is for js based momentum scrolling for touch scrolling.\n *\n * @module js/splmTableMomentumScrolling\n */\n\n/**\n * Momentum Scrolling.\n *\n * @constructor\n */\nvar SPLMTableMomentumScrolling = function() {\n    var self = this;\n    var _pinCanvasElement = null;\n    var _scrollCanvasElement = null;\n    var _referenceY;\n    var _referenceX;\n    var _velocityX;\n    var _velocityY;\n    var _timestamp;\n    var _ticker;\n    var _amplitudeX;\n    var _amplitudeY;\n    var _deltaX = 0;\n    var _deltaY = 0;\n\n    var yPosition = function( e ) {\n        return e.touches[ 0 ].pageY;\n    };\n\n    var xPosition = function( e ) {\n        return e.touches[ 0 ].pageX;\n    };\n\n    var scroll = function() {\n       if( _scrollCanvasElement.scrollTop - _deltaY >= 0 ) {\n           _scrollCanvasElement.scrollTop -= _deltaY;\n       }\n       if( _scrollCanvasElement.scrollLeft - _deltaX >= 0 ) {\n           _scrollCanvasElement.scrollLeft -= _deltaX;\n       }\n    };\n\n    var track = function() {\n        var now = Date.now();\n        var elapsed = now - _timestamp;\n        _timestamp = now;\n\n        var vY = 1000 * _deltaY / ( 1 + elapsed );\n        var vX = 1000 * _deltaX / ( 1 + elapsed );\n        _deltaY = 0;\n        _deltaX = 0;\n        _velocityY = Math.round( 0.4 * vY + 0.2 * _velocityY );\n        _velocityX = Math.round( 0.4 * vX + 0.2 * _velocityX );\n    };\n\n    var autoScroll = function() {\n         if( _amplitudeY || _amplitudeX ) {\n             var elapsed = Date.now() - _timestamp;\n             var timeConstant = 325;\n             _deltaY = -_amplitudeY * Math.exp( -elapsed / timeConstant );\n             _deltaX = -_amplitudeX * Math.exp( -elapsed / timeConstant );\n             if( _deltaY > 0.5 || _deltaY < -0.5 || _deltaX > 0.5 || _deltaX < -0.5 ) {\n                 scroll();\n                 requestAnimationFrame( autoScroll );\n             } else {\n                 scroll();\n             }\n         }\n    };\n\n    var tap = function( e ) {\n        _referenceY = yPosition( e );\n        _referenceX = xPosition( e );\n        _velocityY = 0;\n        _velocityX = 0;\n        _amplitudeY = 0;\n        _amplitudeX = 0;\n        _timestamp = Date.now();\n        clearInterval( _ticker );\n        _ticker = setInterval( track, 50 );\n    };\n\n    var drag = function( e ) {\n        if( _scrollCanvasElement.scrollTop - ( _referenceY - yPosition( e ) ) <= 0 || _scrollCanvasElement.scrollLeft - ( _referenceX - xPosition( e ) ) <= 0 ) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            var y = yPosition( e );\n            _deltaY = _referenceY - y;\n            _referenceY = y;\n\n            var x = xPosition( e );\n            _deltaX = _referenceX - x;\n            _referenceX = x;\n        }\n    };\n\n    var release = function() {\n         clearInterval( _ticker );\n         if( _velocityY > 10 || _velocityY < -10 || _velocityX > 10 || _velocityX < -10 ) {\n             _amplitudeY = 0.6 * _velocityY;\n             _amplitudeX = 0.6 * _velocityX;\n             _timestamp = Date.now();\n             requestAnimationFrame( autoScroll );\n         }\n    };\n\n    self.enable = function( pinCanvasElement, scrollCanvasElement ) {\n        if( pinCanvasElement !== null ) {\n            _pinCanvasElement = pinCanvasElement;\n            _pinCanvasElement.addEventListener( 'touchstart', tap, { passive: true } );\n            _pinCanvasElement.addEventListener( 'touchmove', drag, { passive: true }  );\n            _pinCanvasElement.addEventListener( 'touchend', release, { passive: true }  );\n        }\n\n        if( scrollCanvasElement !== null ) {\n            _scrollCanvasElement = scrollCanvasElement;\n            _scrollCanvasElement.addEventListener( 'touchstart', tap, { passive: true } );\n            _scrollCanvasElement.addEventListener( 'touchmove', drag, { passive: true }  );\n            _scrollCanvasElement.addEventListener( 'touchend', release, { passive: true }  );\n        }\n    };\n\n    self.disable = function() {\n        if( _pinCanvasElement !== null ) {\n            _pinCanvasElement.removeEventListener( 'touchstart', tap );\n            _pinCanvasElement.removeEventListener( 'touchmove', drag );\n            _pinCanvasElement.removeEventListener( 'touchend', release );\n            _pinCanvasElement = null;\n        }\n\n        if( _scrollCanvasElement !== null ) {\n            _scrollCanvasElement.removeEventListener( 'touchstart', tap );\n            _scrollCanvasElement.removeEventListener( 'touchmove', drag );\n            _scrollCanvasElement.removeEventListener( 'touchend', release );\n            _scrollCanvasElement = null;\n        }\n    };\n};\n\nexport default SPLMTableMomentumScrolling;\n"]},"metadata":{},"sourceType":"module"}