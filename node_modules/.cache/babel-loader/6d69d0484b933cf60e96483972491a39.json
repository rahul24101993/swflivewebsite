{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * Please refer {@link https://gitlab.industrysoftware.automation.siemens.com/Apollo/afx/wikis/clipboard|Clipboard}\n *\n * @module js/clipboardService\n * @publishedApolloService\n */\nimport logger from 'js/logger';\nimport moduleLoader from 'js/moduleLoader';\nimport cfgSvc from 'js/configurationService'; // service\n\nimport AwPromiseService from 'js/awPromiseService';\nimport AwBaseService from 'js/awBaseService';\nexport default class ClipboardService extends AwBaseService {\n  constructor() {\n    super();\n    this._delegateService = null;\n    let dep;\n    let solution; // Asynchronously loading the configured clipboardService\n\n    cfgSvc.getCfg('solutionDef').then(solutionDef => {\n      solution = solutionDef;\n\n      if (solution.clipboard) {\n        return cfgSvc.getCfg('clipboard');\n      }\n\n      return AwPromiseService.instance.reject('Missing configuration for \\'clipboard\\' in solution configuration.');\n    }).then(clipboardProviders => {\n      dep = clipboardProviders[solution.clipboard].dep;\n      return moduleLoader.loadDependentModule(dep);\n    }).then(depModuleObj => {\n      if (!depModuleObj) {\n        logger.error('Could not load the clipboard module ' + dep);\n      }\n\n      this._delegateService = depModuleObj;\n    }).catch(e => {\n      logger.warn(e);\n    });\n  }\n  /**\n   * Return an array of Objects currently on the clipboard.\n   *\n   * @memberof clipboardService\n   *\n   * @return {Array} Current contents of the clipboard.\n   */\n\n\n  getContents() {\n    return this._delegateService ? this._delegateService.getContents() : [];\n  }\n  /**\n   * Sets the current contents of the clipboard.\n   *\n   * @param {Array} contentsToSet - Array of Objects to set as the current clipboard contents.\n   *\n   */\n\n\n  setContents(contentsToSet) {\n    if (this._delegateService) {\n      this._delegateService.setContents(contentsToSet);\n    }\n  }\n  /**\n   * Return the content of the clipboard that is cached.\n   *\n   * @return {Array} Array of current Objects that is cached.\n   */\n\n\n  getCachableObjects() {\n    return this._delegateService ? this._delegateService.getCachableObjects() : [];\n  }\n  /**\n   * Copies the URL for the given object to OS clipboard\n   *\n   * @memberof clipboardService\n   *\n   * @param {Object} selObject - selected object\n   *\n   * @return {Boolean} verdict whether the content was successfully copied to the clipboard or not\n   */\n\n\n  copyUrlToClipboard(selObject) {\n    return this._delegateService ? this._delegateService.copyUrlToClipboard(selObject) : false;\n  }\n  /**\n   * Copies hyperlink to OS clipboard\n   *\n   * @param {Array} content - array of selected object whose hyperlink is created and copied to os clipboard\n   * @return {Boolean} successful whether the content was successfully copied to the clipboard or not\n   */\n\n\n  copyHyperlinkToClipboard(content) {\n    return this._delegateService ? this._delegateService.copyHyperlinkToClipboard(content) : false;\n  }\n\n}","map":{"version":3,"names":["logger","moduleLoader","cfgSvc","AwPromiseService","AwBaseService","ClipboardService","constructor","_delegateService","dep","solution","getCfg","then","solutionDef","clipboard","instance","reject","clipboardProviders","loadDependentModule","depModuleObj","error","catch","e","warn","getContents","setContents","contentsToSet","getCachableObjects","copyUrlToClipboard","selObject","copyHyperlinkToClipboard","content"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/kernel/src/js/clipboardService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * Please refer {@link https://gitlab.industrysoftware.automation.siemens.com/Apollo/afx/wikis/clipboard|Clipboard}\n *\n * @module js/clipboardService\n * @publishedApolloService\n */\nimport logger from 'js/logger';\nimport moduleLoader from 'js/moduleLoader';\nimport cfgSvc from 'js/configurationService';\n\n// service\nimport AwPromiseService from 'js/awPromiseService';\nimport AwBaseService from 'js/awBaseService';\nexport default class ClipboardService extends AwBaseService {\n    constructor() {\n        super();\n\n        this._delegateService = null;\n\n        let dep;\n        let solution;\n\n        // Asynchronously loading the configured clipboardService\n        cfgSvc.getCfg( 'solutionDef' ).then( ( solutionDef ) => {\n            solution = solutionDef;\n\n            if( solution.clipboard ) {\n                return cfgSvc.getCfg( 'clipboard' );\n            }\n\n            return AwPromiseService.instance.reject( 'Missing configuration for \\'clipboard\\' in solution configuration.' );\n        } ).then( ( clipboardProviders ) => {\n            dep = clipboardProviders[ solution.clipboard ].dep;\n\n            return moduleLoader.loadDependentModule( dep );\n        } ).then( ( depModuleObj ) => {\n            if( !depModuleObj ) {\n                logger.error( 'Could not load the clipboard module ' + dep );\n            }\n\n            this._delegateService = depModuleObj;\n        } ).catch( ( e ) => {\n            logger.warn( e );\n        } );\n    }\n\n    /**\n     * Return an array of Objects currently on the clipboard.\n     *\n     * @memberof clipboardService\n     *\n     * @return {Array} Current contents of the clipboard.\n     */\n    getContents() {\n        return this._delegateService ? this._delegateService.getContents() : [];\n    }\n\n    /**\n     * Sets the current contents of the clipboard.\n     *\n     * @param {Array} contentsToSet - Array of Objects to set as the current clipboard contents.\n     *\n     */\n    setContents( contentsToSet ) {\n        if( this._delegateService ) {\n            this._delegateService.setContents( contentsToSet );\n        }\n    }\n\n    /**\n     * Return the content of the clipboard that is cached.\n     *\n     * @return {Array} Array of current Objects that is cached.\n     */\n    getCachableObjects() {\n        return this._delegateService ? this._delegateService.getCachableObjects() : [];\n    }\n\n    /**\n     * Copies the URL for the given object to OS clipboard\n     *\n     * @memberof clipboardService\n     *\n     * @param {Object} selObject - selected object\n     *\n     * @return {Boolean} verdict whether the content was successfully copied to the clipboard or not\n     */\n    copyUrlToClipboard( selObject ) {\n        return this._delegateService ? this._delegateService.copyUrlToClipboard( selObject ) : false;\n    }\n\n    /**\n     * Copies hyperlink to OS clipboard\n     *\n     * @param {Array} content - array of selected object whose hyperlink is created and copied to os clipboard\n     * @return {Boolean} successful whether the content was successfully copied to the clipboard or not\n     */\n    copyHyperlinkToClipboard( content ) {\n        return this._delegateService ? this._delegateService.copyHyperlinkToClipboard( content ) : false;\n    }\n}\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,eAAe,MAAMC,gBAAN,SAA+BD,aAA/B,CAA6C;EACxDE,WAAW,GAAG;IACV;IAEA,KAAKC,gBAAL,GAAwB,IAAxB;IAEA,IAAIC,GAAJ;IACA,IAAIC,QAAJ,CANU,CAQV;;IACAP,MAAM,CAACQ,MAAP,CAAe,aAAf,EAA+BC,IAA/B,CAAuCC,WAAF,IAAmB;MACpDH,QAAQ,GAAGG,WAAX;;MAEA,IAAIH,QAAQ,CAACI,SAAb,EAAyB;QACrB,OAAOX,MAAM,CAACQ,MAAP,CAAe,WAAf,CAAP;MACH;;MAED,OAAOP,gBAAgB,CAACW,QAAjB,CAA0BC,MAA1B,CAAkC,oEAAlC,CAAP;IACH,CARD,EAQIJ,IARJ,CAQYK,kBAAF,IAA0B;MAChCR,GAAG,GAAGQ,kBAAkB,CAAEP,QAAQ,CAACI,SAAX,CAAlB,CAAyCL,GAA/C;MAEA,OAAOP,YAAY,CAACgB,mBAAb,CAAkCT,GAAlC,CAAP;IACH,CAZD,EAYIG,IAZJ,CAYYO,YAAF,IAAoB;MAC1B,IAAI,CAACA,YAAL,EAAoB;QAChBlB,MAAM,CAACmB,KAAP,CAAc,yCAAyCX,GAAvD;MACH;;MAED,KAAKD,gBAAL,GAAwBW,YAAxB;IACH,CAlBD,EAkBIE,KAlBJ,CAkBaC,CAAF,IAAS;MAChBrB,MAAM,CAACsB,IAAP,CAAaD,CAAb;IACH,CApBD;EAqBH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIE,WAAW,GAAG;IACV,OAAO,KAAKhB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBgB,WAAtB,EAAxB,GAA8D,EAArE;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIC,WAAW,CAAEC,aAAF,EAAkB;IACzB,IAAI,KAAKlB,gBAAT,EAA4B;MACxB,KAAKA,gBAAL,CAAsBiB,WAAtB,CAAmCC,aAAnC;IACH;EACJ;EAED;AACJ;AACA;AACA;AACA;;;EACIC,kBAAkB,GAAG;IACjB,OAAO,KAAKnB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBmB,kBAAtB,EAAxB,GAAqE,EAA5E;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,kBAAkB,CAAEC,SAAF,EAAc;IAC5B,OAAO,KAAKrB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBoB,kBAAtB,CAA0CC,SAA1C,CAAxB,GAAgF,KAAvF;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIC,wBAAwB,CAAEC,OAAF,EAAY;IAChC,OAAO,KAAKvB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBsB,wBAAtB,CAAgDC,OAAhD,CAAxB,GAAoF,KAA3F;EACH;;AAtFuD"},"metadata":{},"sourceType":"module"}