{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * This service is used for triggering drag and click event for PL Table without conflict\n *\n * @module js/splmTableDragHandler\n *\n * @publishedApolloService\n *\n */\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\nimport Const from 'js/splmTableConstants';\nimport util from 'js/splmTableUtils';\nvar exports = {};\n\nvar _dragEventHandler = function (e) {\n  // NOTE: pute every variable's inside this scope for isolation\n  var _elem = e.currentTarget; // NOTE: This number is based on manual testing. We can adjust it at any time.\n\n  var _clickInterval = 160; // For stopping cursor change from darg-and-drop service\n\n  var _cursorMutexListener = function (mutexEvent) {\n    if (mutexEvent.originalEvent) {\n      mutexEvent = mutexEvent.originalEvent;\n    }\n\n    mutexEvent.preventDefault();\n    return false;\n  };\n\n  var _onDragListener = function (dragEvent) {\n    if (dragEvent.originalEvent) {\n      dragEvent = dragEvent.originalEvent;\n    }\n\n    dragEvent.preventDefault();\n    dragEvent.cancelBubble = true;\n\n    _elem.dispatchEvent(util.createCustomEvent(Const.EVENT_ON_ELEM_DRAG, dragEvent));\n  };\n\n  var _onDragEndListener = function (dragEndEvent) {\n    if (dragEndEvent.originalEvent) {\n      dragEndEvent = e.originalEvent;\n    }\n\n    dragEndEvent.preventDefault();\n    document.removeEventListener('mouseup', _onDragEndListener);\n    document.removeEventListener('mousemove', _onDragListener);\n    document.removeEventListener('mousedown', _cursorMutexListener);\n    document.removeEventListener('mouseover', _cursorMutexListener);\n    dragEndEvent.cancelBubble = true;\n\n    _elem.dispatchEvent(util.createCustomEvent(Const.EVENT_ON_ELEM_DRAG_END, dragEndEvent));\n  };\n\n  var _onDragStartListener = function (dragStartEvent) {\n    if (dragStartEvent.originalEvent) {\n      dragStartEvent = dragStartEvent.originalEvent;\n    }\n\n    dragStartEvent.preventDefault();\n    dragStartEvent.cancelBubble = true;\n    document.addEventListener('mouseup', _onDragEndListener);\n    document.addEventListener('mousemove', _onDragListener);\n    document.addEventListener('mousedown', _cursorMutexListener);\n    document.addEventListener('mouseover', _cursorMutexListener);\n\n    _elem.dispatchEvent(util.createCustomEvent(Const.EVENT_ON_ELEM_DRAG_START, dragStartEvent));\n  };\n\n  var handleOriginEvent = function (originEvent) {\n    var ticking = false;\n\n    var cleanClickTicking = function () {\n      _elem.removeEventListener('mouseup', cleanClickTicking);\n\n      ticking = false;\n    };\n\n    var setupClickTiking = function () {\n      ticking = true;\n\n      _elem.addEventListener('mouseup', cleanClickTicking);\n    };\n\n    setupClickTiking();\n    setTimeout(function () {\n      if (ticking === true) {\n        cleanClickTicking();\n\n        _onDragStartListener(originEvent);\n      }\n    }, _clickInterval);\n  };\n\n  handleOriginEvent(e);\n};\n\nexport let enableDragging = function (elem) {\n  elem.addEventListener('mousedown', _dragEventHandler);\n};\nexport let disableDragging = function (elem) {\n  elem.removeEventListener('mousedown', _dragEventHandler);\n};\n/**\n * Listen for DnD highlight/unhighlight event from dragAndDropService\n */\n\neventBus.subscribe('dragDropEvent.highlight', function (eventData) {\n  exports.handleDragDropHighlightPLTable(eventData);\n});\n\nvar applyStyleForTableDnD = function (tableElement, applyFlag, style) {\n  if (applyFlag) {\n    if (style) {\n      tableElement.classList.add(style);\n    } else {\n      tableElement.classList.add(Const.CLASS_THEME_DROP_FRAME);\n      tableElement.classList.add(Const.CLASS_WIDGETS_DROP_FRAME);\n    }\n  } else {\n    if (style) {\n      tableElement.classList.remove(style);\n    } else {\n      tableElement.classList.remove(Const.CLASS_THEME_DROP_FRAME);\n      tableElement.classList.remove(Const.CLASS_WIDGETS_DROP_FRAME);\n    }\n  }\n};\n\nvar applyStyleToChildrenForAllRows = function (pinnedOrScrollContainerList, isPCList, isGlobalArea, applyFlag) {\n  _.forEach(pinnedOrScrollContainerList, function (pcOrsc) {\n    if (pcOrsc.children) {\n      if (isGlobalArea) {\n        applyStyleForTableDnD(pcOrsc, applyFlag, Const.CLASS_DONOT_HIGHLIGHT_INDIVIDUAL_ROWS);\n      } else {\n        if (isPCList) {\n          applyStyleForTableDnD(pcOrsc, applyFlag, Const.CLASS_PINNED_CONTAINER_DROP_FRAME);\n        } else {\n          applyStyleForTableDnD(pcOrsc, applyFlag, Const.CLASS_SCROLL_CONTAINER_DROP_FRAME);\n        }\n      }\n\n      _.forEach(pcOrsc.children, function (eachPcOrSc) {\n        if (isGlobalArea) {\n          applyStyleForTableDnD(eachPcOrSc, applyFlag, Const.CLASS_DONOT_HIGHLIGHT_INDIVIDUAL_ROWS);\n        } else {\n          applyStyleForTableDnD(eachPcOrSc, applyFlag);\n        }\n      });\n    }\n  });\n};\n/**\n * Add/Remove the widget  class to the elements of splm table that need highlighting/unhighlighting.\n * @param {DOMElement} rowOrTableElement - The element the mouse is over when the event was fired.\n * @param {Boolean} isHighlightFlag - add or remove the highlight class\n * @param {Boolean} isGlobalArea - is the object drag target over global invalid area or not\n */\n\n\nvar _setHoverStyle = function (rowOrTableElement, isHighlightFlag, isGlobalArea) {\n  var splmTablePinnedContainer = null;\n  var splmTableScrollContainer = null;\n\n  if (!isGlobalArea) {\n    // target on table row\n    // find the closest div holding splm table container\n    var splmTable = util.closestElement(rowOrTableElement, '.aw-splm-table');\n    splmTablePinnedContainer = splmTable.querySelector('.aw-splm-tablePinnedContainer');\n    splmTableScrollContainer = splmTable.querySelector('.aw-splm-tableScrollContainer');\n    var rowIndex = parseInt(rowOrTableElement.getAttribute('data-indexnumber'));\n  } else {\n    applyStyleForTableDnD(rowOrTableElement, isHighlightFlag);\n    splmTablePinnedContainer = rowOrTableElement.querySelector('.aw-splm-tablePinnedContainer');\n    splmTableScrollContainer = rowOrTableElement.querySelector('.aw-splm-tableScrollContainer');\n  }\n\n  if (splmTablePinnedContainer && splmTableScrollContainer) {\n    var pcList = [];\n    var scList = [];\n    var eachRowPC;\n    var eachRowSC;\n\n    if (!_.isUndefined(rowIndex)) {\n      // target on table row\n      pcList = splmTablePinnedContainer.querySelectorAll('div.ui-grid-row[data-indexnumber=\\'' + rowIndex + '\\']');\n\n      if (pcList && pcList.length > 0) {\n        eachRowPC = pcList[0];\n      }\n\n      scList = splmTableScrollContainer.querySelectorAll('div.ui-grid-row[data-indexnumber=\\'' + rowIndex + '\\']');\n\n      if (scList && scList.length > 0) {\n        eachRowSC = scList[0];\n      }\n    } else {\n      // target on white area\n      pcList = splmTablePinnedContainer.querySelectorAll('div.ui-grid-row');\n      scList = splmTableScrollContainer.querySelectorAll('div.ui-grid-row');\n    } // highlight every single row with borders ; this will not be required when drag is over an invalid/white area\n    // when over an invalid/white area , border-color will not be required for every single table row ; but only on splm-table-container\n\n\n    if (!isGlobalArea && !_.isUndefined(rowIndex) && eachRowPC && eachRowSC) {\n      // target on table row\n      applyStyleForTableDnD(eachRowPC, isHighlightFlag);\n      applyStyleForTableDnD(eachRowSC, isHighlightFlag);\n    }\n\n    applyStyleToChildrenForAllRows(pcList, true, isGlobalArea, isHighlightFlag);\n    applyStyleToChildrenForAllRows(scList, false, isGlobalArea, isHighlightFlag);\n  }\n};\n\nexport let handleDragDropHighlightPLTable = function (eventData) {\n  if (!_.isUndefined(eventData) && !_.isUndefined(eventData.targetElement) && eventData.targetElement.classList) {\n    var isHighlightFlag = eventData.isHighlightFlag;\n    var target = eventData.targetElement;\n\n    if (isHighlightFlag) {\n      if (target.classList.contains(Const.CLASS_ROW)) {\n        _setHoverStyle(target, true, false);\n      } else if (target.classList.contains(Const.CLASS_TABLE)) {\n        // this is when current drag is on an invalid/white area\n        _setHoverStyle(target, true, true);\n      }\n    } else {\n      if (target.classList.contains(Const.CLASS_ROW)) {\n        _setHoverStyle(target, false, false);\n      } else if (target.classList.contains(Const.CLASS_TABLE)) {\n        // this is when current drag is on an invalid/white area\n        _setHoverStyle(target, false, true);\n      }\n    }\n  }\n};\nexports = {\n  enableDragging,\n  disableDragging,\n  handleDragDropHighlightPLTable\n};\nexport default exports;","map":{"version":3,"names":["_","eventBus","Const","util","exports","_dragEventHandler","e","_elem","currentTarget","_clickInterval","_cursorMutexListener","mutexEvent","originalEvent","preventDefault","_onDragListener","dragEvent","cancelBubble","dispatchEvent","createCustomEvent","EVENT_ON_ELEM_DRAG","_onDragEndListener","dragEndEvent","document","removeEventListener","EVENT_ON_ELEM_DRAG_END","_onDragStartListener","dragStartEvent","addEventListener","EVENT_ON_ELEM_DRAG_START","handleOriginEvent","originEvent","ticking","cleanClickTicking","setupClickTiking","setTimeout","enableDragging","elem","disableDragging","subscribe","eventData","handleDragDropHighlightPLTable","applyStyleForTableDnD","tableElement","applyFlag","style","classList","add","CLASS_THEME_DROP_FRAME","CLASS_WIDGETS_DROP_FRAME","remove","applyStyleToChildrenForAllRows","pinnedOrScrollContainerList","isPCList","isGlobalArea","forEach","pcOrsc","children","CLASS_DONOT_HIGHLIGHT_INDIVIDUAL_ROWS","CLASS_PINNED_CONTAINER_DROP_FRAME","CLASS_SCROLL_CONTAINER_DROP_FRAME","eachPcOrSc","_setHoverStyle","rowOrTableElement","isHighlightFlag","splmTablePinnedContainer","splmTableScrollContainer","splmTable","closestElement","querySelector","rowIndex","parseInt","getAttribute","pcList","scList","eachRowPC","eachRowSC","isUndefined","querySelectorAll","length","targetElement","target","contains","CLASS_ROW","CLASS_TABLE"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/pltable/src/js/splmTableDragHandler.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * This service is used for triggering drag and click event for PL Table without conflict\n *\n * @module js/splmTableDragHandler\n *\n * @publishedApolloService\n *\n */\nimport _ from 'lodash';\nimport eventBus from 'js/eventBus';\n import Const from 'js/splmTableConstants';\n import util from 'js/splmTableUtils';\n\nvar exports = {};\n\nvar _dragEventHandler = function( e ) {\n    // NOTE: pute every variable's inside this scope for isolation\n    var _elem = e.currentTarget;\n\n    // NOTE: This number is based on manual testing. We can adjust it at any time.\n    var _clickInterval = 160;\n\n    // For stopping cursor change from darg-and-drop service\n    var _cursorMutexListener = function( mutexEvent ) {\n        if( mutexEvent.originalEvent ) {\n            mutexEvent = mutexEvent.originalEvent;\n        }\n        mutexEvent.preventDefault();\n        return false;\n    };\n\n    var _onDragListener = function( dragEvent ) {\n        if( dragEvent.originalEvent ) {\n            dragEvent = dragEvent.originalEvent;\n        }\n        dragEvent.preventDefault();\n        dragEvent.cancelBubble = true;\n        _elem.dispatchEvent( util.createCustomEvent( Const.EVENT_ON_ELEM_DRAG, dragEvent ) );\n    };\n\n    var _onDragEndListener = function( dragEndEvent ) {\n        if( dragEndEvent.originalEvent ) {\n            dragEndEvent = e.originalEvent;\n        }\n        dragEndEvent.preventDefault();\n        document.removeEventListener( 'mouseup', _onDragEndListener );\n        document.removeEventListener( 'mousemove', _onDragListener );\n        document.removeEventListener( 'mousedown', _cursorMutexListener );\n        document.removeEventListener( 'mouseover', _cursorMutexListener );\n        dragEndEvent.cancelBubble = true;\n        _elem.dispatchEvent( util.createCustomEvent( Const.EVENT_ON_ELEM_DRAG_END, dragEndEvent ) );\n    };\n\n    var _onDragStartListener = function( dragStartEvent ) {\n        if( dragStartEvent.originalEvent ) {\n            dragStartEvent = dragStartEvent.originalEvent;\n        }\n        dragStartEvent.preventDefault();\n        dragStartEvent.cancelBubble = true;\n\n        document.addEventListener( 'mouseup', _onDragEndListener );\n        document.addEventListener( 'mousemove', _onDragListener );\n        document.addEventListener( 'mousedown', _cursorMutexListener );\n        document.addEventListener( 'mouseover', _cursorMutexListener );\n        _elem.dispatchEvent( util.createCustomEvent( Const.EVENT_ON_ELEM_DRAG_START, dragStartEvent ) );\n    };\n\n    var handleOriginEvent = function( originEvent ) {\n        var ticking = false;\n\n        var cleanClickTicking = function() {\n            _elem.removeEventListener( 'mouseup', cleanClickTicking );\n            ticking = false;\n        };\n\n        var setupClickTiking = function() {\n            ticking = true;\n            _elem.addEventListener( 'mouseup', cleanClickTicking );\n        };\n\n        setupClickTiking();\n        setTimeout( function() {\n            if( ticking === true ) {\n                cleanClickTicking();\n                _onDragStartListener( originEvent );\n            }\n        }, _clickInterval );\n    };\n\n    handleOriginEvent( e );\n};\n\nexport let enableDragging = function( elem ) {\n    elem.addEventListener( 'mousedown', _dragEventHandler );\n};\n\nexport let disableDragging = function( elem ) {\n    elem.removeEventListener( 'mousedown', _dragEventHandler );\n};\n\n/**\n * Listen for DnD highlight/unhighlight event from dragAndDropService\n */\neventBus.subscribe( 'dragDropEvent.highlight', function( eventData ) {\n    exports.handleDragDropHighlightPLTable( eventData );\n} );\n\nvar applyStyleForTableDnD = function( tableElement, applyFlag, style ) {\n    if( applyFlag ) {\n        if( style ) {\n            tableElement.classList.add( style );\n        } else {\n            tableElement.classList.add( Const.CLASS_THEME_DROP_FRAME );\n            tableElement.classList.add( Const.CLASS_WIDGETS_DROP_FRAME );\n        }\n    } else {\n        if( style ) {\n            tableElement.classList.remove( style );\n        } else {\n            tableElement.classList.remove( Const.CLASS_THEME_DROP_FRAME );\n            tableElement.classList.remove( Const.CLASS_WIDGETS_DROP_FRAME );\n        }\n    }\n};\n\nvar applyStyleToChildrenForAllRows = function( pinnedOrScrollContainerList, isPCList, isGlobalArea, applyFlag ) {\n    _.forEach( pinnedOrScrollContainerList, function( pcOrsc ) {\n        if( pcOrsc.children ) {\n            if( isGlobalArea ) {\n                applyStyleForTableDnD( pcOrsc, applyFlag, Const.CLASS_DONOT_HIGHLIGHT_INDIVIDUAL_ROWS );\n            } else {\n                if( isPCList ) {\n                    applyStyleForTableDnD( pcOrsc, applyFlag, Const.CLASS_PINNED_CONTAINER_DROP_FRAME );\n                } else {\n                    applyStyleForTableDnD( pcOrsc, applyFlag, Const.CLASS_SCROLL_CONTAINER_DROP_FRAME );\n                }\n            }\n            _.forEach( pcOrsc.children, function( eachPcOrSc ) {\n                if( isGlobalArea ) {\n                    applyStyleForTableDnD( eachPcOrSc, applyFlag, Const.CLASS_DONOT_HIGHLIGHT_INDIVIDUAL_ROWS );\n                } else {\n                    applyStyleForTableDnD( eachPcOrSc, applyFlag );\n                }\n            } );\n        }\n    } );\n};\n\n/**\n * Add/Remove the widget  class to the elements of splm table that need highlighting/unhighlighting.\n * @param {DOMElement} rowOrTableElement - The element the mouse is over when the event was fired.\n * @param {Boolean} isHighlightFlag - add or remove the highlight class\n * @param {Boolean} isGlobalArea - is the object drag target over global invalid area or not\n */\nvar _setHoverStyle = function( rowOrTableElement, isHighlightFlag, isGlobalArea ) {\n    var splmTablePinnedContainer = null;\n    var splmTableScrollContainer = null;\n    if( !isGlobalArea ) { // target on table row\n        // find the closest div holding splm table container\n        var splmTable = util.closestElement( rowOrTableElement, '.aw-splm-table' );\n        splmTablePinnedContainer = splmTable.querySelector( '.aw-splm-tablePinnedContainer' );\n        splmTableScrollContainer = splmTable.querySelector( '.aw-splm-tableScrollContainer' );\n        var rowIndex = parseInt( rowOrTableElement.getAttribute( 'data-indexnumber' ) );\n    } else {\n        applyStyleForTableDnD( rowOrTableElement, isHighlightFlag );\n        splmTablePinnedContainer = rowOrTableElement.querySelector( '.aw-splm-tablePinnedContainer' );\n        splmTableScrollContainer = rowOrTableElement.querySelector( '.aw-splm-tableScrollContainer' );\n    }\n    if( splmTablePinnedContainer && splmTableScrollContainer ) {\n        var pcList = [];\n        var scList = [];\n        var eachRowPC;\n        var eachRowSC;\n        if( !_.isUndefined( rowIndex ) ) { // target on table row\n            pcList = splmTablePinnedContainer.querySelectorAll( 'div.ui-grid-row[data-indexnumber=\\'' + rowIndex + '\\']' );\n            if( pcList && pcList.length > 0 ) {\n                eachRowPC = pcList[ 0 ];\n            }\n            scList = splmTableScrollContainer.querySelectorAll( 'div.ui-grid-row[data-indexnumber=\\'' + rowIndex + '\\']' );\n            if( scList && scList.length > 0 ) {\n                eachRowSC = scList[ 0 ];\n            }\n        } else { // target on white area\n            pcList = splmTablePinnedContainer.querySelectorAll( 'div.ui-grid-row' );\n            scList = splmTableScrollContainer.querySelectorAll( 'div.ui-grid-row' );\n        }\n        // highlight every single row with borders ; this will not be required when drag is over an invalid/white area\n        // when over an invalid/white area , border-color will not be required for every single table row ; but only on splm-table-container\n        if( !isGlobalArea && !_.isUndefined( rowIndex ) && eachRowPC && eachRowSC ) { // target on table row\n            applyStyleForTableDnD( eachRowPC, isHighlightFlag );\n            applyStyleForTableDnD( eachRowSC, isHighlightFlag );\n        }\n        applyStyleToChildrenForAllRows( pcList, true, isGlobalArea, isHighlightFlag );\n        applyStyleToChildrenForAllRows( scList, false, isGlobalArea, isHighlightFlag );\n    }\n};\n\nexport let handleDragDropHighlightPLTable = function( eventData ) {\n    if( !_.isUndefined( eventData ) && !_.isUndefined( eventData.targetElement ) && eventData.targetElement.classList ) {\n        var isHighlightFlag = eventData.isHighlightFlag;\n        var target = eventData.targetElement;\n\n        if( isHighlightFlag ) {\n            if( target.classList.contains( Const.CLASS_ROW ) ) {\n                _setHoverStyle( target, true, false );\n            } else if( target.classList.contains( Const.CLASS_TABLE ) ) { // this is when current drag is on an invalid/white area\n                _setHoverStyle( target, true, true );\n            }\n        } else {\n            if( target.classList.contains( Const.CLASS_ROW ) ) {\n                _setHoverStyle( target, false, false );\n            } else if( target.classList.contains( Const.CLASS_TABLE ) ) { // this is when current drag is on an invalid/white area\n                _setHoverStyle( target, false, true );\n            }\n        }\n    }\n};\n\nexports = {\n    enableDragging,\n    disableDragging,\n    handleDragDropHighlightPLTable\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}