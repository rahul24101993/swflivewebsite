{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/* eslint-disable require-jsdoc */\nimport _ from 'lodash';\n/**\n * Date filter service.\n *\n * @module js/awDateFilterService\n */\n\nconst DATETIME_FORMATS = {\n  AMPMS: ['AM', 'PM'],\n  DAY: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  ERANAMES: ['Before Christ', 'Anno Domini'],\n  ERAS: ['BC', 'AD'],\n  FIRSTDAYOFWEEK: 6,\n  MONTH: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  SHORTDAY: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  SHORTMONTH: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  STANDALONEMONTH: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  WEEKENDRANGE: [5, 6],\n  fullDate: 'EEEE, MMMM d, y',\n  longDate: 'MMMM d, y',\n  medium: 'MMM d, y h:mm:ss a',\n  mediumDate: 'MMM d, y',\n  mediumTime: 'h:mm:ss a',\n  short: 'M/d/yy h:mm a',\n  shortDate: 'M/d/yy',\n  shortTime: 'h:mm a'\n};\nlet DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\\s\\S]*)/;\nlet NUMBER_STRING = /^-?\\d+$/;\nvar R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4, 0, false, true),\n  yy: dateGetter('FullYear', 2, 0, true, true),\n  y: dateGetter('FullYear', 1, 0, false, true),\n  MMMM: dateStrGetter('Month'),\n  MMM: dateStrGetter('Month', true),\n  MM: dateGetter('Month', 2, 1),\n  M: dateGetter('Month', 1, 1),\n  LLLL: dateStrGetter('Month', false, true),\n  dd: dateGetter('Date', 2),\n  d: dateGetter('Date', 1),\n  HH: dateGetter('Hours', 2),\n  H: dateGetter('Hours', 1),\n  hh: dateGetter('Hours', 2, -12),\n  h: dateGetter('Hours', 1, -12),\n  mm: dateGetter('Minutes', 2),\n  m: dateGetter('Minutes', 1),\n  ss: dateGetter('Seconds', 2),\n  s: dateGetter('Seconds', 1),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n  sss: dateGetter('Milliseconds', 3),\n  EEEE: dateStrGetter('Day'),\n  EEE: dateStrGetter('Day', true),\n  a: ampmGetter,\n  Z: timeZoneGetter,\n  ww: weekGetter(2),\n  w: weekGetter(1),\n  G: eraGetter,\n  GG: eraGetter,\n  GGG: eraGetter,\n  GGGG: longEraGetter\n};\nvar ZERO_CHAR = '0';\n\nfunction dateGetter(name, size, offset, trim, negWrap) {\n  offset = offset || 0;\n  return function (date) {\n    var value = date['get' + name]();\n\n    if (offset > 0 || value > -offset) {\n      value += offset;\n    }\n\n    if (value === 0 && offset === -12) {\n      value = 12;\n    }\n\n    return padNumber(value, size, trim, negWrap);\n  };\n}\n\nvar uppercase = function (string) {\n  return isString(string) ? string.toUpperCase() : string;\n};\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isDate(value) {\n  return Object.prototype.toString.call(value) === '[object Date]';\n}\n\nfunction toInt(str) {\n  return parseInt(str, 10);\n}\n\nfunction dateStrGetter(name, shortForm, standAlone) {\n  return function (date, formats) {\n    var value = date['get' + name]();\n    var propPrefix = (standAlone ? 'STANDALONE' : '') + (shortForm ? 'SHORT' : '');\n    var get = uppercase(propPrefix + name);\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date, formats, offset) {\n  var zone = -1 * offset;\n  var paddedZone = zone >= 0 ? '+' : '';\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2);\n  return paddedZone;\n}\n\nfunction getFirstThursdayOfYear(year) {\n  // 0 = index of January\n  var dayOfWeekOnFirst = new Date(year, 0, 1).getDay(); // 4 = index of Thursday (+1 to account for 1st = 5)\n  // 11 = index of *next* Thursday (+1 account for 1st = 12)\n\n  return new Date(year, 0, (dayOfWeekOnFirst <= 4 ? 5 : 12) - dayOfWeekOnFirst);\n}\n\nfunction getThursdayThisWeek(datetime) {\n  return new Date(datetime.getFullYear(), datetime.getMonth(), // 4 is a index of Thursday\n  datetime.getDate() + (4 - datetime.getDay()));\n}\n\nfunction weekGetter(size) {\n  return function (date) {\n    var firstThurs = getFirstThursdayOfYear(date.getFullYear());\n    var thisThurs = getThursdayThisWeek(date);\n    var diff = Number(thisThurs) - Number(firstThurs);\n    var result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n\n    return padNumber(result, size);\n  };\n}\n\nfunction padNumber(num, digits, trim, negWrap) {\n  var neg = '';\n\n  if (num < 0 || negWrap && num <= 0) {\n    if (negWrap) {\n      num = -num + 1;\n    } else {\n      num = -num;\n      neg = '-';\n    }\n  }\n\n  num = String(num);\n\n  while (num.length < digits) {\n    num = ZERO_CHAR + num;\n  }\n\n  if (trim) {\n    num = num.substr(num.length - digits);\n  }\n\n  return neg + num;\n}\n\nfunction concat(array1, array2, index) {\n  return array1.concat([].slice.call(array2, index));\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nfunction eraGetter(date, formats) {\n  return date.getFullYear() <= 0 ? formats.ERAS[0] : formats.ERAS[1];\n}\n\nfunction longEraGetter(date, formats) {\n  return date.getFullYear() <= 0 ? formats.ERANAMES[0] : formats.ERANAMES[1];\n}\n\nvar isNumberNaN = Number.isNaN || function isNumberNaN(num) {\n  return num !== num;\n};\n\nvar ALL_COLONS = /:/g;\n\nfunction timezoneToOffset(timezone, fallback) {\n  // Support: IE 9-11 only, Edge 13-15+\n  // IE/Edge do not \"understand\" colon (`:`) in timezone\n  timezone = timezone.replace(ALL_COLONS, '');\n  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n  return isNumberNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\n\nfunction addDateMinutes(date, minutes) {\n  date = new Date(date.getTime());\n  date.setMinutes(date.getMinutes() + minutes);\n  return date;\n}\n\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n  reverse = reverse ? -1 : 1;\n  var dateTimezoneOffset = date.getTimezoneOffset();\n  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n  return addDateMinutes(date, reverse * (timezoneOffset - dateTimezoneOffset));\n}\n\nfunction jsonStringToDate(string) {\n  var match = string.match(R_ISO8601_STR);\n\n  if (match) {\n    var date = new Date(0);\n    var tzHour = 0;\n    var tzMin = 0;\n    var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    var timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n    if (match[9]) {\n      tzHour = toInt(match[9] + match[10]);\n      tzMin = toInt(match[9] + match[11]);\n    }\n\n    dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n    var h = toInt(match[4] || 0) - tzHour;\n    var m = toInt(match[5] || 0) - tzMin;\n    var s = toInt(match[6] || 0);\n    var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n  }\n\n  return string;\n}\n\nfunction getFilteredDate(date, format, timezone) {\n  var text = '';\n  var parts = [];\n  var fn;\n  var match;\n  format = format || 'mediumDate';\n  format = DATETIME_FORMATS[format] || format;\n\n  if (isString(date)) {\n    date = NUMBER_STRING.test(date) ? toInt(date) : jsonStringToDate(date);\n  }\n\n  if (isNumber(date)) {\n    date = new Date(date);\n  }\n\n  if (!isDate(date) || !isFinite(date.getTime())) {\n    return date;\n  }\n\n  while (format) {\n    match = DATE_FORMATS_SPLIT.exec(format);\n\n    if (match) {\n      parts = concat(parts, match, 1);\n      format = parts.pop();\n    } else {\n      parts.push(format);\n      format = null;\n    }\n  }\n\n  var dateTimezoneOffset = date.getTimezoneOffset();\n\n  if (timezone) {\n    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    date = convertTimezoneToLocal(date, timezone, true);\n  }\n\n  _.forEach(parts, function (value) {\n    fn = DATE_FORMATS[value];\n    text += fn ? fn(date, DATETIME_FORMATS, dateTimezoneOffset) : value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n  });\n\n  return text;\n}\n\nexport default {\n  getFilteredDate\n};","map":{"version":3,"names":["_","DATETIME_FORMATS","AMPMS","DAY","ERANAMES","ERAS","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","STANDALONEMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","DATE_FORMATS_SPLIT","NUMBER_STRING","R_ISO8601_STR","DATE_FORMATS","yyyy","dateGetter","yy","y","MMMM","dateStrGetter","MMM","MM","M","LLLL","dd","d","HH","H","hh","h","mm","m","ss","s","sss","EEEE","EEE","a","ampmGetter","Z","timeZoneGetter","ww","weekGetter","w","G","eraGetter","GG","GGG","GGGG","longEraGetter","ZERO_CHAR","name","size","offset","trim","negWrap","date","value","padNumber","uppercase","string","isString","toUpperCase","isNumber","isDate","Object","prototype","toString","call","toInt","str","parseInt","shortForm","standAlone","formats","propPrefix","get","zone","paddedZone","Math","abs","getFirstThursdayOfYear","year","dayOfWeekOnFirst","Date","getDay","getThursdayThisWeek","datetime","getFullYear","getMonth","getDate","firstThurs","thisThurs","diff","Number","result","round","num","digits","neg","String","length","substr","concat","array1","array2","index","slice","getHours","isNumberNaN","isNaN","ALL_COLONS","timezoneToOffset","timezone","fallback","replace","requestedTimezoneOffset","parse","addDateMinutes","minutes","getTime","setMinutes","getMinutes","convertTimezoneToLocal","reverse","dateTimezoneOffset","getTimezoneOffset","timezoneOffset","jsonStringToDate","match","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","ms","parseFloat","getFilteredDate","format","text","parts","fn","test","isFinite","exec","pop","push","forEach"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/services/src/js/awDateFilterService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n/* eslint-disable require-jsdoc */\nimport _ from 'lodash';\n/**\n * Date filter service.\n *\n * @module js/awDateFilterService\n */\n\nconst DATETIME_FORMATS = {\n    AMPMS: [\n        'AM',\n        'PM'\n    ],\n    DAY: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    ERANAMES: [\n        'Before Christ',\n        'Anno Domini'\n    ],\n    ERAS: [\n        'BC',\n        'AD'\n    ],\n    FIRSTDAYOFWEEK: 6,\n    MONTH: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    SHORTDAY: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat'\n    ],\n    SHORTMONTH: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ],\n    STANDALONEMONTH: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    WEEKENDRANGE: [\n        5,\n        6\n    ],\n    fullDate: 'EEEE, MMMM d, y',\n    longDate: 'MMMM d, y',\n    medium: 'MMM d, y h:mm:ss a',\n    mediumDate: 'MMM d, y',\n    mediumTime: 'h:mm:ss a',\n    short: 'M/d/yy h:mm a',\n    shortDate: 'M/d/yy',\n    shortTime: 'h:mm a'\n};\n\nlet DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\\s\\S]*)/;\nlet NUMBER_STRING = /^-?\\d+$/;\nvar R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\nvar DATE_FORMATS = {\n    yyyy: dateGetter( 'FullYear', 4, 0, false, true ),\n    yy: dateGetter( 'FullYear', 2, 0, true, true ),\n    y: dateGetter( 'FullYear', 1, 0, false, true ),\n    MMMM: dateStrGetter( 'Month' ),\n    MMM: dateStrGetter( 'Month', true ),\n    MM: dateGetter( 'Month', 2, 1 ),\n    M: dateGetter( 'Month', 1, 1 ),\n    LLLL: dateStrGetter( 'Month', false, true ),\n    dd: dateGetter( 'Date', 2 ),\n    d: dateGetter( 'Date', 1 ),\n    HH: dateGetter( 'Hours', 2 ),\n    H: dateGetter( 'Hours', 1 ),\n    hh: dateGetter( 'Hours', 2, -12 ),\n    h: dateGetter( 'Hours', 1, -12 ),\n    mm: dateGetter( 'Minutes', 2 ),\n    m: dateGetter( 'Minutes', 1 ),\n    ss: dateGetter( 'Seconds', 2 ),\n    s: dateGetter( 'Seconds', 1 ),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n    sss: dateGetter( 'Milliseconds', 3 ),\n    EEEE: dateStrGetter( 'Day' ),\n    EEE: dateStrGetter( 'Day', true ),\n    a: ampmGetter,\n    Z: timeZoneGetter,\n    ww: weekGetter( 2 ),\n    w: weekGetter( 1 ),\n    G: eraGetter,\n    GG: eraGetter,\n    GGG: eraGetter,\n    GGGG: longEraGetter\n};\nvar ZERO_CHAR = '0';\n\nfunction dateGetter( name, size, offset, trim, negWrap ) {\n    offset = offset || 0;\n    return function( date ) {\n        var value = date[ 'get' + name ]();\n        if( offset > 0 || value > -offset ) {\n            value += offset;\n        }\n        if( value === 0 && offset === -12 ) { value = 12; }\n        return padNumber( value, size, trim, negWrap );\n    };\n}\nvar uppercase = function( string ) { return isString( string ) ? string.toUpperCase() : string; };\n\nfunction isString( value ) { return typeof value === 'string'; }\n\nfunction isNumber( value ) { return typeof value === 'number'; }\n\nfunction isDate( value ) {\n    return Object.prototype.toString.call( value ) === '[object Date]';\n}\n\nfunction toInt( str ) {\n    return parseInt( str, 10 );\n}\n\nfunction dateStrGetter( name, shortForm, standAlone ) {\n    return function( date, formats ) {\n        var value = date[ 'get' + name ]();\n        var propPrefix = ( standAlone ? 'STANDALONE' : '' ) + ( shortForm ? 'SHORT' : '' );\n        var get = uppercase( propPrefix + name );\n\n        return formats[ get ][ value ];\n    };\n}\n\nfunction timeZoneGetter( date, formats, offset ) {\n    var zone = -1 * offset;\n    var paddedZone = zone >= 0 ? '+' : '';\n\n    paddedZone += padNumber( Math[ zone > 0 ? 'floor' : 'ceil' ]( zone / 60 ), 2 ) +\n        padNumber( Math.abs( zone % 60 ), 2 );\n\n    return paddedZone;\n}\n\nfunction getFirstThursdayOfYear( year ) {\n    // 0 = index of January\n    var dayOfWeekOnFirst = new Date( year, 0, 1 ).getDay();\n    // 4 = index of Thursday (+1 to account for 1st = 5)\n    // 11 = index of *next* Thursday (+1 account for 1st = 12)\n    return new Date( year, 0, ( dayOfWeekOnFirst <= 4 ? 5 : 12 ) - dayOfWeekOnFirst );\n}\n\nfunction getThursdayThisWeek( datetime ) {\n    return new Date( datetime.getFullYear(), datetime.getMonth(),\n        // 4 is a index of Thursday\n        datetime.getDate() + ( 4 - datetime.getDay() ) );\n}\n\nfunction weekGetter( size ) {\n    return function( date ) {\n        var firstThurs = getFirstThursdayOfYear( date.getFullYear() );\n        var thisThurs = getThursdayThisWeek( date );\n\n        var diff = Number( thisThurs ) - Number( firstThurs );\n        var result = 1 + Math.round( diff / 6.048e8 ); // 6.048e8 ms per week\n\n        return padNumber( result, size );\n    };\n}\n\nfunction padNumber( num, digits, trim, negWrap ) {\n    var neg = '';\n    if( num < 0 || negWrap && num <= 0 ) {\n        if( negWrap ) {\n            num = -num + 1;\n        } else {\n            num = -num;\n            neg = '-';\n        }\n    }\n    num = String( num );\n    while( num.length < digits ) { num = ZERO_CHAR + num; }\n    if( trim ) {\n        num = num.substr( num.length - digits );\n    }\n    return neg + num;\n}\n\nfunction concat( array1, array2, index ) {\n    return array1.concat( [].slice.call( array2, index ) );\n}\n\nfunction ampmGetter( date, formats ) {\n    return date.getHours() < 12 ? formats.AMPMS[ 0 ] : formats.AMPMS[ 1 ];\n}\n\nfunction eraGetter( date, formats ) {\n    return date.getFullYear() <= 0 ? formats.ERAS[ 0 ] : formats.ERAS[ 1 ];\n}\n\nfunction longEraGetter( date, formats ) {\n    return date.getFullYear() <= 0 ? formats.ERANAMES[ 0 ] : formats.ERANAMES[ 1 ];\n}\n\nvar isNumberNaN = Number.isNaN || function isNumberNaN( num ) {\n    return num !== num;\n};\n\nvar ALL_COLONS = /:/g;\n\nfunction timezoneToOffset( timezone, fallback ) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace( ALL_COLONS, '' );\n    var requestedTimezoneOffset = Date.parse( 'Jan 01, 1970 00:00:00 ' + timezone ) / 60000;\n    return isNumberNaN( requestedTimezoneOffset ) ? fallback : requestedTimezoneOffset;\n}\n\nfunction addDateMinutes( date, minutes ) {\n    date = new Date( date.getTime() );\n    date.setMinutes( date.getMinutes() + minutes );\n    return date;\n}\n\nfunction convertTimezoneToLocal( date, timezone, reverse ) {\n    reverse = reverse ? -1 : 1;\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    var timezoneOffset = timezoneToOffset( timezone, dateTimezoneOffset );\n    return addDateMinutes( date, reverse * ( timezoneOffset - dateTimezoneOffset ) );\n}\n\nfunction jsonStringToDate( string ) {\n    var match = string.match( R_ISO8601_STR );\n    if( match ) {\n        var date = new Date( 0 );\n        var tzHour = 0;\n        var tzMin = 0;\n        var dateSetter = match[ 8 ] ? date.setUTCFullYear : date.setFullYear;\n        var timeSetter = match[ 8 ] ? date.setUTCHours : date.setHours;\n\n        if( match[ 9 ] ) {\n            tzHour = toInt( match[ 9 ] + match[ 10 ] );\n            tzMin = toInt( match[ 9 ] + match[ 11 ] );\n        }\n        dateSetter.call( date, toInt( match[ 1 ] ), toInt( match[ 2 ] ) - 1, toInt( match[ 3 ] ) );\n        var h = toInt( match[ 4 ] || 0 ) - tzHour;\n        var m = toInt( match[ 5 ] || 0 ) - tzMin;\n        var s = toInt( match[ 6 ] || 0 );\n        var ms = Math.round( parseFloat( '0.' + ( match[ 7 ] || 0 ) ) * 1000 );\n        timeSetter.call( date, h, m, s, ms );\n        return date;\n    }\n    return string;\n}\n\nfunction getFilteredDate( date, format, timezone ) {\n    var text = '';\n    var parts = [];\n    var fn;\n    var match;\n\n    format = format || 'mediumDate';\n    format = DATETIME_FORMATS[ format ] || format;\n    if( isString( date ) ) {\n        date = NUMBER_STRING.test( date ) ? toInt( date ) : jsonStringToDate( date );\n    }\n\n    if( isNumber( date ) ) {\n        date = new Date( date );\n    }\n\n    if( !isDate( date ) || !isFinite( date.getTime() ) ) {\n        return date;\n    }\n\n    while( format ) {\n        match = DATE_FORMATS_SPLIT.exec( format );\n        if( match ) {\n            parts = concat( parts, match, 1 );\n            format = parts.pop();\n        } else {\n            parts.push( format );\n            format = null;\n        }\n    }\n\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if( timezone ) {\n        dateTimezoneOffset = timezoneToOffset( timezone, dateTimezoneOffset );\n        date = convertTimezoneToLocal( date, timezone, true );\n    }\n    _.forEach( parts, function( value ) {\n        fn = DATE_FORMATS[ value ];\n        text += fn ? fn( date, DATETIME_FORMATS, dateTimezoneOffset ) :\n            value === '\\'\\'' ? '\\'' : value.replace( /(^'|'$)/g, '' ).replace( /''/g, '\\'' );\n    } );\n\n    return text;\n}\n\nexport default {\n    getFilteredDate\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}