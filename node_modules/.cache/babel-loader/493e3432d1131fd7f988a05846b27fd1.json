{"ast":null,"code":"import AwIcon from'viewmodel/AwIconViewModel';import AwButton from'viewmodel/AwButtonViewModel';import AwPopup from'viewmodel/AwPopupViewModel';import _ from'lodash';import eventBus from'js/eventBus';import modelPropertyService from'js/modelPropertyService';import uwPropertyService from'js/uwPropertyService';import localeService from'js/localeService';import logger from'js/logger';import{noop}from'js/declUtils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const initialize=(elementRefList,prop)=>{let assignBtnTitle=null;let isSinglePattern=false;let isMultiplePattern=false;let patternProp=null;let selectedPattern=null;if(prop.patterns&&_.isArray(prop.patterns)){if(prop.patterns.length===1){isSinglePattern=true;}else if(prop.patterns.length>1){isMultiplePattern=true;// Create a view model property for the patterns drop down\nvar listBoxProp={type:'STRING'};patternProp=modelPropertyService.createViewModelProperty(listBoxProp);// Set the default value on the view model prop\nif(prop.preferredPattern&&prop.patterns.indexOf(prop.preferredPattern)!==-1){patternProp.dbValue=prop.preferredPattern;}else{patternProp.dbValue=prop.patterns[0];}selectedPattern=patternProp.dbValue;}}else if(prop.patternAutoAssignFlags&&!_.isUndefined(prop.preferredPattern)){selectedPattern=prop.preferredPattern;}let p1=localeService.getLocalizedText('awAddDirectiveMessages','assignButtonTitle').then(function(result){assignBtnTitle=result;});return Promise.all([p1]).then(()=>{return{patternProp,selectedPattern,isSinglePattern,isMultiplePattern,assignBtnTitle};});};const updatePatternState=(dispatch,value,data)=>{let updateValue={selectedPattern:value,patternProp:{...data._states.patternProp,dbValue:value}};dispatch({path:'data._states',value:{...data._states,...updateValue}});};/**\n * render function for awPattern\n * @returns {JSX.Element} react component\n */export const awPatternRenderFunction=_ref=>{let{prop,actions,viewModel,elementRefList}=_ref;let{dropDown}=actions;let{data,dispatch}=viewModel;let{patternProp,selectedPattern,isSinglePattern,isMultiplePattern,assignBtnTitle}=data?data._states||{}:{};if(!prop){logger.warn('AwPattern prop is undefined.');return;}let autoAssign=prop.fielddata&&prop.fielddata.isAutoAssign===false&&prop.fielddata.patternAutoAssignFlags&&prop.fielddata.patternAutoAssignFlags[selectedPattern]===true||isSinglePattern&&prop.fielddata&&prop.fielddata.patternAutoAssignFlags&&prop.fielddata.patternAutoAssignFlags[prop.fielddata.patterns[0]]===true;// onClick handler\nconst setSelectedPatternHandler=function(event,pattern){if(event.key&&event.key!=='Enter'){return;}// case click or enter\nlet newValue=pattern;let oldValue=patternProp&&patternProp.dbValue;if(!_.isUndefined(newValue)&&newValue!==oldValue&&prop.fielddata.patterns.indexOf(newValue)>-1&&newValue!==selectedPattern){updatePatternState(dispatch,newValue,data);if(prop.fielddata.isAutoAssign===undefined||prop.fielddata.isAutoAssign===true||prop.fielddata.isAutoAssignable===true){const publishData={prop:prop,newPattern:newValue};eventBus.publish('awPattern.newPatternSelected',publishData);if(prop&&prop.fielddata&&prop.fielddata.action){// defer is added to let the render cycle complete\n_.defer(function(){prop.fielddata.action(publishData);});}if(prop.onChange){event.target.value=newValue;prop.onChange(event);}}else{uwPropertyService.setValue(prop,'');}}dropDown.hide();};const toggleDropdown=function(event){if(event.key&&event.key!=='Enter'){return;}// case click or enter\ndropDown.show({reference:elementRefList.get('input').current,width:elementRefList.get('input').current.offsetWidth});};// The function will read the pattern from patternProp and will publish an event which will generate the next value as per the pattern\nconst autoAssignIDs=function(){var pattern=prop.fielddata.preferredPattern;if(patternProp&&patternProp.dbValue){pattern=patternProp.dbValue;}const publishData={prop,newPattern:pattern};eventBus.publish('awPattern.newPatternSelected',publishData);if(prop&&prop.fielddata&&prop.fielddata.action){// defer is added to let the render cycle complete\n_.defer(function(){prop.fielddata.action(publishData);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"aw-widgets-namingRuleGroup\",children:[isSinglePattern&&/*#__PURE__*/_jsx(\"div\",{className:\"aw-widgets-propertylabel\",children:prop.fielddata.patterns[0]}),isMultiplePattern&&/*#__PURE__*/_jsxs(\"div\",{className:\"aw-layout-flexRowContainer aw-widget-iconParent\",onClick:toggleDropdown,role:\"button\",tabIndex:\"0\",onKeyPress:toggleDropdown,children:[/*#__PURE__*/_jsx(\"input\",{ref:elementRefList.get('input'),type:\"text\",value:patternProp&&patternProp.dbValue,onChange:noop,className:dropDown.open?'aw-jswidgets-choice aw-jswidgets-expanded':'aw-jswidgets-choice'}),/*#__PURE__*/_jsx(AwIcon,{iconId:\"miscChevronDown\",className:\"aw-widget-icon\"})]}),autoAssign&&/*#__PURE__*/_jsx(AwButton,{className:\"aw-widgets-assignIdButton\",action:autoAssignIDs,children:assignBtnTitle}),dropDown.open&&/*#__PURE__*/_jsx(AwPopup,{...dropDown.options,children:/*#__PURE__*/_jsx(\"div\",{className:\"aw-base-scrollPanel\",children:/*#__PURE__*/_jsx(\"ul\",{role:\"listbox\",tabIndex:0,className:\"sw-column\",children:prop.fielddata.patterns.map(pattern=>{return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"sw-aria-border aw-widgets-cellListItem aw-widgets-cellTop\",onClick:event=>setSelectedPatternHandler(event,pattern),role:\"button\",tabIndex:\"0\",onKeyPress:event=>setSelectedPatternHandler(event,pattern),children:/*#__PURE__*/_jsx(\"div\",{className:\"sw-row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sw-cell-valName\",title:pattern,children:pattern})})})},pattern);})})})})]});};","map":null,"metadata":{},"sourceType":"module"}