{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\uielements\\\\src\\\\js\\\\AwCheckListService.js\"; // Copyright (c) 2021 Siemens\n\n/**\n * @module js/AwCheckListService\n */\n\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awCheckListRenderFunction = props => {\n  let prop = props.value[0];\n  let {\n    updateHook\n  } = props;\n\n  let isCheckedByDefault = prop => prop.isChecked === true || prop.isChecked === 'true';\n\n  let performActionOnButtonClick = event => {\n    event.preventDefault();\n\n    if (prop.buttonAction && props.actionDefs && props.actionDefs[prop.buttonAction]) {\n      props.actionDefs[prop.buttonAction](event);\n    }\n  };\n\n  let checkInput = event => {\n    if (prop.checkAction && props.actionDefs && props.actionDefs[prop.checkAction]) {\n      props.actionDefs[prop.checkAction]();\n    }\n\n    let data = { ...updateHook.data\n    };\n    data[props.name].dbValue[0].isChecked = event.target.checked;\n    updateHook.dispatch({\n      path: 'data',\n      value: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-widgets-checkSelect\",\n    \"data-locator\": props.label,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        \"aria-label\": prop.tooltip,\n        className: isCheckedByDefault(prop) ? 'checked' : 'unchecked',\n        onChange: checkInput,\n        name: prop.tooltip,\n        checked: isCheckedByDefault(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: performActionOnButtonClick,\n          className: \"sw-button-iconContainer sw-aria-border\",\n          title: prop.tooltip,\n          children: /*#__PURE__*/_jsxDEV(AwIcon, {\n            className: \"sw-button-icon\",\n            iconId: 'cmd' + prop.iconName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"aw-widgets-checklistText\",\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uielements/src/js/AwCheckListService.js"],"names":["awCheckListRenderFunction","props","prop","updateHook","isCheckedByDefault","performActionOnButtonClick","event","checkInput","data","path","value","iconName","label"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/AwCheckListService\n */\nimport AwIcon from 'viewmodel/AwIconViewModel';\n\nexport const awCheckListRenderFunction = ( props ) => {\n    let prop = props.value[0];\n    let { updateHook } = props;\n\n    let isCheckedByDefault = ( prop ) => prop.isChecked === true || prop.isChecked === 'true';\n\n    let performActionOnButtonClick = ( event ) => {\n        event.preventDefault();\n        if( prop.buttonAction && props.actionDefs && props.actionDefs[ prop.buttonAction ] ) {\n            props.actionDefs[ prop.buttonAction ]( event );\n        }\n    };\n\n    let checkInput = ( event ) => {\n        if( prop.checkAction && props.actionDefs && props.actionDefs[ prop.checkAction ] ) {\n            props.actionDefs[ prop.checkAction ]();\n        }\n        let data = { ...updateHook.data };\n        data[ props.name ].dbValue[0].isChecked = event.target.checked;\n        updateHook.dispatch( { path: 'data', value: data } );\n    };\n\n    return (\n        <div className='aw-widgets-checkSelect' data-locator={props.label}>\n            <label>\n                <input type='checkbox' aria-label={prop.tooltip} className={isCheckedByDefault( prop ) ? 'checked' : 'unchecked'} onChange={checkInput} name={prop.tooltip} checked={isCheckedByDefault( prop )}/>\n                <span>\n                    <button onClick={performActionOnButtonClick} className='sw-button-iconContainer sw-aria-border' title={prop.tooltip}>\n                        <AwIcon className='sw-button-icon' iconId={'cmd' + prop.iconName}></AwIcon>\n                    </button>\n                </span>\n                <span className='aw-widgets-checklistText'>{props.label}</span>\n            </label>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}