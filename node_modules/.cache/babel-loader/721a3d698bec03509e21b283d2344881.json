{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This module defines and provides a set of utility APIs used to access the 'localStorage' APIs of the browser the\n * client is running within.\n *\n * @module js/localStorage\n * @publishedApolloService\n */\nimport browserUtils from 'js/browserUtils';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\n/** Build ID to ensure unique entry into the local storage */\n\n/** revisitme yogesh\n * Hint: In afx following string was getting replaced by current date during build\n */\n\nvar _buildID = '{{INSERT_HERE_BUILD_ID}}';\n/** Browser ID Suffix for local storage data */\n\nvar _browserID = '_B_GUID_:';\n/** The id to include in the keys for all topics managed by this service. */\n\nvar _localStorageId = _buildID;\n/** {Boolean} TRUE if running within an Internet Explorer type browser. */\n\nvar _isIE = browserUtils.isIE;\n/** ID for this specific instance of the browser. */\n\nvar _browserInstanceId = Date.now().toString();\n/**\n * @returns {String} Base URL for the current application's root 'document' without any protocol, machine, port or\n *          query attributes and (if otherwise valid) without a trailing '/'\n *\n * <pre>\n * (e.g. 'http://100.100.100.100:8888/awc/?locale=en_US#showHome' would return 'awc' ).\n * </pre>\n */\n\n\nvar _getLocalStorageId = function () {\n  if (_localStorageId !== _buildID) {\n    return _localStorageId;\n  }\n\n  if (window && window.location && window.location.pathname) {\n    // Ensure a final slash if non-empty.\n    _localStorageId = window.location.pathname;\n    _localStorageId = _localStorageId.substring(0, _localStorageId.lastIndexOf('/') + 1);\n  } else {\n    /**\n     * Support for non-Angular (NodeJS) run.\n     * @ignore\n     */\n    _localStorageId = '';\n  }\n\n  return _localStorageId;\n};\n/**\n * @param {String} topic - local storage topic (key)\n *\n * @return {String} Unique local storage topic key.\n */\n\n\nfunction _getLSTopicKey(topic) {\n  return topic + ':' + _getLocalStorageId();\n}\n/**\n * Subscribe to the 'ctrl-mouse' click on the Siemens logo to kick off the cleanup of obsolete local storage\n * artifacts.\n */\n\n\neventBus.subscribe('cdm.logDiagnostics', function () {\n  /** Regular expression used to cleanup older localStorage artifacts */\n  var _regex = /[a-z]+:(\\d)+$/g;\n  var keys = Object.keys(localStorage);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (keys[i].match(_regex)) {\n      localStorage.removeItem(keys[i]);\n    }\n  }\n}, 'localStorage');\nvar exports = {};\n/**\n * Subscribes to 'storage' event for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {Function} cb - event handler\n */\n\nexport let subscribe = function (topic, cb) {\n  window.addEventListener('storage', function (event) {\n    if (browserUtils.getBaseURL() && event.url && event.url.startsWith(browserUtils.getBaseURL())) {\n      var ourEvent = _.merge({}, event); //Object.assign does not merge the storage event data\n\n\n      if (_isIE) {\n        if (ourEvent.newValue) {\n          var start = ourEvent.newValue.indexOf(_browserID);\n\n          if (start > -1) {\n            var browserID = ourEvent.newValue.substr(start + _browserID.length, ourEvent.newValue.length);\n            ourEvent.newValue = ourEvent.newValue.substr(0, start);\n\n            if (browserID === _browserInstanceId) {\n              return;\n            }\n\n            start = ourEvent.oldValue.indexOf(_browserID);\n\n            if (start > -1) {\n              ourEvent.oldValue = ourEvent.oldValue.substr(0, start);\n            }\n          }\n        }\n      } // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n\n\n      if (ourEvent.key === _getLSTopicKey(topic) && ourEvent.newValue !== ourEvent.oldValue) {\n        cb(ourEvent);\n      }\n    }\n  }, false);\n};\n/**\n * Add data to local storage for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {String} data - data to add to local storage\n */\n\nexport let publish = function (topic, data) {\n  var dataLocal = data;\n\n  if (_isIE) {\n    dataLocal += _browserID + _browserInstanceId;\n  } // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n\n\n  var topicKey = _getLSTopicKey(topic);\n\n  var exists = localStorage.hasOwnProperty(topicKey);\n\n  if (exists && dataLocal === undefined) {\n    localStorage.removeItem(topicKey);\n  } else if (!exists || localStorage[topicKey] !== dataLocal) {\n    localStorage.setItem(topicKey, dataLocal);\n  }\n};\n/**\n * Get the value of gven local storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @return {String} value of local storage (or NULL if the topic is not in the local storage).\n */\n\nexport let get = function (topic) {\n  var topicKey = _getLSTopicKey(topic);\n\n  if (localStorage.hasOwnProperty(topicKey)) {\n    var item = localStorage.getItem(topicKey);\n\n    if (_isIE) {\n      var start = item.indexOf(_browserID);\n\n      if (start > -1) {\n        item = item.substr(0, start);\n      }\n    }\n\n    return item;\n  }\n\n  return null;\n};\n/**\n * Remove the given local storage topic (key)\n *\n * @param {String} topic - The local storage topic (key) to remove.\n */\n\nexport let removeItem = function (topic) {\n  var keyName = _getLSTopicKey(topic);\n\n  localStorage.removeItem(keyName);\n};\nexports = {\n  subscribe,\n  publish,\n  get,\n  removeItem\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/kernel/src/js/localStorage.js"],"names":["_buildID","_browserID","_localStorageId","_isIE","browserUtils","_browserInstanceId","Date","_getLocalStorageId","window","topic","eventBus","_regex","keys","Object","i","localStorage","exports","subscribe","event","ourEvent","_","start","browserID","_getLSTopicKey","cb","publish","dataLocal","topicKey","exists","get","item","removeItem","keyName"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This module defines and provides a set of utility APIs used to access the 'localStorage' APIs of the browser the\n * client is running within.\n *\n * @module js/localStorage\n * @publishedApolloService\n */\nimport browserUtils from 'js/browserUtils';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\n\n\n/** Build ID to ensure unique entry into the local storage */\n/** revisitme yogesh\n * Hint: In afx following string was getting replaced by current date during build\n */\nvar _buildID = '{{INSERT_HERE_BUILD_ID}}';\n\n/** Browser ID Suffix for local storage data */\nvar _browserID = '_B_GUID_:';\n\n/** The id to include in the keys for all topics managed by this service. */\nvar _localStorageId = _buildID;\n\n/** {Boolean} TRUE if running within an Internet Explorer type browser. */\nvar _isIE = browserUtils.isIE;\n\n/** ID for this specific instance of the browser. */\nvar _browserInstanceId = Date.now().toString();\n\n/**\n * @returns {String} Base URL for the current application's root 'document' without any protocol, machine, port or\n *          query attributes and (if otherwise valid) without a trailing '/'\n *\n * <pre>\n * (e.g. 'http://100.100.100.100:8888/awc/?locale=en_US#showHome' would return 'awc' ).\n * </pre>\n */\nvar _getLocalStorageId = function() {\n    if( _localStorageId !== _buildID ) {\n        return _localStorageId;\n    }\n\n    if( window && window.location && window.location.pathname ) {\n        // Ensure a final slash if non-empty.\n        _localStorageId = window.location.pathname;\n        _localStorageId = _localStorageId.substring( 0, _localStorageId.lastIndexOf( '/' ) + 1 );\n    } else {\n        /**\n         * Support for non-Angular (NodeJS) run.\n         * @ignore\n         */\n        _localStorageId = '';\n    }\n\n    return _localStorageId;\n};\n\n/**\n * @param {String} topic - local storage topic (key)\n *\n * @return {String} Unique local storage topic key.\n */\nfunction _getLSTopicKey( topic ) {\n    return topic + ':' + _getLocalStorageId();\n}\n\n/**\n * Subscribe to the 'ctrl-mouse' click on the Siemens logo to kick off the cleanup of obsolete local storage\n * artifacts.\n */\neventBus.subscribe( 'cdm.logDiagnostics', function() {\n    /** Regular expression used to cleanup older localStorage artifacts */\n    var _regex = /[a-z]+:(\\d)+$/g;\n\n    var keys = Object.keys( localStorage );\n\n    for( var i = 0; i < keys.length; i++ ) {\n        if( keys[ i ].match( _regex ) ) {\n            localStorage.removeItem( keys[ i ] );\n        }\n    }\n}, 'localStorage' );\n\nvar exports = {};\n\n/**\n * Subscribes to 'storage' event for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {Function} cb - event handler\n */\nexport let subscribe = function( topic, cb ) {\n    window.addEventListener( 'storage', function( event ) {\n        if( browserUtils.getBaseURL() && event.url && event.url.startsWith( browserUtils.getBaseURL() ) ) {\n            var ourEvent = _.merge( {}, event ); //Object.assign does not merge the storage event data\n            if( _isIE ) {\n                if( ourEvent.newValue ) {\n                    var start = ourEvent.newValue.indexOf( _browserID );\n                    if( start > -1 ) {\n                        var browserID = ourEvent.newValue.substr( start + _browserID.length,\n                            ourEvent.newValue.length );\n                        ourEvent.newValue = ourEvent.newValue.substr( 0, start );\n\n                        if( browserID === _browserInstanceId ) {\n                            return;\n                        }\n\n                        start = ourEvent.oldValue.indexOf( _browserID );\n                        if( start > -1 ) {\n                            ourEvent.oldValue = ourEvent.oldValue.substr( 0, start );\n                        }\n                    }\n                }\n            }\n\n            // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n            if( ourEvent.key === _getLSTopicKey( topic ) && ourEvent.newValue !== ourEvent.oldValue ) {\n                cb( ourEvent );\n            }\n        }\n    }, false );\n};\n\n/**\n * Add data to local storage for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {String} data - data to add to local storage\n */\nexport let publish = function( topic, data ) {\n    var dataLocal = data;\n\n    if( _isIE ) {\n        dataLocal += _browserID + _browserInstanceId;\n    }\n\n    // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n    var topicKey = _getLSTopicKey( topic );\n\n    var exists = localStorage.hasOwnProperty( topicKey );\n\n    if( exists && dataLocal === undefined ) {\n        localStorage.removeItem( topicKey );\n    } else if( !exists || localStorage[ topicKey ] !== dataLocal ) {\n        localStorage.setItem( topicKey, dataLocal );\n    }\n};\n\n/**\n * Get the value of gven local storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @return {String} value of local storage (or NULL if the topic is not in the local storage).\n */\nexport let get = function( topic ) {\n    var topicKey = _getLSTopicKey( topic );\n    if( localStorage.hasOwnProperty( topicKey ) ) {\n        var item = localStorage.getItem( topicKey );\n        if( _isIE ) {\n            var start = item.indexOf( _browserID );\n            if( start > -1 ) {\n                item = item.substr( 0, start );\n            }\n        }\n        return item;\n    }\n\n    return null;\n};\n\n/**\n * Remove the given local storage topic (key)\n *\n * @param {String} topic - The local storage topic (key) to remove.\n */\nexport let removeItem = function( topic ) {\n    var keyName = _getLSTopicKey( topic );\n\n    localStorage.removeItem( keyName );\n};\n\nexports = {\n    subscribe,\n    publish,\n    get,\n    removeItem\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}