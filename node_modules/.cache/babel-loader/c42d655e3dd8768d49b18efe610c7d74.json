{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwTextareaValService.js\"; // Copyright (c) 2021 Siemens\n\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport sanitizer from 'js/sanitizer';\n/**\n * render function for AwTextareaVal\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awTextareaValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  let filteredAttrs = sanitizer.sanitizeHTMLTagProps(prop, 'textarea');\n  const textAreaClass = getValClass(prop); // use simple non-edit val if not editing\n\n  if (!prop.fielddata.isEditable || prop.modifiable === false) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  var keyPressed = event => {\n    if (event.key === 'Enter' || event.type === 'blur' && prop.typex === 'STRINGARRAY') {\n      event.preventDefault();\n      prop.onChange(event);\n      event.target.value = '';\n    }\n  };\n\n  let numberOfLines = 3;\n\n  if (prop.fielddata.numberOfLines) {\n    numberOfLines = prop.fielddata.numberOfLines;\n  }\n\n  if (!filteredAttrs.value) {\n    filteredAttrs.value = '';\n  }\n\n  if (prop.typex === 'STRINGARRAY') {\n    return /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: numberOfLines,\n      \"aria-required\": prop.isRequired,\n      \"data-locator\": prop.label,\n      placeholder: prop.placeholder,\n      className: textAreaClass,\n      maxLength: prop.maxLength,\n      onBlur: keyPressed,\n      onKeyPress: keyPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (prop.fielddata.uwAnchor) {\n    const commandConext = { ...prop.fielddata,\n      dbValue: prop.fielddata.displayValues\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sw-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...filteredAttrs,\n        rows: numberOfLines,\n        className: textAreaClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AwCommandBar, {\n        anchor: prop.fielddata.uwAnchor,\n        alignment: \"HORIZONTAL\",\n        context: commandConext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", { ...filteredAttrs,\n    rows: numberOfLines,\n    className: textAreaClass\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwTextareaValService.js"],"names":["awTextareaValRenderFunction","props","prop","filteredAttrs","sanitizer","textAreaClass","getValClass","keyPressed","event","numberOfLines","commandConext","dbValue","displayValues"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwCommandBar from 'viewmodel/AwCommandBarViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport sanitizer from 'js/sanitizer';\n\n/**\n * render function for AwTextareaVal\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awTextareaValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    let filteredAttrs = sanitizer.sanitizeHTMLTagProps( prop, 'textarea' );\n    const textAreaClass = getValClass( prop );\n\n    // use simple non-edit val if not editing\n    if( !prop.fielddata.isEditable || prop.modifiable === false ) {\n        return (\n            <AwPropertyNonEditVal {...prop}></AwPropertyNonEditVal>\n        );\n    }\n\n    var keyPressed = ( event ) => {\n        if( event.key === 'Enter' || event.type === 'blur' && prop.typex === 'STRINGARRAY' ) {\n            event.preventDefault();\n            prop.onChange( event );\n            event.target.value = '';\n        }\n    };\n\n    let numberOfLines = 3;\n    if( prop.fielddata.numberOfLines ) {\n        numberOfLines = prop.fielddata.numberOfLines;\n    }\n    if( !filteredAttrs.value ) {\n        filteredAttrs.value = '';\n    }\n    if( prop.typex === 'STRINGARRAY' ) {\n        return (\n            <textarea rows={numberOfLines}\n                aria-required={prop.isRequired}\n                data-locator={prop.label}\n                placeholder={prop.placeholder}\n                className={textAreaClass}\n                maxLength={prop.maxLength}\n                onBlur={keyPressed}\n                onKeyPress={keyPressed}/>\n        );\n    }\n    if( prop.fielddata.uwAnchor ) {\n        const commandConext = {\n            ...prop.fielddata,\n            dbValue: prop.fielddata.displayValues\n        };\n        return (\n            <div className='sw-row'>\n                <textarea {...filteredAttrs} rows={numberOfLines} className={textAreaClass} />\n                <AwCommandBar anchor={prop.fielddata.uwAnchor} alignment='HORIZONTAL' context={commandConext}></AwCommandBar>\n            </div>\n        );\n    }\n    return (\n        <textarea {...filteredAttrs} rows={numberOfLines} className={textAreaClass} />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}