{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * This utility module provides helpful functions intended to efficiently manipulate pltable contents.\n *\n * @module js/splmStatsUtils\n */\nlet _reportAnalytics = false;\nlet _locationInformation = null;\n/**\n * @returns {Integer} Number of DOM elements on the page\n */\n\nexport function getDomElementsCount() {\n  return document.body.getElementsByTagName('*').length;\n}\n/**\n * Gets now\n * @returns {DOMHighResTimeStamp} performance.now()\n */\n\nexport function now() {\n  if (window.performance) {\n    return window.performance.now();\n  }\n\n  return Date.now();\n}\n/**\n * Checks to see if splmAnalytics are enabled or not\n * @returns {Boolean} Analytics disabled?\n */\n\nexport function isAnalyticsDisabled() {\n  const optOut = localStorage.getItem('AW_SAN_OPTOUT');\n  const doDisable = localStorage.getItem('AW_SAN_DO_DISABLE');\n  return !(optOut === 'false' && doDisable === 'false');\n} // simple impl for logger\n\nexport const logger = {\n  // eslint-disable-next-line no-console\n  log: console.log,\n  // eslint-disable-next-line no-console\n  warn: console.warn,\n  // eslint-disable-next-line no-console\n  error: console.error\n};\n/**\n * Checks if browser is IE. TRUE if browser is IE\n */\n\nexport const isIE = window.navigator.userAgent.search(/(trident|edge)/i) > -1;\n/**\n * Returns the browser type and the version of that browser as a string\n *\n * https://stackoverflow.com/questions/2400935/browser-detection-in-javascript\n */\n\nexport const getBrowserType = function () {\n  let ua = navigator.userAgent;\n  let tem = null;\n  let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\n  if (/trident/i.test(M[1])) {\n    tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n    return 'IE ' + (tem[1] || '');\n  }\n\n  if (M[1] === 'Chrome') {\n    tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n\n    if (tem !== null) {\n      return tem.slice(1).join(' ').replace('OPR', 'Opera');\n    }\n  }\n\n  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n\n  if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n    M.splice(1, 1, tem[1]);\n  }\n\n  return M.join(' ');\n};\n/**\n * Recursive function to find the greatest depth for a given element\n *\n * @param {HTMLElement} elem - Element we want to traverse to find the biggest DOM Depth underneath\n * @param {Integer} level - Current level we are at\n *\n * @returns {Integer} Max depth under a given element\n */\n\nexport const getDomTreeDepth = function (elem, level) {\n  if (!elem.children || elem.children.length === 0) {\n    return level;\n  }\n\n  let max = 0;\n\n  for (let currentChild of elem.children) {\n    let temp = getDomTreeDepth(currentChild, level + 1);\n\n    if (max < temp) {\n      max = temp;\n    }\n  }\n\n  return max;\n};\nexport const getReportAnalytics = function () {\n  return _reportAnalytics;\n};\nexport const setReportAnalytics = function (val) {\n  _reportAnalytics = val;\n};\nexport const setLocationInformation = function (val) {\n  _locationInformation = val;\n};\nexport const getLocationInformation = function () {\n  return _locationInformation;\n};\nexport default {\n  getDomElementsCount,\n  now,\n  isAnalyticsDisabled,\n  logger,\n  isIE,\n  getBrowserType,\n  getDomTreeDepth,\n  getReportAnalytics,\n  setReportAnalytics,\n  setLocationInformation,\n  getLocationInformation\n};","map":{"version":3,"names":["_reportAnalytics","_locationInformation","getDomElementsCount","document","body","getElementsByTagName","length","now","window","performance","Date","isAnalyticsDisabled","optOut","localStorage","getItem","doDisable","logger","log","console","warn","error","isIE","navigator","userAgent","search","getBrowserType","ua","tem","M","match","test","exec","slice","join","replace","appName","appVersion","splice","getDomTreeDepth","elem","level","children","max","currentChild","temp","getReportAnalytics","setReportAnalytics","val","setLocationInformation","getLocationInformation"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/plstats/src/js/splmStatsUtils.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * This utility module provides helpful functions intended to efficiently manipulate pltable contents.\n *\n * @module js/splmStatsUtils\n */\n\nlet _reportAnalytics = false;\nlet _locationInformation = null;\n\n/**\n * @returns {Integer} Number of DOM elements on the page\n */\nexport function getDomElementsCount() {\n    return document.body.getElementsByTagName( '*' ).length;\n}\n\n/**\n * Gets now\n * @returns {DOMHighResTimeStamp} performance.now()\n */\nexport function now() {\n    if( window.performance ) {\n        return window.performance.now();\n    }\n    return Date.now();\n}\n\n/**\n * Checks to see if splmAnalytics are enabled or not\n * @returns {Boolean} Analytics disabled?\n */\nexport function isAnalyticsDisabled() {\n    const optOut = localStorage.getItem( 'AW_SAN_OPTOUT' );\n    const doDisable = localStorage.getItem( 'AW_SAN_DO_DISABLE' );\n    return !( optOut === 'false' && doDisable === 'false' );\n}\n\n// simple impl for logger\nexport const logger = {\n    // eslint-disable-next-line no-console\n    log: console.log,\n    // eslint-disable-next-line no-console\n    warn: console.warn,\n    // eslint-disable-next-line no-console\n    error: console.error\n};\n\n/**\n * Checks if browser is IE. TRUE if browser is IE\n */\nexport const isIE = window.navigator.userAgent.search( /(trident|edge)/i ) > -1;\n\n/**\n * Returns the browser type and the version of that browser as a string\n *\n * https://stackoverflow.com/questions/2400935/browser-detection-in-javascript\n */\nexport const getBrowserType = function() {\n    let ua = navigator.userAgent;\n    let tem = null;\n    let M = ua.match( /(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i ) || [];\n    if( /trident/i.test( M[ 1 ] ) ) {\n        tem = /\\brv[ :]+(\\d+)/g.exec( ua ) || [];\n        return 'IE ' + ( tem[ 1 ] || '' );\n    }\n    if( M[ 1 ] === 'Chrome' ) {\n        tem = ua.match( /\\b(OPR|Edge)\\/(\\d+)/ );\n        if( tem !== null ) {\n            return tem.slice( 1 ).join( ' ' ).replace( 'OPR', 'Opera' );\n        }\n    }\n    M = M[ 2 ] ? [ M[ 1 ], M[ 2 ] ] : [ navigator.appName, navigator.appVersion, '-?' ];\n    if( ( tem = ua.match( /version\\/(\\d+)/i ) ) !== null ) {\n        M.splice( 1, 1, tem[ 1 ] );\n    }\n    return M.join( ' ' );\n};\n\n/**\n * Recursive function to find the greatest depth for a given element\n *\n * @param {HTMLElement} elem - Element we want to traverse to find the biggest DOM Depth underneath\n * @param {Integer} level - Current level we are at\n *\n * @returns {Integer} Max depth under a given element\n */\nexport const getDomTreeDepth = function( elem, level ) {\n    if( !elem.children || elem.children.length === 0 ) {\n        return level;\n    }\n    let max = 0;\n    for( let currentChild of elem.children ) {\n        let temp = getDomTreeDepth( currentChild, level + 1 );\n        if( max < temp ) {\n            max = temp;\n        }\n    }\n    return max;\n};\n\nexport const getReportAnalytics = function() {\n    return _reportAnalytics;\n};\n\nexport const setReportAnalytics = function( val ) {\n    _reportAnalytics = val;\n};\n\nexport const setLocationInformation = function( val ) {\n    _locationInformation = val;\n};\n\nexport const getLocationInformation = function() {\n    return _locationInformation;\n};\n\nexport default {\n    getDomElementsCount,\n    now,\n    isAnalyticsDisabled,\n    logger,\n    isIE,\n    getBrowserType,\n    getDomTreeDepth,\n    getReportAnalytics,\n    setReportAnalytics,\n    setLocationInformation,\n    getLocationInformation\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}