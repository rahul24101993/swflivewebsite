{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwTileIconService.js\";\nimport awIconSvc from 'js/awIconService';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport _ from 'lodash';\nimport { getImageAliasFromId } from 'js/imageRegistry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awTileIconRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  let localProps = { ...prop\n  };\n  let REGEX_THUMBNAIL_TICKET = /\\/|\\\\|%2f|%5c/ig;\n  let imgClass = ['aw-base-icon'];\n  let icon;\n\n  if (prop.icon) {\n    if (prop.primary && prop.primary === 'true') {\n      icon = prop.icon.primaryIcon;\n    } else {\n      icon = prop.icon.secondaryIcon;\n    }\n\n    if (!_.isEmpty(icon)) {\n      if (REGEX_THUMBNAIL_TICKET.test(icon)) {\n        localProps.isThumbnail = true;\n        imgClass.push('aw-tile-thumbnailIcon');\n        localProps.tileIcon = awIconSvc.buildThumbnailFileUrlFromTicket(icon);\n      } else if (icon === '__TYPEICON__' && _.isArray(prop.icon.typeHierarchy)) {\n        localProps.isTypeIcon = true;\n        localProps.tileIcon = awIconSvc.getTypeIconFileUrlForTypeHierarchy(prop.icon.typeHierarchy);\n      } else {\n        // Get the icon contents from the icon service\n        let alias = getImageAliasFromId(icon);\n        let iconId = icon;\n\n        if (!alias) {\n          alias = getImageAliasFromId(`home${icon}`);\n\n          if (alias) {\n            iconId = `home${icon}`;\n          }\n        }\n\n        localProps.tileIcon = iconId;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-tile-icon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-tile-iconContainer aw-layout-flexColumn sw-justify-center\",\n      children: [localProps.tileIcon && !localProps.isThumbnail && !localProps.isTypeIcon && /*#__PURE__*/_jsxDEV(AwIcon, {\n        iconId: localProps.tileIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), (localProps.isThumbnail || localProps.isTypeIcon) && /*#__PURE__*/_jsxDEV(AwPic, {\n        className: imgClass.join(' '),\n        source: localProps.tileIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwTileIconService.js"],"names":["awTileIconRenderFunction","props","prop","localProps","REGEX_THUMBNAIL_TICKET","imgClass","icon","_","awIconSvc","alias","getImageAliasFromId","iconId","tileIcon"],"mappings":";AAAA,OAAA,SAAA,MAAA,kBAAA;AACA,OAAA,KAAA,MAAA,0BAAA;AACA,OAAA,MAAA,MAAA,2BAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,SAAA,mBAAA,QAAA,kBAAA;;AACA,OAAO,MAAMA,wBAAwB,GAAKC,KAAF,IAAa;EACjD,MAAM;IAAA,SAAA;IAAA,MAAA;IAAA,OAAA;IAAA,IAAA;IAAA,MAAA;IAAA,KAAA;IAAA,QAAA;IAAA,QAAA;IASF,GAAGC;EATD,IAAN,KAAA;EAYA,IAAIC,UAAU,GAAG,EAAE,GAAGD;EAAL,CAAjB;EACA,IAAIE,sBAAsB,GAA1B,iBAAA;EACA,IAAIC,QAAQ,GAAG,CAAf,cAAe,CAAf;EACA,IAAA,IAAA;;EAEA,IAAIH,IAAI,CAAR,IAAA,EAAgB;IACZ,IAAIA,IAAI,CAAJA,OAAAA,IAAgBA,IAAI,CAAJA,OAAAA,KAApB,MAAA,EAA8C;MAC1CI,IAAI,GAAGJ,IAAI,CAAJA,IAAAA,CAAPI,WAAAA;IADJ,CAAA,MAEO;MACHA,IAAI,GAAGJ,IAAI,CAAJA,IAAAA,CAAPI,aAAAA;IACH;;IACD,IAAI,CAACC,CAAC,CAADA,OAAAA,CAAL,IAAKA,CAAL,EAAyB;MACrB,IAAIH,sBAAsB,CAAtBA,IAAAA,CAAJ,IAAIA,CAAJ,EAA0C;QACtCD,UAAU,CAAVA,WAAAA,GAAAA,IAAAA;QACAE,QAAQ,CAARA,IAAAA,CAAAA,uBAAAA;QACAF,UAAU,CAAVA,QAAAA,GAAsBK,SAAS,CAATA,+BAAAA,CAAtBL,IAAsBK,CAAtBL;MAHJ,CAAA,MAIO,IAAIG,IAAI,KAAJA,cAAAA,IAA2BC,CAAC,CAADA,OAAAA,CAAWL,IAAI,CAAJA,IAAAA,CAA1C,aAA+BK,CAA/B,EAAsE;QACzEJ,UAAU,CAAVA,UAAAA,GAAAA,IAAAA;QACAA,UAAU,CAAVA,QAAAA,GAAsBK,SAAS,CAATA,kCAAAA,CAA8CN,IAAI,CAAJA,IAAAA,CAApEC,aAAsBK,CAAtBL;MAFG,CAAA,MAGA;QACH;QACA,IAAIM,KAAK,GAAGC,mBAAmB,CAA/B,IAA+B,CAA/B;QACA,IAAIC,MAAM,GAAV,IAAA;;QACA,IAAI,CAAJ,KAAA,EAAa;UACTF,KAAK,GAAGC,mBAAmB,CAAG,OAAMJ,IAApCG,EAA2B,CAA3BA;;UACA,IAAA,KAAA,EAAY;YACRE,MAAM,GAAI,OAAML,IAAhBK,EAAAA;UACH;QACJ;;QACDR,UAAU,CAAVA,QAAAA,GAAAA,MAAAA;MACH;IACJ;EACJ;;EAED,OAAA,aACI,OAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAd,cAAA;IAAA,QAAA,EAAA,aACI,OAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAd,8DAAA;MAAA,QAAA,EAAA,CAEQA,UAAU,CAAVA,QAAAA,IAAuB,CAACA,UAAU,CAAlCA,WAAAA,IAAkD,CAACA,UAAU,CAA7DA,UAAAA,IAAAA,aACJ,OAAA,CAAA,MAAA,EAAA;QAAQ,MAAM,EAAEA,UAAU,CAACS;MAA3B,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EAHJ,IAGI,CAHJ,EAMQ,CAAET,UAAU,CAAVA,WAAAA,IAA0BA,UAAU,CAAtC,UAAA,KAAA,aACJ,OAAA,CAAA,KAAA,EAAA;QAAO,SAAS,EAAEE,QAAQ,CAARA,IAAAA,CAAlB,GAAkBA,CAAlB;QAAwC,MAAM,EAAEF,UAAU,CAACS;MAA3D,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;QAAA,QAAA,EAAA,YAAA;QAAA,UAAA,EAAA,EAAA;QAAA,YAAA,EAAA;MAAA,CAAA,EAPJ,IAOI,CAPJ;IAAA,CAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EAAA,IAAA;EADJ,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADJ,IACI,CADJ;AA/CG,CAAA","sourcesContent":["import awIconSvc from 'js/awIconService';\nimport AwPic from 'viewmodel/AwPicViewModel';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport _ from 'lodash';\nimport { getImageAliasFromId } from 'js/imageRegistry';\nexport const awTileIconRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    let localProps = { ...prop };\n    let REGEX_THUMBNAIL_TICKET = /\\/|\\\\|%2f|%5c/ig;\n    let imgClass = [ 'aw-base-icon' ];\n    let icon;\n\n    if( prop.icon ) {\n        if( prop.primary && prop.primary === 'true' ) {\n            icon = prop.icon.primaryIcon;\n        } else {\n            icon = prop.icon.secondaryIcon;\n        }\n        if( !_.isEmpty( icon ) ) {\n            if( REGEX_THUMBNAIL_TICKET.test( icon ) ) {\n                localProps.isThumbnail = true;\n                imgClass.push( 'aw-tile-thumbnailIcon' );\n                localProps.tileIcon = awIconSvc.buildThumbnailFileUrlFromTicket( icon );\n            } else if( icon === '__TYPEICON__' && _.isArray( prop.icon.typeHierarchy ) ) {\n                localProps.isTypeIcon = true;\n                localProps.tileIcon = awIconSvc.getTypeIconFileUrlForTypeHierarchy( prop.icon.typeHierarchy );\n            } else {\n                // Get the icon contents from the icon service\n                let alias = getImageAliasFromId( icon );\n                let iconId = icon;\n                if( !alias ) {\n                    alias = getImageAliasFromId( `home${icon}` );\n                    if( alias ) {\n                        iconId = `home${icon}`;\n                    }\n                }\n                localProps.tileIcon = iconId;\n            }\n        }\n    }\n\n    return (\n        <div className='aw-tile-icon'>\n            <div className='aw-tile-iconContainer aw-layout-flexColumn sw-justify-center'>\n                {\n                    localProps.tileIcon && !localProps.isThumbnail && !localProps.isTypeIcon &&\n                <AwIcon iconId={localProps.tileIcon}></AwIcon>\n                }\n                {\n                    ( localProps.isThumbnail || localProps.isTypeIcon ) &&\n                <AwPic className={imgClass.join( ' ' )} source={localProps.tileIcon}></AwPic>\n                }\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}