{"ast":null,"code":"// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\n/*\nrender function\n*/\n\nimport { awSplitterRenderFunction } from 'js/AwSplitterService';\n/*\nctx imports\n*/\n\nconst ctxImportObj = {};\n/*\ndynamic import\n */\n\nregisterDynImportEntry('js/AwSplitterService', () => import('js/AwSplitterService'));\nregisterDynImportEntry('js/awSplitterService', () => import('js/awSplitterService'));\n;\n/*\nview model\n */\n\nconst declViewModelJson = {\n  \"schemaVersion\": \"1.0.0\",\n  \"actions\": {\n    \"render\": {\n      \"method\": \"awSplitterRenderFunction\",\n      \"deps\": \"js/AwSplitterService\",\n      \"options\": {\n        \"elementRefList\": [\"splitter\"]\n      }\n    },\n    \"initialize\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"initSplitter\",\n      \"inputData\": {\n        \"elementRefList\": \"{{parameters.elementRefList}}\",\n        \"prop\": \"{{props}}\",\n        \"viewMode\": \"{{ctx.ViewModeContext.ViewModeContext}}\"\n      },\n      \"deps\": \"js/awSplitterService\"\n    },\n    \"updateViewMode\": {\n      \"actionType\": \"JSFunction\",\n      \"method\": \"updateViewMode\",\n      \"inputData\": {\n        \"viewModeKey\": \"{{data.eventMap['appCtx.register'].value.ViewModeContext}}\"\n      },\n      \"outputData\": {\n        \"viewMode\": \"\"\n      },\n      \"deps\": \"js/awSplitterService\"\n    }\n  },\n  \"conditions\": {},\n  \"onEvent\": [{\n    \"eventId\": \"appCtx.register\",\n    \"condition\": \"name === 'ViewModeContext' && value.ViewModeContext && value.ViewModeContext !== 'None'\",\n    \"action\": \"updateViewMode\",\n    \"cacheEventData\": true\n  }],\n  \"lifecycleHooks\": {\n    \"render\": \"render\",\n    \"onMount\": \"initialize\",\n    \"onUpdate\": [{\n      \"action\": \"initialize\",\n      \"observers\": [\"viewModel.data.viewMode\"]\n    }]\n  },\n  \"props\": {\n    \"min-size-1\": {\n      \"type\": \"string\"\n    },\n    \"min-size-2\": {\n      \"type\": \"string\"\n    },\n    \"direction\": {\n      \"type\": \"string\"\n    },\n    \"is-primary-splitter\": {\n      \"type\": \"boolean\"\n    },\n    \"action\": {\n      \"type\": \"action\"\n    }\n  },\n  \"ctx\": {\n    \"ViewModeContext.ViewModeContext\": null\n  },\n  \"_viewModelId\": \"AwSplitter\",\n  \"_uniqueViewModelId\": \"AwSplitter\"\n};\n/*\ndefine component\n*/\n\nconst Component = createComponent(declViewModelJson, awSplitterRenderFunction, {\n  \"elementRefList\": [\"splitter\"]\n}, ctxImportObj);\nexport default Component;","map":{"version":3,"names":["createComponent","registerDynImportEntry","AwParseService","AwFilterService","getField","Fragment","filterSer","instance","awSplitterRenderFunction","ctxImportObj","declViewModelJson","Component"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/viewmodel/AwSplitterViewModel.json"],"sourcesContent":["// Compiler result to JSON file\nimport { createComponent } from 'js/declViewModelService';\nimport { registerDynImportEntry } from 'js/moduleLoader';\nimport AwParseService from 'js/awParseService';\nimport AwFilterService from 'js/awFilterService';\nimport { getField } from 'js/utils';\nimport { Fragment } from 'react';\nlet filterSer = AwFilterService.instance;\n\n\n\n/*\nrender function\n*/\nimport { awSplitterRenderFunction } from 'js/AwSplitterService';\n\n\n/*\nctx imports\n*/\n\nconst ctxImportObj = {  };\n\n\n/*\ndynamic import\n */\nregisterDynImportEntry('js/AwSplitterService', () => import('js/AwSplitterService'));\nregisterDynImportEntry('js/awSplitterService', () => import('js/awSplitterService'));;\n\n/*\nview model\n */\nconst declViewModelJson = {\n    \"schemaVersion\": \"1.0.0\",\n    \"actions\": {\n        \"render\": {\n            \"method\": \"awSplitterRenderFunction\",\n            \"deps\": \"js/AwSplitterService\",\n            \"options\": {\n                \"elementRefList\": [\n                    \"splitter\"\n                ]\n            }\n        },\n        \"initialize\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"initSplitter\",\n            \"inputData\": {\n                \"elementRefList\": \"{{parameters.elementRefList}}\",\n                \"prop\": \"{{props}}\",\n                \"viewMode\": \"{{ctx.ViewModeContext.ViewModeContext}}\"\n            },\n            \"deps\": \"js/awSplitterService\"\n        },\n        \"updateViewMode\": {\n            \"actionType\": \"JSFunction\",\n            \"method\": \"updateViewMode\",\n            \"inputData\": {\n                \"viewModeKey\": \"{{data.eventMap['appCtx.register'].value.ViewModeContext}}\"\n            },\n            \"outputData\": {\n                \"viewMode\": \"\"\n            },\n            \"deps\": \"js/awSplitterService\"\n        }\n    },\n    \"conditions\": {},\n    \"onEvent\": [\n        {\n            \"eventId\": \"appCtx.register\",\n            \"condition\": \"name === 'ViewModeContext' && value.ViewModeContext && value.ViewModeContext !== 'None'\",\n            \"action\": \"updateViewMode\",\n            \"cacheEventData\": true\n        }\n    ],\n    \"lifecycleHooks\": {\n        \"render\": \"render\",\n        \"onMount\": \"initialize\",\n        \"onUpdate\": [\n            {\n                \"action\": \"initialize\",\n                \"observers\": [\n                    \"viewModel.data.viewMode\"\n                ]\n            }\n        ]\n    },\n    \"props\": {\n        \"min-size-1\": {\n            \"type\": \"string\"\n        },\n        \"min-size-2\": {\n            \"type\": \"string\"\n        },\n        \"direction\": {\n            \"type\": \"string\"\n        },\n        \"is-primary-splitter\": {\n            \"type\": \"boolean\"\n        },\n        \"action\": {\n            \"type\": \"action\"\n        }\n    },\n    \"ctx\": {\n        \"ViewModeContext.ViewModeContext\": null\n    },\n    \"_viewModelId\": \"AwSplitter\",\n    \"_uniqueViewModelId\": \"AwSplitter\"\n};\n\n\n\n\n/*\ndefine component\n*/\nconst Component = createComponent( declViewModelJson, awSplitterRenderFunction, {\"elementRefList\":[\"splitter\"]}, ctxImportObj );\n\nexport default Component;"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,yBAAhC;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,IAAIC,SAAS,GAAGH,eAAe,CAACI,QAAhC;AAIA;AACA;AACA;;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AAGA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAGA;AACA;AACA;;AACAR,sBAAsB,CAAC,sBAAD,EAAyB,MAAM,OAAO,sBAAP,CAA/B,CAAtB;AACAA,sBAAsB,CAAC,sBAAD,EAAyB,MAAM,OAAO,sBAAP,CAA/B,CAAtB;AAAqF;AAErF;AACA;AACA;;AACA,MAAMS,iBAAiB,GAAG;EACtB,iBAAiB,OADK;EAEtB,WAAW;IACP,UAAU;MACN,UAAU,0BADJ;MAEN,QAAQ,sBAFF;MAGN,WAAW;QACP,kBAAkB,CACd,UADc;MADX;IAHL,CADH;IAUP,cAAc;MACV,cAAc,YADJ;MAEV,UAAU,cAFA;MAGV,aAAa;QACT,kBAAkB,+BADT;QAET,QAAQ,WAFC;QAGT,YAAY;MAHH,CAHH;MAQV,QAAQ;IARE,CAVP;IAoBP,kBAAkB;MACd,cAAc,YADA;MAEd,UAAU,gBAFI;MAGd,aAAa;QACT,eAAe;MADN,CAHC;MAMd,cAAc;QACV,YAAY;MADF,CANA;MASd,QAAQ;IATM;EApBX,CAFW;EAkCtB,cAAc,EAlCQ;EAmCtB,WAAW,CACP;IACI,WAAW,iBADf;IAEI,aAAa,yFAFjB;IAGI,UAAU,gBAHd;IAII,kBAAkB;EAJtB,CADO,CAnCW;EA2CtB,kBAAkB;IACd,UAAU,QADI;IAEd,WAAW,YAFG;IAGd,YAAY,CACR;MACI,UAAU,YADd;MAEI,aAAa,CACT,yBADS;IAFjB,CADQ;EAHE,CA3CI;EAuDtB,SAAS;IACL,cAAc;MACV,QAAQ;IADE,CADT;IAIL,cAAc;MACV,QAAQ;IADE,CAJT;IAOL,aAAa;MACT,QAAQ;IADC,CAPR;IAUL,uBAAuB;MACnB,QAAQ;IADW,CAVlB;IAaL,UAAU;MACN,QAAQ;IADF;EAbL,CAvDa;EAwEtB,OAAO;IACH,mCAAmC;EADhC,CAxEe;EA2EtB,gBAAgB,YA3EM;EA4EtB,sBAAsB;AA5EA,CAA1B;AAkFA;AACA;AACA;;AACA,MAAMC,SAAS,GAAGX,eAAe,CAAEU,iBAAF,EAAqBF,wBAArB,EAA+C;EAAC,kBAAiB,CAAC,UAAD;AAAlB,CAA/C,EAAgFC,YAAhF,CAAjC;AAEA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}