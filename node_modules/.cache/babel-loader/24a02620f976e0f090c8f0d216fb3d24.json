{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This module provides event building support\n *\n * @module js/awEventHelperService\n */\nimport _ from 'lodash';\nimport browserUtils from 'js/browserUtils';\nlet exports = {};\n/**\n *\n * @param {Object} targetObject - Map for object default and mobile counterpart\n * @param {Object} eventObject - Map for event type to mobile counterpart for all mouseevents click, mousedown, mouseup, etc.\n * @param {Function} eventHandler - handler function, takes event as single argument\n */\n\nexport let subscribeMouseEvent = function (targetObject, eventObject, eventHandler) {\n  _.forEach(Object.keys(eventObject), eventName => {\n    /* Register the event type -> eventHandler */\n    if (targetObject.default.on) {\n      // if jQuery object\n      targetObject.default.on(eventName, eventHandler);\n    } else {\n      // if Element\n      targetObject.default.addEventListener(eventName, eventHandler);\n    }\n    /* If mobile device, make sure the mobile event is bound to desktop event so we catch what we are listening to in mobile */\n\n\n    if (browserUtils.isMobileOS && targetObject.mobile) {\n      var mobileBlurLock = false;\n\n      var mobileHandler = function (mobileEvent) {\n        if (!mobileBlurLock) {\n          mobileEvent.preventDefault();\n          var mouseEvent = document.createEvent('MouseEvent');\n          mouseEvent.initMouseEvent(eventName, true, false, window, 1, mobileEvent.screenX, mobileEvent.screenY, mobileEvent.clientX, mobileEvent.clientY, mobileEvent.ctrlKey, mobileEvent.altKey, mobileEvent.shiftKey, mobileEvent.metaKey, 1, null);\n          mobileEvent.target.dispatchEvent(mouseEvent);\n        }\n\n        mobileBlurLock = false;\n      };\n      /* If user moves while touch or cancels event, cancel the mobile -> default click dispatch for later */\n\n\n      _.forEach(['touchmove', 'touchcancel'], function (blurEvent) {\n        targetObject.mobile[`on${blurEvent}`] = function () {\n          mobileBlurLock = true;\n        };\n      });\n\n      targetObject.mobile[`on${eventObject[eventName]}`] = mobileHandler;\n    }\n  });\n};\nexports = {\n  subscribeMouseEvent\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uielements/src/js/awEventHelperService.js"],"names":["exports","subscribeMouseEvent","_","Object","eventName","targetObject","browserUtils","mobileBlurLock","mobileHandler","mobileEvent","mouseEvent","document","blurEvent","eventObject"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AAEA,IAAIA,OAAO,GAAX,EAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAA,YAAA,EAAA,WAAA,EAAA,YAAA,EAAoD;EACjFC,CAAC,CAADA,OAAAA,CAAWC,MAAM,CAANA,IAAAA,CAAXD,WAAWC,CAAXD,EAAyCE,SAAF,IAAiB;IACpD;IACA,IAAIC,YAAY,CAAZA,OAAAA,CAAJ,EAAA,EAA8B;MAC1B;MACAA,YAAY,CAAZA,OAAAA,CAAAA,EAAAA,CAAAA,SAAAA,EAAAA,YAAAA;IAFJ,CAAA,MAGO;MACH;MACAA,YAAY,CAAZA,OAAAA,CAAAA,gBAAAA,CAAAA,SAAAA,EAAAA,YAAAA;IACH;IACD;;;IACA,IAAIC,YAAY,CAAZA,UAAAA,IAA2BD,YAAY,CAA3C,MAAA,EAAqD;MACjD,IAAIE,cAAc,GAAlB,KAAA;;MACA,IAAIC,aAAa,GAAG,UAAA,WAAA,EAAwB;QACxC,IAAI,CAAJ,cAAA,EAAsB;UAClBC,WAAW,CAAXA,cAAAA;UACA,IAAIC,UAAU,GAAGC,QAAQ,CAARA,WAAAA,CAAjB,YAAiBA,CAAjB;UACAD,UAAU,CAAVA,cAAAA,CAAAA,SAAAA,EAAAA,IAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EACOD,WAAW,CADlBC,OAAAA,EAC4BD,WAAW,CADvCC,OAAAA,EACiDD,WAAW,CAD5DC,OAAAA,EACsED,WAAW,CADjFC,OAAAA,EAEID,WAAW,CAFfC,OAAAA,EAEyBD,WAAW,CAFpCC,MAAAA,EAE6CD,WAAW,CAFxDC,QAAAA,EAEmED,WAAW,CAF9EC,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA;UAIAD,WAAW,CAAXA,MAAAA,CAAAA,aAAAA,CAAAA,UAAAA;QACH;;QACDF,cAAc,GAAdA,KAAAA;MAVJ,CAAA;MAYA;;;MACAL,CAAC,CAADA,OAAAA,CAAW,CAAA,WAAA,EAAXA,aAAW,CAAXA,EAA2C,UAAA,SAAA,EAAsB;QAC7DG,YAAY,CAAZA,MAAAA,CAAsB,KAAIO,SAA1BP,EAAAA,IAA0C,YAAW;UACjDE,cAAc,GAAdA,IAAAA;QADJF,CAAAA;MADJH,CAAAA;;MAKAG,YAAY,CAAZA,MAAAA,CAAsB,KAAIQ,WAAW,CAAA,SAAA,CAArCR,EAAAA,IAAAA,aAAAA;IACH;EA/BLH,CAAAA;AADG,CAAA;AAoCPF,OAAO,GAAG;EACNC;AADM,CAAVD;AAGA,eAAA,OAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This module provides event building support\n *\n * @module js/awEventHelperService\n */\n\nimport _ from 'lodash';\nimport browserUtils from 'js/browserUtils';\n\nlet exports = {};\n\n/**\n *\n * @param {Object} targetObject - Map for object default and mobile counterpart\n * @param {Object} eventObject - Map for event type to mobile counterpart for all mouseevents click, mousedown, mouseup, etc.\n * @param {Function} eventHandler - handler function, takes event as single argument\n */\nexport let subscribeMouseEvent = function( targetObject, eventObject, eventHandler ) {\n    _.forEach( Object.keys( eventObject ), ( eventName ) => {\n        /* Register the event type -> eventHandler */\n        if( targetObject.default.on ) {\n            // if jQuery object\n            targetObject.default.on( eventName, eventHandler );\n        } else {\n            // if Element\n            targetObject.default.addEventListener( eventName, eventHandler );\n        }\n        /* If mobile device, make sure the mobile event is bound to desktop event so we catch what we are listening to in mobile */\n        if( browserUtils.isMobileOS && targetObject.mobile ) {\n            var mobileBlurLock = false;\n            var mobileHandler = function( mobileEvent ) {\n                if( !mobileBlurLock ) {\n                    mobileEvent.preventDefault();\n                    var mouseEvent = document.createEvent( 'MouseEvent' );\n                    mouseEvent.initMouseEvent( eventName, true, false, window,\n                        1, mobileEvent.screenX, mobileEvent.screenY, mobileEvent.clientX, mobileEvent.clientY,\n                        mobileEvent.ctrlKey, mobileEvent.altKey, mobileEvent.shiftKey, mobileEvent.metaKey,\n                        1, null );\n                    mobileEvent.target.dispatchEvent( mouseEvent );\n                }\n                mobileBlurLock = false;\n            };\n            /* If user moves while touch or cancels event, cancel the mobile -> default click dispatch for later */\n            _.forEach( [ 'touchmove', 'touchcancel' ], function( blurEvent ) {\n                targetObject.mobile[ `on${blurEvent}` ] = function() {\n                    mobileBlurLock = true;\n                };\n            } );\n            targetObject.mobile[ `on${eventObject[ eventName ]}` ] = mobileHandler;\n        }\n    } );\n};\n\nexports = {\n    subscribeMouseEvent\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}