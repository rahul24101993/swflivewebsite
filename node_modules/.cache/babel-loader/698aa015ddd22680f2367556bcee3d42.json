{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwTypeIconService.js\";\nimport awIconSvc from 'js/awIconService';\nimport cmm from 'soa/kernel/clientMetaModel';\nimport AwPic from 'viewmodel/AwPicViewModel'; //This component is AW specific, can this be moved to AW\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awTypeIconRenderFn = props => {\n  const {\n    vmo\n  } = props;\n  let typeHierarchy = [];\n\n  if (vmo) {\n    const type = cmm.getType(vmo.uid);\n\n    if (type) {\n      typeHierarchy = type.typeHierarchyArray;\n    } else if (vmo.props && vmo.props.type_name) {\n      typeHierarchy.push(vmo.props.type_name.dbValue);\n      const parentTypes = vmo.props.parent_types.dbValues;\n\n      for (const parentType in parentTypes) {\n        // parentType is of form \"TYPE::Item::Item::WorkspaceObject\"\n        const arr = parentTypes[parentType].split('::');\n        typeHierarchy.push(arr[1]);\n      }\n    }\n  }\n\n  const typeIcon = awIconSvc.getTypeIconFileUrlForTypeHierarchy(typeHierarchy);\n  return /*#__PURE__*/_jsxDEV(AwPic, {\n    className: \"sw-pic-thumbnail\",\n    source: typeIcon,\n    alt: vmo && vmo.props && vmo.props.type_name && vmo.props.type_name.uiValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwTypeIconService.js"],"names":["awTypeIconRenderFn","props","vmo","typeHierarchy","type","cmm","parentTypes","arr","typeIcon","awIconSvc","uiValue"],"mappings":";AAAA,OAAA,SAAA,MAAA,kBAAA;AACA,OAAA,GAAA,MAAA,4BAAA;AACA,OAAA,KAAA,MAAA,0BAAA,C,CAEA;;;AACA,OAAO,MAAMA,kBAAkB,GAAKC,KAAF,IAAa;EAC3C,MAAM;IAAEC;EAAF,IAAN,KAAA;EAEA,IAAIC,aAAa,GAAjB,EAAA;;EACA,IAAA,GAAA,EAAU;IACN,MAAMC,IAAI,GAAGC,GAAG,CAAHA,OAAAA,CAAaH,GAAG,CAA7B,GAAaG,CAAb;;IACA,IAAA,IAAA,EAAW;MACPF,aAAa,GAAGC,IAAI,CAApBD,kBAAAA;IADJ,CAAA,MAEO,IAAID,GAAG,CAAHA,KAAAA,IAAaA,GAAG,CAAHA,KAAAA,CAAjB,SAAA,EAAuC;MAC1CC,aAAa,CAAbA,IAAAA,CAAoBD,GAAG,CAAHA,KAAAA,CAAAA,SAAAA,CAApBC,OAAAA;MACA,MAAMG,WAAW,GAAGJ,GAAG,CAAHA,KAAAA,CAAAA,YAAAA,CAApB,QAAA;;MACA,KAAK,MAAL,UAAA,IAAA,WAAA,EAAuC;QACnC;QACA,MAAMK,GAAG,GAAGD,WAAW,CAAXA,UAAW,CAAXA,CAAAA,KAAAA,CAAZ,IAAYA,CAAZ;QACAH,aAAa,CAAbA,IAAAA,CAAoBI,GAAG,CAAvBJ,CAAuB,CAAvBA;MACH;IACJ;EACJ;;EACD,MAAMK,QAAQ,GAAGC,SAAS,CAATA,kCAAAA,CAAjB,aAAiBA,CAAjB;EAEA,OAAA,aAAO,OAAA,CAAA,KAAA,EAAA;IAAO,SAAS,EAAhB,kBAAA;IAAoC,MAAM,EAA1C,QAAA;IACH,GAAG,EAAEP,GAAG,IAAIA,GAAG,CAAVA,KAAAA,IAAoBA,GAAG,CAAHA,KAAAA,CAApBA,SAAAA,IAA2CA,GAAG,CAAHA,KAAAA,CAAAA,SAAAA,CAAoBQ;EADjE,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EAAP,IAAO,CAAP;AApBG,CAAA","sourcesContent":["import awIconSvc from 'js/awIconService';\nimport cmm from 'soa/kernel/clientMetaModel';\nimport AwPic from 'viewmodel/AwPicViewModel';\n\n//This component is AW specific, can this be moved to AW\nexport const awTypeIconRenderFn = ( props ) => {\n    const { vmo } = props;\n\n    let typeHierarchy = [];\n    if( vmo ) {\n        const type = cmm.getType( vmo.uid );\n        if( type ) {\n            typeHierarchy = type.typeHierarchyArray;\n        } else if( vmo.props && vmo.props.type_name ) {\n            typeHierarchy.push( vmo.props.type_name.dbValue );\n            const parentTypes = vmo.props.parent_types.dbValues;\n            for( const parentType in parentTypes ) {\n                // parentType is of form \"TYPE::Item::Item::WorkspaceObject\"\n                const arr = parentTypes[ parentType ].split( '::' );\n                typeHierarchy.push( arr[ 1 ] );\n            }\n        }\n    }\n    const typeIcon = awIconSvc.getTypeIconFileUrlForTypeHierarchy( typeHierarchy );\n\n    return <AwPic className='sw-pic-thumbnail' source={typeIcon}\n        alt={vmo && vmo.props && vmo.props.type_name && vmo.props.type_name.uiValue} />;\n};\n"]},"metadata":{},"sourceType":"module"}