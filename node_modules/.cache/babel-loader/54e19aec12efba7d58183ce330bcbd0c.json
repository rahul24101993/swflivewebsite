{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * Customizing and overriding functions from (jquery.noty.js)\n *\n * @module js/jquery.noty.customized\n */\nimport $ from 'jquery';\nimport 'noty/jquery.noty';\nimport wcagSvc from 'js/wcagService';\nimport localeSvc from 'js/localeService';\nimport { svgString as CmdPin } from \"image/cmdPin24.svg\";\nimport { svgString as UiClose } from \"image/uiClose12.svg\";\n$.noty.pinnedMessage = [];\n\nvar _iconSvc;\n/**\n * Brings focus on the element after tab press form keyboard\n * related to WCAG work\n * @param {popup} notification message popup\n */\n\n\nvar makeCloseButtonKeyboardAccessible = function (popup) {\n  let closeButton = popup.$closeButton;\n  closeButton.attr('tabindex', '0');\n  closeButton.attr('role', 'button');\n  localeSvc.getLocalizedText('NotyMessages', 'closeNotification').then(function (localizedVal) {\n    closeButton.attr('aria-label', localizedVal);\n    closeButton.attr('data-locator', localizedVal);\n  }).catch(() => {});\n  closeButton.keydown(function (evt) {\n    if (wcagSvc.isValidKeyPress(evt)) {\n      popup.stopPropagation(evt);\n      popup.close();\n    }\n  });\n};\n/**\n * Has user pressed click or enter key on noty message\n *\n * @param {event}\n */\n\n\nvar hasUserClickedOrPressesEnter = function (evt) {\n  return evt.type && evt.type === 'click' || evt.type === 'keydown' && wcagSvc.isValidKeyPress(evt);\n};\n/**\n * @param {Object} notification - notification\n * @returns {Object} notification\n */\n\n\nvar customizedShow = function (notification) {\n  var self = notification; // eslint-disable-line consistent-this\n\n  self.key = new Date().getTime(); // adding new css class if buttons are present\n\n  if (self.options.buttons) {\n    self.$bar.find('.noty_message').addClass('message_with_buttons');\n  }\n\n  self.options.custom ? self.options.custom.find(self.options.layout.container.selector).append(self.$bar) : $(self.options.layout.container.selector).append(self.$bar);\n\n  if (self.options.theme && self.options.theme.style) {\n    self.options.theme.style.apply(self);\n  }\n\n  $.type(self.options.layout.css) === 'function' ? notification.options.layout.css.apply(self.$bar) : self.$bar.css(notification.options.layout.css || {});\n  self.$bar.addClass(self.options.layout.addClass);\n\n  if (!self.options.custom) {\n    // Add the image to pin icon and hide the icon in the beginning\n    self.$closeButton.empty();\n    self.$closeButton.hide();\n\n    if ($.inArray('X', self.options.closeWith) > -1) {\n      self.$closeButton.append(UiClose);\n    } else {\n      self.$closeButton.append(CmdPin);\n    } // following WCAG\n\n\n    makeCloseButtonKeyboardAccessible(self);\n  }\n\n  self.options.layout.container.style.apply($(self.options.layout.container.selector));\n  self.showing = true;\n\n  if (self.options.theme && self.options.theme.style) {\n    self.options.theme.callback.onShow.apply(notification);\n  }\n\n  if ($.inArray('click', self.options.closeWith) > -1) {\n    self.$bar.css('cursor', 'pointer').one('click', function (evt) {\n      self.stopPropagation(evt);\n\n      if (self.options.callback.onCloseClick) {\n        self.options.callback.onCloseClick.apply(self);\n      }\n\n      self.close();\n    });\n  }\n\n  if ($.inArray('hover', self.options.closeWith) > -1) {\n    self.$bar.one('mouseenter', function () {\n      self.close();\n    });\n  }\n\n  if ($.inArray('button', self.options.closeWith) > -1 || $.inArray('X', self.options.closeWith) > -1) {\n    self.$closeButton.one('click', function (evt) {\n      self.stopPropagation(evt);\n      self.close();\n    });\n  } // feature which makes the popup to stay when user clicks on it\n\n\n  if ($.inArray('stayOnClick', self.options.closeWith) > -1) {\n    self.$bar.one('click keydown', function (evt) {\n      // If there is previously pinned message, clear it first\n\n      /* if( $.noty.pinnedMessage !== undefined ) {\n          $.noty.pinnedMessage.close();\n          $.noty.pinnedMessage = undefined;\n      }*/\n      if (hasUserClickedOrPressesEnter(evt)) {\n        $.noty.pinnedMessage.push(self.key);\n        self.stopPropagation(evt); // clear the auto-dismissal of the notifications.\n\n        clearTimeout(self.$timeout);\n        self.isTimeoutActive = false;\n        self.$closeButton.one('click', function (evt) {\n          self.stopPropagation(evt);\n          self.close();\n          var position = $.noty.pinnedMessage.indexOf(self.key); // remove from pinned array\n\n          if (position > -1) {\n            $.noty.pinnedMessage.splice(position, 1);\n          }\n        });\n      }\n    });\n  } // We want $closeButton to still be available because we are using 'stayOnClick' for closeWith option.\n  // When notifications are pinned, the only way to close them would be using the $closeButton click.\n  // Note that $closeButton is jQuery reference to div element with class '.noty_close' defined in the default template.\n  // See $.noty.defaults.template in jquery.noty.js; Override this behavior from default.\n\n\n  if ($.inArray('button', self.options.closeWith) === -1 && $.inArray('X', self.options.closeWith) === -1 && $.inArray('stayOnClick', self.options.closeWith) === -1) {\n    self.$closeButton.remove();\n  }\n\n  if (self.options.callback.onShow) {\n    self.options.callback.onShow.apply(self);\n  }\n\n  self.$bar.animate(self.options.animation.open, self.options.animation.speed, self.options.animation.easing, function () {\n    if (!self.options.custom) {\n      self.$closeButton.show();\n    }\n\n    if (self.options.callback.afterShow) {\n      self.options.callback.afterShow.apply(self);\n    }\n\n    self.showing = false;\n    self.shown = true;\n  }); // If noty is have a timeout option\n\n  if (self.options.timeout) {\n    self.$timeout = setTimeout(function () {\n      self.close();\n    }, self.options.timeout);\n    self.isTimeoutActive = true;\n  } //wcag region violation fix. role='alert' for notifications\n\n\n  let notyBar = self.$bar.find('.noty_bar');\n  notyBar.attr('role', 'alert');\n  notyBar.attr('tabindex', '0');\n  self.$bar.attr('aria-live', 'assertive');\n  notyBar.addClass('noty_msg');\n  let notyContainer = self.$bar[0].parentElement;\n  notyContainer.setAttribute('data-locator', 'noty_bottom_layout_container');\n  return notification;\n};\n/**\n * Create a new child scope based on the document's scope.\n * <P>\n * Note: We do not want to use the 'root' scope for inserting new elements into since it has been shown to not be\n * the one the API is eventually added to (it will be a child of it anyway).\n * <P>\n * Insert and compile directives into notification pop-up\n *\n * @param {Object} notification - notification\n */\n\n\nvar insertCustomElement = function (notification) {\n  if (!notification || !notification.options || !notification.options.messageData || !notification.options.messageData.isCustomElem) {\n    return;\n  }\n  /* revisitme - pengw\n  if( notification && notification.$bar && notification.options.text ) {\n      var docNgElement = ngModule.element( document.body );\n      var docScope = docNgElement.scope();\n       var parentScope = docScope.$new();\n       $( 'ul#noty_bottom_layout_container' ).data( '$scope', parentScope );\n       var parentElement = $( notification.$bar[ 0 ] ).find( 'span.noty_text' );\n       // Create an 'outer' <DIV> (to hold the given 'inner' HTML) and create the angular controller on it.\n      // <P>\n      // Remove any existing 'children' of the given 'parent'\n      // <P>\n      // Add this new element as a 'child' of the given 'parent'\n      var ctrlElement = ngModule.element( '<div class=\"aw-jswidgets-notyContainer\" ></div>' );\n       ctrlElement.html( notification.options.text );\n       if( parentElement ) {\n          $( parentElement ).empty();\n          $( parentElement ).append( ctrlElement );\n      }\n       parentScope.subPanelContext = notification.options.messageData;\n       ngUtils.include( parentElement, ctrlElement );\n  }\n  */\n\n};\n/**\n * Prepare an object like one for aw-popup-panel-2. This is consumed by wcag service to set focus on noty message just like the\n * popup for group commands\n * @param {*} notification\n * @param {parentElement} noty message's first focussable container\n */\n\n\nvar mimicPopupToMakeARefObject = function (parentElement) {\n  return {\n    panelEl: parentElement,\n    options: {\n      reference: parentElement\n    },\n    id: parentElement.id\n  };\n};\n/**\n * Determine if focus is inside the noty msg\n *\n * @param {notification} notification\n */\n\n\nvar isFocusInsideNotyMsg = function (notification) {\n  let msgHTMLcontent = notification.$bar && notification.$bar.parent();\n  let focusedElementsInsideNoty = msgHTMLcontent && msgHTMLcontent.find(document.activeElement);\n  return focusedElementsInsideNoty && focusedElementsInsideNoty.length !== 0;\n};\n/**\n * check if the interaction is happening via keyboard or mouse\n */\n\n\nvar isKeyboardAccessingDOM = function () {\n  return document.body.classList.contains('keyboard');\n};\n/**\n * As soon as noty msg opens up, it should get the focus\n *\n * @param {notification} notification\n */\n\n\nvar grabFocusOnNotyMsg = function (notification) {\n  let removeListeners = [];\n  let elementTriggeringNotyMsg = document.activeElement.parentElement;\n\n  var giveFocusBackToSourceElement = function () {\n    if (isFocusInsideNotyMsg(notification)) {\n      // If a child command trigerrs noty msg then elementTriggeringNotyMsg points to the child command\n      // But on popup closure the parent command gets the focus and hence should be used as elementTriggeringNotyMsg\n      let parentCommand = wcagSvc.getParentOfGroupCmds();\n\n      if (parentCommand) {\n        elementTriggeringNotyMsg = parentCommand;\n        wcagSvc.setParentOfGroupCmds(null);\n      }\n\n      if (isKeyboardAccessingDOM()) {\n        wcagSvc.skipToFirstFocusableElement(elementTriggeringNotyMsg);\n      }\n    }\n\n    removeListeners.forEach(listener => {\n      listener();\n    });\n  };\n\n  notification.options.callback.afterClose = giveFocusBackToSourceElement;\n  let notyParentElement = notification.$bar.parent();\n  wcagSvc.skipToFirstFocusableElement(notyParentElement[0]);\n  let popupRef = mimicPopupToMakeARefObject(notyParentElement[0]);\n  let handlers = wcagSvc.configureAutoFocus(notyParentElement[0], popupRef);\n  removeListeners.push(...handlers.removeHandlers);\n};\n/**\n * overriding show method of '$.notyRenderer'\n *\n * @param {Object} notification - notification\n */\n\n\nexport let show = function (notification) {\n  if (notification.options.modal) {\n    $.notyRenderer.createModalFor(notification);\n    $.notyRenderer.setModalCount(+1);\n  } // Where is the container?\n\n\n  if (notification.options.custom) {\n    if (notification.options.custom.find(notification.options.layout.container.selector).length === 0) {\n      notification.options.custom.append($(notification.options.layout.container.object).addClass('layoutContainer'));\n    } else {\n      notification.options.custom.find(notification.options.layout.container.selector).removeClass('layoutContainer');\n    }\n  } else {\n    if ($(notification.options.layout.container.selector).length === 0) {\n      $('body').append($(notification.options.layout.container.object).addClass('layoutContainer'));\n    } else {\n      $(notification.options.layout.container.selector).removeClass('layoutContainer');\n    }\n  }\n\n  $.notyRenderer.setLayoutCountFor(notification, +1); // customized show method\n\n  customizedShow(notification);\n  grabFocusOnNotyMsg(notification);\n  insertCustomElement(notification);\n};\n$.notyRenderer.show = show;\n/**\n * Fix for 'modal option with custom css theme', which is fixed in release 2.2.2.<br>\n * Remove this once upgraded to Noty 2.2.2\n *\n * @param {Object} notification - notification\n */\n\nexport let createModalFor = function (notification) {\n  if ($('.noty_modal').length === 0) {\n    var modal = $('<div></div>').addClass('noty_modal').addClass(notification.options.theme).data('noty_modal_count', 0);\n\n    if (notification.options.theme.modal && notification.options.theme.modal.css) {\n      modal.css(notification.options.theme.modal.css);\n    }\n\n    modal.prependTo($('body')).fadeIn('fast');\n  }\n};\n$.notyRenderer.createModalFor = createModalFor;\n/**\n * Sets the svg content for the icons - pin and unpin+\n *\n * @param {Object} iconSvc - icon service\n */\n\nexport let setIconService = function (iconSvc) {\n  _iconSvc = iconSvc;\n};\n$.notyRenderer.setIconService = setIconService;\n/**\n * Passthrough method for close.\n *\n */\n\nexport let close = function () {\n  $.noty.clearQueue();\n  $.each($.noty.store, function (id, noty) {\n    if ($.noty.pinnedMessage.indexOf(noty.key) <= -1) {\n      noty.close();\n    }\n  });\n};\n$.notyRenderer.close = close;\n/** **************************************************************************** */\n\n/** Customizing JavaScript for noty bottom layout (bottom.js) * */\n\n/** **************************************************************************** */\n\n$.noty.layouts.bottom = {\n  name: 'bottom',\n  options: {},\n  container: {\n    object: '<ul id=\"noty_bottom_layout_container\" ></ul>',\n    selector: 'ul#noty_bottom_layout_container',\n    style: function () {\n      $(this).css({//\n      });\n    }\n  },\n  parent: {\n    object: '<li ></li>',\n    selector: 'li',\n    css: {}\n  },\n  css: {\n    display: 'none'\n  },\n  addClass: ''\n};\nexport let init = $.notyRenderer.init;\nexport let render = $.notyRenderer.render;\nexport let getModalCount = $.notyRenderer.getModalCount;\nexport let setModalCount = $.notyRenderer.setModalCount;\nexport let getLayoutCountFor = $.notyRenderer.getLayoutCountFor;\nexport let setLayoutCountFor = $.notyRenderer.setLayoutCountFor;\nexport default $.notyRenderer;","map":{"version":3,"names":["$","wcagSvc","localeSvc","noty","pinnedMessage","_iconSvc","makeCloseButtonKeyboardAccessible","popup","closeButton","$closeButton","attr","getLocalizedText","then","localizedVal","catch","keydown","evt","isValidKeyPress","stopPropagation","close","hasUserClickedOrPressesEnter","type","customizedShow","notification","self","key","Date","getTime","options","buttons","$bar","find","addClass","custom","layout","container","selector","append","theme","style","apply","css","empty","hide","inArray","closeWith","UiClose","CmdPin","showing","callback","onShow","one","onCloseClick","push","clearTimeout","$timeout","isTimeoutActive","position","indexOf","splice","remove","animate","animation","open","speed","easing","show","afterShow","shown","timeout","setTimeout","notyBar","notyContainer","parentElement","setAttribute","insertCustomElement","messageData","isCustomElem","mimicPopupToMakeARefObject","panelEl","reference","id","isFocusInsideNotyMsg","msgHTMLcontent","parent","focusedElementsInsideNoty","document","activeElement","length","isKeyboardAccessingDOM","body","classList","contains","grabFocusOnNotyMsg","removeListeners","elementTriggeringNotyMsg","giveFocusBackToSourceElement","parentCommand","getParentOfGroupCmds","setParentOfGroupCmds","skipToFirstFocusableElement","forEach","listener","afterClose","notyParentElement","popupRef","handlers","configureAutoFocus","removeHandlers","modal","notyRenderer","createModalFor","setModalCount","object","removeClass","setLayoutCountFor","data","prependTo","fadeIn","setIconService","iconSvc","clearQueue","each","store","layouts","bottom","name","display","init","render","getModalCount","getLayoutCountFor"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/noty/src/js/jquery.noty.customized.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * Customizing and overriding functions from (jquery.noty.js)\n *\n * @module js/jquery.noty.customized\n */\nimport $ from 'jquery';\nimport 'noty/jquery.noty';\nimport wcagSvc from 'js/wcagService';\nimport localeSvc from 'js/localeService';\nimport { svgString as CmdPin } from 'image/cmdPin24.svg';\nimport { svgString as UiClose } from 'image/uiClose12.svg';\n$.noty.pinnedMessage = [];\n\nvar _iconSvc;\n\n/**\n * Brings focus on the element after tab press form keyboard\n * related to WCAG work\n * @param {popup} notification message popup\n */\nvar makeCloseButtonKeyboardAccessible = function( popup ) {\n    let closeButton = popup.$closeButton;\n    closeButton.attr( 'tabindex', '0' );\n    closeButton.attr( 'role', 'button' );\n    localeSvc.getLocalizedText( 'NotyMessages', 'closeNotification' ).then( function( localizedVal ) {\n        closeButton.attr( 'aria-label', localizedVal );\n        closeButton.attr( 'data-locator', localizedVal );\n    } ).catch( () => {} );\n    closeButton.keydown( function( evt ) {\n        if( wcagSvc.isValidKeyPress( evt ) ) {\n            popup.stopPropagation( evt );\n            popup.close();\n        }\n    } );\n};\n\n/**\n * Has user pressed click or enter key on noty message\n *\n * @param {event}\n */\nvar hasUserClickedOrPressesEnter = function( evt ) {\n    return evt.type &&\n        evt.type === 'click' ||\n        evt.type === 'keydown' && wcagSvc.isValidKeyPress( evt );\n};\n\n/**\n * @param {Object} notification - notification\n * @returns {Object} notification\n */\nvar customizedShow = function( notification ) {\n    var self = notification; // eslint-disable-line consistent-this\n    self.key = new Date().getTime();\n\n    // adding new css class if buttons are present\n    if( self.options.buttons ) {\n        self.$bar.find( '.noty_message' ).addClass( 'message_with_buttons' );\n    }\n\n    self.options.custom ? self.options.custom.find( self.options.layout.container.selector ).append( self.$bar ) : $( self.options.layout.container.selector ).append( self.$bar );\n\n    if( self.options.theme && self.options.theme.style ) {\n        self.options.theme.style.apply( self );\n    }\n\n    $.type( self.options.layout.css ) === 'function' ? notification.options.layout.css.apply( self.$bar ) : self.$bar.css( notification.options.layout.css || {} );\n\n    self.$bar.addClass( self.options.layout.addClass );\n    if( !self.options.custom ) {\n        // Add the image to pin icon and hide the icon in the beginning\n        self.$closeButton.empty();\n        self.$closeButton.hide();\n        if( $.inArray( 'X', self.options.closeWith ) > -1 ) {\n            self.$closeButton.append( UiClose );\n        } else {\n            self.$closeButton.append( CmdPin );\n        }\n        // following WCAG\n        makeCloseButtonKeyboardAccessible( self );\n    }\n\n    self.options.layout.container.style.apply( $( self.options.layout.container.selector ) );\n\n    self.showing = true;\n\n    if( self.options.theme && self.options.theme.style ) {\n        self.options.theme.callback.onShow.apply( notification );\n    }\n\n    if( $.inArray( 'click', self.options.closeWith ) > -1 ) {\n        self.$bar.css( 'cursor', 'pointer' ).one( 'click', function( evt ) {\n            self.stopPropagation( evt );\n            if( self.options.callback.onCloseClick ) {\n                self.options.callback.onCloseClick.apply( self );\n            }\n            self.close();\n        } );\n    }\n\n    if( $.inArray( 'hover', self.options.closeWith ) > -1 ) {\n        self.$bar.one( 'mouseenter', function() {\n            self.close();\n        } );\n    }\n\n    if( $.inArray( 'button', self.options.closeWith ) > -1 ||\n        $.inArray( 'X', self.options.closeWith ) > -1 ) {\n        self.$closeButton.one( 'click', function( evt ) {\n            self.stopPropagation( evt );\n            self.close();\n        } );\n    }\n\n    // feature which makes the popup to stay when user clicks on it\n    if( $.inArray( 'stayOnClick', self.options.closeWith ) > -1 ) {\n        self.$bar.one( 'click keydown', function( evt ) {\n            // If there is previously pinned message, clear it first\n            /* if( $.noty.pinnedMessage !== undefined ) {\n                $.noty.pinnedMessage.close();\n                $.noty.pinnedMessage = undefined;\n            }*/\n\n            if( hasUserClickedOrPressesEnter( evt ) ) {\n                $.noty.pinnedMessage.push( self.key );\n\n                self.stopPropagation( evt );\n\n                // clear the auto-dismissal of the notifications.\n                clearTimeout( self.$timeout );\n                self.isTimeoutActive = false;\n\n                self.$closeButton.one( 'click', function( evt ) {\n                    self.stopPropagation( evt );\n                    self.close();\n                    var position = $.noty.pinnedMessage.indexOf( self.key );\n                    // remove from pinned array\n                    if( position > -1 ) {\n                        $.noty.pinnedMessage.splice( position, 1 );\n                    }\n                } );\n            }\n        } );\n    }\n\n    // We want $closeButton to still be available because we are using 'stayOnClick' for closeWith option.\n    // When notifications are pinned, the only way to close them would be using the $closeButton click.\n    // Note that $closeButton is jQuery reference to div element with class '.noty_close' defined in the default template.\n    // See $.noty.defaults.template in jquery.noty.js; Override this behavior from default.\n    if( $.inArray( 'button', self.options.closeWith ) === -1 &&\n        $.inArray( 'X', self.options.closeWith ) === -1 &&\n        $.inArray( 'stayOnClick', self.options.closeWith ) === -1 ) {\n        self.$closeButton.remove();\n    }\n\n    if( self.options.callback.onShow ) {\n        self.options.callback.onShow.apply( self );\n    }\n\n    self.$bar.animate( self.options.animation.open, self.options.animation.speed, self.options.animation.easing,\n        function() {\n            if( !self.options.custom ) {\n                self.$closeButton.show();\n            }\n            if( self.options.callback.afterShow ) {\n                self.options.callback.afterShow.apply( self );\n            }\n            self.showing = false;\n            self.shown = true;\n        } );\n\n    // If noty is have a timeout option\n    if( self.options.timeout ) {\n        self.$timeout = setTimeout( function() {\n            self.close();\n        }, self.options.timeout );\n        self.isTimeoutActive = true;\n    }\n    //wcag region violation fix. role='alert' for notifications\n    let notyBar = self.$bar.find( '.noty_bar' );\n    notyBar.attr( 'role', 'alert' );\n    notyBar.attr( 'tabindex', '0' );\n    self.$bar.attr( 'aria-live', 'assertive' );\n    notyBar.addClass( 'noty_msg' );\n\n    let notyContainer = self.$bar[ 0 ].parentElement;\n    notyContainer.setAttribute( 'data-locator', 'noty_bottom_layout_container' );\n\n    return notification;\n};\n\n/**\n * Create a new child scope based on the document's scope.\n * <P>\n * Note: We do not want to use the 'root' scope for inserting new elements into since it has been shown to not be\n * the one the API is eventually added to (it will be a child of it anyway).\n * <P>\n * Insert and compile directives into notification pop-up\n *\n * @param {Object} notification - notification\n */\nvar insertCustomElement = function( notification ) {\n    if( !notification || !notification.options || !notification.options.messageData ||\n        !notification.options.messageData.isCustomElem ) {\n        return;\n    }\n\n    /* revisitme - pengw\n    if( notification && notification.$bar && notification.options.text ) {\n        var docNgElement = ngModule.element( document.body );\n        var docScope = docNgElement.scope();\n\n        var parentScope = docScope.$new();\n\n        $( 'ul#noty_bottom_layout_container' ).data( '$scope', parentScope );\n\n        var parentElement = $( notification.$bar[ 0 ] ).find( 'span.noty_text' );\n\n        // Create an 'outer' <DIV> (to hold the given 'inner' HTML) and create the angular controller on it.\n        // <P>\n        // Remove any existing 'children' of the given 'parent'\n        // <P>\n        // Add this new element as a 'child' of the given 'parent'\n        var ctrlElement = ngModule.element( '<div class=\"aw-jswidgets-notyContainer\" ></div>' );\n\n        ctrlElement.html( notification.options.text );\n\n        if( parentElement ) {\n            $( parentElement ).empty();\n            $( parentElement ).append( ctrlElement );\n        }\n\n        parentScope.subPanelContext = notification.options.messageData;\n\n        ngUtils.include( parentElement, ctrlElement );\n    }\n    */\n};\n/**\n * Prepare an object like one for aw-popup-panel-2. This is consumed by wcag service to set focus on noty message just like the\n * popup for group commands\n * @param {*} notification\n * @param {parentElement} noty message's first focussable container\n */\nvar mimicPopupToMakeARefObject = function( parentElement ) {\n    return {\n        panelEl: parentElement,\n        options: {\n            reference: parentElement\n        },\n        id: parentElement.id\n\n    };\n};\n\n/**\n * Determine if focus is inside the noty msg\n *\n * @param {notification} notification\n */\nvar isFocusInsideNotyMsg = function( notification ) {\n    let msgHTMLcontent = notification.$bar && notification.$bar.parent();\n    let focusedElementsInsideNoty = msgHTMLcontent && msgHTMLcontent.find( document.activeElement );\n    return focusedElementsInsideNoty && focusedElementsInsideNoty.length !== 0;\n};\n\n/**\n * check if the interaction is happening via keyboard or mouse\n */\nvar isKeyboardAccessingDOM = function() {\n    return document.body.classList.contains( 'keyboard' );\n};\n\n/**\n * As soon as noty msg opens up, it should get the focus\n *\n * @param {notification} notification\n */\nvar grabFocusOnNotyMsg = function( notification ) {\n    let removeListeners = [];\n    let elementTriggeringNotyMsg = document.activeElement.parentElement;\n\n    var giveFocusBackToSourceElement = function() {\n        if( isFocusInsideNotyMsg( notification ) ) {\n            // If a child command trigerrs noty msg then elementTriggeringNotyMsg points to the child command\n            // But on popup closure the parent command gets the focus and hence should be used as elementTriggeringNotyMsg\n            let parentCommand = wcagSvc.getParentOfGroupCmds();\n            if( parentCommand ) {\n                elementTriggeringNotyMsg = parentCommand;\n                wcagSvc.setParentOfGroupCmds( null );\n            }\n            if( isKeyboardAccessingDOM() ) {\n                wcagSvc.skipToFirstFocusableElement( elementTriggeringNotyMsg );\n            }\n        }\n        removeListeners.forEach( listener => {\n            listener();\n        } );\n    };\n    notification.options.callback.afterClose = giveFocusBackToSourceElement;\n\n    let notyParentElement = notification.$bar.parent();\n    wcagSvc.skipToFirstFocusableElement( notyParentElement[ 0 ] );\n\n    let popupRef = mimicPopupToMakeARefObject( notyParentElement[ 0 ] );\n    let handlers = wcagSvc.configureAutoFocus( notyParentElement[ 0 ], popupRef );\n    removeListeners.push( ...handlers.removeHandlers );\n};\n\n/**\n * overriding show method of '$.notyRenderer'\n *\n * @param {Object} notification - notification\n */\nexport let show = function( notification ) {\n    if( notification.options.modal ) {\n        $.notyRenderer.createModalFor( notification );\n        $.notyRenderer.setModalCount( +1 );\n    }\n\n    // Where is the container?\n    if( notification.options.custom ) {\n        if( notification.options.custom.find( notification.options.layout.container.selector ).length === 0 ) {\n            notification.options.custom.append( $( notification.options.layout.container.object ).addClass(\n                'layoutContainer' ) );\n        } else {\n            notification.options.custom.find( notification.options.layout.container.selector ).removeClass(\n                'layoutContainer' );\n        }\n    } else {\n        if( $( notification.options.layout.container.selector ).length === 0 ) {\n            $( 'body' ).append( $( notification.options.layout.container.object ).addClass( 'layoutContainer' ) );\n        } else {\n            $( notification.options.layout.container.selector ).removeClass( 'layoutContainer' );\n        }\n    }\n\n    $.notyRenderer.setLayoutCountFor( notification, +1 );\n\n    // customized show method\n    customizedShow( notification );\n    grabFocusOnNotyMsg( notification );\n    insertCustomElement( notification );\n};\n$.notyRenderer.show = show;\n\n/**\n * Fix for 'modal option with custom css theme', which is fixed in release 2.2.2.<br>\n * Remove this once upgraded to Noty 2.2.2\n *\n * @param {Object} notification - notification\n */\nexport let createModalFor = function( notification ) {\n    if( $( '.noty_modal' ).length === 0 ) {\n        var modal = $( '<div></div>' ).addClass( 'noty_modal' ).addClass( notification.options.theme ).data(\n            'noty_modal_count', 0 );\n\n        if( notification.options.theme.modal && notification.options.theme.modal.css ) {\n            modal.css( notification.options.theme.modal.css );\n        }\n\n        modal.prependTo( $( 'body' ) ).fadeIn( 'fast' );\n    }\n};\n$.notyRenderer.createModalFor = createModalFor;\n\n/**\n * Sets the svg content for the icons - pin and unpin+\n *\n * @param {Object} iconSvc - icon service\n */\nexport let setIconService = function( iconSvc ) {\n    _iconSvc = iconSvc;\n};\n$.notyRenderer.setIconService = setIconService;\n\n/**\n * Passthrough method for close.\n *\n */\nexport let close = function() {\n    $.noty.clearQueue();\n    $.each( $.noty.store, function( id, noty ) {\n        if( $.noty.pinnedMessage.indexOf( noty.key ) <= -1 ) {\n            noty.close();\n        }\n    } );\n};\n$.notyRenderer.close = close;\n\n/** **************************************************************************** */\n/** Customizing JavaScript for noty bottom layout (bottom.js) * */\n/** **************************************************************************** */\n$.noty.layouts.bottom = {\n    name: 'bottom',\n    options: {},\n    container: {\n        object: '<ul id=\"noty_bottom_layout_container\" ></ul>',\n\n        selector: 'ul#noty_bottom_layout_container',\n\n        style: function() {\n            $( this ).css( {\n                //\n            } );\n        }\n    },\n    parent: {\n        object: '<li ></li>',\n        selector: 'li',\n        css: {}\n    },\n    css: {\n        display: 'none'\n    },\n    addClass: ''\n};\n\nexport let init = $.notyRenderer.init;\nexport let render = $.notyRenderer.render;\n\nexport let getModalCount = $.notyRenderer.getModalCount;\nexport let setModalCount = $.notyRenderer.setModalCount;\n\nexport let getLayoutCountFor = $.notyRenderer.getLayoutCountFor;\nexport let setLayoutCountFor = $.notyRenderer.setLayoutCountFor;\n\nexport default $.notyRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}