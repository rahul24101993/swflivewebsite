{"ast":null,"code":"// Copyright (c) 2022 Siemens\n\n/**\n * Defines the {@link NgServices.narrowModeService}\n *\n * @module js/aw.narrowMode.service\n */\nimport eventBus from 'js/eventBus';\nlet exports;\n/**\n * The narrow mode breakpoint in px\n *\n * @private\n * @member narrowModeBreakPoint\n */\n\nlet narrowModeBreakPoint = 460;\n/**\n * Whether currently in narrow mode\n *\n * @private\n * @member isCurrentlyNarrowMode\n */\n\nlet isCurrentlyNarrowMode = false;\n/**\n * Returns if the user is in narrow mode or not.\n *\n * @function isNarrowMode\n * @return {Boolean} Whether currently in narrow mode\n */\n\nexport let isNarrowMode = function () {\n  return isCurrentlyNarrowMode;\n};\n/**\n * Checks to see if the current width matches the criteria for being in narrow mode\n *\n * @function checkNarrowMode\n * @param {number} windowWidth - Current Browser Window width\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\n\nexport let checkNarrowMode = function () {\n  return setNarrowMode(window.innerWidth <= narrowModeBreakPoint);\n};\n/**\n * Updates the internal cached narrow mode state if different and fires narrowModeChangeEvent.\n *\n * @function setNarrowMode\n * @param {boolean} narrowModeState - true if the criteria has been satisfied for narrow mode; false otherwise\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\n\nvar setNarrowMode = function (narrowModeState) {\n  // Only fire events if mode is different than it was prior\n  if (isCurrentlyNarrowMode !== narrowModeState) {\n    isCurrentlyNarrowMode = narrowModeState;\n    eventBus.publish('narrowModeChangeEvent', {\n      isEnterNarrowMode: isCurrentlyNarrowMode\n    });\n  }\n\n  var narrowModeStyle = '';\n\n  if (isCurrentlyNarrowMode) {\n    narrowModeStyle = 'awRootNarrowMode';\n  }\n\n  return narrowModeStyle;\n};\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowModeChangeEvent\n *\n * @function narrowModeChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\n\n\nexport let narrowModeChange = function (eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle) {\n  var output = {\n    layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n    headerTitle: headerTitle,\n    preNarrowTitle: preNarrowTitle\n  };\n\n  if (!eventData.isEnterNarrowMode) {\n    output.layoutSummaryOnlyStyle = '';\n\n    if (preNarrowTitle) {\n      output.headerTitle = preNarrowTitle;\n      output.preNarrowTitle = null;\n    }\n  }\n\n  return output;\n};\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"gwt.subLocationContentSelectionChangeEvent\"\n *\n * @function subLocationContentSelectionChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @param {object} subLocationTabs - subLocation tabs information\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\n\nexport let subLocationContentSelectionChange = function (eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle, subLocationTabs) {\n  var output = {\n    layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n    headerTitle: headerTitle,\n    preNarrowTitle: preNarrowTitle\n  };\n\n  if (eventData.isPrimaryWorkArea && eventData.haveObjectsSelected && window.innerWidth < 460) {\n    output.layoutSummaryOnlyStyle = 'aw-layout-summaryOnly';\n    var activeTab = subLocationTabs.filter(function (tab) {\n      return tab.selectedTab;\n    })[0];\n\n    if (!activeTab) {\n      activeTab = {\n        name: 'null'\n      };\n    }\n\n    if (preNarrowTitle) {\n      output.headerTitle = preNarrowTitle + ' (' + activeTab.name + ')';\n    } else {\n      output.preNarrowTitle = headerTitle;\n      output.headerTitle = headerTitle + ' (' + activeTab.name + ')';\n    }\n  }\n\n  return output;\n};\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowSummaryLocationTitleClickEvent\"\n *\n * @function narrowSummaryLocationTitleClick\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\n\nexport let narrowSummaryLocationTitleClick = function (layoutSummaryOnlyStyle, headerTitle, preNarrowTitle) {\n  var output = {\n    layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n    headerTitle: headerTitle,\n    preNarrowTitle: preNarrowTitle\n  };\n  output.layoutSummaryOnly = '';\n\n  if (preNarrowTitle) {\n    output.headerTitle = preNarrowTitle;\n    output.preNarrowTitle = null;\n  }\n\n  return output;\n};\n/**\n * Since this module can be loaded as a dependent DUI module we need to return an object indicating which\n * service should be injected to provide the API for this module.\n */\n\nexports = {\n  isNarrowMode,\n  checkNarrowMode,\n  narrowModeChange,\n  subLocationContentSelectionChange,\n  narrowSummaryLocationTitleClick\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/aw.narrowMode.service.js"],"names":["narrowModeBreakPoint","isCurrentlyNarrowMode","isNarrowMode","checkNarrowMode","setNarrowMode","window","eventBus","isEnterNarrowMode","narrowModeStyle","narrowModeChange","output","layoutSummaryOnlyStyle","headerTitle","preNarrowTitle","eventData","subLocationContentSelectionChange","activeTab","tab","name","narrowSummaryLocationTitleClick","exports"],"mappings":"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","sourcesContent":["// Copyright (c) 2022 Siemens\n\n/**\n * Defines the {@link NgServices.narrowModeService}\n *\n * @module js/aw.narrowMode.service\n */\nimport eventBus from 'js/eventBus';\n\nlet exports;\n\n/**\n * The narrow mode breakpoint in px\n *\n * @private\n * @member narrowModeBreakPoint\n */\nlet narrowModeBreakPoint = 460;\n\n/**\n * Whether currently in narrow mode\n *\n * @private\n * @member isCurrentlyNarrowMode\n */\nlet isCurrentlyNarrowMode = false;\n\n/**\n * Returns if the user is in narrow mode or not.\n *\n * @function isNarrowMode\n * @return {Boolean} Whether currently in narrow mode\n */\nexport let isNarrowMode = function() {\n    return isCurrentlyNarrowMode;\n};\n\n/**\n * Checks to see if the current width matches the criteria for being in narrow mode\n *\n * @function checkNarrowMode\n * @param {number} windowWidth - Current Browser Window width\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\nexport let checkNarrowMode = function() {\n    return setNarrowMode( window.innerWidth <= narrowModeBreakPoint );\n};\n\n/**\n * Updates the internal cached narrow mode state if different and fires narrowModeChangeEvent.\n *\n * @function setNarrowMode\n * @param {boolean} narrowModeState - true if the criteria has been satisfied for narrow mode; false otherwise\n * @returns {String} The style to be applied in case of narrowMode. If not in narrowMode, then passes blank.\n */\nvar setNarrowMode = function( narrowModeState ) {\n    // Only fire events if mode is different than it was prior\n    if( isCurrentlyNarrowMode !== narrowModeState ) {\n        isCurrentlyNarrowMode = narrowModeState;\n        eventBus.publish( 'narrowModeChangeEvent', {\n            isEnterNarrowMode: isCurrentlyNarrowMode\n        } );\n    }\n\n    var narrowModeStyle = '';\n    if( isCurrentlyNarrowMode ) {\n        narrowModeStyle = 'awRootNarrowMode';\n    }\n\n    return narrowModeStyle;\n};\n\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowModeChangeEvent\n *\n * @function narrowModeChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\nexport let narrowModeChange = function( eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle ) {\n    var output = {\n        layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n        headerTitle: headerTitle,\n        preNarrowTitle: preNarrowTitle\n    };\n    if( !eventData.isEnterNarrowMode ) {\n        output.layoutSummaryOnlyStyle = '';\n        if( preNarrowTitle ) {\n            output.headerTitle = preNarrowTitle;\n            output.preNarrowTitle = null;\n        }\n    }\n    return output;\n};\n\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"gwt.subLocationContentSelectionChangeEvent\"\n *\n * @function subLocationContentSelectionChange\n * @param {object} eventData - event data for \"narrowModeChangeEvent\" event\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @param {object} subLocationTabs - subLocation tabs information\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\nexport let subLocationContentSelectionChange = function( eventData, layoutSummaryOnlyStyle, headerTitle, preNarrowTitle, subLocationTabs ) {\n    var output = {\n        layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n        headerTitle: headerTitle,\n        preNarrowTitle: preNarrowTitle\n    };\n    if( eventData.isPrimaryWorkArea && eventData.haveObjectsSelected && window.innerWidth < 460 ) {\n        output.layoutSummaryOnlyStyle = 'aw-layout-summaryOnly';\n\n        var activeTab = subLocationTabs.filter( function( tab ) {\n            return tab.selectedTab;\n        } )[ 0 ];\n\n        if( !activeTab ) {\n            activeTab = {\n                name: 'null'\n            };\n        }\n\n        if( preNarrowTitle ) {\n            output.headerTitle = preNarrowTitle + ' (' + activeTab.name + ')';\n        } else {\n            output.preNarrowTitle = headerTitle;\n            output.headerTitle = headerTitle + ' (' + activeTab.name + ')';\n        }\n    }\n    return output;\n};\n\n/**\n * Removes/ Applies the narrowMode's \"layoutSummaryOnlyStyle\" and changes header title on event \"narrowSummaryLocationTitleClickEvent\"\n *\n * @function narrowSummaryLocationTitleClick\n * @param {object} layoutSummaryOnlyStyle - narrowMode's \"layoutSummaryOnlyStyle\" which can be blank or 'aw-layout-summaryOnly'\n * @param {object} headerTitle - title of header\n * @param {object} preNarrowTitle - header title before narrow mode, to be used later\n * @returns {object} The \"layoutSummaryOnlyStyle\", headerTitle and preNarrowTitle\n */\nexport let narrowSummaryLocationTitleClick = function( layoutSummaryOnlyStyle, headerTitle, preNarrowTitle ) {\n    var output = {\n        layoutSummaryOnlyStyle: layoutSummaryOnlyStyle,\n        headerTitle: headerTitle,\n        preNarrowTitle: preNarrowTitle\n    };\n    output.layoutSummaryOnly = '';\n    if( preNarrowTitle ) {\n        output.headerTitle = preNarrowTitle;\n        output.preNarrowTitle = null;\n    }\n    return output;\n};\n\n/**\n * Since this module can be loaded as a dependent DUI module we need to return an object indicating which\n * service should be injected to provide the API for this module.\n */\n\nexports = {\n    isNarrowMode,\n    checkNarrowMode,\n    narrowModeChange,\n    subLocationContentSelectionChange,\n    narrowSummaryLocationTitleClick\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}