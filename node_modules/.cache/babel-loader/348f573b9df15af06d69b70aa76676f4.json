{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * Service for clickable cell titles\n *\n * @module js/clickableTitleService\n */\nimport AwTimeoutService from 'js/awTimeoutService';\nimport configurationSvc from 'js/configurationService';\nimport commandService from 'js/command.service';\n/**\n * clickableTitleService factory\n */\n\nvar exports = {};\nvar timeoutPromise;\nvar isDoubleClick;\n/**\n * Returns whether clickable cell title actions have been configured or not\n *\n * @return {Boolean} true if clickable cell title actions have been configured in the solution def\n */\n\nexport let hasClickableCellTitleActions = function () {\n  return Boolean(exports.getClickableCellTitleActions());\n};\n/**\n * Get the commands configured against different types of clicks from the solution defintion\n * @return {Object} clickableCellTitleActions json object holding command id for different types of clicks\n-*/\n\nexport let getClickableCellTitleActions = function () {\n  var solDef = configurationSvc.getCfgCached('solutionDef');\n  return solDef ? solDef.clickableCellTitleActions : null;\n};\n/**\n * Executes appropriate action on click as configured in clickable cell title actions\n *\n * @param {Object} $event - click event\n * @param {Object} context - additional context to execute the command with\n */\n\nexport let doIt = function ($event, context) {\n  let runActionWithViewModel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if ($event.target.tagName.toLowerCase() === 'a' && $event.target.href !== '') {\n    return;\n  }\n\n  $event.stopPropagation();\n  var event = $event;\n\n  if (timeoutPromise) {\n    AwTimeoutService.instance.cancel(timeoutPromise);\n    isDoubleClick = true;\n  }\n\n  var clickableCellTitleActions = exports.getClickableCellTitleActions();\n  timeoutPromise = AwTimeoutService.instance(function () {\n    // var clickType = isDoubleClick ? 'doubleClick' : event.ctrlKey ? 'ctrlClick' : event.shiftKey ? 'shiftClick' : 'click';\n    var clickType = 'click';\n\n    if (isDoubleClick) {\n      clickType = 'doubleClick';\n    } else if (event.ctrlKey) {\n      clickType = 'ctrlClick';\n    } else if (event.shiftKey) {\n      clickType = 'shiftClick';\n    }\n\n    isDoubleClick = false;\n    timeoutPromise = null; // execute command for click or ctrl click or shift click or double click accordingly\n\n    if (clickableCellTitleActions) {\n      commandService.executeCommand(clickableCellTitleActions[clickType], null, null, context, runActionWithViewModel);\n    }\n  }, 300);\n};\nexports = {\n  hasClickableCellTitleActions,\n  getClickableCellTitleActions,\n  doIt\n};\nexport default exports;","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uiwidget/src/js/clickableTitleService.js"],"names":["exports","hasClickableCellTitleActions","Boolean","getClickableCellTitleActions","solDef","configurationSvc","doIt","runActionWithViewModel","$event","event","AwTimeoutService","isDoubleClick","clickableCellTitleActions","timeoutPromise","clickType","commandService"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAA,gBAAA,MAAA,qBAAA;AACA,OAAA,gBAAA,MAAA,yBAAA;AACA,OAAA,cAAA,MAAA,oBAAA;AAEA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAX,EAAA;AACA,IAAA,cAAA;AACA,IAAA,aAAA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,4BAA4B,GAAG,YAAW;EACjD,OAAOC,OAAO,CAAEF,OAAO,CAAvB,4BAAgBA,EAAF,CAAd;AADG,CAAA;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAIG,4BAA4B,GAAG,YAAW;EACjD,IAAIC,MAAM,GAAGC,gBAAgB,CAAhBA,YAAAA,CAAb,aAAaA,CAAb;EACA,OAAOD,MAAM,GAAGA,MAAM,CAAT,yBAAA,GAAb,IAAA;AAFG,CAAA;AAKP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIE,IAAI,GAAG,UAAA,MAAA,EAAA,OAAA,EAA2D;EAAA,IAAhCC,sBAAgC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,IAAO;;EACzE,IAAIC,MAAM,CAANA,MAAAA,CAAAA,OAAAA,CAAAA,WAAAA,OAAAA,GAAAA,IAA+CA,MAAM,CAANA,MAAAA,CAAAA,IAAAA,KAAnD,EAAA,EAA+E;IAC3E;EACH;;EACDA,MAAM,CAANA,eAAAA;EACA,IAAIC,KAAK,GAAT,MAAA;;EACA,IAAA,cAAA,EAAqB;IACjBC,gBAAgB,CAAhBA,QAAAA,CAAAA,MAAAA,CAAAA,cAAAA;IACAC,aAAa,GAAbA,IAAAA;EACH;;EAED,IAAIC,yBAAyB,GAAGZ,OAAO,CAAvC,4BAAgCA,EAAhC;EACAa,cAAc,GAAG,gBAAgB,CAAhB,QAAA,CAA2B,YAAW;IACnD;IACA,IAAIC,SAAS,GAAb,OAAA;;IACA,IAAA,aAAA,EAAoB;MAChBA,SAAS,GAATA,aAAAA;IADJ,CAAA,MAEO,IAAIL,KAAK,CAAT,OAAA,EAAoB;MACvBK,SAAS,GAATA,WAAAA;IADG,CAAA,MAEA,IAAIL,KAAK,CAAT,QAAA,EAAqB;MACxBK,SAAS,GAATA,YAAAA;IACH;;IACDH,aAAa,GAAbA,KAAAA;IACAE,cAAc,GAXqC,IAWnDA,CAXmD,CAanD;;IACA,IAAA,yBAAA,EAAgC;MAC5BE,cAAc,CAAdA,cAAAA,CAA+BH,yBAAyB,CAAxDG,SAAwD,CAAxDA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,OAAAA,EAAAA,sBAAAA;IACH;EAhBY,CAAA,EAAjBF,GAAiB,CAAjBA;AAZG,CAAA;AAgCPb,OAAO,GAAG;EAAA,4BAAA;EAAA,4BAAA;EAGNM;AAHM,CAAVN;AAKA,eAAA,OAAA","sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * Service for clickable cell titles\n *\n * @module js/clickableTitleService\n */\nimport AwTimeoutService from 'js/awTimeoutService';\nimport configurationSvc from 'js/configurationService';\nimport commandService from 'js/command.service';\n\n/**\n * clickableTitleService factory\n */\n\nvar exports = {};\nvar timeoutPromise;\nvar isDoubleClick;\n\n/**\n * Returns whether clickable cell title actions have been configured or not\n *\n * @return {Boolean} true if clickable cell title actions have been configured in the solution def\n */\n\nexport let hasClickableCellTitleActions = function() {\n    return Boolean( exports.getClickableCellTitleActions() );\n};\n\n/**\n * Get the commands configured against different types of clicks from the solution defintion\n * @return {Object} clickableCellTitleActions json object holding command id for different types of clicks\n-*/\nexport let getClickableCellTitleActions = function() {\n    var solDef = configurationSvc.getCfgCached( 'solutionDef' );\n    return solDef ? solDef.clickableCellTitleActions : null;\n};\n\n/**\n * Executes appropriate action on click as configured in clickable cell title actions\n *\n * @param {Object} $event - click event\n * @param {Object} context - additional context to execute the command with\n */\nexport let doIt = function( $event, context, runActionWithViewModel = null ) {\n    if( $event.target.tagName.toLowerCase() === 'a' && $event.target.href !== '' ) {\n        return;\n    }\n    $event.stopPropagation();\n    var event = $event;\n    if( timeoutPromise ) {\n        AwTimeoutService.instance.cancel( timeoutPromise );\n        isDoubleClick = true;\n    }\n\n    var clickableCellTitleActions = exports.getClickableCellTitleActions();\n    timeoutPromise = AwTimeoutService.instance( function() {\n        // var clickType = isDoubleClick ? 'doubleClick' : event.ctrlKey ? 'ctrlClick' : event.shiftKey ? 'shiftClick' : 'click';\n        var clickType = 'click';\n        if( isDoubleClick ) {\n            clickType = 'doubleClick';\n        } else if( event.ctrlKey ) {\n            clickType = 'ctrlClick';\n        } else if( event.shiftKey ) {\n            clickType = 'shiftClick';\n        }\n        isDoubleClick = false;\n        timeoutPromise = null;\n\n        // execute command for click or ctrl click or shift click or double click accordingly\n        if( clickableCellTitleActions ) {\n            commandService.executeCommand( clickableCellTitleActions[ clickType ], null, null, context, runActionWithViewModel );\n        }\n    }, 300 );\n};\n\nexports = {\n    hasClickableCellTitleActions,\n    getClickableCellTitleActions,\n    doIt\n};\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}