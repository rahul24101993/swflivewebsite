{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-disable indent */\nimport sessionMgr from 'js/sessionManager.service';\nimport routeChangeHandler from 'js/routeChangeHandler';\n/**\n * This is the uiJs layer route/state contribution.\n *\n * @module js/ui.states\n */\n\nvar contribution = {\n  // route to deal with handling checks for authentication.\n  checkAuthentication: {\n    view: 'Login',\n    noAuth: true,\n    resolve: [{\n      token: 'authenticator',\n      resolveFn: () => {\n        return routeChangeHandler.pickAuthenticator().then(authenticator => {\n          if (authenticator) {\n            sessionMgr.resetPipeLine();\n            authenticator.authenticate().then(function () {\n              sessionMgr.authenticationSuccessful();\n            });\n          }\n        });\n      }\n    }]\n  }\n};\n/**\n * @param {String} key - The key\n * @param {Promise} deferred - Promise\n * @returns {Object} contribution\n */\n\nexport default function (key, deferred) {\n  if (key === 'states') {\n    if (deferred) {\n      deferred.resolve(contribution);\n    } else {\n      return contribution;\n    }\n  } else {\n    if (deferred) {\n      deferred.resolve();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/ui.states.js"],"names":["contribution","checkAuthentication","view","noAuth","resolve","token","resolveFn","authenticator","sessionMgr","key","deferred"],"mappings":"AAAA;;AACA;AAEA,OAAA,UAAA,MAAA,2BAAA;AACA,OAAA,kBAAA,MAAA,uBAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,YAAY,GAAG;EACf;EACAC,mBAAmB,EAAE;IACjBC,IAAI,EADa,OAAA;IAEjBC,MAAM,EAFW,IAAA;IAGjBC,OAAO,EAAE,CAAE;MACPC,KAAK,EADE,eAAA;MAEPC,SAAS,EAAE,MAAM;QACb,OAAO,kBAAkB,CAAlB,iBAAA,GAAA,IAAA,CAA+CC,aAAF,IAAqB;UACrE,IAAA,aAAA,EAAoB;YAChBC,UAAU,CAAVA,aAAAA;YACAD,aAAa,CAAbA,YAAAA,GAAAA,IAAAA,CAAmC,YAAW;cAC1CC,UAAU,CAAVA,wBAAAA;YADJD,CAAAA;UAGH;QANL,CAAO,CAAP;MAQH;IAXM,CAAF;EAHQ;AAFN,CAAnB;AAqBA;AACA;AACA;AACA;AACA;;AACA,eAAe,UAAA,GAAA,EAAA,QAAA,EAA0B;EACrC,IAAIE,GAAG,KAAP,QAAA,EAAuB;IACnB,IAAA,QAAA,EAAe;MACXC,QAAQ,CAARA,OAAAA,CAAAA,YAAAA;IADJ,CAAA,MAEO;MACH,OAAA,YAAA;IACH;EALL,CAAA,MAMO;IACH,IAAA,QAAA,EAAe;MACXA,QAAQ,CAARA,OAAAA;IACH;EACJ;AACJ","sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-disable indent */\n\nimport sessionMgr from 'js/sessionManager.service';\nimport routeChangeHandler from 'js/routeChangeHandler';\n/**\n * This is the uiJs layer route/state contribution.\n *\n * @module js/ui.states\n */\n\nvar contribution = {\n    // route to deal with handling checks for authentication.\n    checkAuthentication: {\n        view: 'Login',\n        noAuth: true,\n        resolve: [ {\n            token: 'authenticator',\n            resolveFn: () => {\n                return routeChangeHandler.pickAuthenticator().then( ( authenticator ) => {\n                    if( authenticator ) {\n                        sessionMgr.resetPipeLine();\n                        authenticator.authenticate().then( function() {\n                            sessionMgr.authenticationSuccessful();\n                        } );\n                    }\n                } );\n            }\n        } ]\n    }\n};\n\n/**\n * @param {String} key - The key\n * @param {Promise} deferred - Promise\n * @returns {Object} contribution\n */\nexport default function( key, deferred ) {\n    if( key === 'states' ) {\n        if( deferred ) {\n            deferred.resolve( contribution );\n        } else {\n            return contribution;\n        }\n    } else {\n        if( deferred ) {\n            deferred.resolve();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}