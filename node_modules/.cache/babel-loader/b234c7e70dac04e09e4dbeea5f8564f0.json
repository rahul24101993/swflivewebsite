{"ast":null,"code":"// Copyright (c) 2020 Siemens\n/* eslint-env es6 */ /**\n * This utility module provides helpful functions for table column content.\n *\n * @module js/splmTableMenuUtility\n */import _ from'lodash';import eventBus from'js/eventBus';import appCtxService from'js/appCtxService';import localeService from'js/localeService';import messagingService from'js/messagingService';var exports={};exports.columnSortChanged=(gridId,columnDef,gridContextDispatcher,sortDirection,currentColumnIndex,isBulkEditing,columnProvider)=>{if(isBulkEditing){return;}var newColumnIdx=columnDef.index;var columnField=columnDef.field;var targetDirection=sortDirection;if(columnProvider.sortCriteria&&columnProvider.sortCriteria.length>0){var oldSortCriteria=columnProvider.sortCriteria[0];if(currentColumnIndex===newColumnIdx&&oldSortCriteria.fieldName===columnField&&oldSortCriteria.sortDirection.toUpperCase()===sortDirection.toUpperCase()){return;}}if(!columnProvider.sortCriteria){columnProvider.sortCriteria=[];}else{columnProvider.sortCriteria.pop();}if(targetDirection!==''){columnProvider.sortCriteria.push({fieldName:columnField,sortDirection:targetDirection});}// revisitme tstark set the focusHeader\n// tstark - leave for refactor\n// tableElement._tableInstance.focusHeader = columnField;\n// Sets sort criteria on declColumnProviderJSON\ncolumnProvider.setSortCriteria(columnProvider.sortCriteria);// Update sort criteria in sublocation context\nvar sublocationCtx=appCtxService.getCtx('sublocation');if(sublocationCtx){// LCS-137109 - Sorting new AW table elements by column not working\n// Copy columnProvider.sortCriteria instead of using reference\nlet sortCriteria=_.clone(columnProvider.sortCriteria);appCtxService.updatePartialCtx(sublocationCtx.clientScopeURI+'.sortCriteria',sortCriteria);appCtxService.updatePartialCtx('sublocation.sortCriteria',sortCriteria);}// revisitme tstark call setHeaderCellSortDirection\n// tstark - leave for refactor\n// tableCtrl.setHeaderCellSortDirection( currentColumnIndex, newColumnIdx, targetDirection );\nif(gridContextDispatcher){gridContextDispatcher({type:'UPDATE_VALUES',newColumnIndex:newColumnIdx,sortDirection:targetDirection,currentColumnIndex:currentColumnIndex});}};exports.closeColumnMenu=popupRef=>{if(popupRef){popupRef.hide();}};exports.setFilterDisability=function(gridId,isDisabled){var filterButtonElement=document.querySelector('.'+gridId+'_menu .filter-button');if(filterButtonElement){if(isDisabled){filterButtonElement.classList.add('disabled');}else{filterButtonElement.classList.remove('disabled');}}};/**\n * Determines if server is available, calls function to hide the column based on columnDef\n * @param {AwColumnInfo} columnDef - The column Def\n * @param {Object} gridContextDispatcher - dispatcher for table\n */exports.hideColumn=function(columnDef,gridContextDispatcher){if(gridContextDispatcher&&columnDef){gridContextDispatcher({type:'UPDATE_VALUES',hideColumnField:columnDef.field});}};exports.freezeColumn=function(gridId,columnDef,isFreezeAction,defaultColumnPinIndex,gridContextDispatcher){if(gridContextDispatcher){let pinColumnData={};pinColumnData.columnDef=columnDef;pinColumnData.isFreezeAction=isFreezeAction;pinColumnData.defaultColumnPinIndex=defaultColumnPinIndex;gridContextDispatcher({type:'UPDATE_VALUES',pinColumnData:pinColumnData});}};exports.toggleDynamicRowHeight=function(gridContextDispatcher,dynamicRowHeightStatus){if(gridContextDispatcher){gridContextDispatcher({type:'UPDATE_VALUES',dynamicRowHeightStatus:!dynamicRowHeightStatus});}};export default exports;","map":null,"metadata":{},"sourceType":"module"}