{"ast":null,"code":"/* eslint-disable complexity */\n// Copyright (c) 2020 Siemens\nimport { interopES6Default } from './utils';\nimport { registerDynImportEntry } from 'js/moduleLoader';\n/**\n * parse return value webpack.require.context to module object array\n * @param {Array} imports module structure return by webpack.require.context API\n * @returns {Object} module object array\n */\n\nconst parseImports = imports => imports.reduce((res, m) => res.concat(m.keys().map(path => ({\n  name: path,\n  loadFn: async () => interopES6Default(await m(path))\n}))), []);\n/**\n * view model loader for aw-include and other usage\n *\n * @module js/viewModelLoaderService\n *\n * @namespace viewModelLoader\n */\n\n\nconst init = () => {\n  // this method will be used by build time injected code\n  const registerViewModels = imports => {\n    const modules = parseImports(imports);\n    modules.forEach(m => {\n      const moduleName = m.name.replace(/^.*[\\\\/](viewmodel[\\\\/][^\\\\//]*ViewModel)\\.json$/, '$1');\n      registerDynImportEntry(moduleName, m.loadFn);\n    });\n  }; // AFX_VIEW_MODEL_REGISTRATION\n\n\n  registerViewModels([require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src', true, /(gaps|appbootstrap|config|services|kernel|declreact|layout|noty|popup|popuplegacy|pltable|propertyrender|uielements|uiwidget|declarativeui|ui|plstats|components|pagelevelcomponents|commonframe|command|i18n|tile|searchcore)[\\\\/]src[\\\\/](assets[\\\\/])?viewmodel[\\\\/][^\\\\/]*ViewModel\\.json$/, 'lazy'), require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/src', true, /(helloModule|solution)[\\\\/]src[\\\\/](assets[\\\\/])?viewmodel[\\\\/][^\\\\/]*ViewModel\\.json$/, 'lazy')]);\n}; // pre-load view model for dynamic import\n\n\ninit();","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/config/src/js/viewModelLoaderService.js"],"names":["parseImports","imports","path","name","loadFn","interopES6Default","m","init","registerViewModels","modules","moduleName","registerDynImportEntry","require"],"mappings":"AAAA;AACA;AAEA,SAAA,iBAAA,QAAA,SAAA;AACA,SAAA,sBAAA,QAAA,iBAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMA,YAAY,GAAGC,OAAO,IAAI,OAAO,CAAP,MAAA,CAAgB,CAAA,GAAA,EAAA,CAAA,KAC5C,GAAG,CAAH,MAAA,CAAY,CAAC,CAAD,IAAA,GAAA,GAAA,CAAcC,IAAI,KAAM;EAChCC,IAAI,EAD4B,IAAA;EAEhCC,MAAM,EAAE,YAAYC,iBAAiB,CAAE,MAAMC,CAAC,CAAT,IAAS,CAAT;AAFL,CAAN,CAAlB,CAAZ,CAD4B,EAAhC,EAAgC,CAAhC;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAG,MAAM;EACf;EACA,MAAMC,kBAAkB,GAAKP,OAAF,IAAe;IACtC,MAAMQ,OAAO,GAAGT,YAAY,CAA5B,OAA4B,CAA5B;IACAS,OAAO,CAAPA,OAAAA,CAAmBH,CAAF,IAAS;MACtB,MAAMI,UAAU,GAAGJ,CAAC,CAADA,IAAAA,CAAAA,OAAAA,CAAAA,kDAAAA,EAAnB,IAAmBA,CAAnB;MACAK,sBAAsB,CAAA,UAAA,EAAcL,CAAC,CAArCK,MAAsB,CAAtBA;IAFJF,CAAAA;EAJW,CAEf,CAFe,CASf;;;EACAD,kBAAkB,CAAE,CAChBI,OAAO,CAAPA,OAAAA,CAAAA,uFAAAA,EAAAA,IAAAA,EAAAA,gSAAAA,EADgB,MAChBA,CADgB,EACwYA,OAAO,CAAPA,OAAAA,CAAAA,gEAAAA,EAAAA,IAAAA,EAAAA,wFAAAA,EAD5ZJ,MAC4ZI,CADxY,CAAF,CAAlBJ;AAVJ,CAAA,C,CAeA;;;AACAD,IAAI","sourcesContent":["/* eslint-disable complexity */\n// Copyright (c) 2020 Siemens\n\nimport { interopES6Default } from './utils';\nimport { registerDynImportEntry } from 'js/moduleLoader';\n\n/**\n * parse return value webpack.require.context to module object array\n * @param {Array} imports module structure return by webpack.require.context API\n * @returns {Object} module object array\n */\nconst parseImports = imports => imports.reduce( ( res, m ) =>\n    res.concat( m.keys().map( path => ( {\n        name: path,\n        loadFn: async () => interopES6Default( await m( path ) )\n    } ) ) ), [] );\n\n/**\n * view model loader for aw-include and other usage\n *\n * @module js/viewModelLoaderService\n *\n * @namespace viewModelLoader\n */\nconst init = () => {\n    // this method will be used by build time injected code\n    const registerViewModels = ( imports ) => {\n        const modules = parseImports( imports );\n        modules.forEach( ( m ) => {\n            const moduleName = m.name.replace( /^.*[\\\\/](viewmodel[\\\\/][^\\\\//]*ViewModel)\\.json$/, '$1' );\n            registerDynImportEntry( moduleName, m.loadFn );\n        } );\n    };\n    // AFX_VIEW_MODEL_REGISTRATION\n    registerViewModels( [\n        require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src',true,/(gaps|appbootstrap|config|services|kernel|declreact|layout|noty|popup|popuplegacy|pltable|propertyrender|uielements|uiwidget|declarativeui|ui|plstats|components|pagelevelcomponents|commonframe|command|i18n|tile|searchcore)[\\\\/]src[\\\\/](assets[\\\\/])?viewmodel[\\\\/][^\\\\/]*ViewModel\\.json$/, 'lazy' ),require.context('C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/src',true,/(helloModule|solution)[\\\\/]src[\\\\/](assets[\\\\/])?viewmodel[\\\\/][^\\\\/]*ViewModel\\.json$/, 'lazy' )\n    ] );\n};\n\n// pre-load view model for dynamic import\ninit();\n"]},"metadata":{},"sourceType":"module"}