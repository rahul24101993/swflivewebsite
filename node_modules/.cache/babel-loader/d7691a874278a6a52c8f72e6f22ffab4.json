{"ast":null,"code":"// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from'viewmodel/AwPropertyNonEditValViewModel';import AwPropertyLovVal from'viewmodel/AwPropertyLovValViewModel';import sanitizer from'js/sanitizer';import{getValClass}from'js/componentUtils';import{jsx as _jsx}from\"react/jsx-runtime\";export const awDoubleValRenderFunction=props=>{const{viewModel,ctxMin,actions,i18n,fields,grids,formProp,messages,...prop}=props;// use simple non-edit val if not editing\nif(!prop.fielddata.isEditable){return/*#__PURE__*/_jsx(AwPropertyNonEditVal,{...prop});}let sanitizedProps=sanitizer.sanitizeHTMLTagProps(prop,'input');const inputClass=getValClass(props);var handleChange=event=>{if(prop.typex==='DOUBLEARRAY'){let newVal=event.target.value.replace(/[^\\+|\\-|0-9\\.|e]/g,'');event.target.value=newVal;}};var keyPressed=event=>{if(event.key==='Enter'||event.type==='blur'&&prop.typex==='DOUBLEARRAY'){event.preventDefault();prop.onChange(event);event.target.value='';}};if(prop.fielddata.renderingHint==='label'){return/*#__PURE__*/_jsx(AwPropertyNonEditVal,{...prop});}else if(!prop.fielddata.renderingHint&&prop.fielddata.hasLov){return/*#__PURE__*/_jsx(AwPropertyLovVal,{...prop,onChange:handleChange});}else if(prop.typex==='DOUBLEARRAY'){return/*#__PURE__*/_jsx(\"input\",{type:\"text\",maxLength:prop.maxLength,\"data-locator\":prop.label,\"aria-required\":prop.isRequired,placeholder:prop.placeholder,className:inputClass,onChange:handleChange,onKeyPress:keyPressed,onBlur:keyPressed});}return/*#__PURE__*/_jsx(\"input\",{...sanitizedProps,className:inputClass,type:\"text\",autoComplete:\"off\"});};","map":null,"metadata":{},"sourceType":"module"}