{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListItemService.js\";\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n/* eslint-disable react/jsx-no-undef */\n\n/* eslint-disable @swf/swf/no-react-usage */\n\nimport { handleSelectionEvent } from 'js/selectionHelper';\nimport { getListItemClasses } from 'js/componentUtils';\nimport { mapChildren } from 'js/reactHelper';\nimport AwListCheckboxItem from 'viewmodel/AwListCheckboxItemViewModel';\nimport AwStaticListCommand from 'viewmodel/AwStaticListCommandViewModel';\nimport wcagSvc from 'js/wcagService';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const awListItemRenderFunction = props => {\n  const {\n    item,\n    index,\n    dataprovider,\n    ownCellCommands,\n    showCellCommandsAlways,\n    children,\n    showCheckbox,\n    listOptions,\n    itemOptions,\n    fixedCellHeight,\n    isGroupList,\n    hasFloatingCellCommands,\n    menuContext,\n    listItemRole,\n    viewModel,\n    elementRefList,\n    handleDragAndDrop,\n    context,\n    doubleClickAction\n  } = props;\n  const {\n    data,\n    dispatch\n  } = viewModel;\n  const cellDecoratorClass = props.showDecorators ? 'aw-widgets-showCellDecorator' : '';\n  const groupHeader = elementRefList.get('groupHeader');\n  let vmCollectionObj = dataprovider.vmCollectionObj;\n  let loadedVMO = vmCollectionObj.vmCollection.loadedVMObjects;\n  const selectionEnabled = dataprovider.selectionModel.isSelectionEnabled();\n  const selectionModelActivated = dataprovider.selectionModel.isSelectionModelActivated();\n\n  const handleSelection = (event, vmo) => {\n    if (dataprovider.selectionModel.isSelectionEnabled()) {\n      handleSelectionEvent([vmo], dataprovider.selectionModel, event, vmCollectionObj.vmCollection);\n    }\n\n    if (listOptions && listOptions.selectionHandler) {\n      listOptions.selectionHandler(vmo);\n    }\n  }; // uxt6xo: revisit me: Double click event is needed for Arrange panel; need to find best way of implementing.\n\n\n  const handleDoubleClick = (event, vmo) => {\n    doubleClickAction && doubleClickAction({\n      eventTargetObjs: [vmo]\n    });\n    eventBus.publish(dataprovider.name + '.listDoubleClick', {\n      eventTargetObjs: [vmo]\n    });\n  };\n\n  const handleDrag = (event, dItem) => {\n    handleDragAndDrop.drag(event, dItem);\n  };\n\n  const handleDrop = (event, dItem) => {\n    handleDragAndDrop.drop(event, dItem);\n  };\n\n  const handleKeyDown = (event, vmo) => {\n    // ignore case keydown on other element\n    if (event.target.tagName !== 'LI') {\n      return;\n    }\n\n    if (wcagSvc.isValidKeyPress(event)) {\n      handleSelection(event, vmo);\n    } else if (listItemRole === undefined) {\n      wcagSvc.handleMoveUpOrDown(event, event.currentTarget.parentElement.parentElement);\n    }\n  }; // zarq9k: revisit me: This is to avoid react warning. onChange={()=> {} is wrong, we  got to remove this.\n\n\n  const renderChildWithItem = (item, showCheckbox, isSelected, index) => {\n    let props = {\n      item,\n      index,\n      isSelected,\n      options: itemOptions,\n      key: index,\n      tabIndex: -1\n    };\n\n    if (isGroupList) {\n      props.parent = groupHeader.current;\n      props.previousItem = loadedVMO[index - 1];\n    }\n\n    let candidate = _.concat([], children);\n\n    if (ownCellCommands) {\n      if (showCellCommandsAlways || // always\n      data._showCellCommand || item.selected // load on demand\n      ) {\n        let cellCommand = processFloatingCellCommand(item, index, itemOptions, fixedCellHeight, isGroupList);\n        candidate = _.concat(candidate, cellCommand);\n      }\n    }\n\n    let child = mapChildren(candidate, props);\n\n    if (showCheckbox === true) {\n      return /*#__PURE__*/_createElement(AwListCheckboxItem, { ...props,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }\n      }, child);\n    }\n\n    return child;\n  }; // parse fixedCellHeight if any\n\n\n  const getStyle = () => {\n    if (!fixedCellHeight) {\n      return;\n    }\n\n    const height = parseInt(fixedCellHeight);\n    return {\n      style: {\n        height\n      }\n    };\n  };\n\n  const processFloatingCellCommand = (item, index, itemOptions, fixedCellHeight, isGroupList) => {\n    const props = {\n      item,\n      index,\n      itemOptions,\n      fixedCellHeight,\n      isGroupList,\n      dataprovider,\n      context\n    };\n    return /*#__PURE__*/_createElement(AwStaticListCommand, { ...props,\n      selectedObjects: dataprovider.selectedObjects,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }\n    });\n  };\n\n  const checkSelected = item => {\n    if (listOptions && listOptions.selectionCheck) {\n      return listOptions.selectionCheck(item);\n    }\n\n    return dataprovider.selectionModel.isSelected(item);\n  };\n\n  const keepCellCommands = event => {\n    // Do not remove the cell commands,\n    // case1: if moving using tab on the list item\n    // case2: if moving to noty_msg\n    // case3: if clicking on a cell command\n    let result = false;\n\n    if (event.type === 'blur' && data._showCellCommand && event.relatedTarget) {\n      if (['BUTTON', 'A'].indexOf(event.relatedTarget.tagName) > -1 || event.relatedTarget.className && event.relatedTarget.className.indexOf('noty_msg') > -1 || event.relatedTarget.tagName === 'LI' && event.relatedTarget.attributes['data-command-id']) {\n        result = true;\n      }\n    }\n\n    return result;\n  };\n\n  const toggleHovered = (event, flag) => {\n    if (!ownCellCommands) {\n      return;\n    }\n\n    if (keepCellCommands(event)) {\n      return;\n    }\n\n    if (data._showCellCommand !== flag) {\n      dispatch({\n        path: 'data._showCellCommand',\n        value: flag\n      });\n    }\n  };\n\n  const processCellItem = (item, index) => {\n    const isSelected = checkSelected(item);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isGroupList && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: groupHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }, this), \" \", handleDragAndDrop.draggable ? /*#__PURE__*/_jsxDEV(\"li\", {\n        role: listItemRole,\n        \"aria-selected\": isSelected,\n        draggable: handleDragAndDrop.draggable,\n        onDragStart: e => handleDrag(e, item),\n        onDragOver: e => handleDrop(e, item),\n        onDrag: e => handleDrag(e, item),\n        onDragEnter: e => handleDrop(e, item),\n        onDragLeave: e => handleDrop(e, item),\n        onDrop: e => handleDrop(e, item),\n        onFocus: e => toggleHovered(e, true),\n        onBlur: e => toggleHovered(e, false),\n        onMouseEnter: e => toggleHovered(e, true),\n        onMouseLeave: e => toggleHovered(e, false),\n        onClick: e => handleSelection(e, item),\n        onDoubleClick: e => handleDoubleClick(e, item),\n        onKeyDown: e => handleKeyDown(e, item),\n        className: `${getListItemClasses(isSelected, selectionEnabled, isGroupList, fixedCellHeight, null, selectionModelActivated)}`,\n        tabIndex: -1\n        /*By default not focusable but programatically focusable*/\n        ,\n        onContextMenu: menuContext,\n        ...getStyle(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sw-row aw-widgets-cellListItemContainer aw-widgets-droptable ${item.cellDecoratorStyle || ''} ${cellDecoratorClass}`,\n          draggable: handleDragAndDrop.draggable,\n          children: renderChildWithItem(item, showCheckbox, isSelected, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n        role: listItemRole,\n        \"aria-selected\": isSelected,\n        draggable: handleDragAndDrop.draggable,\n        onFocus: e => toggleHovered(e, true),\n        onBlur: e => toggleHovered(e, false),\n        onMouseEnter: e => toggleHovered(e, true),\n        onMouseLeave: e => toggleHovered(e, false),\n        onClick: e => handleSelection(e, item),\n        onDoubleClick: e => handleDoubleClick(e, item),\n        onKeyDown: e => handleKeyDown(e, item),\n        className: `${getListItemClasses(isSelected, selectionEnabled, isGroupList, fixedCellHeight, null, selectionModelActivated)}`,\n        tabIndex: -1\n        /*By default not focusable but programatically focusable*/\n        ,\n        onContextMenu: menuContext,\n        ...getStyle(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sw-row aw-widgets-cellListItemContainer aw-widgets-droptable ${item.cellDecoratorStyle || ''} ${cellDecoratorClass}`,\n          draggable: handleDragAndDrop.draggable,\n          children: renderChildWithItem(item, showCheckbox, isSelected, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true);\n  };\n\n  return processCellItem(item, index);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListItemService.js"],"names":["awListItemRenderFunction","props","doubleClickAction","dispatch","cellDecoratorClass","groupHeader","elementRefList","vmCollectionObj","dataprovider","loadedVMO","selectionEnabled","selectionModelActivated","handleSelection","handleSelectionEvent","listOptions","handleDoubleClick","eventTargetObjs","eventBus","handleDrag","handleDragAndDrop","handleDrop","handleKeyDown","event","wcagSvc","listItemRole","renderChildWithItem","options","key","tabIndex","index","candidate","_","showCellCommandsAlways","data","item","cellCommand","processFloatingCellCommand","child","mapChildren","showCheckbox","getStyle","height","parseInt","style","context","checkSelected","keepCellCommands","result","toggleHovered","path","value","flag","processCellItem","isSelected","isGroupList","e","getListItemClasses"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable react/jsx-no-undef */\n/* eslint-disable @swf/swf/no-react-usage */\nimport { handleSelectionEvent } from 'js/selectionHelper';\nimport { getListItemClasses } from 'js/componentUtils';\nimport { mapChildren } from 'js/reactHelper';\nimport AwListCheckboxItem from 'viewmodel/AwListCheckboxItemViewModel';\nimport AwStaticListCommand from 'viewmodel/AwStaticListCommandViewModel';\nimport wcagSvc from 'js/wcagService';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\n\nexport const awListItemRenderFunction = ( props ) => {\n    const {\n        item,\n        index,\n        dataprovider,\n        ownCellCommands,\n        showCellCommandsAlways,\n        children,\n        showCheckbox,\n        listOptions,\n        itemOptions,\n        fixedCellHeight,\n        isGroupList,\n        hasFloatingCellCommands,\n        menuContext,\n        listItemRole,\n        viewModel,\n        elementRefList,\n        handleDragAndDrop,\n        context,\n        doubleClickAction\n    } = props;\n    const { data, dispatch } = viewModel;\n    const cellDecoratorClass = props.showDecorators ? 'aw-widgets-showCellDecorator' : '';\n    const groupHeader = elementRefList.get( 'groupHeader' );\n\n    let vmCollectionObj = dataprovider.vmCollectionObj;\n    let loadedVMO = vmCollectionObj.vmCollection.loadedVMObjects;\n    const selectionEnabled = dataprovider.selectionModel.isSelectionEnabled();\n\n    const selectionModelActivated = dataprovider.selectionModel.isSelectionModelActivated();\n\n    const handleSelection = ( event, vmo ) => {\n        if( dataprovider.selectionModel.isSelectionEnabled() ) {\n            handleSelectionEvent( [ vmo ], dataprovider.selectionModel, event, vmCollectionObj.vmCollection );\n        }\n        if( listOptions && listOptions.selectionHandler ) {\n            listOptions.selectionHandler( vmo );\n        }\n    };\n\n    // uxt6xo: revisit me: Double click event is needed for Arrange panel; need to find best way of implementing.\n    const handleDoubleClick = ( event, vmo ) => {\n        doubleClickAction && doubleClickAction( { eventTargetObjs: [ vmo ] } );\n        eventBus.publish( dataprovider.name + '.listDoubleClick', { eventTargetObjs: [ vmo ] } );\n    };\n\n    const handleDrag = ( event, dItem ) => {\n        handleDragAndDrop.drag( event, dItem );\n    };\n\n    const handleDrop = ( event, dItem ) => {\n        handleDragAndDrop.drop( event, dItem );\n    };\n\n    const handleKeyDown = ( event, vmo ) => {\n        // ignore case keydown on other element\n        if( event.target.tagName !== 'LI' ) {\n            return;\n        }\n\n        if( wcagSvc.isValidKeyPress( event ) ) {\n            handleSelection( event, vmo );\n        } else if( listItemRole === undefined ) {\n            wcagSvc.handleMoveUpOrDown( event, event.currentTarget.parentElement.parentElement );\n        }\n    };\n\n    // zarq9k: revisit me: This is to avoid react warning. onChange={()=> {} is wrong, we  got to remove this.\n    const renderChildWithItem = ( item, showCheckbox, isSelected, index ) => {\n        let props = { item, index, isSelected, options: itemOptions, key: index, tabIndex: -1 };\n        if( isGroupList ) {\n            props.parent = groupHeader.current;\n            props.previousItem = loadedVMO[ index - 1 ];\n        }\n        let candidate = _.concat( [], children );\n        if( ownCellCommands ) {\n            if( showCellCommandsAlways || // always\n                ( data._showCellCommand || item.selected ) // load on demand\n            ) {\n                let cellCommand = processFloatingCellCommand( item, index, itemOptions, fixedCellHeight, isGroupList );\n                candidate = _.concat( candidate, cellCommand );\n            }\n        }\n\n        let child = mapChildren( candidate, props );\n        if( showCheckbox === true ) {\n            return <AwListCheckboxItem {...props} key={index}>{child}</AwListCheckboxItem>;\n        }\n        return child;\n    };\n\n    // parse fixedCellHeight if any\n    const getStyle = () => {\n        if( !fixedCellHeight ) { return; }\n        const height = parseInt( fixedCellHeight );\n        return { style: { height } };\n    };\n\n    const processFloatingCellCommand = ( item, index, itemOptions, fixedCellHeight, isGroupList ) => {\n        const props = { item, index, itemOptions, fixedCellHeight, isGroupList, dataprovider, context };\n        return <AwStaticListCommand {...props} selectedObjects={dataprovider.selectedObjects} key={index}></AwStaticListCommand>;\n    };\n\n    const checkSelected = ( item ) => {\n        if( listOptions && listOptions.selectionCheck ) {\n            return listOptions.selectionCheck( item );\n        }\n        return dataprovider.selectionModel.isSelected( item );\n    };\n\n    const keepCellCommands = ( event ) => {\n        // Do not remove the cell commands,\n        // case1: if moving using tab on the list item\n        // case2: if moving to noty_msg\n        // case3: if clicking on a cell command\n        let result = false;\n        if( event.type === 'blur' && data._showCellCommand && event.relatedTarget ) {\n            if(  [ 'BUTTON', 'A' ].indexOf( event.relatedTarget.tagName ) > -1 ||\n                    event.relatedTarget.className && event.relatedTarget.className.indexOf( 'noty_msg' ) > -1  ||\n                    event.relatedTarget.tagName === 'LI' && event.relatedTarget.attributes['data-command-id']\n            ) {\n                result = true;\n            }\n        }\n        return result;\n    };\n\n    const toggleHovered = ( event, flag ) => {\n        if( !ownCellCommands ) { return; }\n\n        if( keepCellCommands( event ) ) {\n            return;\n        }\n\n        if( data._showCellCommand !== flag ) {\n            dispatch( { path: 'data._showCellCommand', value: flag } );\n        }\n    };\n\n    const processCellItem = ( item, index ) => {\n        const isSelected = checkSelected( item );\n        return <>\n            {isGroupList && <div ref={groupHeader}></div>\n            } { handleDragAndDrop.draggable ? <li role={listItemRole}\n                aria-selected={isSelected}\n                draggable={handleDragAndDrop.draggable}\n                onDragStart={ e => handleDrag( e, item )}\n                onDragOver={ e => handleDrop( e, item )}\n                onDrag={ e => handleDrag( e, item )}\n                onDragEnter={ e => handleDrop( e, item )}\n                onDragLeave={ e=> handleDrop( e, item )}\n                onDrop={ e => handleDrop( e, item )}\n                onFocus={ e => toggleHovered( e, true )}\n                onBlur={e=>toggleHovered( e, false )}\n                onMouseEnter={e=>toggleHovered( e, true )}\n                onMouseLeave={e=>toggleHovered( e, false )}\n                onClick={( e )=>handleSelection( e, item )}\n                onDoubleClick={( e )=>handleDoubleClick( e, item )}\n                onKeyDown={( e )=>handleKeyDown( e, item )}\n                className={`${getListItemClasses( isSelected, selectionEnabled, isGroupList, fixedCellHeight, null, selectionModelActivated )}`}\n                key={index}\n                tabIndex={-1} /*By default not focusable but programatically focusable*/\n                onContextMenu={menuContext}\n                {...getStyle()}>\n                <div className={`sw-row aw-widgets-cellListItemContainer aw-widgets-droptable ${item.cellDecoratorStyle || ''} ${cellDecoratorClass}`}  draggable={handleDragAndDrop.draggable} >\n                    { renderChildWithItem( item, showCheckbox, isSelected, index ) }\n                </div>\n            </li> : <li role={listItemRole}\n                aria-selected={isSelected}\n                draggable={handleDragAndDrop.draggable}\n                onFocus={ e => toggleHovered( e, true )}\n                onBlur={e=>toggleHovered( e, false )}\n                onMouseEnter={e=>toggleHovered( e, true )}\n                onMouseLeave={e=>toggleHovered( e, false )}\n                onClick={( e )=>handleSelection( e, item )}\n                onDoubleClick={( e )=>handleDoubleClick( e, item )}\n                onKeyDown={( e )=>handleKeyDown( e, item )}\n                className={`${getListItemClasses( isSelected, selectionEnabled, isGroupList, fixedCellHeight, null, selectionModelActivated )}`}\n                key={index}\n                tabIndex={-1} /*By default not focusable but programatically focusable*/\n                onContextMenu={menuContext}\n                {...getStyle()}>\n                <div className={`sw-row aw-widgets-cellListItemContainer aw-widgets-droptable ${item.cellDecoratorStyle || ''} ${cellDecoratorClass}`}  draggable={handleDragAndDrop.draggable} >\n                    { renderChildWithItem( item, showCheckbox, isSelected, index ) }\n                </div>\n            </li> } </>;\n    };\n\n    return processCellItem( item, index );\n};\n"]},"metadata":{},"sourceType":"module"}