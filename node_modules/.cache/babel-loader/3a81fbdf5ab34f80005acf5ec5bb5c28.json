{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * Service for clickable cell titles\n *\n * @module js/clickableTitleService\n */\nimport AwTimeoutService from 'js/awTimeoutService';\nimport configurationSvc from 'js/configurationService';\nimport commandService from 'js/command.service';\n/**\n * clickableTitleService factory\n */\n\nvar exports = {};\nvar timeoutPromise;\nvar isDoubleClick;\n/**\n * Returns whether clickable cell title actions have been configured or not\n *\n * @return {Boolean} true if clickable cell title actions have been configured in the solution def\n */\n\nexport let hasClickableCellTitleActions = function () {\n  return Boolean(exports.getClickableCellTitleActions());\n};\n/**\n * Get the commands configured against different types of clicks from the solution defintion\n * @return {Object} clickableCellTitleActions json object holding command id for different types of clicks\n-*/\n\nexport let getClickableCellTitleActions = function () {\n  var solDef = configurationSvc.getCfgCached('solutionDef');\n  return solDef ? solDef.clickableCellTitleActions : null;\n};\n/**\n * Executes appropriate action on click as configured in clickable cell title actions\n *\n * @param {Object} $event - click event\n * @param {Object} context - additional context to execute the command with\n */\n\nexport let doIt = function ($event, context) {\n  let runActionWithViewModel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if ($event.target.tagName.toLowerCase() === 'a' && $event.target.href !== '') {\n    return;\n  }\n\n  $event.stopPropagation();\n  var event = $event;\n\n  if (timeoutPromise) {\n    AwTimeoutService.instance.cancel(timeoutPromise);\n    isDoubleClick = true;\n  }\n\n  var clickableCellTitleActions = exports.getClickableCellTitleActions();\n  timeoutPromise = AwTimeoutService.instance(function () {\n    // var clickType = isDoubleClick ? 'doubleClick' : event.ctrlKey ? 'ctrlClick' : event.shiftKey ? 'shiftClick' : 'click';\n    var clickType = 'click';\n\n    if (isDoubleClick) {\n      clickType = 'doubleClick';\n    } else if (event.ctrlKey) {\n      clickType = 'ctrlClick';\n    } else if (event.shiftKey) {\n      clickType = 'shiftClick';\n    }\n\n    isDoubleClick = false;\n    timeoutPromise = null; // execute command for click or ctrl click or shift click or double click accordingly\n\n    if (clickableCellTitleActions) {\n      commandService.executeCommand(clickableCellTitleActions[clickType], null, null, context, runActionWithViewModel);\n    }\n  }, 300);\n};\nexports = {\n  hasClickableCellTitleActions,\n  getClickableCellTitleActions,\n  doIt\n};\nexport default exports;","map":{"version":3,"names":["AwTimeoutService","configurationSvc","commandService","exports","timeoutPromise","isDoubleClick","hasClickableCellTitleActions","Boolean","getClickableCellTitleActions","solDef","getCfgCached","clickableCellTitleActions","doIt","$event","context","runActionWithViewModel","target","tagName","toLowerCase","href","stopPropagation","event","instance","cancel","clickType","ctrlKey","shiftKey","executeCommand"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uiwidget/src/js/clickableTitleService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * Service for clickable cell titles\n *\n * @module js/clickableTitleService\n */\nimport AwTimeoutService from 'js/awTimeoutService';\nimport configurationSvc from 'js/configurationService';\nimport commandService from 'js/command.service';\n\n/**\n * clickableTitleService factory\n */\n\nvar exports = {};\nvar timeoutPromise;\nvar isDoubleClick;\n\n/**\n * Returns whether clickable cell title actions have been configured or not\n *\n * @return {Boolean} true if clickable cell title actions have been configured in the solution def\n */\n\nexport let hasClickableCellTitleActions = function() {\n    return Boolean( exports.getClickableCellTitleActions() );\n};\n\n/**\n * Get the commands configured against different types of clicks from the solution defintion\n * @return {Object} clickableCellTitleActions json object holding command id for different types of clicks\n-*/\nexport let getClickableCellTitleActions = function() {\n    var solDef = configurationSvc.getCfgCached( 'solutionDef' );\n    return solDef ? solDef.clickableCellTitleActions : null;\n};\n\n/**\n * Executes appropriate action on click as configured in clickable cell title actions\n *\n * @param {Object} $event - click event\n * @param {Object} context - additional context to execute the command with\n */\nexport let doIt = function( $event, context, runActionWithViewModel = null ) {\n    if( $event.target.tagName.toLowerCase() === 'a' && $event.target.href !== '' ) {\n        return;\n    }\n    $event.stopPropagation();\n    var event = $event;\n    if( timeoutPromise ) {\n        AwTimeoutService.instance.cancel( timeoutPromise );\n        isDoubleClick = true;\n    }\n\n    var clickableCellTitleActions = exports.getClickableCellTitleActions();\n    timeoutPromise = AwTimeoutService.instance( function() {\n        // var clickType = isDoubleClick ? 'doubleClick' : event.ctrlKey ? 'ctrlClick' : event.shiftKey ? 'shiftClick' : 'click';\n        var clickType = 'click';\n        if( isDoubleClick ) {\n            clickType = 'doubleClick';\n        } else if( event.ctrlKey ) {\n            clickType = 'ctrlClick';\n        } else if( event.shiftKey ) {\n            clickType = 'shiftClick';\n        }\n        isDoubleClick = false;\n        timeoutPromise = null;\n\n        // execute command for click or ctrl click or shift click or double click accordingly\n        if( clickableCellTitleActions ) {\n            commandService.executeCommand( clickableCellTitleActions[ clickType ], null, null, context, runActionWithViewModel );\n        }\n    }, 300 );\n};\n\nexports = {\n    hasClickableCellTitleActions,\n    getClickableCellTitleActions,\n    doIt\n};\nexport default exports;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAOA,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA;AACA;AACA;;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,cAAJ;AACA,IAAIC,aAAJ;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,4BAA4B,GAAG,YAAW;EACjD,OAAOC,OAAO,CAAEJ,OAAO,CAACK,4BAAR,EAAF,CAAd;AACH,CAFM;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAIA,4BAA4B,GAAG,YAAW;EACjD,IAAIC,MAAM,GAAGR,gBAAgB,CAACS,YAAjB,CAA+B,aAA/B,CAAb;EACA,OAAOD,MAAM,GAAGA,MAAM,CAACE,yBAAV,GAAsC,IAAnD;AACH,CAHM;AAKP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAG,UAAUC,MAAV,EAAkBC,OAAlB,EAA2D;EAAA,IAAhCC,sBAAgC,uEAAP,IAAO;;EACzE,IAAIF,MAAM,CAACG,MAAP,CAAcC,OAAd,CAAsBC,WAAtB,OAAwC,GAAxC,IAA+CL,MAAM,CAACG,MAAP,CAAcG,IAAd,KAAuB,EAA1E,EAA+E;IAC3E;EACH;;EACDN,MAAM,CAACO,eAAP;EACA,IAAIC,KAAK,GAAGR,MAAZ;;EACA,IAAIT,cAAJ,EAAqB;IACjBJ,gBAAgB,CAACsB,QAAjB,CAA0BC,MAA1B,CAAkCnB,cAAlC;IACAC,aAAa,GAAG,IAAhB;EACH;;EAED,IAAIM,yBAAyB,GAAGR,OAAO,CAACK,4BAAR,EAAhC;EACAJ,cAAc,GAAGJ,gBAAgB,CAACsB,QAAjB,CAA2B,YAAW;IACnD;IACA,IAAIE,SAAS,GAAG,OAAhB;;IACA,IAAInB,aAAJ,EAAoB;MAChBmB,SAAS,GAAG,aAAZ;IACH,CAFD,MAEO,IAAIH,KAAK,CAACI,OAAV,EAAoB;MACvBD,SAAS,GAAG,WAAZ;IACH,CAFM,MAEA,IAAIH,KAAK,CAACK,QAAV,EAAqB;MACxBF,SAAS,GAAG,YAAZ;IACH;;IACDnB,aAAa,GAAG,KAAhB;IACAD,cAAc,GAAG,IAAjB,CAXmD,CAanD;;IACA,IAAIO,yBAAJ,EAAgC;MAC5BT,cAAc,CAACyB,cAAf,CAA+BhB,yBAAyB,CAAEa,SAAF,CAAxD,EAAuE,IAAvE,EAA6E,IAA7E,EAAmFV,OAAnF,EAA4FC,sBAA5F;IACH;EACJ,CAjBgB,EAiBd,GAjBc,CAAjB;AAkBH,CA9BM;AAgCPZ,OAAO,GAAG;EACNG,4BADM;EAENE,4BAFM;EAGNI;AAHM,CAAV;AAKA,eAAeT,OAAf"},"metadata":{},"sourceType":"module"}