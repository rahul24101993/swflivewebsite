{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyArrayEditValService.js\";\n// Copyright (c) 2021 Siemens\n\n/* eslint-disable indent */\nimport AwTextareaVal from 'viewmodel/AwTextareaValViewModel';\nimport AwIntegerVal from 'viewmodel/AwIntegerValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwDoubleVal from 'viewmodel/AwDoubleValViewModel';\nimport AwPropertyStringVal from 'viewmodel/AwPropertyStringValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwRadioButtonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwCheckBoxVal from 'viewmodel/AwCheckboxValViewModel';\nimport AwPropertyObjectVal from 'viewmodel/AwPropertyObjectValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderWidgetBasedOnTypex = prop => {\n  switch (prop.typex) {\n    case 'DOUBLEARRAY':\n      return /*#__PURE__*/_jsxDEV(AwDoubleVal, { ...prop,\n        className: getValClass(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n\n    case 'DATEARRAY':\n      return /*#__PURE__*/_jsxDEV(AwDateTimeVal, { ...prop,\n        className: getValClass(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n\n    case 'INTEGERARRAY':\n      return /*#__PURE__*/_jsxDEV(AwIntegerVal, { ...prop,\n        className: getValClass(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n\n    case 'STRINGARRAY':\n      return /*#__PURE__*/_jsxDEV(AwPropertyStringVal, { ...prop,\n        className: getValClass(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n\n    case 'BOOLEANARRAY':\n      if (prop.fielddata.renderingHint === 'radiobutton') {\n        return /*#__PURE__*/_jsxDEV(AwRadioButtonVal, {\n          prop: prop,\n          className: getValClass(prop)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }, this);\n      } else if (prop.fielddata.renderingHint === 'togglebutton') {\n        return /*#__PURE__*/_jsxDEV(AwToggleButtonVal, { ...prop,\n          className: getValClass(prop)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(AwCheckBoxVal, {\n        className: getValClass(prop),\n        ...prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n\n    case 'OBJECTARRAY':\n      return /*#__PURE__*/_jsxDEV(AwPropertyObjectVal, { ...prop,\n        className: getValClass(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(AwTextareaVal, { ...prop,\n        className: getValClass(prop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n  }\n};\n\nexport const awPropertyArrayEditValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  return renderWidgetBasedOnTypex(prop);\n};","map":{"version":3,"names":["AwTextareaVal","AwIntegerVal","AwDateTimeVal","AwDoubleVal","AwPropertyStringVal","AwToggleButtonVal","AwRadioButtonVal","AwCheckBoxVal","AwPropertyObjectVal","getValClass","renderWidgetBasedOnTypex","prop","typex","fielddata","renderingHint","awPropertyArrayEditValRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyArrayEditValService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable indent */\nimport AwTextareaVal from 'viewmodel/AwTextareaValViewModel';\nimport AwIntegerVal from 'viewmodel/AwIntegerValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwDoubleVal from 'viewmodel/AwDoubleValViewModel';\nimport AwPropertyStringVal from 'viewmodel/AwPropertyStringValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwRadioButtonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwCheckBoxVal from 'viewmodel/AwCheckboxValViewModel';\nimport AwPropertyObjectVal from 'viewmodel/AwPropertyObjectValViewModel';\nimport { getValClass } from 'js/componentUtils';\n\nconst renderWidgetBasedOnTypex = prop => {\n    switch ( prop.typex ) {\n        case 'DOUBLEARRAY':\n            return <AwDoubleVal {...prop} className={ getValClass( prop ) }/>;\n        case 'DATEARRAY':\n            return <AwDateTimeVal {...prop} className={ getValClass( prop ) }/>;\n        case 'INTEGERARRAY':\n            return <AwIntegerVal {...prop} className={ getValClass( prop ) }/>;\n        case 'STRINGARRAY':\n            return <AwPropertyStringVal {...prop} className={ getValClass( prop ) }/>;\n        case 'BOOLEANARRAY':\n            if( prop.fielddata.renderingHint === 'radiobutton' ) {\n                return <AwRadioButtonVal prop={prop} className={ getValClass( prop ) }/>;\n            } else if( prop.fielddata.renderingHint === 'togglebutton' ) {\n                return <AwToggleButtonVal {...prop} className={ getValClass( prop ) }/>;\n            }\n            return <AwCheckBoxVal className={getValClass( prop )} {...prop}></AwCheckBoxVal>;\n        case 'OBJECTARRAY':\n            return <AwPropertyObjectVal {...prop} className={ getValClass( prop ) }/>;\n        default:\n            return <AwTextareaVal {...prop} className={ getValClass( prop ) }/>;\n    }\n};\n\nexport const awPropertyArrayEditValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    return renderWidgetBasedOnTypex( prop );\n};\n"],"mappings":";AAAA;;AACA;AACA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B;;;AAEA,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;EACrC,QAASA,IAAI,CAACC,KAAd;IACI,KAAK,aAAL;MACI,oBAAO,QAAC,WAAD,OAAiBD,IAAjB;QAAuB,SAAS,EAAGF,WAAW,CAAEE,IAAF;MAA9C;QAAA;QAAA;QAAA;MAAA,QAAP;;IACJ,KAAK,WAAL;MACI,oBAAO,QAAC,aAAD,OAAmBA,IAAnB;QAAyB,SAAS,EAAGF,WAAW,CAAEE,IAAF;MAAhD;QAAA;QAAA;QAAA;MAAA,QAAP;;IACJ,KAAK,cAAL;MACI,oBAAO,QAAC,YAAD,OAAkBA,IAAlB;QAAwB,SAAS,EAAGF,WAAW,CAAEE,IAAF;MAA/C;QAAA;QAAA;QAAA;MAAA,QAAP;;IACJ,KAAK,aAAL;MACI,oBAAO,QAAC,mBAAD,OAAyBA,IAAzB;QAA+B,SAAS,EAAGF,WAAW,CAAEE,IAAF;MAAtD;QAAA;QAAA;QAAA;MAAA,QAAP;;IACJ,KAAK,cAAL;MACI,IAAIA,IAAI,CAACE,SAAL,CAAeC,aAAf,KAAiC,aAArC,EAAqD;QACjD,oBAAO,QAAC,gBAAD;UAAkB,IAAI,EAAEH,IAAxB;UAA8B,SAAS,EAAGF,WAAW,CAAEE,IAAF;QAArD;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFD,MAEO,IAAIA,IAAI,CAACE,SAAL,CAAeC,aAAf,KAAiC,cAArC,EAAsD;QACzD,oBAAO,QAAC,iBAAD,OAAuBH,IAAvB;UAA6B,SAAS,EAAGF,WAAW,CAAEE,IAAF;QAApD;UAAA;UAAA;UAAA;QAAA,QAAP;MACH;;MACD,oBAAO,QAAC,aAAD;QAAe,SAAS,EAAEF,WAAW,CAAEE,IAAF,CAArC;QAAA,GAAmDA;MAAnD;QAAA;QAAA;QAAA;MAAA,QAAP;;IACJ,KAAK,aAAL;MACI,oBAAO,QAAC,mBAAD,OAAyBA,IAAzB;QAA+B,SAAS,EAAGF,WAAW,CAAEE,IAAF;MAAtD;QAAA;QAAA;QAAA;MAAA,QAAP;;IACJ;MACI,oBAAO,QAAC,aAAD,OAAmBA,IAAnB;QAAyB,SAAS,EAAGF,WAAW,CAAEE,IAAF;MAAhD;QAAA;QAAA;QAAA;MAAA,QAAP;EAnBR;AAqBH,CAtBD;;AAwBA,OAAO,MAAMI,oCAAoC,GAAKC,KAAF,IAAa;EAC7D,MAAM;IACFC,SADE;IAEFC,MAFE;IAGFC,OAHE;IAIFC,IAJE;IAKFC,MALE;IAMFC,KANE;IAOFC,QAPE;IAQFC,QARE;IASF,GAAGb;EATD,IAUFK,KAVJ;EAWA,OAAON,wBAAwB,CAAEC,IAAF,CAA/B;AACH,CAbM"},"metadata":{},"sourceType":"module"}