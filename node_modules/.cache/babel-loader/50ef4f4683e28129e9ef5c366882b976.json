{"ast":null,"code":"// Copyright (c) 2021 Siemens\n/* eslint-disable max-len */import{awCommandBarInitFunction,refreshServerVisibility}from'js/AwCommandBarService';import AwToolbarInternal from'viewmodel/AwToolbarInternalViewModel';import Debug from'debug';// eslint-disable-next-line complexity\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const awToolbarRenderFunction=props=>{const{visibilityLoader,reverse=false,reverseSecond=false,overflow=true,orientation='HORIZONTAL',firstAnchor,secondAnchor,showCommandLabels,context,viewModel:{data:{firstCommandList=null,secondCommandList=null,visibleServerCommands,trace}}}=props;return firstCommandList&&secondCommandList&&/*#__PURE__*/_jsx(AwToolbarInternal,{alignment:orientation,commandContext:context,firstAnchor:firstAnchor,firstCommandList:firstCommandList,overflow:overflow,reverse:reverse,reverseSecond:reverseSecond,secondAnchor:secondAnchor,secondCommandList:secondCommandList,showCommandLabels:showCommandLabels,trace:trace,visibilityLoader:visibilityLoader,visibleServerCommands:visibleServerCommands});};/**\n * Initialize the toolbar\n *\n * @param {Object} options options\n * @returns {Object} Toolbar init data\n */export const awToolbarInitFunction=async _ref=>{let{firstAnchor='',secondAnchor=''}=_ref;const trace=new Debug(\"command:AwCommandBar:\".concat(firstAnchor,\"+\").concat(secondAnchor));trace('Loading commands');const[{commandList:firstCommandList},{commandList:secondCommandList}]=await Promise.all([awCommandBarInitFunction({anchor:firstAnchor}),awCommandBarInitFunction({anchor:secondAnchor})]);trace('Loaded command list',firstCommandList,secondCommandList);return{firstCommandList:firstCommandList||[],secondCommandList:secondCommandList||[],trace};};/**\n * Refresh server visibility for the toolbar\n *\n * @param {Object} options options\n * @returns {Object} Updated server visibility\n */export const refreshServerVisibilityToolbar=async _ref2=>{let{firstCommandList,secondCommandList,visibilityLoader,trace}=_ref2;if(!firstCommandList||!secondCommandList||!visibilityLoader){return null;}return refreshServerVisibility({commandList:[...firstCommandList,...secondCommandList],visibilityLoader,trace});};","map":null,"metadata":{},"sourceType":"module"}