{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwIntegerValService.js\";\n// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awIntegerValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props; // use simple non-edit val if not editing\n\n  if (!prop.fielddata.isEditable) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  let sanitizedProps = sanitizer.sanitizeHTMLTagProps(prop, 'input');\n  const inputClass = getValClass(props);\n\n  const handleChange = event => {\n    let newVal = event.target.value.replace(/[^\\+|\\-|0-9]/g, '');\n\n    if ((newVal.indexOf('-') > -1 || newVal.indexOf('+') > -1) && newVal.length > 1) {\n      prop.onChange(event);\n    }\n\n    event.target.value = newVal;\n  };\n\n  const handleArrayChange = event => {\n    let newVal = event.target.value.replace(/[^\\+|\\-|0-9]/g, '');\n\n    if (!isNaN(Number(event.target.value)) && event.key === 'Enter') {\n      prop.onChange(event);\n    }\n\n    event.target.value = newVal;\n  };\n\n  const keyPressed = event => {\n    if (event.target.value !== '' && !isNaN(Number(event.target.value)) && (event.key === 'Enter' || event.type === 'blur' && prop.typex === 'INTEGERARRAY')) {\n      let val = parseInt(event.target.value, 10);\n      event.target.value = val;\n      event.preventDefault();\n      prop.onChange(event);\n      event.target.value = '';\n    }\n  };\n\n  if (prop.fielddata.renderingHint === 'label') {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  } else if (!prop.fielddata.renderingHint && prop.fielddata.hasLov) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...prop,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else if (prop.typex === 'INTEGERARRAY') {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      maxLength: prop.maxLength,\n      \"aria-required\": prop.isRequired,\n      \"data-locator\": prop.label,\n      placeholder: prop.placeholder,\n      className: inputClass,\n      onChange: handleArrayChange,\n      onBlur: keyPressed,\n      onKeyPress: keyPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", { ...sanitizedProps,\n    autoComplete: \"off\",\n    type: \"text\",\n    className: inputClass\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["AwPropertyNonEditVal","AwPropertyLovVal","sanitizer","getValClass","awIntegerValRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","prop","fielddata","isEditable","sanitizedProps","sanitizeHTMLTagProps","inputClass","handleChange","event","newVal","target","value","replace","indexOf","length","onChange","handleArrayChange","isNaN","Number","key","keyPressed","type","typex","val","parseInt","preventDefault","renderingHint","hasLov","maxLength","isRequired","label","placeholder"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwIntegerValService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\n\nexport const awIntegerValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    // use simple non-edit val if not editing\n    if( !prop.fielddata.isEditable ) {\n        return (\n            <AwPropertyNonEditVal {...prop}></AwPropertyNonEditVal>\n        );\n    }\n\n    let sanitizedProps = sanitizer.sanitizeHTMLTagProps( prop, 'input' );\n    const inputClass = getValClass( props );\n\n    const handleChange = ( event ) => {\n        let newVal = event.target.value.replace( /[^\\+|\\-|0-9]/g, '' );\n        if( ( newVal.indexOf( '-' ) > -1 || newVal.indexOf( '+' ) > -1 ) && newVal.length > 1 ) {\n            prop.onChange( event );\n        }\n        event.target.value = newVal;\n    };\n\n    const handleArrayChange = ( event ) => {\n        let newVal = event.target.value.replace( /[^\\+|\\-|0-9]/g, '' );\n        if( !isNaN( Number( event.target.value ) ) && event.key === 'Enter' ) {\n            prop.onChange( event );\n        }\n        event.target.value = newVal;\n    };\n\n    const keyPressed = ( event ) => {\n        if( event.target.value !== '' && !isNaN( Number( event.target.value ) ) && ( event.key === 'Enter' ||\n                event.type === 'blur' && prop.typex === 'INTEGERARRAY' ) ) {\n            let val = parseInt( event.target.value, 10 );\n            event.target.value = val;\n            event.preventDefault();\n            prop.onChange( event );\n            event.target.value = '';\n        }\n    };\n\n    if( prop.fielddata.renderingHint === 'label' ) {\n        return (\n            <AwPropertyNonEditVal {...prop} ></AwPropertyNonEditVal>\n        );\n    } else if( !prop.fielddata.renderingHint && prop.fielddata.hasLov ) {\n        return (\n            <AwPropertyLovVal {...prop} onChange={handleChange}></AwPropertyLovVal>\n        );\n    } else if( prop.typex === 'INTEGERARRAY' ) {\n        return (\n            <input type='text' maxLength={prop.maxLength} aria-required={prop.isRequired} data-locator={prop.label} placeholder={prop.placeholder} className={inputClass} onChange={handleArrayChange} onBlur={keyPressed} onKeyPress={keyPressed}/>\n        );\n    }\n    return (\n        <input {...sanitizedProps} autoComplete='off' type='text' className={inputClass}/>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}