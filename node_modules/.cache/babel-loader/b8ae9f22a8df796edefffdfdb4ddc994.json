{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This module defines and provides a set of utility APIs used to access the 'localStorage' APIs of the browser the\n * client is running within.\n *\n * @module js/localStorage\n * @publishedApolloService\n */\nimport browserUtils from 'js/browserUtils';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\n/** Build ID to ensure unique entry into the local storage */\n\n/** revisitme yogesh\n * Hint: In afx following string was getting replaced by current date during build\n */\n\nvar _buildID = '{{INSERT_HERE_BUILD_ID}}';\n/** Browser ID Suffix for local storage data */\n\nvar _browserID = '_B_GUID_:';\n/** The id to include in the keys for all topics managed by this service. */\n\nvar _localStorageId = _buildID;\n/** {Boolean} TRUE if running within an Internet Explorer type browser. */\n\nvar _isIE = browserUtils.isIE;\n/** ID for this specific instance of the browser. */\n\nvar _browserInstanceId = Date.now().toString();\n/**\n * @returns {String} Base URL for the current application's root 'document' without any protocol, machine, port or\n *          query attributes and (if otherwise valid) without a trailing '/'\n *\n * <pre>\n * (e.g. 'http://100.100.100.100:8888/awc/?locale=en_US#showHome' would return 'awc' ).\n * </pre>\n */\n\n\nvar _getLocalStorageId = function () {\n  if (_localStorageId !== _buildID) {\n    return _localStorageId;\n  }\n\n  if (window && window.location && window.location.pathname) {\n    // Ensure a final slash if non-empty.\n    _localStorageId = window.location.pathname;\n    _localStorageId = _localStorageId.substring(0, _localStorageId.lastIndexOf('/') + 1);\n  } else {\n    /**\n     * Support for non-Angular (NodeJS) run.\n     * @ignore\n     */\n    _localStorageId = '';\n  }\n\n  return _localStorageId;\n};\n/**\n * @param {String} topic - local storage topic (key)\n *\n * @return {String} Unique local storage topic key.\n */\n\n\nfunction _getLSTopicKey(topic) {\n  return topic + ':' + _getLocalStorageId();\n}\n/**\n * Subscribe to the 'ctrl-mouse' click on the Siemens logo to kick off the cleanup of obsolete local storage\n * artifacts.\n */\n\n\neventBus.subscribe('cdm.logDiagnostics', function () {\n  /** Regular expression used to cleanup older localStorage artifacts */\n  var _regex = /[a-z]+:(\\d)+$/g;\n  var keys = Object.keys(localStorage);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (keys[i].match(_regex)) {\n      localStorage.removeItem(keys[i]);\n    }\n  }\n}, 'localStorage');\nvar exports = {};\n/**\n * Subscribes to 'storage' event for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {Function} cb - event handler\n */\n\nexport let subscribe = function (topic, cb) {\n  window.addEventListener('storage', function (event) {\n    if (browserUtils.getBaseURL() && event.url && event.url.startsWith(browserUtils.getBaseURL())) {\n      var ourEvent = _.merge({}, event); //Object.assign does not merge the storage event data\n\n\n      if (_isIE) {\n        if (ourEvent.newValue) {\n          var start = ourEvent.newValue.indexOf(_browserID);\n\n          if (start > -1) {\n            var browserID = ourEvent.newValue.substr(start + _browserID.length, ourEvent.newValue.length);\n            ourEvent.newValue = ourEvent.newValue.substr(0, start);\n\n            if (browserID === _browserInstanceId) {\n              return;\n            }\n\n            start = ourEvent.oldValue.indexOf(_browserID);\n\n            if (start > -1) {\n              ourEvent.oldValue = ourEvent.oldValue.substr(0, start);\n            }\n          }\n        }\n      } // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n\n\n      if (ourEvent.key === _getLSTopicKey(topic) && ourEvent.newValue !== ourEvent.oldValue) {\n        cb(ourEvent);\n      }\n    }\n  }, false);\n};\n/**\n * Add data to local storage for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {String} data - data to add to local storage\n */\n\nexport let publish = function (topic, data) {\n  var dataLocal = data;\n\n  if (_isIE) {\n    dataLocal += _browserID + _browserInstanceId;\n  } // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n\n\n  var topicKey = _getLSTopicKey(topic);\n\n  var exists = localStorage.hasOwnProperty(topicKey);\n\n  if (exists && dataLocal === undefined) {\n    localStorage.removeItem(topicKey);\n  } else if (!exists || localStorage[topicKey] !== dataLocal) {\n    localStorage.setItem(topicKey, dataLocal);\n  }\n};\n/**\n * Get the value of gven local storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @return {String} value of local storage (or NULL if the topic is not in the local storage).\n */\n\nexport let get = function (topic) {\n  var topicKey = _getLSTopicKey(topic);\n\n  if (localStorage.hasOwnProperty(topicKey)) {\n    var item = localStorage.getItem(topicKey);\n\n    if (_isIE) {\n      var start = item.indexOf(_browserID);\n\n      if (start > -1) {\n        item = item.substr(0, start);\n      }\n    }\n\n    return item;\n  }\n\n  return null;\n};\n/**\n * Remove the given local storage topic (key)\n *\n * @param {String} topic - The local storage topic (key) to remove.\n */\n\nexport let removeItem = function (topic) {\n  var keyName = _getLSTopicKey(topic);\n\n  localStorage.removeItem(keyName);\n};\nexports = {\n  subscribe,\n  publish,\n  get,\n  removeItem\n};\nexport default exports;","map":{"version":3,"names":["browserUtils","eventBus","_","_buildID","_browserID","_localStorageId","_isIE","isIE","_browserInstanceId","Date","now","toString","_getLocalStorageId","window","location","pathname","substring","lastIndexOf","_getLSTopicKey","topic","subscribe","_regex","keys","Object","localStorage","i","length","match","removeItem","exports","cb","addEventListener","event","getBaseURL","url","startsWith","ourEvent","merge","newValue","start","indexOf","browserID","substr","oldValue","key","publish","data","dataLocal","topicKey","exists","hasOwnProperty","undefined","setItem","get","item","getItem","keyName"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/kernel/src/js/localStorage.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This module defines and provides a set of utility APIs used to access the 'localStorage' APIs of the browser the\n * client is running within.\n *\n * @module js/localStorage\n * @publishedApolloService\n */\nimport browserUtils from 'js/browserUtils';\nimport eventBus from 'js/eventBus';\nimport _ from 'lodash';\n\n\n/** Build ID to ensure unique entry into the local storage */\n/** revisitme yogesh\n * Hint: In afx following string was getting replaced by current date during build\n */\nvar _buildID = '{{INSERT_HERE_BUILD_ID}}';\n\n/** Browser ID Suffix for local storage data */\nvar _browserID = '_B_GUID_:';\n\n/** The id to include in the keys for all topics managed by this service. */\nvar _localStorageId = _buildID;\n\n/** {Boolean} TRUE if running within an Internet Explorer type browser. */\nvar _isIE = browserUtils.isIE;\n\n/** ID for this specific instance of the browser. */\nvar _browserInstanceId = Date.now().toString();\n\n/**\n * @returns {String} Base URL for the current application's root 'document' without any protocol, machine, port or\n *          query attributes and (if otherwise valid) without a trailing '/'\n *\n * <pre>\n * (e.g. 'http://100.100.100.100:8888/awc/?locale=en_US#showHome' would return 'awc' ).\n * </pre>\n */\nvar _getLocalStorageId = function() {\n    if( _localStorageId !== _buildID ) {\n        return _localStorageId;\n    }\n\n    if( window && window.location && window.location.pathname ) {\n        // Ensure a final slash if non-empty.\n        _localStorageId = window.location.pathname;\n        _localStorageId = _localStorageId.substring( 0, _localStorageId.lastIndexOf( '/' ) + 1 );\n    } else {\n        /**\n         * Support for non-Angular (NodeJS) run.\n         * @ignore\n         */\n        _localStorageId = '';\n    }\n\n    return _localStorageId;\n};\n\n/**\n * @param {String} topic - local storage topic (key)\n *\n * @return {String} Unique local storage topic key.\n */\nfunction _getLSTopicKey( topic ) {\n    return topic + ':' + _getLocalStorageId();\n}\n\n/**\n * Subscribe to the 'ctrl-mouse' click on the Siemens logo to kick off the cleanup of obsolete local storage\n * artifacts.\n */\neventBus.subscribe( 'cdm.logDiagnostics', function() {\n    /** Regular expression used to cleanup older localStorage artifacts */\n    var _regex = /[a-z]+:(\\d)+$/g;\n\n    var keys = Object.keys( localStorage );\n\n    for( var i = 0; i < keys.length; i++ ) {\n        if( keys[ i ].match( _regex ) ) {\n            localStorage.removeItem( keys[ i ] );\n        }\n    }\n}, 'localStorage' );\n\nvar exports = {};\n\n/**\n * Subscribes to 'storage' event for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {Function} cb - event handler\n */\nexport let subscribe = function( topic, cb ) {\n    window.addEventListener( 'storage', function( event ) {\n        if( browserUtils.getBaseURL() && event.url && event.url.startsWith( browserUtils.getBaseURL() ) ) {\n            var ourEvent = _.merge( {}, event ); //Object.assign does not merge the storage event data\n            if( _isIE ) {\n                if( ourEvent.newValue ) {\n                    var start = ourEvent.newValue.indexOf( _browserID );\n                    if( start > -1 ) {\n                        var browserID = ourEvent.newValue.substr( start + _browserID.length,\n                            ourEvent.newValue.length );\n                        ourEvent.newValue = ourEvent.newValue.substr( 0, start );\n\n                        if( browserID === _browserInstanceId ) {\n                            return;\n                        }\n\n                        start = ourEvent.oldValue.indexOf( _browserID );\n                        if( start > -1 ) {\n                            ourEvent.oldValue = ourEvent.oldValue.substr( 0, start );\n                        }\n                    }\n                }\n            }\n\n            // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n            if( ourEvent.key === _getLSTopicKey( topic ) && ourEvent.newValue !== ourEvent.oldValue ) {\n                cb( ourEvent );\n            }\n        }\n    }, false );\n};\n\n/**\n * Add data to local storage for given storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @param {String} data - data to add to local storage\n */\nexport let publish = function( topic, data ) {\n    var dataLocal = data;\n\n    if( _isIE ) {\n        dataLocal += _browserID + _browserInstanceId;\n    }\n\n    // Ideally we wouldn't have to check for value change but IE doesn't seem to be working correctly.\n    var topicKey = _getLSTopicKey( topic );\n\n    var exists = localStorage.hasOwnProperty( topicKey );\n\n    if( exists && dataLocal === undefined ) {\n        localStorage.removeItem( topicKey );\n    } else if( !exists || localStorage[ topicKey ] !== dataLocal ) {\n        localStorage.setItem( topicKey, dataLocal );\n    }\n};\n\n/**\n * Get the value of gven local storage topic (key)\n *\n * @param {String} topic - local storage topic (key)\n * @return {String} value of local storage (or NULL if the topic is not in the local storage).\n */\nexport let get = function( topic ) {\n    var topicKey = _getLSTopicKey( topic );\n    if( localStorage.hasOwnProperty( topicKey ) ) {\n        var item = localStorage.getItem( topicKey );\n        if( _isIE ) {\n            var start = item.indexOf( _browserID );\n            if( start > -1 ) {\n                item = item.substr( 0, start );\n            }\n        }\n        return item;\n    }\n\n    return null;\n};\n\n/**\n * Remove the given local storage topic (key)\n *\n * @param {String} topic - The local storage topic (key) to remove.\n */\nexport let removeItem = function( topic ) {\n    var keyName = _getLSTopicKey( topic );\n\n    localStorage.removeItem( keyName );\n};\n\nexports = {\n    subscribe,\n    publish,\n    get,\n    removeItem\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}