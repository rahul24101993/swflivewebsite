{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyObjectValService.js\"; // Copyright (c) 2021 Siemens\n\nimport AwIconButton from 'viewmodel/AwIconButtonViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport commandPanelService from 'js/commandPanel.service';\n/**\n * render function for AwList\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awObjectValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const {\n    hasLov,\n    isArray\n  } = prop.fielddata;\n\n  if (hasLov) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  const uiValue = prop.fielddata.uiValue;\n\n  if (uiValue === null || uiValue === undefined || uiValue.length === 0 || isArray) {\n    return (\n      /*#__PURE__*/\n      // if no uiValue, show add button\n      _jsxDEV(\"div\", {\n        className: \"sw-fit-content\",\n        children: /*#__PURE__*/_jsxDEV(AwIconButton, {\n          command: fields.addObject,\n          className: getValClass(prop)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"aw-layout-flexRow align-center aw-jswidgets-objectLinkContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"aw-jswidgets-objectLink\",\n      children: uiValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AwIconButton, {\n      command: fields.removeObject,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\nexport const addObjectHandler = props => {\n  const {\n    vmo,\n    name,\n    activeState\n  } = props;\n  let uiProperty;\n\n  if (vmo) {\n    uiProperty = vmo.props[name];\n  } else {\n    uiProperty = props;\n  }\n\n  if (uiProperty.propApi && uiProperty.propApi.showAddObject) {\n    uiProperty.propApi.showAddObject(uiProperty.propertyName);\n  } else {\n    let filterType;\n\n    if (uiProperty.propertyDescriptor && uiProperty.propertyDescriptor.constantsMap && uiProperty.propertyDescriptor.constantsMap.ReferencedTypeName) {\n      filterType = uiProperty.referenceTypeName !== undefined && uiProperty.referenceTypeName.length > 0 ? uiProperty.referenceTypeName : uiProperty.propertyDescriptor.constantsMap.ReferencedTypeName;\n    }\n\n    let searchFilter;\n\n    if (props && props.parameterMap) {\n      searchFilter = props.parameterMap.searchFilter;\n    }\n\n    let context = {\n      title: uiProperty.propertyDisplayName,\n      recreatePanel: true,\n      supportGoBack: true,\n      isolateMode: true,\n      viewModelProperty: {\n        onChange: props.onChange\n      },\n      addTypeRef: true,\n      filterTypes: filterType,\n      searchFilter: searchFilter,\n      vmo: vmo\n    }; // add reference title: Add <reference property>\n\n    context.title = uiProperty.propertyDisplayName;\n\n    if (activeState && activeState.activeView) {\n      let newActiveState = { ...activeState.getValue()\n      };\n      newActiveState.activeView = 'AddReferenceSub';\n      newActiveState.context = context;\n      activeState.update(newActiveState);\n    } else {\n      // Reference view can be leverage to pass a custom component\n      if (props.referenceView) {\n        commandPanelService.activateCommandPanel(props.referenceView, 'aw_toolsAndInfo', context);\n      } else {\n        commandPanelService.activateCommandPanel('Awp0AddReference', 'aw_toolsAndInfo', context);\n      }\n    }\n  }\n};\nexport const removeObjectHandler = props => {\n  event.preventDefault();\n  props.onChange({\n    target: {\n      value: {\n        uid: ''\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyObjectValService.js"],"names":["awObjectValRenderFunction","props","prop","isArray","uiValue","fields","getValClass","addObjectHandler","activeState","uiProperty","vmo","filterType","searchFilter","context","title","recreatePanel","supportGoBack","isolateMode","viewModelProperty","onChange","addTypeRef","filterTypes","newActiveState","commandPanelService","removeObjectHandler","event","target","value","uid"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwIconButton from 'viewmodel/AwIconButtonViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport commandPanelService from 'js/commandPanel.service';\n\n/**\n * render function for AwList\n * @param {*} param0 context for render function interpolation\n * @returns {JSX.Element} react component\n */\nexport const awObjectValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n\n    const { hasLov, isArray } = prop.fielddata;\n    if( hasLov ) {\n        return <AwPropertyLovVal {...prop} ></AwPropertyLovVal>;\n    }\n    const uiValue = prop.fielddata.uiValue;\n    if( uiValue === null || uiValue === undefined || uiValue.length === 0 || isArray ) {\n        return (\n            // if no uiValue, show add button\n            <div className = 'sw-fit-content' >\n                <AwIconButton command={fields.addObject} className={ getValClass( prop )}></AwIconButton>\n            </div>\n\n        );\n    }\n    return (\n        <span className='aw-layout-flexRow align-center aw-jswidgets-objectLinkContainer'>\n            <span className = 'aw-jswidgets-objectLink' >{uiValue}</span>\n            <AwIconButton command={fields.removeObject} className={ getValClass( prop )}></AwIconButton>\n        </span>\n    );\n};\n\nexport const addObjectHandler = ( props ) => {\n    const { vmo, name, activeState } = props;\n    let uiProperty;\n    if( vmo ) {\n        uiProperty = vmo.props[ name ];\n    } else {\n        uiProperty = props;\n    }\n    if( uiProperty.propApi && uiProperty.propApi.showAddObject ) {\n        uiProperty.propApi.showAddObject( uiProperty.propertyName );\n    } else {\n        let filterType;\n        if( uiProperty.propertyDescriptor &&\n            uiProperty.propertyDescriptor.constantsMap &&\n            uiProperty.propertyDescriptor.constantsMap.ReferencedTypeName ) {\n            filterType = uiProperty.referenceTypeName !== undefined && uiProperty.referenceTypeName.length > 0 ? uiProperty.referenceTypeName : uiProperty.propertyDescriptor.constantsMap\n                .ReferencedTypeName;\n        }\n        let searchFilter;\n        if( props && props.parameterMap ) {\n            searchFilter = props.parameterMap.searchFilter;\n        }\n        let context = {\n            title: uiProperty.propertyDisplayName,\n            recreatePanel: true,\n            supportGoBack: true,\n            isolateMode: true,\n            viewModelProperty: {\n                onChange: props.onChange\n            },\n            addTypeRef: true,\n            filterTypes: filterType,\n            searchFilter: searchFilter,\n            vmo: vmo\n        };\n        // add reference title: Add <reference property>\n        context.title = uiProperty.propertyDisplayName;\n\n        if( activeState && activeState.activeView ) {\n            let newActiveState = { ...activeState.getValue() };\n            newActiveState.activeView = 'AddReferenceSub';\n            newActiveState.context = context;\n            activeState.update( newActiveState );\n        } else {\n            // Reference view can be leverage to pass a custom component\n            if( props.referenceView ) {\n                commandPanelService.activateCommandPanel( props.referenceView, 'aw_toolsAndInfo', context );\n            } else {\n                commandPanelService.activateCommandPanel( 'Awp0AddReference', 'aw_toolsAndInfo', context );\n            }\n        }\n    }\n};\n\nexport const removeObjectHandler = ( props ) => {\n    event.preventDefault();\n\n    props.onChange( {\n        target: {\n            value: {\n                uid: ''\n            }\n        }\n    } );\n};\n"]},"metadata":{},"sourceType":"module"}