{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwStaticListCommandService.js\";\nimport AwListCommand from 'viewmodel/AwListCommandViewModel';\nimport AwCellCommandBar from 'viewmodel/AwCellCommandBarViewModel';\nimport conditionService from 'js/conditionService';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport { noop } from 'js/declUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awStaticListCommandRenderFunction = props => {\n  const {\n    viewModel,\n    ctx\n  } = props;\n  const {\n    data\n  } = viewModel;\n  const {\n    item,\n    index,\n    itemOptions,\n    dataprovider,\n    fixedCellHeight,\n    isGroupList\n  } = props;\n  const {\n    selectionModel,\n    selectedObjects,\n    json,\n    commands\n  } = dataprovider;\n  const {\n    multiSelectEnabled\n  } = selectionModel;\n  const {\n    commandsAnchor\n  } = json; // Setup context based on item\n\n  const context = {\n    vmo: item,\n    itemOptions,\n    context: props.context\n  }; // TODO\n\n  const conditionFilter = command => {\n    const evaluationEnvironment = {\n      ctx,\n      data\n    };\n    return !command.condition || conditionService.evaluateCondition(data, command.condition, evaluationEnvironment);\n  };\n\n  let [listCommands, cellCommands] = []; // <!-- any use case for this ?  -->\n\n  if (!commandsAnchor) {\n    listCommands = commands ? commands.reduce((total, command, index) => {\n      // TODO\n      if (conditionFilter(command)) {\n        const cellProps = {\n          command,\n          itemOptions,\n          vmo: item\n        };\n\n        const listCommand = /*#__PURE__*/_createElement(AwListCommand, { ...cellProps,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }\n        });\n\n        total.push(listCommand);\n      }\n\n      return total;\n    }, []) : null;\n  } else {\n    const cellProps = {\n      context,\n      anchor: commandsAnchor\n    };\n    cellCommands = /*#__PURE__*/_createElement(AwCellCommandBar, { ...cellProps,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }\n    });\n  }\n\n  const processFixedCellHeight = () => {\n    if (fixedCellHeight && multiSelectEnabled && item.selected) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: noop,\n        className: \"aw-commands-cellCommandCommon\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-commands-svg\",\n          children: /*#__PURE__*/_jsxDEV(AwIcon, {\n            iconId: \"cmdCheckmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aw-widgets-cellListCellCommands aw-widgets-cellInteraction\",\n    children: [processFixedCellHeight(), !multiSelectEnabled && (selectedObjects.length === 1 || !item.selected) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-widgets-cellCommandsContainer aw-cell-command-bar\",\n      children: [listCommands, cellCommands]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwStaticListCommandService.js"],"names":["awStaticListCommandRenderFunction","props","ctx","data","isGroupList","commands","multiSelectEnabled","commandsAnchor","context","vmo","conditionFilter","command","evaluationEnvironment","conditionService","listCommands","cellProps","item","listCommand","total","anchor","cellCommands","processFixedCellHeight","fixedCellHeight","selectedObjects"],"mappings":"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","sourcesContent":["import AwListCommand from 'viewmodel/AwListCommandViewModel';\nimport AwCellCommandBar from 'viewmodel/AwCellCommandBarViewModel';\nimport conditionService from 'js/conditionService';\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport { noop } from 'js/declUtils';\n\nexport const awStaticListCommandRenderFunction = ( props ) => {\n    const { viewModel, ctx } = props;\n    const { data } = viewModel;\n    const { item, index, itemOptions, dataprovider, fixedCellHeight, isGroupList } = props;\n    const { selectionModel, selectedObjects, json, commands } = dataprovider;\n    const { multiSelectEnabled } = selectionModel;\n    const { commandsAnchor } = json;\n\n    // Setup context based on item\n    const context = { vmo: item, itemOptions, context: props.context };\n\n    // TODO\n    const conditionFilter = ( command ) => {\n        const evaluationEnvironment = { ctx, data };\n        return !command.condition || conditionService.evaluateCondition( data, command.condition, evaluationEnvironment );\n    };\n\n    let [ listCommands, cellCommands ] = [];\n    // <!-- any use case for this ?  -->\n    if( !commandsAnchor ) {\n        listCommands = commands ? commands.reduce( ( total, command, index ) => {\n            // TODO\n            if( conditionFilter( command ) ) {\n                const cellProps = { command, itemOptions, vmo: item };\n                const listCommand = <AwListCommand {...cellProps} key={index}></AwListCommand>;\n                total.push( listCommand );\n            }\n            return total;\n        }, [] ) : null;\n    } else {\n        const cellProps = { context, anchor: commandsAnchor };\n        cellCommands = <AwCellCommandBar {...cellProps} key={index}></AwCellCommandBar>;\n    }\n\n    const processFixedCellHeight = () => {\n        if( fixedCellHeight && multiSelectEnabled && item.selected ) {\n            return <a href={noop} className='aw-commands-cellCommandCommon'>\n                <div className='aw-commands-svg'>\n                    <AwIcon iconId='cmdCheckmark'></AwIcon>\n                </div>\n            </a>;\n        }\n    };\n\n    return (\n        <div className='aw-widgets-cellListCellCommands aw-widgets-cellInteraction' key={index}>\n            { processFixedCellHeight() }\n\n            { !multiSelectEnabled && ( selectedObjects.length === 1 || !item.selected )\n                &&\n                <div className='aw-widgets-cellCommandsContainer aw-cell-command-bar'>\n                    {listCommands}\n                    {cellCommands}\n                </div>\n            }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}