{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwDoubleValService.js\";\n// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awDoubleValRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props; // use simple non-edit val if not editing\n\n  if (!prop.fielddata.isEditable) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  let sanitizedProps = sanitizer.sanitizeHTMLTagProps(prop, 'input');\n  const inputClass = getValClass(props);\n\n  var handleChange = event => {\n    if (prop.typex === 'DOUBLEARRAY') {\n      let newVal = event.target.value.replace(/[^\\+|\\-|0-9\\.|e]/g, '');\n      event.target.value = newVal;\n    }\n  };\n\n  var keyPressed = event => {\n    if (event.key === 'Enter' || event.type === 'blur' && prop.typex === 'DOUBLEARRAY') {\n      event.preventDefault();\n      prop.onChange(event);\n      event.target.value = '';\n    }\n  };\n\n  if (prop.fielddata.renderingHint === 'label') {\n    return /*#__PURE__*/_jsxDEV(AwPropertyNonEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  } else if (!prop.fielddata.renderingHint && prop.fielddata.hasLov) {\n    return /*#__PURE__*/_jsxDEV(AwPropertyLovVal, { ...prop,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  } else if (prop.typex === 'DOUBLEARRAY') {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      maxLength: prop.maxLength,\n      \"data-locator\": prop.label,\n      \"aria-required\": prop.isRequired,\n      placeholder: prop.placeholder,\n      className: inputClass,\n      onChange: handleChange,\n      onKeyPress: keyPressed,\n      onBlur: keyPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", { ...sanitizedProps,\n    className: inputClass,\n    type: \"text\",\n    autoComplete: \"off\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["AwPropertyNonEditVal","AwPropertyLovVal","sanitizer","getValClass","awDoubleValRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","prop","fielddata","isEditable","sanitizedProps","sanitizeHTMLTagProps","inputClass","handleChange","event","typex","newVal","target","value","replace","keyPressed","key","type","preventDefault","onChange","renderingHint","hasLov","maxLength","label","isRequired","placeholder"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwDoubleValService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\nimport AwPropertyNonEditVal from 'viewmodel/AwPropertyNonEditValViewModel';\nimport AwPropertyLovVal from 'viewmodel/AwPropertyLovValViewModel';\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\n\nexport const awDoubleValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    // use simple non-edit val if not editing\n    if( !prop.fielddata.isEditable ) {\n        return (\n            <AwPropertyNonEditVal {...prop}></AwPropertyNonEditVal>\n        );\n    }\n\n    let sanitizedProps = sanitizer.sanitizeHTMLTagProps( prop, 'input' );\n    const inputClass = getValClass( props );\n\n    var handleChange = ( event ) => {\n        if( prop.typex === 'DOUBLEARRAY' ) {\n            let newVal = event.target.value.replace( /[^\\+|\\-|0-9\\.|e]/g, '' );\n            event.target.value = newVal;\n        }\n    };\n    var keyPressed = ( event ) => {\n        if( event.key === 'Enter' || event.type === 'blur' && prop.typex === 'DOUBLEARRAY' ) {\n            event.preventDefault();\n            prop.onChange( event );\n            event.target.value = '';\n        }\n    };\n    if( prop.fielddata.renderingHint === 'label' ) {\n        return (\n            <AwPropertyNonEditVal {...prop} ></AwPropertyNonEditVal>\n        );\n    } else if( !prop.fielddata.renderingHint && prop.fielddata.hasLov ) {\n        return (\n            <AwPropertyLovVal {...prop} onChange={handleChange}></AwPropertyLovVal>\n        );\n    } else if( prop.typex === 'DOUBLEARRAY' ) {\n        return (\n            <input type='text' maxLength={prop.maxLength} data-locator={prop.label} aria-required={prop.isRequired} placeholder={prop.placeholder} className={inputClass} onChange={handleChange} onKeyPress={keyPressed} onBlur={keyPressed}/>\n        );\n    }\n    return (\n        <input {...sanitizedProps} className={inputClass} type='text' autoComplete='off'/>\n    );\n};\n"],"mappings":";AAAA;AACA,OAAOA,oBAAP,MAAiC,yCAAjC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,OAAO,MAAMC,yBAAyB,GAAKC,KAAF,IAAa;EAClD,MAAM;IACFC,SADE;IAEFC,MAFE;IAGFC,OAHE;IAIFC,IAJE;IAKFC,MALE;IAMFC,KANE;IAOFC,QAPE;IAQFC,QARE;IASF,GAAGC;EATD,IAUFT,KAVJ,CADkD,CAYlD;;EACA,IAAI,CAACS,IAAI,CAACC,SAAL,CAAeC,UAApB,EAAiC;IAC7B,oBACI,QAAC,oBAAD,OAA0BF;IAA1B;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;EAED,IAAIG,cAAc,GAAGf,SAAS,CAACgB,oBAAV,CAAgCJ,IAAhC,EAAsC,OAAtC,CAArB;EACA,MAAMK,UAAU,GAAGhB,WAAW,CAAEE,KAAF,CAA9B;;EAEA,IAAIe,YAAY,GAAKC,KAAF,IAAa;IAC5B,IAAIP,IAAI,CAACQ,KAAL,KAAe,aAAnB,EAAmC;MAC/B,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA4B,mBAA5B,EAAiD,EAAjD,CAAb;MACAL,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqBF,MAArB;IACH;EACJ,CALD;;EAMA,IAAII,UAAU,GAAKN,KAAF,IAAa;IAC1B,IAAIA,KAAK,CAACO,GAAN,KAAc,OAAd,IAAyBP,KAAK,CAACQ,IAAN,KAAe,MAAf,IAAyBf,IAAI,CAACQ,KAAL,KAAe,aAArE,EAAqF;MACjFD,KAAK,CAACS,cAAN;MACAhB,IAAI,CAACiB,QAAL,CAAeV,KAAf;MACAA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqB,EAArB;IACH;EACJ,CAND;;EAOA,IAAIX,IAAI,CAACC,SAAL,CAAeiB,aAAf,KAAiC,OAArC,EAA+C;IAC3C,oBACI,QAAC,oBAAD,OAA0BlB;IAA1B;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAJD,MAIO,IAAI,CAACA,IAAI,CAACC,SAAL,CAAeiB,aAAhB,IAAiClB,IAAI,CAACC,SAAL,CAAekB,MAApD,EAA6D;IAChE,oBACI,QAAC,gBAAD,OAAsBnB,IAAtB;MAA4B,QAAQ,EAAEM;IAAtC;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAJM,MAIA,IAAIN,IAAI,CAACQ,KAAL,KAAe,aAAnB,EAAmC;IACtC,oBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,SAAS,EAAER,IAAI,CAACoB,SAAnC;MAA8C,gBAAcpB,IAAI,CAACqB,KAAjE;MAAwE,iBAAerB,IAAI,CAACsB,UAA5F;MAAwG,WAAW,EAAEtB,IAAI,CAACuB,WAA1H;MAAuI,SAAS,EAAElB,UAAlJ;MAA8J,QAAQ,EAAEC,YAAxK;MAAsL,UAAU,EAAEO,UAAlM;MAA8M,MAAM,EAAEA;IAAtN;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;EACD,oBACI,sBAAWV,cAAX;IAA2B,SAAS,EAAEE,UAAtC;IAAkD,IAAI,EAAC,MAAvD;IAA8D,YAAY,EAAC;EAA3E;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAnDM"},"metadata":{},"sourceType":"module"}