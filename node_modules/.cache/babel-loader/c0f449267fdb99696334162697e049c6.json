{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/* eslint-env es6 */\n\n/**\n * This represents the Location Navigation and tracking\n *\n * @module js/locationNavigation.service\n */\n// module\nimport eventBus from 'js/eventBus';\nimport logger from 'js/logger';\nimport appCtxService from 'js/appCtxService'; // service\n\nimport AwBaseService from 'js/awBaseService';\nimport AwStateService from 'js/awStateService';\nimport AwUrlMatcherFactoryService from 'js/awUrlMatcherFactoryService';\nimport localeService from 'js/localeService';\nimport debugService from 'js/debugService';\nimport _ from 'lodash';\nexport default class LocationNavigationService extends AwBaseService {\n  // Only for unit test purpose\n  static reset() {\n    // leavePlaceSvc.reset();\n    AwBaseService.reset.apply(this);\n    AwStateService.reset();\n  }\n\n  constructor() {\n    super(); // service and module references\n\n    this._state = AwStateService.instance; // members\n\n    this._stateStackNames = null;\n    this._stateStack = null;\n    this._popState = null;\n    this._goBackInProgress = false;\n    this._xrtShowObjectState = ['com_siemens_splm_clientfx_tcui_xrt_showObject', 'com_siemens_splm_clientfx_tcui_xrt_showMultiObject'];\n    /**\n     * {Integer} The number of previous states that will be persisted for navigation from back button.\n     * If the number of states exceeds this count, the earliest state will be forgotten.\n     */\n\n    this._persistentStatesCount = 24;\n    this.init();\n    eventBus.subscribe('locationChangeSuccess', _ref => {\n      let {\n        event,\n        oldUrl,\n        newUrl\n      } = _ref;\n      var newLocation = this.parseUrl(newUrl);\n      var oldLocation = this.parseUrl(oldUrl);\n      /*\n       * Several location changes are made during show object location as query parameters are added do not\n       * want to check changes until toLocation are valid locations\n       */\n\n      if (newLocation.params && newLocation.params.uid) {\n        if (oldLocation.params) {\n          if (oldLocation.params.uid && newLocation.params.uid !== oldLocation.params.uid || newLocation.params.uid === oldLocation.params.uid && newLocation.state.name !== oldLocation.state.name) {\n            this.routeStateChangeSuccess(newLocation.state, newLocation.params, oldLocation.state, oldLocation.params);\n          }\n        } else {\n          this.routeStateChangeSuccess(newLocation.state, newLocation.params, oldLocation.state, oldLocation.params);\n        }\n      }\n\n      if (this._goBackInProgress === true) {\n        this._goBackInProgress = false;\n      }\n\n      eventBus.publish('$locationChangeSuccess', {\n        event,\n        newUrl,\n        oldUrl\n      });\n      logger.trace('#### locationChangeSuccess changed! new: ' + newUrl + ', oldUrl: ' + oldUrl);\n    });\n    window.addEventListener('resize', () => {\n      eventBus.publish('aw.windowResize');\n    });\n  }\n  /**\n   * Initializes the previous routes and route names if they are present in sessionStorage\n   */\n\n\n  init() {\n    this._stateStack = [];\n    this._stateStackNames = [];\n\n    try {\n      if (sessionStorage.getItem('STATES_ARRAY_NAMES') && sessionStorage.getItem('STATES_ARRAY')) {\n        this._stateStackNames = JSON.parse(sessionStorage.getItem('STATES_ARRAY_NAMES'));\n        this._stateStack = JSON.parse(sessionStorage.getItem('STATES_ARRAY'));\n      }\n    } catch (e) {\n      logger.trace('Error in location initiation', e);\n    }\n  }\n  /**\n   * Function parses a URL and returns an object consisting of state and params\n   * @param {string} url url input as string\n   * @returns {object} URL object with parse result\n   */\n\n\n  parseUrl(url) {\n    let urlMatcherFactory = AwUrlMatcherFactoryService.instance;\n    var stateStart = url.lastIndexOf('#');\n    var paramsStart = url.lastIndexOf('?');\n    var state = url.substring(stateStart + 1);\n    var paramsStr = '';\n    var params = {};\n\n    if (paramsStart > -1) {\n      state = url.substring(stateStart + 1, paramsStart);\n      paramsStr = url.substr(paramsStart + 1);\n      var paramPairs = paramsStr.split('&');\n\n      for (var i = 0; i < paramPairs.length; i++) {\n        var keyValue = paramPairs[i].split('=');\n\n        if (keyValue.length === 2) {\n          params[keyValue[0]] = urlMatcherFactory.type('string').decode(decodeURIComponent(keyValue[1]));\n        }\n      }\n    }\n\n    if (state === '/com.siemens.splm.clientfx.tcui.xrt.showObject') {\n      state = this._xrtShowObjectState[0];\n    } else if (state === '/com.siemens.splm.clientfx.tcui.xrt.showMultiObject') {\n      state = this._xrtShowObjectState[1];\n    } else if (state.charAt(0) === '/') {\n      state = state.substring(1);\n    }\n\n    return {\n      state: {\n        name: state.split('/').slice(-1)[0]\n      },\n      params: params,\n      url: url\n    };\n  }\n  /**\n   * goBack function wired to the goBack Button\n   */\n\n\n  goBack() {\n    this._popState = this._stateStack.pop();\n    sessionStorage.setItem('STATES_ARRAY', JSON.stringify(this._stateStack));\n\n    this._stateStackNames.pop();\n\n    sessionStorage.setItem('STATES_ARRAY_NAMES', JSON.stringify(this._stateStackNames));\n    appCtxService.registerCtx('previousLocationDisplayName', this.getGoBackLocation());\n\n    if (this._popState && this._popState.state) {\n      logger.trace('&&&&& go pop state' + this._popState.state.name);\n      this._goBackInProgress = true;\n\n      this._state.go(this._popState.state.name, this._popState.params, {\n        inherit: false\n      });\n    }\n  }\n\n  peekLastState() {\n    if (this._stateStack && this._stateStack.length > 0) {\n      return this._stateStack[this._stateStack.length - 1];\n    }\n\n    return undefined;\n  }\n\n  getGoBackLocation() {\n    if (this._stateStackNames && this._stateStackNames.length > 0) {\n      return this._stateStackNames[this._stateStackNames.length - 1];\n    }\n\n    return localeService.getLoadedTextFromKey('UIMessages.noPreviousLocation');\n  }\n\n  updateCurrentDisplayName() {\n    var title = document.title;\n\n    if (this._stateStackNames && this._stateStackNames.length > 0) {\n      let stackNameLen = this._stateStackNames.length;\n      title !== '' ? this._stateStackNames[stackNameLen - 1] = title.substr(title.indexOf('-') + 1) : this._stateStackNames[stackNameLen - 1] = this._stateStackNames[stackNameLen - 1].substr(this._stateStackNames[stackNameLen - 1].indexOf('-') + 1);\n      sessionStorage.setItem('STATES_ARRAY', JSON.stringify(this._stateStack));\n    }\n\n    if (this._stateStackNames && this._stateStackNames.length === 0 && !_.isEmpty(title)) {\n      this._stateStackNames[0] = title.substr(title.indexOf('-') + 1);\n      sessionStorage.setItem('STATES_ARRAY', JSON.stringify(this._stateStack));\n    }\n\n    return undefined;\n  }\n\n  ifCurrentDisplayNameToBeUpdated(fromState, toState) {\n    // following conditions when to update the current display name:\n    // a. When current page is refreshed\n    // b. When this fn is invoked from routeChangeHandler\n    // c. When this fn invoked from locationChangeSuccess however previous state and nextState is same\n    if (fromState.name === '' && fromState.url === '^' || fromState.parent && toState.parent || !toState.parent && toState.name === fromState.name) {\n      this.updateCurrentDisplayName();\n    }\n  }\n  /**\n   * Invoked when the state change was successful from UI router\n   * @param {object} event event body\n   * @param {object} toState state object transit to\n   * @param {object} toParams paramters for toState\n   * @param {object} fromState state object transit from\n   * @param {object} fromParams parameters for fromState\n   */\n\n\n  routeStateChangeSuccess(toState, toParams, fromState, fromParams) {\n    debugService.debug('routes', fromState.name, toState.name);\n\n    if (fromState && fromState.name !== 'checkAuthentication') {\n      if (this._popState && this._popState.state.name === toState.name && this._goBackInProgress === true) {\n        this._popState = null;\n        return; // revisitme- ported as it is during rebase in uirouter react there are no events\n        // This condition needed to restrict to save state on stack once user clicked on back button more than once\n        // and state name is different (Reference defect -LCS-462441)\n        // if( !( event.name === '$locationChangeSuccess' && fromState.name !== toState.name ) ) {\n        //     this._popState = null;\n        // }\n        // return;\n      } // the below check is required in afx-next to restrict locationChangeSuccess code to\n      // invoke the state persisting logic down below during a goBack operation; During a goBack\n      // operation, routeChangeHandler triggers routeStateChangeSuccess to persist the state information;\n      // we do not want the locationChangeSuccess to invoke this fn again in turn saving the goback\n      // state as a new state again in turn causing the goBack command to navigate in circles between 2 locations\n\n\n      if (this._goBackInProgress === true && this._popState === null) {\n        this._goBackInProgress = false;\n        return;\n      }\n\n      if (toState && toState.parent && fromState && fromState.parent && toState.parent === fromState.parent) {\n        return;\n      }\n\n      let title = _.isEmpty(document.title) ? localeService.getLoadedTextFromKey('UIMessages.noPreviousLocation') : document.title;\n      var newState = {\n        state: fromState,\n        params: fromParams,\n        displayName: title\n      };\n\n      if (this._stateStack.length > 0) {\n        var lastState = this.peekLastState();\n\n        if (lastState.state.name !== newState.state.name && newState.state.name !== '') {\n          this._stateStack.push(newState);\n\n          this._stateStackNames.push(newState.displayName);\n\n          logger.trace('^^^^1 pushing newState ' + newState.state.name);\n        } else if (newState.state.name !== '' && lastState.params.uid !== newState.params.uid && (newState.params.uid !== toParams.uid || newState.state.name !== toState.name)) {\n          this._stateStack.push(newState);\n\n          this._stateStackNames.push(newState.displayName);\n\n          logger.trace('^^^^2 pushing newState ' + newState.state.name);\n        }\n      } else if (!newState.state.abstract) {\n        this._stateStack.push(newState);\n\n        this._stateStackNames.push(newState.displayName);\n\n        logger.trace('^^^^3 pushing newState ' + newState.state.name);\n      } // If persisted states count exceeds allowed count, remove earliest state\n\n\n      if (this._stateStack.length > this._persistentStatesCount) {\n        this._stateStack.shift();\n\n        this._stateStackNames.shift();\n      }\n\n      sessionStorage.setItem('STATES_ARRAY_NAMES', JSON.stringify(this._stateStackNames));\n      sessionStorage.setItem('STATES_ARRAY', JSON.stringify(this._stateStack));\n      this.ifCurrentDisplayNameToBeUpdated(fromState, toState);\n    } // Once location is changed, fix focus navigation starting point ( check solution )\n    //https://sarahmhigley.com/writing/focus-navigation-start-point/#assistive-tech-support\n\n\n    let eleToFocus = document.querySelector('.aw-skip-to-main-container');\n\n    if (eleToFocus !== null) {\n      eleToFocus.focus();\n    }\n\n    appCtxService.registerCtx('previousLocationDisplayName', this.getGoBackLocation());\n  }\n  /**\n   * Function to update the state parameter\n   * @param {string} paramName parameter name\n   * @param {string} paramValue parameter value\n   */\n\n\n  updateStateParameter(paramName, paramValue) {\n    this._state.params[paramName] = paramValue;\n\n    this._state.go('.', this._state.params, {\n      inherit: true\n    });\n  }\n  /**\n   * Function to transition to a new state\n   * @param {string} transitionTo URL that transit to\n   * @param {object} toParams parameter for transitionTo\n   * @param {object} options transition options\n   */\n\n\n  go(transitionTo, toParams, options) {\n    this._state.go(transitionTo, toParams, options);\n  }\n\n}","map":{"version":3,"names":["eventBus","logger","appCtxService","AwBaseService","AwStateService","AwUrlMatcherFactoryService","localeService","debugService","_","LocationNavigationService","reset","apply","constructor","_state","instance","_stateStackNames","_stateStack","_popState","_goBackInProgress","_xrtShowObjectState","_persistentStatesCount","init","subscribe","event","oldUrl","newUrl","newLocation","parseUrl","oldLocation","params","uid","state","name","routeStateChangeSuccess","publish","trace","window","addEventListener","sessionStorage","getItem","JSON","parse","e","url","urlMatcherFactory","stateStart","lastIndexOf","paramsStart","substring","paramsStr","substr","paramPairs","split","i","length","keyValue","type","decode","decodeURIComponent","charAt","slice","goBack","pop","setItem","stringify","registerCtx","getGoBackLocation","go","inherit","peekLastState","undefined","getLoadedTextFromKey","updateCurrentDisplayName","title","document","stackNameLen","indexOf","isEmpty","ifCurrentDisplayNameToBeUpdated","fromState","toState","parent","toParams","fromParams","debug","newState","displayName","lastState","push","abstract","shift","eleToFocus","querySelector","focus","updateStateParameter","paramName","paramValue","transitionTo","options"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/ui/src/js/locationNavigation.service.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n/* eslint-env es6 */\n\n/**\n * This represents the Location Navigation and tracking\n *\n * @module js/locationNavigation.service\n */\n\n// module\nimport eventBus from 'js/eventBus';\nimport logger from 'js/logger';\nimport appCtxService from 'js/appCtxService';\n\n// service\nimport AwBaseService from 'js/awBaseService';\nimport AwStateService from 'js/awStateService';\nimport AwUrlMatcherFactoryService from 'js/awUrlMatcherFactoryService';\nimport localeService from 'js/localeService';\nimport debugService from 'js/debugService';\nimport _ from 'lodash';\n\nexport default class LocationNavigationService extends AwBaseService {\n    // Only for unit test purpose\n    static reset() {\n        // leavePlaceSvc.reset();\n        AwBaseService.reset.apply( this );\n        AwStateService.reset();\n    }\n    constructor() {\n        super();\n\n        // service and module references\n        this._state = AwStateService.instance;\n\n        // members\n        this._stateStackNames = null;\n\n        this._stateStack = null;\n\n        this._popState = null;\n\n        this._goBackInProgress = false;\n\n        this._xrtShowObjectState = [ 'com_siemens_splm_clientfx_tcui_xrt_showObject', 'com_siemens_splm_clientfx_tcui_xrt_showMultiObject' ];\n\n        /**\n         * {Integer} The number of previous states that will be persisted for navigation from back button.\n         * If the number of states exceeds this count, the earliest state will be forgotten.\n         */\n        this._persistentStatesCount = 24;\n\n        this.init();\n\n        eventBus.subscribe( 'locationChangeSuccess', ( { event, oldUrl, newUrl } ) => {\n            var newLocation = this.parseUrl( newUrl );\n            var oldLocation = this.parseUrl( oldUrl );\n\n            /*\n             * Several location changes are made during show object location as query parameters are added do not\n             * want to check changes until toLocation are valid locations\n             */\n            if( newLocation.params && newLocation.params.uid ) {\n                if( oldLocation.params ) {\n                    if( oldLocation.params.uid && newLocation.params.uid !== oldLocation.params.uid ||\n                        newLocation.params.uid === oldLocation.params.uid && newLocation.state.name !== oldLocation.state.name ) {\n                        this.routeStateChangeSuccess( newLocation.state, newLocation.params,\n                            oldLocation.state, oldLocation.params );\n                    }\n                } else {\n                    this.routeStateChangeSuccess( newLocation.state, newLocation.params,\n                        oldLocation.state, oldLocation.params );\n                }\n            }\n            if( this._goBackInProgress === true ) {\n                this._goBackInProgress = false;\n            }\n            eventBus.publish( '$locationChangeSuccess', { event, newUrl, oldUrl } );\n            logger.trace( '#### locationChangeSuccess changed! new: ' + newUrl + ', oldUrl: ' + oldUrl );\n        } );\n        window.addEventListener( 'resize', () => {\n            eventBus.publish( 'aw.windowResize' );\n        } );\n    }\n\n    /**\n     * Initializes the previous routes and route names if they are present in sessionStorage\n     */\n    init() {\n        this._stateStack = [];\n        this._stateStackNames = [];\n        try {\n            if( sessionStorage.getItem( 'STATES_ARRAY_NAMES' ) && sessionStorage.getItem( 'STATES_ARRAY' ) ) {\n                this._stateStackNames = JSON.parse( sessionStorage.getItem( 'STATES_ARRAY_NAMES' ) );\n                this._stateStack = JSON.parse( sessionStorage.getItem( 'STATES_ARRAY' ) );\n            }\n        } catch ( e ) {\n            logger.trace( 'Error in location initiation', e );\n        }\n    }\n\n    /**\n     * Function parses a URL and returns an object consisting of state and params\n     * @param {string} url url input as string\n     * @returns {object} URL object with parse result\n     */\n    parseUrl( url ) {\n        let urlMatcherFactory = AwUrlMatcherFactoryService.instance;\n        var stateStart = url.lastIndexOf( '#' );\n        var paramsStart = url.lastIndexOf( '?' );\n        var state = url.substring( stateStart + 1 );\n        var paramsStr = '';\n        var params = {};\n        if( paramsStart > -1 ) {\n            state = url.substring( stateStart + 1, paramsStart );\n            paramsStr = url.substr( paramsStart + 1 );\n            var paramPairs = paramsStr.split( '&' );\n            for( var i = 0; i < paramPairs.length; i++ ) {\n                var keyValue = paramPairs[ i ].split( '=' );\n                if( keyValue.length === 2 ) {\n                    params[ keyValue[ 0 ] ] = urlMatcherFactory.type( 'string' )\n                        .decode( decodeURIComponent( keyValue[ 1 ] ) );\n                }\n            }\n        }\n\n        if( state === '/com.siemens.splm.clientfx.tcui.xrt.showObject' ) {\n            state = this._xrtShowObjectState[ 0 ];\n        } else if( state === '/com.siemens.splm.clientfx.tcui.xrt.showMultiObject' ) {\n            state = this._xrtShowObjectState[ 1 ];\n        } else if( state.charAt( 0 ) === '/' ) {\n            state = state.substring( 1 );\n        }\n        return {\n            state: {\n                name: state.split( '/' ).slice( -1 )[ 0 ]\n            },\n            params: params,\n            url: url\n        };\n    }\n\n    /**\n     * goBack function wired to the goBack Button\n     */\n    goBack() {\n        this._popState = this._stateStack.pop();\n\n        sessionStorage.setItem( 'STATES_ARRAY', JSON.stringify( this._stateStack ) );\n\n        this._stateStackNames.pop();\n\n        sessionStorage.setItem( 'STATES_ARRAY_NAMES', JSON.stringify( this._stateStackNames ) );\n\n        appCtxService.registerCtx( 'previousLocationDisplayName', this.getGoBackLocation() );\n\n        if( this._popState && this._popState.state ) {\n            logger.trace( '&&&&& go pop state' + this._popState.state.name );\n            this._goBackInProgress = true;\n            this._state.go( this._popState.state.name, this._popState.params, {\n                inherit: false\n            } );\n        }\n    }\n\n    peekLastState() {\n        if( this._stateStack && this._stateStack.length > 0 ) {\n            return this._stateStack[ this._stateStack.length - 1 ];\n        }\n        return undefined;\n    }\n\n    getGoBackLocation() {\n        if( this._stateStackNames && this._stateStackNames.length > 0 ) {\n            return this._stateStackNames[ this._stateStackNames.length - 1 ];\n        }\n        return localeService.getLoadedTextFromKey( 'UIMessages.noPreviousLocation' );\n    }\n\n    updateCurrentDisplayName() {\n        var title = document.title;\n        if( this._stateStackNames && this._stateStackNames.length > 0 ) {\n            let stackNameLen = this._stateStackNames.length;\n            title !== '' ? this._stateStackNames[ stackNameLen - 1 ] = title.substr( title.indexOf( '-' ) + 1 ) : this._stateStackNames[ stackNameLen - 1 ] = this._stateStackNames[ stackNameLen - 1 ]\n                .substr( this._stateStackNames[ stackNameLen - 1 ]\n                    .indexOf( '-' ) + 1 );\n            sessionStorage.setItem( 'STATES_ARRAY', JSON.stringify( this._stateStack ) );\n        }\n        if( this._stateStackNames && this._stateStackNames.length === 0 && !_.isEmpty( title ) ) {\n            this._stateStackNames[ 0 ] = title.substr( title.indexOf( '-' ) + 1 );\n            sessionStorage.setItem( 'STATES_ARRAY', JSON.stringify( this._stateStack ) );\n        }\n        return undefined;\n    }\n\n    ifCurrentDisplayNameToBeUpdated( fromState, toState ) {\n        // following conditions when to update the current display name:\n        // a. When current page is refreshed\n        // b. When this fn is invoked from routeChangeHandler\n        // c. When this fn invoked from locationChangeSuccess however previous state and nextState is same\n        if( fromState.name === '' && fromState.url === '^' || fromState.parent && toState.parent || !toState.parent && toState.name === fromState.name ) {\n            this.updateCurrentDisplayName();\n        }\n    }\n\n    /**\n     * Invoked when the state change was successful from UI router\n     * @param {object} event event body\n     * @param {object} toState state object transit to\n     * @param {object} toParams paramters for toState\n     * @param {object} fromState state object transit from\n     * @param {object} fromParams parameters for fromState\n     */\n    routeStateChangeSuccess( toState, toParams, fromState, fromParams ) {\n        debugService.debug( 'routes', fromState.name, toState.name );\n        if( fromState && fromState.name !== 'checkAuthentication' ) {\n            if( this._popState && this._popState.state.name === toState.name && this._goBackInProgress === true ) {\n                this._popState = null;\n                return;\n                // revisitme- ported as it is during rebase in uirouter react there are no events\n                // This condition needed to restrict to save state on stack once user clicked on back button more than once\n                // and state name is different (Reference defect -LCS-462441)\n                // if( !( event.name === '$locationChangeSuccess' && fromState.name !== toState.name ) ) {\n                //     this._popState = null;\n                // }\n                // return;\n            }\n            // the below check is required in afx-next to restrict locationChangeSuccess code to\n            // invoke the state persisting logic down below during a goBack operation; During a goBack\n            // operation, routeChangeHandler triggers routeStateChangeSuccess to persist the state information;\n            // we do not want the locationChangeSuccess to invoke this fn again in turn saving the goback\n            // state as a new state again in turn causing the goBack command to navigate in circles between 2 locations\n            if( this._goBackInProgress === true && this._popState === null ) {\n                this._goBackInProgress = false;\n                return;\n            }\n\n            if( toState && toState.parent && fromState && fromState.parent && toState.parent === fromState.parent ) {\n                return;\n            }\n\n            let title = _.isEmpty( document.title ) ? localeService.getLoadedTextFromKey( 'UIMessages.noPreviousLocation' ) : document.title;\n            var newState = {\n                state: fromState,\n                params: fromParams,\n                displayName: title\n            };\n\n            if( this._stateStack.length > 0 ) {\n                var lastState = this.peekLastState();\n\n                if( lastState.state.name !== newState.state.name && newState.state.name !== '' ) {\n                    this._stateStack.push( newState );\n                    this._stateStackNames.push( newState.displayName );\n                    logger.trace( '^^^^1 pushing newState ' + newState.state.name );\n                } else if( newState.state.name !== '' && lastState.params.uid !== newState.params.uid &&\n                    ( newState.params.uid !== toParams.uid || newState.state.name !== toState.name ) ) {\n                    this._stateStack.push( newState );\n                    this._stateStackNames.push( newState.displayName );\n                    logger.trace( '^^^^2 pushing newState ' + newState.state.name );\n                }\n            } else if( !newState.state.abstract ) {\n                this._stateStack.push( newState );\n                this._stateStackNames.push( newState.displayName );\n                logger.trace( '^^^^3 pushing newState ' + newState.state.name );\n            }\n            // If persisted states count exceeds allowed count, remove earliest state\n            if( this._stateStack.length > this._persistentStatesCount ) {\n                this._stateStack.shift();\n                this._stateStackNames.shift();\n            }\n\n            sessionStorage.setItem( 'STATES_ARRAY_NAMES', JSON.stringify( this._stateStackNames ) );\n            sessionStorage.setItem( 'STATES_ARRAY', JSON.stringify( this._stateStack ) );\n            this.ifCurrentDisplayNameToBeUpdated( fromState, toState );\n        }\n        // Once location is changed, fix focus navigation starting point ( check solution )\n        //https://sarahmhigley.com/writing/focus-navigation-start-point/#assistive-tech-support\n        let eleToFocus = document.querySelector( '.aw-skip-to-main-container' );\n        if( eleToFocus !== null ) {\n            eleToFocus.focus();\n        }\n\n        appCtxService.registerCtx( 'previousLocationDisplayName', this.getGoBackLocation() );\n    }\n\n    /**\n     * Function to update the state parameter\n     * @param {string} paramName parameter name\n     * @param {string} paramValue parameter value\n     */\n    updateStateParameter( paramName, paramValue ) {\n        this._state.params[ paramName ] = paramValue;\n        this._state.go( '.', this._state.params, {\n            inherit: true\n        } );\n    }\n\n    /**\n     * Function to transition to a new state\n     * @param {string} transitionTo URL that transit to\n     * @param {object} toParams parameter for transitionTo\n     * @param {object} options transition options\n     */\n    go( transitionTo, toParams, options ) {\n        this._state.go( transitionTo, toParams, options );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}