{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwCheckboxValService.js\"; // Copyright (c) 2021 Siemens\n\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awCheckboxValRenderFunction = props => {\n  let filteredAttrs = sanitizer.sanitizeHTMLTagProps(props, 'input');\n  const inputClass = getValClass(props);\n  const isNegatedClass = props.isNegated ? 'checkbox-negated' : ''; // call the onChange handler\n  // and the action handler if it is set\n\n  const callAction = ev => {\n    props.onChange && props.onChange(ev);\n    return props.action ? props.action(ev) : '';\n  };\n\n  const onKeyPress = (event, prop) => {\n    if (prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.length > 0) {\n      for (let index = 0; index < prop.fielddata.displayValsModel.length; index++) {\n        if (prop.fielddata.displayValsModel[index].isInEditMode) {\n          event.updateArray = true;\n          event.index = index;\n          break;\n        }\n      }\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      prop.onChange(event);\n      event.target.checked = false;\n    }\n  };\n\n  if (props.typex === 'BOOLEANARRAY') {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hidden\",\n        children: props.fielddata.propertyDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sw-checkbox-val\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: inputClass,\n          \"data-locator\": props.label,\n          \"aria-checked\": props.value,\n          onKeyPress: event => onKeyPress(event, props)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sw-checkbox-pseudo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"sw-checkbox-valWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"hidden\",\n      children: props.fielddata.propertyDisplayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: isNegatedClass + ' sw-checkbox-val',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...filteredAttrs,\n        type: \"checkbox\",\n        className: inputClass,\n        onChange: callAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sw-checkbox-pseudo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwCheckboxValService.js"],"names":["awCheckboxValRenderFunction","props","filteredAttrs","sanitizer","inputClass","getValClass","isNegatedClass","callAction","ev","onKeyPress","prop","index","event","propertyDisplayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Siemens\nimport sanitizer from 'js/sanitizer';\nimport { getValClass } from 'js/componentUtils';\n\nexport const awCheckboxValRenderFunction = ( props ) => {\n    let filteredAttrs = sanitizer.sanitizeHTMLTagProps( props, 'input' );\n    const inputClass = getValClass( props );\n    const isNegatedClass = props.isNegated ? 'checkbox-negated' : '';\n    // call the onChange handler\n    // and the action handler if it is set\n    const callAction = ( ev ) => {\n        props.onChange && props.onChange( ev );\n        return props.action ? props.action( ev ) : '';\n    };\n\n    const onKeyPress = ( event, prop ) => {\n        if( prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.length > 0 ) {\n            for( let index = 0; index < prop.fielddata.displayValsModel.length; index++ ) {\n                if( prop.fielddata.displayValsModel[ index ].isInEditMode ) {\n                    event.updateArray = true;\n                    event.index = index;\n                    break;\n                }\n            }\n        }\n        if( event.key === 'Enter' ) {\n            event.preventDefault();\n            prop.onChange( event );\n            event.target.checked = false;\n        }\n    };\n\n    if( props.typex === 'BOOLEANARRAY' ) {\n        return (\n            <label>\n                <span className='hidden'>{props.fielddata.propertyDisplayName}</span>\n                <span className='sw-checkbox-val'>\n                    <input type='checkbox' className={inputClass}\n                        data-locator={props.label}\n                        aria-checked={props.value} onKeyPress={( event ) => onKeyPress( event, props )}></input>\n                    <span className='sw-checkbox-pseudo'></span>\n                </span>\n            </label>\n        );\n    }\n\n    return (\n        <label className='sw-checkbox-valWrapper'>\n            <span className='hidden'>{props.fielddata.propertyDisplayName}</span>\n            <span className= {isNegatedClass + ' sw-checkbox-val'}>\n                <input {...filteredAttrs} type='checkbox' className={inputClass} onChange={callAction}></input>\n                <span className='sw-checkbox-pseudo'></span>\n            </span>\n        </label>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}