{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * This is a utility service for drag-n-drop operations.\n *\n * @module js/dragAndDropUtils\n */\nimport cmm from 'soa/kernel/clientMetaModel';\nimport cdm from 'soa/kernel/clientDataModel';\nimport dms from 'soa/dataManagementService';\nimport adapterSvc from 'js/adapterService';\nimport appCtxSvc from 'js/appCtxService';\nimport _ from 'lodash';\nvar exports = {};\nlet hasTCSessionData = appCtxSvc && appCtxSvc.ctx && !_.isUndefined(appCtxSvc.ctx.tcSessionData);\n\nconst fetchObjects = uids => {\n  let missingSourceUIDs = [];\n  let objsCorrespondingToUids = [];\n\n  if (uids.length > 0 && cdm) {\n    uids.forEach(uid => {\n      /**\n       * Attempt to locate the 'source' objects in this browser's CDM cache.\n       * <P>\n       * Note: When 'source' objects are being dragged from another browser they may not have been loaded into\n       * the 'target' browser.\n       */\n      let object = cdm.getObject(uid);\n\n      if (!object) {\n        missingSourceUIDs.push(uid);\n      } else {\n        objsCorrespondingToUids.push(object);\n      }\n    });\n  }\n\n  return {\n    missingSourceUIDs,\n    objsCorrespondingToUids\n  };\n};\n\nexport const getObjects = sourceVMOs => {\n  let modelObjects = [];\n\n  if (sourceVMOs) {\n    sourceVMOs.forEach(modelObject => {\n      if (cmm.isInstanceOf('Awp0XRTObjectSetRow', modelObject.modelType)) {\n        var adaptedObjs = adapterSvc.getAdaptedObjectsSync([modelObject]);\n        modelObjects.push(adaptedObjs[0]);\n      } else {\n        modelObjects.push(modelObject);\n      }\n    });\n  }\n\n  return modelObjects;\n};\nexport const loadVMOsIfNotAlreadyLoaded = uids => {\n  let objects = fetchObjects(uids);\n\n  if (objects.missingSourceUIDs.length > 0 && hasTCSessionData) {\n    dms.loadObjects(objects.missingSourceUIDs);\n  }\n};\nexport const getObjectByUidAsync = uids => {\n  let objects = fetchObjects(uids);\n\n  if (objects.missingSourceUIDs.length > 0 && hasTCSessionData) {\n    return dms.loadObjects(objects.missingSourceUIDs).then(() => {\n      return [...objects.objsCorrespondingToUids, ...fetchObjects(objects.missingSourceUIDs).objsCorrespondingToUids];\n    });\n  }\n\n  return Promise.resolve(objects.objsCorrespondingToUids);\n};\nexports = {\n  getObjects,\n  loadVMOsIfNotAlreadyLoaded,\n  getObjectByUidAsync\n};\nexport default exports;","map":{"version":3,"names":["cmm","cdm","dms","adapterSvc","appCtxSvc","_","exports","hasTCSessionData","ctx","isUndefined","tcSessionData","fetchObjects","uids","missingSourceUIDs","objsCorrespondingToUids","length","forEach","uid","object","getObject","push","getObjects","sourceVMOs","modelObjects","modelObject","isInstanceOf","modelType","adaptedObjs","getAdaptedObjectsSync","loadVMOsIfNotAlreadyLoaded","objects","loadObjects","getObjectByUidAsync","then","Promise","resolve"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/uiwidget/src/js/dragAndDropUtils.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * This is a utility service for drag-n-drop operations.\n *\n * @module js/dragAndDropUtils\n */\nimport cmm from 'soa/kernel/clientMetaModel';\nimport cdm from 'soa/kernel/clientDataModel';\nimport dms from 'soa/dataManagementService';\nimport adapterSvc from 'js/adapterService';\nimport appCtxSvc from 'js/appCtxService';\nimport _ from 'lodash';\n\nvar exports = {};\n\nlet hasTCSessionData = appCtxSvc && appCtxSvc.ctx && !_.isUndefined( appCtxSvc.ctx.tcSessionData );\n\nconst fetchObjects = ( uids ) => {\n    let missingSourceUIDs = [];\n    let objsCorrespondingToUids = [];\n    if( uids.length > 0 && cdm ) {\n        uids.forEach( ( uid ) => {\n            /**\n             * Attempt to locate the 'source' objects in this browser's CDM cache.\n             * <P>\n             * Note: When 'source' objects are being dragged from another browser they may not have been loaded into\n             * the 'target' browser.\n             */\n            let object = cdm.getObject( uid );\n            if( !object ) {\n                missingSourceUIDs.push( uid );\n            } else {\n                objsCorrespondingToUids.push( object );\n            }\n        } );\n    }\n\n    return {\n        missingSourceUIDs,\n        objsCorrespondingToUids\n    };\n};\n\nexport const getObjects = ( sourceVMOs ) => {\n    let modelObjects = [];\n    if( sourceVMOs ) {\n        sourceVMOs.forEach( ( modelObject ) => {\n            if( cmm.isInstanceOf( 'Awp0XRTObjectSetRow', modelObject.modelType ) ) {\n                var adaptedObjs = adapterSvc.getAdaptedObjectsSync( [ modelObject ] );\n                modelObjects.push( adaptedObjs[ 0 ] );\n            } else {\n                modelObjects.push( modelObject );\n            }\n        } );\n    }\n    return modelObjects;\n};\n\nexport const loadVMOsIfNotAlreadyLoaded = ( uids ) => {\n    let objects = fetchObjects( uids );\n\n    if( objects.missingSourceUIDs.length > 0 && hasTCSessionData ) {\n        dms.loadObjects( objects.missingSourceUIDs );\n    }\n};\n\nexport const getObjectByUidAsync = ( uids ) => {\n    let objects = fetchObjects( uids );\n\n    if( objects.missingSourceUIDs.length > 0 && hasTCSessionData ) {\n        return dms.loadObjects( objects.missingSourceUIDs ).then( () => {\n            return [ ...objects.objsCorrespondingToUids, ...fetchObjects( objects.missingSourceUIDs ).objsCorrespondingToUids ];\n        } );\n    }\n    return Promise.resolve( objects.objsCorrespondingToUids );\n};\n\nexports = {\n    getObjects,\n    loadVMOsIfNotAlreadyLoaded,\n    getObjectByUidAsync\n};\nexport default exports;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAOA,GAAP,MAAgB,4BAAhB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,IAAIC,OAAO,GAAG,EAAd;AAEA,IAAIC,gBAAgB,GAAGH,SAAS,IAAIA,SAAS,CAACI,GAAvB,IAA8B,CAACH,CAAC,CAACI,WAAF,CAAeL,SAAS,CAACI,GAAV,CAAcE,aAA7B,CAAtD;;AAEA,MAAMC,YAAY,GAAKC,IAAF,IAAY;EAC7B,IAAIC,iBAAiB,GAAG,EAAxB;EACA,IAAIC,uBAAuB,GAAG,EAA9B;;EACA,IAAIF,IAAI,CAACG,MAAL,GAAc,CAAd,IAAmBd,GAAvB,EAA6B;IACzBW,IAAI,CAACI,OAAL,CAAgBC,GAAF,IAAW;MACrB;AACZ;AACA;AACA;AACA;AACA;MACY,IAAIC,MAAM,GAAGjB,GAAG,CAACkB,SAAJ,CAAeF,GAAf,CAAb;;MACA,IAAI,CAACC,MAAL,EAAc;QACVL,iBAAiB,CAACO,IAAlB,CAAwBH,GAAxB;MACH,CAFD,MAEO;QACHH,uBAAuB,CAACM,IAAxB,CAA8BF,MAA9B;MACH;IACJ,CAbD;EAcH;;EAED,OAAO;IACHL,iBADG;IAEHC;EAFG,CAAP;AAIH,CAxBD;;AA0BA,OAAO,MAAMO,UAAU,GAAKC,UAAF,IAAkB;EACxC,IAAIC,YAAY,GAAG,EAAnB;;EACA,IAAID,UAAJ,EAAiB;IACbA,UAAU,CAACN,OAAX,CAAsBQ,WAAF,IAAmB;MACnC,IAAIxB,GAAG,CAACyB,YAAJ,CAAkB,qBAAlB,EAAyCD,WAAW,CAACE,SAArD,CAAJ,EAAuE;QACnE,IAAIC,WAAW,GAAGxB,UAAU,CAACyB,qBAAX,CAAkC,CAAEJ,WAAF,CAAlC,CAAlB;QACAD,YAAY,CAACH,IAAb,CAAmBO,WAAW,CAAE,CAAF,CAA9B;MACH,CAHD,MAGO;QACHJ,YAAY,CAACH,IAAb,CAAmBI,WAAnB;MACH;IACJ,CAPD;EAQH;;EACD,OAAOD,YAAP;AACH,CAbM;AAeP,OAAO,MAAMM,0BAA0B,GAAKjB,IAAF,IAAY;EAClD,IAAIkB,OAAO,GAAGnB,YAAY,CAAEC,IAAF,CAA1B;;EAEA,IAAIkB,OAAO,CAACjB,iBAAR,CAA0BE,MAA1B,GAAmC,CAAnC,IAAwCR,gBAA5C,EAA+D;IAC3DL,GAAG,CAAC6B,WAAJ,CAAiBD,OAAO,CAACjB,iBAAzB;EACH;AACJ,CANM;AAQP,OAAO,MAAMmB,mBAAmB,GAAKpB,IAAF,IAAY;EAC3C,IAAIkB,OAAO,GAAGnB,YAAY,CAAEC,IAAF,CAA1B;;EAEA,IAAIkB,OAAO,CAACjB,iBAAR,CAA0BE,MAA1B,GAAmC,CAAnC,IAAwCR,gBAA5C,EAA+D;IAC3D,OAAOL,GAAG,CAAC6B,WAAJ,CAAiBD,OAAO,CAACjB,iBAAzB,EAA6CoB,IAA7C,CAAmD,MAAM;MAC5D,OAAO,CAAE,GAAGH,OAAO,CAAChB,uBAAb,EAAsC,GAAGH,YAAY,CAAEmB,OAAO,CAACjB,iBAAV,CAAZ,CAA0CC,uBAAnF,CAAP;IACH,CAFM,CAAP;EAGH;;EACD,OAAOoB,OAAO,CAACC,OAAR,CAAiBL,OAAO,CAAChB,uBAAzB,CAAP;AACH,CATM;AAWPR,OAAO,GAAG;EACNe,UADM;EAENQ,0BAFM;EAGNG;AAHM,CAAV;AAKA,eAAe1B,OAAf"},"metadata":{},"sourceType":"module"}