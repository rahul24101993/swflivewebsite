{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwPropertyArrayValService.js\",\n    _s = $RefreshSig$();\n\n// Copyright (c) 2021 Siemens\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPropertyArrayEditVal from 'viewmodel/AwPropertyArrayEditValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwRadioButtonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwCheckboxVal from 'viewmodel/AwCheckboxValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport { useState } from 'react';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const onMount = elementRefList => {\n  //WCAG keyboard handling\n  const list = new ariaList();\n  let ul = elementRefList.get('arrayVal').current;\n\n  if (!ul) {\n    return;\n  }\n\n  var obj = {\n    setAriaAttributes: false,\n    autoScroll: false,\n    listSelector: '.aw-jswidgets-arrayValueCellListItem'\n  };\n  let childSelector = 'option';\n  list.init(ul, obj, childSelector);\n};\n\nconst focusOnSiblingLi = action => {\n  //manage focus & tabindex on moveUp/moveDown Command.\n  let li = document.querySelector('li.aw-state-selected');\n\n  if (li) {\n    li.setAttribute('tabindex', -1);\n    let siblingToFocus;\n\n    if (action === 'Move Up') {\n      siblingToFocus = li.previousElementSibling;\n    } else if (action === 'Move Down') {\n      siblingToFocus = li.nextElementSibling;\n    }\n\n    if (siblingToFocus) {\n      siblingToFocus.focus();\n      siblingToFocus.setAttribute('tabindex', 0);\n    } else {\n      //if no focusable sibling focus on current selected\n      li.focus();\n      li.setAttribute('tabindex', 0);\n    }\n  }\n};\n\nconst focusRequiredElement = (prop, event) => {\n  if ((event.target.type === 'button' || event.currentTarget.type === 'button') && event.currentTarget.attributes.title) {\n    let operation = event.currentTarget.attributes.title.value;\n\n    switch (operation) {\n      case 'Move Up':\n      case 'Move Down':\n        focusOnSiblingLi(operation);\n        break;\n\n      case 'Remove':\n        {\n          //set tabIndex of parent ul to 0 since no active tabIndex left after removal\n          let locator = `[data-locator='${prop.label}']`;\n          let inputEle = document.querySelector(`input${locator},textarea${locator}`);\n\n          if (inputEle && inputEle.previousElementSibling !== null) {\n            let ulEle = inputEle.previousElementSibling.firstElementChild;\n\n            if (ulEle !== null) {\n              propArrayLength(prop) > 0 ? ulEle.setAttribute('tabIndex', '0') : ulEle.setAttribute('tabIndex', '-1');\n            }\n          } // focus on input box once li element removed\n\n\n          inputEle && inputEle.focus();\n          break;\n        }\n    }\n  }\n};\n\nconst isLiItemSelected = event => {\n  return event.currentTarget.classList.contains('aw-state-selected');\n};\n\nconst propArrayLength = prop => prop.fielddata.displayValsModel.length;\n\nconst handleClick = (prop, event) => {\n  let isAnyValueSelected = false;\n\n  if (prop.fielddata.displayValsModel) {\n    for (var j = 0; j < propArrayLength(prop); j++) {\n      if (prop.fielddata.displayValsModel[j].selected && prop.fielddata.displayValsModel[j].isInEditMode) {\n        isAnyValueSelected = true;\n        break;\n      }\n    }\n  }\n\n  if (!isAnyValueSelected) {\n    event.preventDefault();\n    prop.onClick(event);\n  }\n\n  focusRequiredElement(prop, event);\n};\n\nconst handleKeyDown = (prop, event) => {\n  if (wcagSvc.isValidKeyPress(event, true)) {\n    handleClick(prop, event);\n  }\n};\n\nconst handleBlur = (prop, event) => {\n  event.isBlurFromInput = true;\n  prop.onBlur(event);\n};\n\nconst handleKeyPress = (prop, event) => {\n  if (event.key === 'Enter') {\n    event.updateArray = true;\n    event.preventDefault();\n    prop.onChange(event); // revisitme: what is the bext way to clear widget\n\n    event.target.value = '';\n  }\n};\n\nconst renderPropertyEditMode = (prop, displayValue, index) => {\n  if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex !== 'DATEARRAY' && prop.typex !== 'BOOLEANARRAY') {\n    // eslint-disable-next-line jsx-a11y/no-autofocus\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyPress: event => handleKeyPress(prop, event),\n      onBlur: event => handleBlur(prop, event),\n      id: index,\n      defaultValue: displayValue,\n      autoFocus: true,\n      className: \"aw-jswidgets-arrayValue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 16\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'DATEARRAY') {\n    return /*#__PURE__*/_jsxDEV(AwDateTimeVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'radiobutton') {\n    return /*#__PURE__*/_jsxDEV(AwRadioButtonVal, {\n      prop: prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'togglebutton') {\n    return /*#__PURE__*/_jsxDEV(AwToggleButtonVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  } else if (prop.fielddata.displayValsModel[index].isInEditMode && prop.typex === 'BOOLEANARRAY') {\n    return /*#__PURE__*/_jsxDEV(AwCheckboxVal, { ...prop,\n      className: getValClass(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"button\",\n    tabIndex: \"-1\",\n    id: index,\n    onKeyDown: event => handleKeyDown(prop, event),\n    onClick: event => handleClick(prop, event),\n    className: \"aw-jswidgets-arrayValue\",\n    children: displayValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderProperty = (prop, displayNode, index, setIsShown, isShown) => {\n  let displayValue = displayNode.displayValue;\n  let isAnyValueSelected = false;\n  let focusAndHoverEvents = {\n    onFocus: () => {\n      if (wcagSvc.areWeInKeyboardMode()) {\n        setIsShown(true);\n      }\n    },\n    onBlur: event => {\n      if (wcagSvc.areWeInKeyboardMode() && !isLiItemSelected(event)) {\n        setIsShown(false);\n      }\n    },\n    onMouseEnter: () => {\n      setIsShown(true);\n    },\n    onMouseLeave: () => {\n      setIsShown(false);\n    }\n  };\n\n  if (prop.fielddata.displayValsModel) {\n    for (var i = 0; i < propArrayLength(prop); i++) {\n      if (prop.fielddata.displayValsModel[i].selected && prop.fielddata.displayValsModel[i].isInEditMode) {\n        isAnyValueSelected = true;\n        break;\n      }\n    }\n  }\n\n  const getCellListItemClass = () => {\n    const selectedClass = propArrayLength(prop) > 0 && prop.fielddata.displayValsModel[index].selected ? ' aw-state-selected' : '';\n    return 'sw-aria-border aw-jswidgets-arrayValueCellListItem' + selectedClass;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    role: \"option\",\n    \"aria-selected\": isAnyValueSelected,\n    tabIndex: \"-1\",\n    id: index,\n    onKeyDown: event => handleKeyDown(prop, event),\n    className: getCellListItemClass(),\n    ...focusAndHoverEvents,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aw-jswidgets-arrayValueContainer\",\n      children: [renderPropertyEditMode(prop, displayValue, index), (isShown || displayNode.selected) && !isAnyValueSelected && !prop.disabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aw-layout-flexColumnContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aw-jswidgets-arrayIcons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleClick(prop, event),\n            id: index,\n            onKeyDown: event => handleKeyDown(prop, event),\n            type: \"button\",\n            className: \"aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton\",\n            disabled: prop.fielddata.displayValsModel[index].isInEditMode,\n            title: 'Move Up',\n            children: /*#__PURE__*/_jsxDEV(AwIcon, {\n              iconId: \"cmdMoveUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleClick(prop, event),\n            id: index + 1,\n            onKeyDown: event => handleKeyDown(prop, event),\n            type: \"button\",\n            className: \"aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton\",\n            disabled: prop.fielddata.displayValsModel[index].isInEditMode,\n            title: 'Move Down',\n            children: /*#__PURE__*/_jsxDEV(AwIcon, {\n              iconId: \"cmdMoveDown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleClick(prop, event),\n            id: index + 2,\n            onKeyDown: event => handleKeyDown(prop, event),\n            type: \"button\",\n            className: \"aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton\",\n            disabled: prop.fielddata.displayValsModel[index].isInEditMode,\n            title: 'Remove',\n            children: /*#__PURE__*/_jsxDEV(AwIcon, {\n              iconId: \"cmdRemove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 98\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\nexport const awPropertyArrayValRenderFunction = props => {\n  _s();\n\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    elementRefList,\n    ...prop\n  } = props;\n\n  const getContainerClass = () => {\n    let borderClass = '';\n\n    if (prop.fielddata.displayValsModel && propArrayLength(prop) > 0) {\n      borderClass = ' sw-border';\n    }\n\n    return 'aw-jswidgets-arrayWidgetContainer' + borderClass;\n  };\n\n  const getPropContainerClass = () => {\n    let classVal = 'sw-array-val sw-property-val sw-column';\n    const changedClass = !prop.disabled && (prop.dirty === 'true' || prop.dirty === true) ? ' sw-changed' : '';\n    return classVal + changedClass;\n  };\n\n  const [isShown, setIsShown] = useState(false);\n  let ariaProp = {};\n\n  _.each(prop, (v, k) => {\n    k.startsWith('aria-') && (ariaProp[k] = v);\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getPropContainerClass(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getContainerClass(),\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        role: \"listbox\",\n        ...ariaProp,\n        className: \"aw-jswidgets-arrayEditValueCellList\",\n        tabIndex: propArrayLength(prop) > 0 ? '0' : '-1',\n        ref: elementRefList.get('arrayVal'),\n        children: prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map((displayNode, index) => renderProperty(prop, displayNode, index, setIsShown, isShown))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), !prop.disabled ? /*#__PURE__*/_jsxDEV(AwPropertyArrayEditVal, { ...prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 32\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n\n_s(awPropertyArrayValRenderFunction, \"piNRvNB82iO0jBzHjvdV2zhEZ6g=\");","map":{"version":3,"names":["AwIcon","AwPropertyArrayEditVal","AwDateTimeVal","AwToggleButtonVal","AwRadioButtonVal","AwCheckboxVal","getValClass","useState","ariaList","wcagSvc","_","onMount","elementRefList","list","ul","get","current","obj","setAriaAttributes","autoScroll","listSelector","childSelector","init","focusOnSiblingLi","action","li","document","querySelector","setAttribute","siblingToFocus","previousElementSibling","nextElementSibling","focus","focusRequiredElement","prop","event","target","type","currentTarget","attributes","title","operation","value","locator","label","inputEle","ulEle","firstElementChild","propArrayLength","isLiItemSelected","classList","contains","fielddata","displayValsModel","length","handleClick","isAnyValueSelected","j","selected","isInEditMode","preventDefault","onClick","handleKeyDown","isValidKeyPress","handleBlur","isBlurFromInput","onBlur","handleKeyPress","key","updateArray","onChange","renderPropertyEditMode","displayValue","index","typex","renderingHint","renderProperty","displayNode","setIsShown","isShown","focusAndHoverEvents","onFocus","areWeInKeyboardMode","onMouseEnter","onMouseLeave","i","getCellListItemClass","selectedClass","disabled","awPropertyArrayValRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","getContainerClass","borderClass","getPropContainerClass","classVal","changedClass","dirty","ariaProp","each","v","k","startsWith","map"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwPropertyArrayValService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n/* eslint-disable react-hooks/rules-of-hooks */\nimport AwIcon from 'viewmodel/AwIconViewModel';\nimport AwPropertyArrayEditVal from 'viewmodel/AwPropertyArrayEditValViewModel';\nimport AwDateTimeVal from 'viewmodel/AwDateTimeValViewModel';\nimport AwToggleButtonVal from 'viewmodel/AwToggleButtonValViewModel';\nimport AwRadioButtonVal from 'viewmodel/AwRadiobuttonValViewModel';\nimport AwCheckboxVal from 'viewmodel/AwCheckboxValViewModel';\nimport { getValClass } from 'js/componentUtils';\nimport { useState } from 'react';\nimport ariaList from 'js/ariaList';\nimport wcagSvc from 'js/wcagService';\nimport _ from 'lodash';\n\nexport const onMount = ( elementRefList ) => {\n    //WCAG keyboard handling\n    const list = new ariaList();\n    let ul = elementRefList.get( 'arrayVal' ).current;\n    if( !ul ) { return; }\n\n    var obj = {\n        setAriaAttributes: false,\n        autoScroll: false,\n        listSelector: '.aw-jswidgets-arrayValueCellListItem'\n    };\n\n    let childSelector = 'option';\n    list.init( ul, obj, childSelector );\n};\n\nconst focusOnSiblingLi = ( action ) => {\n    //manage focus & tabindex on moveUp/moveDown Command.\n    let li = document.querySelector( 'li.aw-state-selected' );\n    if( li ) {\n        li.setAttribute( 'tabindex', -1 );\n        let siblingToFocus;\n        if( action === 'Move Up' ) {\n            siblingToFocus = li.previousElementSibling;\n        } else if( action === 'Move Down' ) {\n            siblingToFocus = li.nextElementSibling;\n        }\n        if( siblingToFocus ) {\n            siblingToFocus.focus();\n            siblingToFocus.setAttribute( 'tabindex', 0 );\n        } else {\n            //if no focusable sibling focus on current selected\n            li.focus();\n            li.setAttribute( 'tabindex', 0 );\n        }\n    }\n};\n\nconst focusRequiredElement = ( prop, event ) => {\n    if( ( event.target.type === 'button' || event.currentTarget.type === 'button' ) && event.currentTarget.attributes.title ) {\n        let operation = event.currentTarget.attributes.title.value;\n        switch ( operation ) {\n            case 'Move Up':\n            case 'Move Down':\n                focusOnSiblingLi( operation );\n                break;\n            case 'Remove': {\n                //set tabIndex of parent ul to 0 since no active tabIndex left after removal\n                let locator = `[data-locator='${prop.label}']`;\n                let inputEle = document.querySelector( `input${locator},textarea${locator}` );\n                if( inputEle && inputEle.previousElementSibling !== null ) {\n                    let ulEle = inputEle.previousElementSibling.firstElementChild;\n                    if( ulEle !== null ) {\n                        propArrayLength( prop ) > 0 ? ulEle.setAttribute( 'tabIndex', '0' ) : ulEle.setAttribute( 'tabIndex', '-1' );\n                    }\n                }\n                // focus on input box once li element removed\n                inputEle && inputEle.focus();\n                break;\n            }\n        }\n    }\n};\n\nconst isLiItemSelected = ( event ) => {\n    return event.currentTarget.classList.contains( 'aw-state-selected' );\n};\n\nconst propArrayLength = ( prop ) => prop.fielddata.displayValsModel.length;\n\nconst handleClick = ( prop, event ) => {\n    let isAnyValueSelected = false;\n    if( prop.fielddata.displayValsModel ) {\n        for( var j = 0; j < propArrayLength( prop ); j++ ) {\n            if( prop.fielddata.displayValsModel[ j ].selected && prop.fielddata.displayValsModel[ j ].isInEditMode ) {\n                isAnyValueSelected = true;\n                break;\n            }\n        }\n    }\n    if( !isAnyValueSelected ) {\n        event.preventDefault();\n        prop.onClick( event );\n    }\n    focusRequiredElement( prop, event );\n};\n\nconst handleKeyDown = ( prop, event ) => {\n    if( wcagSvc.isValidKeyPress( event, true ) ) {\n        handleClick( prop, event );\n    }\n};\n\nconst handleBlur = ( prop, event ) => {\n    event.isBlurFromInput = true;\n    prop.onBlur( event );\n};\n\nconst handleKeyPress = ( prop, event ) => {\n    if( event.key === 'Enter' ) {\n        event.updateArray = true;\n        event.preventDefault();\n        prop.onChange( event );\n        // revisitme: what is the bext way to clear widget\n        event.target.value = '';\n    }\n};\n\nconst renderPropertyEditMode = ( prop, displayValue, index ) => {\n    if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex !== 'DATEARRAY' && prop.typex !== 'BOOLEANARRAY' ) {\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        return <input type='text' onKeyPress={( event ) => handleKeyPress( prop, event )} onBlur={( event ) => handleBlur( prop, event )} id={index} defaultValue={displayValue} autoFocus className='aw-jswidgets-arrayValue'/>;\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'DATEARRAY' ) {\n        return (\n            <AwDateTimeVal {...prop} className={ getValClass( prop ) }/>\n        );\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'radiobutton' ) {\n        return (\n            <AwRadioButtonVal prop={prop} className={ getValClass( prop ) }/>\n        );\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'BOOLEANARRAY' && prop.fielddata.renderingHint === 'togglebutton' ) {\n        return (\n            <AwToggleButtonVal {...prop} className={ getValClass( prop ) }/>\n        );\n    } else if( prop.fielddata.displayValsModel[ index ].isInEditMode && prop.typex === 'BOOLEANARRAY' ) {\n        return (\n            <AwCheckboxVal {...prop} className={ getValClass( prop ) }/>\n        );\n    }\n    return (\n        <div role='button' tabIndex='-1' id={index} onKeyDown={( event ) => handleKeyDown( prop, event )} onClick={( event ) => handleClick( prop, event )} className='aw-jswidgets-arrayValue'>{displayValue}</div>\n    );\n};\n\nconst renderProperty = ( prop, displayNode, index, setIsShown, isShown ) => {\n    let displayValue = displayNode.displayValue;\n    let isAnyValueSelected = false;\n    let focusAndHoverEvents = {\n        onFocus: () => {\n            if( wcagSvc.areWeInKeyboardMode() ) {\n                setIsShown( true );\n            }\n        },\n        onBlur: ( event ) => {\n            if( wcagSvc.areWeInKeyboardMode() && !isLiItemSelected( event ) ) {\n                setIsShown( false );\n            }\n        },\n        onMouseEnter: () => { setIsShown( true ); },\n        onMouseLeave: () => { setIsShown( false ); }\n    };\n    if( prop.fielddata.displayValsModel ) {\n        for( var i = 0; i < propArrayLength( prop ); i++ ) {\n            if( prop.fielddata.displayValsModel[ i ].selected && prop.fielddata.displayValsModel[ i ].isInEditMode ) {\n                isAnyValueSelected = true;\n                break;\n            }\n        }\n    }\n    const getCellListItemClass = () => {\n        const selectedClass = propArrayLength( prop ) > 0 && prop.fielddata.displayValsModel[ index ].selected ? ' aw-state-selected' : '';\n        return 'sw-aria-border aw-jswidgets-arrayValueCellListItem' + selectedClass;\n    };\n\n    return (\n        <li role='option' aria-selected={isAnyValueSelected} tabIndex='-1' key={index} id={index} onKeyDown={( event )=> handleKeyDown( prop, event )} className={ getCellListItemClass() } {...focusAndHoverEvents}>\n            <div className='aw-jswidgets-arrayValueContainer'>\n                {\n                    renderPropertyEditMode( prop, displayValue, index )\n                }\n                { ( isShown || displayNode.selected ) && !isAnyValueSelected && !prop.disabled ? <div className='aw-layout-flexColumnContainer'>\n                    <div className='aw-jswidgets-arrayIcons'>\n                        <button onClick={( event ) => handleClick( prop, event )} id={index} onKeyDown={( event )=> handleKeyDown( prop, event )} type='button' className='aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton'\n                            disabled={prop.fielddata.displayValsModel[ index ].isInEditMode} title={'Move Up'} >\n                            <AwIcon iconId='cmdMoveUp'/>\n                        </button>\n                        <button onClick={( event ) => handleClick( prop, event )} id={index + 1} onKeyDown={( event )=> handleKeyDown( prop, event )} type='button' className='aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton'\n                            disabled={prop.fielddata.displayValsModel[ index ].isInEditMode} title={'Move Down'} >\n                            <AwIcon iconId='cmdMoveDown'/>\n                        </button>\n                        <button onClick={( event ) => handleClick( prop, event )} id={index + 2} onKeyDown={( event )=> handleKeyDown( prop, event )} type='button' className='aw-commands-commandIconButton aw-widgets-defaultPropertyValueButton'\n                            disabled={prop.fielddata.displayValsModel[ index ].isInEditMode} title={'Remove'} >\n                            <AwIcon iconId='cmdRemove'/>\n                        </button>\n                    </div>\n                </div> : ''}\n            </div>\n        </li>\n    );\n};\n\nexport const awPropertyArrayValRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        elementRefList,\n        ...prop\n    } = props;\n\n    const getContainerClass = () => {\n        let borderClass = '';\n        if( prop.fielddata.displayValsModel && propArrayLength( prop ) > 0 ) {\n            borderClass = ' sw-border';\n        }\n\n        return 'aw-jswidgets-arrayWidgetContainer' + borderClass;\n    };\n\n    const getPropContainerClass = () => {\n        let classVal = 'sw-array-val sw-property-val sw-column';\n        const changedClass = !prop.disabled && ( prop.dirty === 'true' || prop.dirty === true ) ? ' sw-changed' : '';\n        return classVal + changedClass;\n    };\n\n    const [ isShown, setIsShown ] = useState( false );\n\n    let ariaProp = {};\n    _.each( prop, ( v, k ) => { k.startsWith( 'aria-' ) && ( ariaProp[ k ] = v ); } );\n\n    return (\n        <div className={ getPropContainerClass() }>\n            <div className={ getContainerClass() } >\n                <ul role='listbox' {...ariaProp} className='aw-jswidgets-arrayEditValueCellList' tabIndex={propArrayLength( prop ) > 0 ? '0' : '-1'} ref={elementRefList.get( 'arrayVal' )}>\n                    {\n                        prop.fielddata.displayValsModel && prop.fielddata.displayValsModel.map( ( displayNode, index ) =>\n                            renderProperty( prop, displayNode, index, setIsShown, isShown )\n                        )\n                    }\n                </ul>\n            </div>\n            { !prop.disabled ? <AwPropertyArrayEditVal {...prop}/> : '' }\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}