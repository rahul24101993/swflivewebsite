{"ast":null,"code":"// Copyright (c) 2020 Siemens\n\n/**\n * Service to define for populating the dynamic data in view model format in panel.\n *\n * @module js/dynamicPropertyService\n */\nimport modelPropertySvc from 'js/modelPropertyService';\nimport cdm from 'soa/kernel/clientDataModel';\nimport dateTimeSvc from 'js/dateTimeService';\nimport viewModelObjectSvc from 'js/viewModelObjectService';\nimport _ from 'lodash';\nimport parsingUtils from 'js/parsingUtils';\n/**\n * Define the 'operator' that separate the 'operands' of an expression.\n */\n\nvar _operators = /\\=\\=|!=|:|&&|>|>=|<|<=/;\n/**\n * Returns the individual fields\n *\n * @param {Object}objectData - Model object\n * @param {String}condName - Nested Property structure\n * @return {ObjectArray} output - Nested output structure\n */\n\nfunction _getInputData(objectData, condName) {\n  var output;\n\n  if (condName === 'dateApi') {\n    var dobj = _.get(objectData, condName);\n\n    var dval = null;\n\n    if (dobj.dateObject) {\n      dval = dateTimeSvc.formatUTC(dobj.dateObject);\n    }\n\n    output = dval;\n  } else {\n    output = _.get(objectData, condName);\n  }\n\n  return output;\n}\n/**\n * Check the nested structure and returns the field.\n *\n * @param {Object}objectIndex - Index in array objects\n * @param {String}arrayObjs - Model object\n * @param {String}inArray - JSON string\n * @return {Object} Nested output structure\n */\n\n\nfunction _constructOutputData(objectIndex, arrayObjs, inArray) {\n  var output = [];\n\n  for (var i in inArray) {\n    var f = Object.getOwnPropertyNames(inArray[i]);\n\n    if (f[0] === 'structName') {\n      var functionName = _.get(inArray[i], f[0]);\n\n      var t = _.get(inArray[i], f[1]);\n\n      var k = _prepareObject(objectIndex, arrayObjs, t);\n\n      output[functionName] = _.assign({}, k);\n    } else {\n      var t2 = _.get(inArray[i], f[1]);\n\n      var condName = _.get(inArray[i], f[0]);\n\n      output[condName] = _getInputData(arrayObjs[objectIndex], t2);\n    }\n  }\n\n  if (output.dateValue) {\n    output.value = 0;\n  }\n\n  return output;\n}\n/**\n * Return the display string from the object\n *\n * @param {Object }objectData - Input Object\n * @param {String} prop - Property string\n * @param {String} dataInput - If any specific string or property define in the Input\n * @return {String} dispName - Display String\n *\n */\n\n\nfunction _getDisplayName(objectData, prop, dataInput) {\n  var dispName;\n\n  if (dataInput) {\n    var objUid = _.get(objectData, dataInput);\n\n    var mObject = cdm.getObject(objUid);\n    dispName = _.get(mObject, prop);\n  } else {\n    dispName = _.get(objectData, prop);\n  }\n\n  return dispName;\n}\n/**\n * Evaluate condition expression\n *\n * @param {String} expression - Expression {note: currently supporting ==,!=,&&,>,>=,<,<=}\n * @param {Object} evaluationEnv - The data environment for expression evaluation\n * @param {ObjectArray} objectData - The array of function objects which can be used in expression evaluation\n *\n * @return {Object} The evaluated condition result\n */\n\n\nfunction _evaluateCondition(expression, evaluationEnv, objectData) {\n  var operands = expression.split(_operators);\n  var reValue = false;\n\n  var tempType = _.get(objectData, operands[0]);\n\n  if (tempType === operands[1]) {\n    reValue = evaluationEnv;\n  }\n\n  return reValue;\n}\n/**\n * Evaluate the condition and return the value\n *\n * @param {Object}objectData - Model object\n * @param {String}types - Property name\n *\n * @return {Object} Supported type for the declarative\n */\n\n\nfunction getPropertyValue(objectData, types) {\n  var returnVal = '';\n\n  for (var i in types) {\n    var f = Object.getOwnPropertyNames(types[i]);\n\n    var condName = _.get(types[i], f[0]);\n\n    var condVal = _.get(types[i], f[1]);\n\n    var val = _evaluateCondition(condName, condVal, objectData);\n\n    if (val) {\n      returnVal = val;\n    }\n  }\n\n  return returnVal;\n}\n/**\n * Evaluate expression\n *\n * @param {String} expression - expression {note: currently supporting ==,!=,&&,>,>=,<,<=}\n * @return {ObjectArray} operands - Array of the string objects\n */\n\n\nfunction _getOperands(expression) {\n  return expression.split(_operators);\n}\n/**\n * Returns the nested property\n *\n * @param {Object}objectIndex - Index in array objects\n * @param {String}arrayObjs - Model object\n * @param {String}inArray - JSON string\n * @return {ObjectArray} output - Nested output structure\n */\n\n\nfunction _prepareObject(objectIndex, arrayObjs, inArray) {\n  var output = [];\n  var objectData = arrayObjs[objectIndex];\n\n  for (var i in inArray) {\n    var f = Object.getOwnPropertyNames(inArray[i]);\n\n    var condName = _.get(inArray[i], f[0]);\n\n    var condValue = _.get(inArray[i], f[1]);\n\n    if (f[0] === 'structName') {\n      output[condName] = _constructOutputData(objectIndex, arrayObjs, condValue);\n    } else {\n      output[condName] = _getInputData(objectData, condValue);\n    }\n  }\n\n  return output;\n}\n\nvar exports = {};\n/**\n * Get the view model property using the SOA input\n *\n * @param {String} arrayObjs - SOA response\n * @param {String} n - viewModel property\n * @return {ObjectArray} output - A ViewModel property object array\n */\n\nexport let createDynProperty = function (arrayObjs, n) {\n  var output = [];\n\n  if (n.viewModelPropValues) {\n    for (var i in arrayObjs) {\n      var g = n.viewModelPropValues;\n      var d = Object.getOwnPropertyNames(n.viewModelPropValues);\n      var dispName = null;\n      var ptype = null;\n      var dbValue = null;\n\n      for (var k in d) {\n        if (d[k] === 'displayName') {\n          dispName = _getDisplayName(arrayObjs[i], g[d[k]], n.dataInput);\n        }\n\n        if (d[k] === 'type') {\n          ptype = getPropertyValue(arrayObjs[i], g[d[k]]);\n        }\n\n        if (d[k] === 'dbValue') {\n          dbValue = getPropertyValue(arrayObjs[i], g[d[k]]);\n        }\n      }\n\n      var propAttrHolder = {\n        displayName: dispName,\n        type: ptype,\n        isRequired: '',\n        isEditable: '',\n        dbValue: dbValue,\n        dispValue: '',\n        labelPosition: ''\n      };\n      var viewProp = modelPropertySvc.createViewModelProperty(propAttrHolder);\n\n      if (d[k] === 'propMisc') {\n        var z = g[d[k]];\n\n        for (var h in z) {\n          var pName = z[h].propName;\n          var pValue = z[h].value;\n\n          var objUid = _.get(arrayObjs[i], pValue);\n\n          viewProp[pName] = objUid;\n        }\n      }\n\n      output.push(viewProp);\n    }\n  }\n\n  return output;\n};\n/**\n * prepare the SOA input using the JSON data for dynamic properties\n *\n * @param {Array} arrayObjs - ViewModelProperty Array\n * @param {Array} inArray - JSON array from data.\n *\n * @return {ObjectArray} Output array\n */\n\nexport let createSoaInput = function (arrayObjs, inArray) {\n  var modelOutput = [];\n\n  for (var obj in arrayObjs) {\n    var output = _constructOutputData(obj, arrayObjs, inArray);\n\n    modelOutput.push(_.assign({}, output));\n  }\n\n  return modelOutput;\n};\n/**\n * prepare the SOA input using the JSON data for dynamic properties\n *\n * @param {objectArray} dynmData - JSON array from data.\n * @param {objectArray} data - ViewModelProperty Array\n * @param {objectArray} response - response object\n *\n * @return {ObjectArray} Output array\n */\n\nexport let processDataParseDefination = function (dynmData, data, response) {\n  var arrayObjs = response;\n  var parseData = null;\n\n  if (dynmData.outputFormat) {\n    var val = parsingUtils.parentGet(data, dynmData.dataInput);\n    return exports.createSoaInput(val, dynmData.outputFormat);\n  }\n\n  if (dynmData.dataFilter) {\n    var filterStr = dynmData.dataFilter[0];\n    var filterKeys = Object.getOwnPropertyNames(filterStr);\n    var filterVal = filterStr[filterKeys];\n    arrayObjs = exports.filterObjects(response, filterKeys, dynmData.path, filterVal, dynmData.dataInput);\n    parseData = arrayObjs;\n  }\n\n  if (dynmData.outputFormatType && dynmData.outputFormatType === 'ViewModelObject') {\n    var modelObjUid = parsingUtils.parentGet(response, dynmData.dataInput);\n    var operationType = 'Edit';\n\n    if (dynmData.operationType) {\n      operationType = dynmData.operationType;\n    }\n\n    var viewModelObj = viewModelObjectSvc.createViewModelObject(modelObjUid, operationType);\n\n    if (viewModelObj) {\n      var propertyNames = _.keys(viewModelObj.props).sort();\n\n      viewModelObj.sortedPropNames = propertyNames;\n    }\n\n    return viewModelObj;\n  }\n\n  if (dynmData.viewModelPropValues) {\n    var parseTempData = exports.createDynProperty(arrayObjs, dynmData);\n    parseData = parseTempData;\n  }\n\n  return parseData;\n};\n/**\n * Filter the Inputs based on some condition\n *\n * @param {Object} response -Response from server\n * @param {String} filterProperty - any filter condition\n * @param {String} path - Traversal path in output\n * @param {String} expectedValue - If any condition to check\n * @param {string} filterInput - any extra parameter to check\n *\n * @return {ObjectArray} Filtered objects from source array\n */\n\nexport let filterObjects = function (response, filterProperty, path, expectedValue, filterInput) {\n  var modelObjects = [];\n\n  var modelObjectsArray = _.get(response, path);\n\n  for (var i in modelObjectsArray) {\n    var operands = _getOperands(expectedValue);\n\n    var tempObj = _.get(modelObjectsArray[i], operands[0]);\n\n    if (!tempObj && filterInput) {\n      var objUid = _.get(modelObjectsArray[i], filterInput);\n\n      var mObject = cdm.getObject(objUid);\n      tempObj = _.get(mObject, operands[0]);\n    }\n\n    if (tempObj === operands[1]) {\n      modelObjects.push(modelObjectsArray[i]);\n    }\n  }\n\n  return modelObjects;\n};\nexports = {\n  createDynProperty,\n  createSoaInput,\n  processDataParseDefination,\n  filterObjects\n};\nexport default exports;","map":{"version":3,"names":["modelPropertySvc","cdm","dateTimeSvc","viewModelObjectSvc","_","parsingUtils","_operators","_getInputData","objectData","condName","output","dobj","get","dval","dateObject","formatUTC","_constructOutputData","objectIndex","arrayObjs","inArray","i","f","Object","getOwnPropertyNames","functionName","t","k","_prepareObject","assign","t2","dateValue","value","_getDisplayName","prop","dataInput","dispName","objUid","mObject","getObject","_evaluateCondition","expression","evaluationEnv","operands","split","reValue","tempType","getPropertyValue","types","returnVal","condVal","val","_getOperands","condValue","exports","createDynProperty","n","viewModelPropValues","g","d","ptype","dbValue","propAttrHolder","displayName","type","isRequired","isEditable","dispValue","labelPosition","viewProp","createViewModelProperty","z","h","pName","propName","pValue","push","createSoaInput","modelOutput","obj","processDataParseDefination","dynmData","data","response","parseData","outputFormat","parentGet","dataFilter","filterStr","filterKeys","filterVal","filterObjects","path","outputFormatType","modelObjUid","operationType","viewModelObj","createViewModelObject","propertyNames","keys","props","sort","sortedPropNames","parseTempData","filterProperty","expectedValue","filterInput","modelObjects","modelObjectsArray","tempObj"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declarativeui/src/js/dynamicPropertyService.js"],"sourcesContent":["// Copyright (c) 2020 Siemens\n\n/**\n * Service to define for populating the dynamic data in view model format in panel.\n *\n * @module js/dynamicPropertyService\n */\nimport modelPropertySvc from 'js/modelPropertyService';\nimport cdm from 'soa/kernel/clientDataModel';\nimport dateTimeSvc from 'js/dateTimeService';\nimport viewModelObjectSvc from 'js/viewModelObjectService';\nimport _ from 'lodash';\nimport parsingUtils from 'js/parsingUtils';\n\n/**\n * Define the 'operator' that separate the 'operands' of an expression.\n */\nvar _operators = /\\=\\=|!=|:|&&|>|>=|<|<=/;\n\n/**\n * Returns the individual fields\n *\n * @param {Object}objectData - Model object\n * @param {String}condName - Nested Property structure\n * @return {ObjectArray} output - Nested output structure\n */\nfunction _getInputData( objectData, condName ) {\n    var output;\n    if( condName === 'dateApi' ) {\n        var dobj = _.get( objectData, condName );\n        var dval = null;\n\n        if( dobj.dateObject ) {\n            dval = dateTimeSvc.formatUTC( dobj.dateObject );\n        }\n        output = dval;\n    } else {\n        output = _.get( objectData, condName );\n    }\n    return output;\n}\n\n/**\n * Check the nested structure and returns the field.\n *\n * @param {Object}objectIndex - Index in array objects\n * @param {String}arrayObjs - Model object\n * @param {String}inArray - JSON string\n * @return {Object} Nested output structure\n */\nfunction _constructOutputData( objectIndex, arrayObjs, inArray ) {\n    var output = [];\n\n    for( var i in inArray ) {\n        var f = Object.getOwnPropertyNames( inArray[ i ] );\n        if( f[ 0 ] === 'structName' ) {\n            var functionName = _.get( inArray[ i ], f[ 0 ] );\n            var t = _.get( inArray[ i ], f[ 1 ] );\n            var k = _prepareObject( objectIndex, arrayObjs, t );\n\n            output[ functionName ] = _.assign( {}, k );\n        } else {\n            var t2 = _.get( inArray[ i ], f[ 1 ] );\n            var condName = _.get( inArray[ i ], f[ 0 ] );\n\n            output[ condName ] = _getInputData( arrayObjs[ objectIndex ], t2 );\n        }\n    }\n\n    if( output.dateValue ) {\n        output.value = 0;\n    }\n\n    return output;\n}\n\n/**\n * Return the display string from the object\n *\n * @param {Object }objectData - Input Object\n * @param {String} prop - Property string\n * @param {String} dataInput - If any specific string or property define in the Input\n * @return {String} dispName - Display String\n *\n */\nfunction _getDisplayName( objectData, prop, dataInput ) {\n    var dispName;\n    if( dataInput ) {\n        var objUid = _.get( objectData, dataInput );\n        var mObject = cdm.getObject( objUid );\n        dispName = _.get( mObject, prop );\n    } else {\n        dispName = _.get( objectData, prop );\n    }\n    return dispName;\n}\n\n/**\n * Evaluate condition expression\n *\n * @param {String} expression - Expression {note: currently supporting ==,!=,&&,>,>=,<,<=}\n * @param {Object} evaluationEnv - The data environment for expression evaluation\n * @param {ObjectArray} objectData - The array of function objects which can be used in expression evaluation\n *\n * @return {Object} The evaluated condition result\n */\nfunction _evaluateCondition( expression, evaluationEnv, objectData ) {\n    var operands = expression.split( _operators );\n\n    var reValue = false;\n\n    var tempType = _.get( objectData, operands[ 0 ] );\n\n    if( tempType === operands[ 1 ] ) {\n        reValue = evaluationEnv;\n    }\n\n    return reValue;\n}\n\n/**\n * Evaluate the condition and return the value\n *\n * @param {Object}objectData - Model object\n * @param {String}types - Property name\n *\n * @return {Object} Supported type for the declarative\n */\nfunction getPropertyValue( objectData, types ) {\n    var returnVal = '';\n\n    for( var i in types ) {\n        var f = Object.getOwnPropertyNames( types[ i ] );\n        var condName = _.get( types[ i ], f[ 0 ] );\n        var condVal = _.get( types[ i ], f[ 1 ] );\n        var val = _evaluateCondition( condName, condVal, objectData );\n        if( val ) {\n            returnVal = val;\n        }\n    }\n\n    return returnVal;\n}\n\n/**\n * Evaluate expression\n *\n * @param {String} expression - expression {note: currently supporting ==,!=,&&,>,>=,<,<=}\n * @return {ObjectArray} operands - Array of the string objects\n */\nfunction _getOperands( expression ) {\n    return expression.split( _operators );\n}\n\n/**\n * Returns the nested property\n *\n * @param {Object}objectIndex - Index in array objects\n * @param {String}arrayObjs - Model object\n * @param {String}inArray - JSON string\n * @return {ObjectArray} output - Nested output structure\n */\nfunction _prepareObject( objectIndex, arrayObjs, inArray ) {\n    var output = [];\n    var objectData = arrayObjs[ objectIndex ];\n\n    for( var i in inArray ) {\n        var f = Object.getOwnPropertyNames( inArray[ i ] );\n\n        var condName = _.get( inArray[ i ], f[ 0 ] );\n        var condValue = _.get( inArray[ i ], f[ 1 ] );\n\n        if( f[ 0 ] === 'structName' ) {\n            output[ condName ] = _constructOutputData( objectIndex, arrayObjs, condValue );\n        } else {\n            output[ condName ] = _getInputData( objectData, condValue );\n        }\n    }\n    return output;\n}\n\nvar exports = {};\n\n/**\n * Get the view model property using the SOA input\n *\n * @param {String} arrayObjs - SOA response\n * @param {String} n - viewModel property\n * @return {ObjectArray} output - A ViewModel property object array\n */\nexport let createDynProperty = function( arrayObjs, n ) {\n    var output = [];\n\n    if( n.viewModelPropValues ) {\n        for( var i in arrayObjs ) {\n            var g = n.viewModelPropValues;\n            var d = Object.getOwnPropertyNames( n.viewModelPropValues );\n\n            var dispName = null;\n            var ptype = null;\n            var dbValue = null;\n\n            for( var k in d ) {\n                if( d[ k ] === 'displayName' ) {\n                    dispName = _getDisplayName( arrayObjs[ i ], g[ d[ k ] ], n.dataInput );\n                }\n                if( d[ k ] === 'type' ) {\n                    ptype = getPropertyValue( arrayObjs[ i ], g[ d[ k ] ] );\n                }\n                if( d[ k ] === 'dbValue' ) {\n                    dbValue = getPropertyValue( arrayObjs[ i ], g[ d[ k ] ] );\n                }\n            }\n\n            var propAttrHolder = {\n                displayName: dispName,\n                type: ptype,\n                isRequired: '',\n                isEditable: '',\n                dbValue: dbValue,\n                dispValue: '',\n                labelPosition: ''\n            };\n            var viewProp = modelPropertySvc.createViewModelProperty( propAttrHolder );\n\n            if( d[ k ] === 'propMisc' ) {\n                var z = g[ d[ k ] ];\n\n                for( var h in z ) {\n                    var pName = z[ h ].propName;\n                    var pValue = z[ h ].value;\n                    var objUid = _.get( arrayObjs[ i ], pValue );\n                    viewProp[ pName ] = objUid;\n                }\n            }\n            output.push( viewProp );\n        }\n    }\n\n    return output;\n};\n\n/**\n * prepare the SOA input using the JSON data for dynamic properties\n *\n * @param {Array} arrayObjs - ViewModelProperty Array\n * @param {Array} inArray - JSON array from data.\n *\n * @return {ObjectArray} Output array\n */\nexport let createSoaInput = function( arrayObjs, inArray ) {\n    var modelOutput = [];\n\n    for( var obj in arrayObjs ) {\n        var output = _constructOutputData( obj, arrayObjs, inArray );\n\n        modelOutput.push( _.assign( {}, output ) );\n    }\n\n    return modelOutput;\n};\n\n/**\n * prepare the SOA input using the JSON data for dynamic properties\n *\n * @param {objectArray} dynmData - JSON array from data.\n * @param {objectArray} data - ViewModelProperty Array\n * @param {objectArray} response - response object\n *\n * @return {ObjectArray} Output array\n */\nexport let processDataParseDefination = function( dynmData, data, response ) {\n    var arrayObjs = response;\n    var parseData = null;\n\n    if( dynmData.outputFormat ) {\n        var val = parsingUtils.parentGet( data, dynmData.dataInput );\n        return exports.createSoaInput( val, dynmData.outputFormat );\n    }\n\n    if( dynmData.dataFilter ) {\n        var filterStr = dynmData.dataFilter[ 0 ];\n        var filterKeys = Object.getOwnPropertyNames( filterStr );\n        var filterVal = filterStr[ filterKeys ];\n        arrayObjs = exports.filterObjects( response, filterKeys, dynmData.path, filterVal, dynmData.dataInput );\n        parseData = arrayObjs;\n    }\n\n    if( dynmData.outputFormatType && dynmData.outputFormatType === 'ViewModelObject' ) {\n        var modelObjUid = parsingUtils.parentGet( response, dynmData.dataInput );\n        var operationType = 'Edit';\n        if( dynmData.operationType ) {\n            operationType = dynmData.operationType;\n        }\n\n        var viewModelObj = viewModelObjectSvc.createViewModelObject( modelObjUid, operationType );\n        if( viewModelObj ) {\n            var propertyNames = _.keys( viewModelObj.props ).sort();\n            viewModelObj.sortedPropNames = propertyNames;\n        }\n\n        return viewModelObj;\n    }\n\n    if( dynmData.viewModelPropValues ) {\n        var parseTempData = exports.createDynProperty( arrayObjs, dynmData );\n        parseData = parseTempData;\n    }\n\n    return parseData;\n};\n\n/**\n * Filter the Inputs based on some condition\n *\n * @param {Object} response -Response from server\n * @param {String} filterProperty - any filter condition\n * @param {String} path - Traversal path in output\n * @param {String} expectedValue - If any condition to check\n * @param {string} filterInput - any extra parameter to check\n *\n * @return {ObjectArray} Filtered objects from source array\n */\nexport let filterObjects = function( response, filterProperty, path, expectedValue, filterInput ) {\n    var modelObjects = [];\n    var modelObjectsArray = _.get( response, path );\n\n    for( var i in modelObjectsArray ) {\n        var operands = _getOperands( expectedValue );\n        var tempObj = _.get( modelObjectsArray[ i ], operands[ 0 ] );\n\n        if( !tempObj && filterInput ) {\n            var objUid = _.get( modelObjectsArray[ i ], filterInput );\n            var mObject = cdm.getObject( objUid );\n            tempObj = _.get( mObject, operands[ 0 ] );\n        }\n\n        if( tempObj === operands[ 1 ] ) {\n            modelObjects.push( modelObjectsArray[ i ] );\n        }\n    }\n\n    return modelObjects;\n};\n\nexports = {\n    createDynProperty,\n    createSoaInput,\n    processDataParseDefination,\n    filterObjects\n};\nexport default exports;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}