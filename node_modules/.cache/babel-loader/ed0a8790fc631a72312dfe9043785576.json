{"ast":null,"code":"// Copyright (c) 2021 Siemens\n\n/**\n * @module js/derivedContextService\n */\n\n/**\n * Return type that must be used when getting derived states\n *\n * @param {Object} param0 DerivedStateResult input\n * @param {[String]} param0.ctxParameters A string list of ctx dependencies. For example [\"flagA\"] indicates a dependency on \"ctx.flagA\"\n * @param {[Any]} param0.additionalParameters A list of additional parameters to include in the compute function. These will be passed directly to the compute function.\n * @param {[String]} param0.compute The compute function which will be called with the renderContext and any additionalParameters to get the latest result\n */\nexport const DerivedStateResult = function (_ref) {\n  let {\n    ctxParameters,\n    additionalParameters,\n    compute\n  } = _ref;\n\n  if (!compute) {\n    throw new Error('DerivedStateResult must have a compute function');\n  }\n\n  this.ctxParameters = ctxParameters || [];\n  this.additionalParameters = additionalParameters || [];\n  this.compute = compute;\n};\n_c = DerivedStateResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"DerivedStateResult\");","map":{"version":3,"names":["DerivedStateResult","ctxParameters","additionalParameters","compute","Error"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/declarativeui/src/js/derivedContextService.js"],"sourcesContent":["// Copyright (c) 2021 Siemens\n\n/**\n * @module js/derivedContextService\n */\n/**\n * Return type that must be used when getting derived states\n *\n * @param {Object} param0 DerivedStateResult input\n * @param {[String]} param0.ctxParameters A string list of ctx dependencies. For example [\"flagA\"] indicates a dependency on \"ctx.flagA\"\n * @param {[Any]} param0.additionalParameters A list of additional parameters to include in the compute function. These will be passed directly to the compute function.\n * @param {[String]} param0.compute The compute function which will be called with the renderContext and any additionalParameters to get the latest result\n */\nexport const DerivedStateResult = function( {\n    ctxParameters,\n    additionalParameters,\n    compute\n} ) {\n    if( !compute ) {\n        throw new Error( 'DerivedStateResult must have a compute function' );\n    }\n    this.ctxParameters = ctxParameters || [];\n    this.additionalParameters = additionalParameters || [];\n    this.compute = compute;\n};\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAG,gBAI9B;EAAA,IAJwC;IACxCC,aADwC;IAExCC,oBAFwC;IAGxCC;EAHwC,CAIxC;;EACA,IAAI,CAACA,OAAL,EAAe;IACX,MAAM,IAAIC,KAAJ,CAAW,iDAAX,CAAN;EACH;;EACD,KAAKH,aAAL,GAAqBA,aAAa,IAAI,EAAtC;EACA,KAAKC,oBAAL,GAA4BA,oBAAoB,IAAI,EAApD;EACA,KAAKC,OAAL,GAAeA,OAAf;AACH,CAXM;KAAMH,kB"},"metadata":{},"sourceType":"module"}