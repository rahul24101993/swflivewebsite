{"ast":null,"code":"// Copyright (c) 2021 Siemens \nimport defaultLocationService from 'js/defaultLocationService';\nimport appCtxService from 'js/appCtxService';\nimport pageService from 'js/page.service';\nimport keyboardService from 'js/keyboardService';\nimport awHeaderService from 'js/awHeaderService';\nexport const intializeCommonLocation = async () => {\n  const normalizedStateName = defaultLocationService.normalizeStateName();\n  const locationContext = appCtxService.getCtx('locationContext');\n  appCtxService.updateCtx('locationContext', {\n    'ActiveWorkspace:Location': normalizedStateName,\n    'ActiveWorkspace:SubLocation': locationContext && locationContext['ActiveWorkspace:SubLocation']\n  });\n  pageService.registerSubLocationContext();\n  keyboardService.registerKeyDownEvent();\n  const titles = await awHeaderService.getTitles();\n  appCtxService.updateCtx('location.titles', titles);\n  const availablePages = await pageService.getAvailableSubpages(null);\n  const tabsInfo = await awHeaderService.constructTabsAndGetActiveTab(availablePages);\n  return {\n    subLocationTabCond: defaultLocationService.updateTabs(null),\n    ...titles,\n    ...tabsInfo\n  };\n};\nexport default {\n  intializeCommonLocation\n};","map":{"version":3,"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/commonframe/src/js/CommonLocationService.js"],"names":["intializeCommonLocation","normalizedStateName","defaultLocationService","locationContext","appCtxService","pageService","keyboardService","titles","awHeaderService","availablePages","tabsInfo","subLocationTabCond"],"mappings":"AAAA;AACA,OAAA,sBAAA,MAAA,2BAAA;AACA,OAAA,aAAA,MAAA,kBAAA;AACA,OAAA,WAAA,MAAA,iBAAA;AACA,OAAA,eAAA,MAAA,oBAAA;AACA,OAAA,eAAA,MAAA,oBAAA;AAEA,OAAO,MAAMA,uBAAuB,GAAG,YAAW;EAC9C,MAAMC,mBAAmB,GAAGC,sBAAsB,CAAlD,kBAA4BA,EAA5B;EACA,MAAMC,eAAe,GAAGC,aAAa,CAAbA,MAAAA,CAAxB,iBAAwBA,CAAxB;EACAA,aAAa,CAAbA,SAAAA,CAAAA,iBAAAA,EAA4C;IACxC,4BADwC,mBAAA;IAExC,+BAA+BD,eAAe,IAAIA,eAAe,CAAA,6BAAA;EAFzB,CAA5CC;EAIAC,WAAW,CAAXA,0BAAAA;EACAC,eAAe,CAAfA,oBAAAA;EACA,MAAMC,MAAM,GAAG,MAAMC,eAAe,CAApC,SAAqBA,EAArB;EACAJ,aAAa,CAAbA,SAAAA,CAAAA,iBAAAA,EAAAA,MAAAA;EACA,MAAMK,cAAc,GAAG,MAAMJ,WAAW,CAAXA,oBAAAA,CAA7B,IAA6BA,CAA7B;EACA,MAAMK,QAAQ,GAAG,MAAMF,eAAe,CAAfA,4BAAAA,CAAvB,cAAuBA,CAAvB;EACA,OAAO;IAAEG,kBAAkB,EAAET,sBAAsB,CAAtBA,UAAAA,CAAtB,IAAsBA,CAAtB;IACH,GADG,MAAA;IAEH,GAAGQ;EAFA,CAAP;AAbG,CAAA;AAkBP,eAAe;EACXV;AADW,CAAf","sourcesContent":["// Copyright (c) 2021 Siemens \nimport defaultLocationService from 'js/defaultLocationService';\nimport appCtxService from 'js/appCtxService';\nimport pageService from 'js/page.service';\nimport keyboardService from 'js/keyboardService';\nimport awHeaderService from 'js/awHeaderService';\n\nexport const intializeCommonLocation = async() => {\n    const normalizedStateName = defaultLocationService.normalizeStateName();\n    const locationContext = appCtxService.getCtx( 'locationContext' );\n    appCtxService.updateCtx( 'locationContext', {\n        'ActiveWorkspace:Location': normalizedStateName,\n        'ActiveWorkspace:SubLocation': locationContext && locationContext['ActiveWorkspace:SubLocation']\n    } );\n    pageService.registerSubLocationContext();\n    keyboardService.registerKeyDownEvent();\n    const titles = await awHeaderService.getTitles();\n    appCtxService.updateCtx( 'location.titles', titles );\n    const availablePages = await pageService.getAvailableSubpages( null );\n    const tabsInfo = await awHeaderService.constructTabsAndGetActiveTab( availablePages );\n    return { subLocationTabCond: defaultLocationService.updateTabs( null ),\n        ...titles,\n        ...tabsInfo };\n};\n\nexport default {\n    intializeCommonLocation\n};\n"]},"metadata":{},"sourceType":"module"}