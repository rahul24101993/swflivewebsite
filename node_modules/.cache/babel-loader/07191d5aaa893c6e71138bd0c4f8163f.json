{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahukl57\\\\Desktop\\\\SWF\\\\CreatingOwnComponentUsingJsx\\\\node_modules\\\\@swf\\\\core\\\\src\\\\components\\\\src\\\\js\\\\AwListboxService.js\";\n\n/* eslint-disable valid-jsdoc */\nimport AwWidget from 'viewmodel/AwWidgetViewModel';\n/**\n * render function for AwListbox\n * @deprecated afx@4.2.0.\n * @alternative AwWidget with List LOV, reference ListLOVExampleService.js\n * @obsoleteIn afx@5.1.0\n * @returns {JSX.Element} react component\n *\n * previous:\n * <aw-listbox prop=\"data.listBox1\" list=\"data.listBox1Values.dbValue\" action=\"selectionChange\" />\n *\n *\n * now:\n *\n * <AwListbox {...listBox1} action={selectionChange} list={listBox1Values.dbValue} />\n *\n * or\n *\n * <AwListbox {...listBox1} action={selectionChange} />\n * <AwWidget {...listBox1} action={selectionChange} />\n *\n * \"listBox1\": {\n        \"displayName\": \"Active Workspace Based Applications\",\n        \"name\": \"listBox1\",\n        \"type\": \"STRING\",\n        \"isRequired\": true,\n        \"dataProvider\": \"dataProviderListBox1Values\",   // the 'dataProvider' attribute to replace 'list' option\n        \"dbValue\": \"Showcase\",\n        \"uiValue\": \"Showcase\"\n * }\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const awListboxRenderFunction = props => {\n  const {\n    viewModel,\n    ctxMin,\n    actions,\n    i18n,\n    fields,\n    grids,\n    formProp,\n    messages,\n    ...prop\n  } = props;\n  const {\n    isSelectOnly\n  } = prop; // listbox always has emptyLOVEntry false\n\n  prop.fielddata.emptyLOVEntry = false;\n  const finalProps = { ...prop,\n    // mapped from fields\n    autoCorrect: true,\n    // reverting back the value if incorrect value has typed in\n    isSelectOnly: isSelectOnly,\n    isListbox: true\n  };\n  return /*#__PURE__*/_jsxDEV(AwWidget, { ...finalProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\nexport const onUpdate = props => {\n  const {\n    actions,\n    fields,\n    action,\n    viewModel,\n    list,\n    ...prop\n  } = props;\n  const field = prop;\n  let uiValue = field.fielddata.uiValue; // listbox expected to select the first item when no initial value\n  // list maybe loaded async\n\n  if (!uiValue && list && list.length > 0) {\n    const selectedListItem = list.find(listItem => listItem.selected);\n    let lovEntry = selectedListItem ? selectedListItem : list[0];\n    prop.setLovVal({\n      lovEntry\n    }, null); // call selection action if defined\n\n    setTimeout(() => action && action({\n      lovEntry\n    }));\n  }\n};","map":{"version":3,"names":["AwWidget","awListboxRenderFunction","props","viewModel","ctxMin","actions","i18n","fields","grids","formProp","messages","prop","isSelectOnly","fielddata","emptyLOVEntry","finalProps","autoCorrect","isListbox","onUpdate","action","list","field","uiValue","length","selectedListItem","find","listItem","selected","lovEntry","setLovVal","setTimeout"],"sources":["C:/Users/rahukl57/Desktop/SWF/CreatingOwnComponentUsingJsx/node_modules/@swf/core/src/components/src/js/AwListboxService.js"],"sourcesContent":["/* eslint-disable valid-jsdoc */\nimport AwWidget from 'viewmodel/AwWidgetViewModel';\n\n/**\n * render function for AwListbox\n * @deprecated afx@4.2.0.\n * @alternative AwWidget with List LOV, reference ListLOVExampleService.js\n * @obsoleteIn afx@5.1.0\n * @returns {JSX.Element} react component\n *\n * previous:\n * <aw-listbox prop=\"data.listBox1\" list=\"data.listBox1Values.dbValue\" action=\"selectionChange\" />\n *\n *\n * now:\n *\n * <AwListbox {...listBox1} action={selectionChange} list={listBox1Values.dbValue} />\n *\n * or\n *\n * <AwListbox {...listBox1} action={selectionChange} />\n * <AwWidget {...listBox1} action={selectionChange} />\n *\n * \"listBox1\": {\n        \"displayName\": \"Active Workspace Based Applications\",\n        \"name\": \"listBox1\",\n        \"type\": \"STRING\",\n        \"isRequired\": true,\n        \"dataProvider\": \"dataProviderListBox1Values\",   // the 'dataProvider' attribute to replace 'list' option\n        \"dbValue\": \"Showcase\",\n        \"uiValue\": \"Showcase\"\n * }\n *\n */\nexport const awListboxRenderFunction = ( props ) => {\n    const {\n        viewModel,\n        ctxMin,\n        actions,\n        i18n,\n        fields,\n        grids,\n        formProp,\n        messages,\n        ...prop\n    } = props;\n    const { isSelectOnly } = prop;\n\n    // listbox always has emptyLOVEntry false\n    prop.fielddata.emptyLOVEntry = false;\n    const finalProps = {\n        ...prop, // mapped from fields\n        autoCorrect: true, // reverting back the value if incorrect value has typed in\n        isSelectOnly: isSelectOnly,\n        isListbox: true\n    };\n\n    return <AwWidget {...finalProps} />;\n};\n\nexport const onUpdate = ( props ) => {\n    const {\n        actions,\n        fields,\n        action,\n        viewModel,\n        list,\n        ...prop\n    } = props;\n\n    const field = prop;\n    let uiValue = field.fielddata.uiValue;\n\n    // listbox expected to select the first item when no initial value\n    // list maybe loaded async\n    if( !uiValue && list && list.length > 0 ) {\n        const selectedListItem = list.find( listItem => listItem.selected );\n        let lovEntry = selectedListItem ? selectedListItem : list[ 0 ];\n        prop.setLovVal( { lovEntry }, null );\n        // call selection action if defined\n        setTimeout( () => action && action( { lovEntry } ) );\n    }\n};\n"],"mappings":";;AAAA;AACA,OAAOA,QAAP,MAAqB,6BAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,uBAAuB,GAAKC,KAAF,IAAa;EAChD,MAAM;IACFC,SADE;IAEFC,MAFE;IAGFC,OAHE;IAIFC,IAJE;IAKFC,MALE;IAMFC,KANE;IAOFC,QAPE;IAQFC,QARE;IASF,GAAGC;EATD,IAUFT,KAVJ;EAWA,MAAM;IAAEU;EAAF,IAAmBD,IAAzB,CAZgD,CAchD;;EACAA,IAAI,CAACE,SAAL,CAAeC,aAAf,GAA+B,KAA/B;EACA,MAAMC,UAAU,GAAG,EACf,GAAGJ,IADY;IACN;IACTK,WAAW,EAAE,IAFE;IAEI;IACnBJ,YAAY,EAAEA,YAHC;IAIfK,SAAS,EAAE;EAJI,CAAnB;EAOA,oBAAO,QAAC,QAAD,OAAcF;EAAd;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAxBM;AA0BP,OAAO,MAAMG,QAAQ,GAAKhB,KAAF,IAAa;EACjC,MAAM;IACFG,OADE;IAEFE,MAFE;IAGFY,MAHE;IAIFhB,SAJE;IAKFiB,IALE;IAMF,GAAGT;EAND,IAOFT,KAPJ;EASA,MAAMmB,KAAK,GAAGV,IAAd;EACA,IAAIW,OAAO,GAAGD,KAAK,CAACR,SAAN,CAAgBS,OAA9B,CAXiC,CAajC;EACA;;EACA,IAAI,CAACA,OAAD,IAAYF,IAAZ,IAAoBA,IAAI,CAACG,MAAL,GAAc,CAAtC,EAA0C;IACtC,MAAMC,gBAAgB,GAAGJ,IAAI,CAACK,IAAL,CAAWC,QAAQ,IAAIA,QAAQ,CAACC,QAAhC,CAAzB;IACA,IAAIC,QAAQ,GAAGJ,gBAAgB,GAAGA,gBAAH,GAAsBJ,IAAI,CAAE,CAAF,CAAzD;IACAT,IAAI,CAACkB,SAAL,CAAgB;MAAED;IAAF,CAAhB,EAA8B,IAA9B,EAHsC,CAItC;;IACAE,UAAU,CAAE,MAAMX,MAAM,IAAIA,MAAM,CAAE;MAAES;IAAF,CAAF,CAAxB,CAAV;EACH;AACJ,CAtBM"},"metadata":{},"sourceType":"module"}