{
  "version": 3,
  "file": "UIView.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react/components/UIView.tsx"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  ComponentType,\n  ReactNode,\n  ValidationMap,\n  cloneElement,\n  createContext,\n  createElement,\n  isValidElement,\n  useEffect,\n  useMemo,\n  useState,\n  Component,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react';\nimport {\n  ActiveUIView,\n  ResolveContext,\n  StateParams,\n  Transition,\n  TypedMap,\n  UIInjector,\n  ViewConfig,\n  ViewContext,\n  applyPairs,\n  UIRouter,\n} from '@uirouter/core';\nimport { useParentView } from '../hooks/useParentView';\nimport { useRouter } from '../hooks/useRouter';\nimport { ReactViewConfig } from '../reactViews';\n\n/** @internal */\nlet viewIdCounter = 0;\n\n/** @internal */\nexport interface UIViewAddress {\n  context: ViewContext;\n  fqn: string;\n}\n\n/**\n * Interface for [[InjectedProps.resolves]]\n *\n * This Typescript interface shows what fields are available on the `resolves` field.\n */\nexport interface UIViewResolves {\n  /**\n   * Any key/value pair defined by a state's resolve\n   *\n   * If a state defines any [[ReactStateDeclaration.resolve]]s, they will be found on this object.\n   */\n  [key: string]: any;\n  /**\n   * The `StateParams` for the `Transition` that activated the component\n   *\n   * This is an alias for:\n   * ```js\n   * let $stateParams = $transition$.params(\"to\");\n   * ```\n   */\n  $stateParams: StateParams;\n  /** The `Transition` that activated the component */\n  $transition$: Transition;\n}\n\n/**\n * Function type for [[UIViewProps.render]]\n *\n * If the `render` function prop is provided, the `UIView` will use it instead of rendering the component by itself.\n * @internal\n */\nexport type RenderPropCallback = (Component: ComponentType<any>, Props: any) => JSX.Element | null;\n\nexport interface UIViewInjectedProps {\n  transition?: Transition;\n  resolves?: UIViewResolves;\n  className?: string;\n  style?: Object;\n}\n\n/** React Props for the [[UIView]] component */\nexport interface UIViewProps {\n  /** default content that will be rendered when no child component is loaded into the UIView viewport */\n  children?: ReactNode;\n  /**\n   * The name of the [[UIView]].\n   *\n   * Assigns a name to this [[UIView]] Portal.\n   * see: [Multiple Named Views](https://ui-router.github.io/guide/views#multiple-named-uiviews)\n   */\n  name?: string;\n  /** This prop will be applied to the routed component. */\n  className?: string;\n  /** This prop will be applied to the routed component. */\n  style?: Object;\n  /** This render prop can be used to customize the rendering of  routed components. */\n  render?: RenderPropCallback;\n}\n\nexport const TransitionPropCollisionError =\n  '`transition` cannot be used as resolve token. ' +\n  'Please rename your resolve to avoid conflicts with the router transition.';\n\n/** @internal */\nexport const UIViewContext = createContext<UIViewAddress>(undefined);\n/** @deprecated use [[useParentView]] or React.useContext(UIViewContext) */\nexport const UIViewConsumer = UIViewContext.Consumer;\n\n/** @hidden */\nfunction useResolvesWithStringTokens(resolveContext: ResolveContext, injector: UIInjector) {\n  return useMemo(() => {\n    if (resolveContext && injector) {\n      const stringTokens: string[] = resolveContext.getTokens().filter((x) => typeof x === 'string');\n      if (stringTokens.indexOf('transition') !== -1) {\n        throw new Error(TransitionPropCollisionError);\n      }\n      return stringTokens.map((token) => [token, injector.get(token)]).reduce(applyPairs, {});\n    } else {\n      return {};\n    }\n  }, [resolveContext, injector]);\n}\n\n/* @hidden These are the props are passed to the routed component. */\nfunction useRoutedComponentProps(\n  router: UIRouter,\n  stateName: string,\n  viewConfig: ViewConfig,\n  component: React.FunctionComponent<any> | React.ComponentClass<any> | React.ClassicComponentClass<any>,\n  resolves: TypedMap<any> | {},\n  className: string,\n  style: Object,\n  transition: any\n): UIViewInjectedProps & { key: string } {\n  const keyCounterRef = useRef(0);\n  // Always re-mount if the viewConfig changes\n  const key = useMemo(() => (++keyCounterRef.current).toString(), [viewConfig]);\n\n  const baseChildProps = useMemo(\n    () => ({\n      // spread each string resolve as a separate prop\n      ...resolves,\n      // if a className prop was passed to the UIView, forward it\n      className,\n      // if a style prop was passed to the UIView, forward it\n      style,\n      // the transition\n      transition,\n      // this key updates whenever the state is reloaded, causing the component to remount\n      key,\n    }),\n    [component, resolves, className, style, transition, key]\n  );\n\n  const maybeRefProp = useUiCanExitClassComponentHook(router, stateName, component);\n\n  return useMemo(() => ({ ...baseChildProps, ...maybeRefProp }), [baseChildProps, maybeRefProp]);\n}\n\n/** @hidden */\nfunction useViewConfig() {\n  const [viewConfig, setViewConfig] = useState<ReactViewConfig>();\n  const viewConfigRef = useRef(viewConfig);\n  viewConfigRef.current = viewConfig;\n  const configUpdated = (newConfig: ViewConfig) => {\n    if (newConfig !== viewConfigRef.current) {\n      setViewConfig(newConfig as ReactViewConfig);\n    }\n  };\n  return { viewConfig, configUpdated };\n}\n\n/** @hidden */\nfunction useReactHybridApi(ref: React.Ref<unknown>, uiViewData: ActiveUIView, uiViewAddress: UIViewAddress) {\n  const reactHybridApi = useRef({ uiViewData, uiViewAddress });\n  reactHybridApi.current.uiViewData = uiViewData;\n  reactHybridApi.current.uiViewAddress = uiViewAddress;\n  useImperativeHandle(ref, () => reactHybridApi.current);\n}\n\n/**\n * If a class component is being rendered, wire up its uiCanExit method\n * Return a { ref: Ref<ClassComponentInstance> } if passed a component class\n * Return an empty object {} if passed anything else\n * The returned object should be spread as props onto the child component\n * @hidden\n */\nfunction useUiCanExitClassComponentHook(router: UIRouter, stateName: string, maybeComponentClass: any) {\n  // Use refs and run the callback outside of any render pass\n  const componentInstanceRef = useRef<any>();\n  const deregisterRef = useRef<Function>(() => undefined);\n\n  function callbackRef(componentInstance) {\n    // Use refs\n    const previous = componentInstanceRef.current;\n    const deregisterPreviousTransitionHook = deregisterRef.current;\n\n    if (previous !== componentInstance) {\n      componentInstanceRef.current = componentInstance;\n      deregisterPreviousTransitionHook();\n\n      const uiCanExit = componentInstance?.uiCanExit;\n      if (uiCanExit) {\n        const boundCallback = uiCanExit.bind(componentInstance);\n        deregisterRef.current = router.transitionService.onBefore({ exiting: stateName }, boundCallback);\n      } else {\n        deregisterRef.current = () => undefined;\n      }\n    }\n  }\n\n  return useMemo(() => {\n    const isComponentClass = maybeComponentClass?.prototype?.render || maybeComponentClass?.render;\n    return isComponentClass ? { ref: callbackRef } : undefined;\n  }, [maybeComponentClass]);\n}\n\nconst View = forwardRef(function View(props: UIViewProps, forwardedRef) {\n  const { children, render, className, style } = props;\n\n  const router = useRouter();\n  const parent = useParentView();\n  const creationContext = parent.context;\n\n  const { viewConfig, configUpdated } = useViewConfig();\n  const component = useMemo(() => viewConfig?.viewDecl?.component, [viewConfig]);\n\n  const name = props.name || '$default';\n  const fqn = parent.fqn ? parent.fqn + '.' + name : name;\n  const id = useMemo(() => ++viewIdCounter, []);\n\n  // This object contains all the metadata for this UIView\n  const uiViewData: ActiveUIView = useMemo(() => {\n    return { $type: 'react', id, name, fqn, creationContext, configUpdated, config: viewConfig as ViewConfig };\n  }, [id, name, fqn, parent, creationContext, viewConfig]);\n  const viewContext: ViewContext = viewConfig?.viewDecl?.$context;\n  const stateName: string = viewContext?.name;\n  const uiViewAddress: UIViewAddress = { fqn, context: viewContext };\n  const resolveContext = useMemo(() => (viewConfig ? new ResolveContext(viewConfig.path) : undefined), [viewConfig]);\n  const injector = useMemo(() => resolveContext?.injector(), [resolveContext]);\n  const transition = useMemo(() => injector?.get(Transition), [injector]);\n  const resolves = useResolvesWithStringTokens(resolveContext, injector);\n\n  const childProps = useRoutedComponentProps(\n    router,\n    stateName,\n    viewConfig,\n    component,\n    resolves,\n    className,\n    style,\n    transition\n  );\n\n  // temporarily expose a ref with an API on it for @uirouter/react-hybrid to use\n  useReactHybridApi(forwardedRef, uiViewData, uiViewAddress);\n\n  // Register/deregister any time the uiViewData changes\n  useEffect(() => router.viewService.registerUIView(uiViewData), [uiViewData]);\n\n  const childElement =\n    !component && isValidElement(children)\n      ? cloneElement(children, childProps)\n      : createElement(component || 'div', childProps);\n\n  // if a render function is passed, use that. otherwise render the component normally\n  const ChildOrRenderFunction =\n    typeof render !== 'undefined' && component ? render(component, childProps) : childElement;\n  return <UIViewContext.Provider value={uiViewAddress}>{ChildOrRenderFunction}</UIViewContext.Provider>;\n});\n\nView.displayName = 'UIView';\nView.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  render: PropTypes.func,\n} as ValidationMap<UIViewProps>;\n\n/**\n * UIView Viewport\n *\n * The UIView component is a viewport for a routed components.\n * Routed components will be rendered inside the UIView viewport.\n *\n * ### Example\n * ```\n * function MyApp() {\n *   return (\n *     <div className=\"MyApp\">\n *       <UIView />\n *     </div>\n *   );\n * }\n * ```\n *\n * See [[UIViewProps]] for details on the props this component takes.\n *\n * @noInheritDoc\n */\nexport class UIView extends Component<UIViewProps> {\n  /** @internal */\n  static displayName = 'UIView';\n  /** @internal */\n  static propTypes = View.propTypes;\n  /** @internal */\n  static __internalViewComponent: ComponentType<UIViewProps> = View;\n  /** @internal */\n  render() {\n    return <View {...this.props} />;\n  }\n}\n"
  ]
}