(this.webpackJsonpcreatingjsxcomponent=this.webpackJsonpcreatingjsxcomponent||[]).push([[17],{596:function(e,t,i){"use strict";i.r(t),i.d(t,"getCurrentServerVisibility",(function(){return S})),i.d(t,"getServerVisibilityLoader",(function(){return L})),i.d(t,"getDerivedVisibilityLoader",(function(){return O})),i.d(t,"getForcedLoaderCounter",(function(){return M})),i.d(t,"checkForRefresh",(function(){return _})),i.d(t,"addServerVisibility",(function(){return A})),i.d(t,"AwServerVisibilityPopupCommandBar",(function(){return F})),i.d(t,"AwServerVisibilityCommandBar",(function(){return P})),i.d(t,"AwServerVisibilityToolbar",(function(){return B})),i.d(t,"renderCommandBar",(function(){return D})),i.d(t,"renderToolbar",(function(){return k})),i.d(t,"renderPopupCommandBar",(function(){return R}));var n=i(60),o=i(952),r=i(43),a=i(957),c=i(3041),d=i.n(c),s=i(39),l=i.n(s),u=i(12),m=i(28),p=i(116),v=i(80),b=i(5),f=i(1),h=i(0),y=i(2);Object(h.h)("js/AwServerVisibilityCommandBarService",(()=>Promise.resolve().then(i.bind(null,596))));const g=new l.a("command:tcCommandVisibilityService2"),w=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t&&t.uid===m.a.NULL_UID&&(t=null);var n=[],o=i;Object(f.forEach)(e,(function(e){var t=m.a.getObject(e.uid);t?n.push(t):o&&n.push(e)}));var r=[];if(n.length){var a={contextName:"",parentSelectionIndex:t?1:-1,selectedObjects:n};r.push(a)}if(t){var c=m.a.getObject(t.uid);c&&r.push({contextName:"",parentSelectionIndex:-1,selectedObjects:[t]})}return r},V=function(e){return Object(f.uniq)(e).sort().map((function(e){return{commandCollectionId:"",commandId:e}}))},C="ActiveXrtPageId",j="UrlParameter_",x=function(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};var o=[{contextName:"IsHosted",contextValue:e?"true":"false"},{contextName:"HostType",contextValue:t}],r=i.concat(["uid"]).map((function(e){return Object(f.includes)(e,C)?{contextName:C,contextValue:Object(f.replace)(e,C+":","")}:{contextName:j+e,contextValue:n[e]||""}}));return o.concat(r)},I=()=>{const e={};return{get:t=>e[t],set:(t,i)=>e[t]=i,delete:t=>delete e[t],clear:()=>{for(const t in e)delete e[t]}}},S=async(e,t)=>{const{sublocation:{clientScopeURI:i=""},mselected:n,pselected:o,istcgql:a=!1,ViewModeContext:{ViewModeContext:c},aw_hosting_enabled:d,aw_host_type:s,commandContextParameters:l,services:{awCommandVisibilityLoader:m}}=t;if(a){const e="TableView"===c||"ListView"===c||"ImageView"===c,t=n.map((e=>e.uid)).filter((e=>e)),i=n.length>1;t.length>0&&(e||i)&&p.a.loadObjects(t)}const v=r.a.instance.params;let b=u.default.getCtx("pselected");const f={clientScopeURI:i,selectionInfo:w(n,b,a),commandContextInfo:x(d,s,l,v),commandInfo:V(e)};g("Loading visibility commands with given context information",e,f);const h=(await m.load(f)).map((e=>e.commandId));return e.map((e=>h.includes(e)))},L=(e,t,i,n)=>{let{ctx:o}=e;return o.mselected=t||o.mselected,o.pselected=i||o.pselected,g("Previous visibility loader is stale, creating new loader",o,n),new d.a((async e=>S(e,o)),{cacheMap:I()})},O=(e,t,i)=>new v.a({ctxParameters:["ViewModeContext.ViewModeContext","services.awCommandVisibilityLoader","aw_host_type","aw_hosting_enabled","commandContextParameters","istcgql","mselected","pselected","sublocation.clientScopeURI"],additionalParameters:[t.mselected,t.pselected,i.visibilityLoaderIdCount||0],compute:L}),M=()=>(g("Initializing visibility loader counter"),{count:0,counter:{increment:Object(f.debounce)((e=>e+1),100,{leading:!0,trailing:!1})}}),_=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],i=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0;if(!n)return i;const o=t.map((e=>e.uid)),r=e.relatedModified||e.updatedObjects||[];e.relatedModified&&g("cdm.relatedModified",e.relatedModified),e.updatedObjects&&g("cdm.updated",e.updatedObjects);for(const a of r)if(o.includes(a.uid))return g("Incrementing counter to force reload of server visibility",a.uid),{count:n.increment(i)};return{count:i}},A=(e,t)=>{const i={serverVisibilityLoader:O},n={schemaVersion:"1.0.0",actions:{checkForRefresh:{actionType:"JSFunction",method:"checkForRefresh",deps:"js/AwServerVisibilityCommandBarService",inputData:{0:"{{data.eventData}}",1:"{{props.mselected}}",2:"{{data.visibilityLoaderIdCount}}",3:"{{data.visibilityLoaderIdCounter}}"},outputData:{visibilityLoaderIdCount:"count"}},getForcedLoaderCounter:{actionType:"JSFunction",method:"getForcedLoaderCounter",deps:"js/AwServerVisibilityCommandBarService",inputData:{},outputData:{visibilityLoaderIdCount:"count",visibilityLoaderIdCounter:"counter"}}},ctx:{serverVisibilityLoader:{parser:{method:"getDerivedVisibilityLoader",deps:"js/AwServerVisibilityCommandBarService"}},mselected:null,pselected:null},onEvent:[{eventId:"cdm.relatedModified",action:"checkForRefresh",cacheEventData:!0},{eventId:"cdm.updated",action:"checkForRefresh",cacheEventData:!0}],props:{mselected:{type:"object"},pselected:{type:"viewModelObject"}},lifecycleHooks:{onMount:"getForcedLoaderCounter"},_viewModelId:t,_uniqueViewModelId:t};return Object(b.a)(n,(t=>{const{ctx:i}=t;return Object(y.jsx)(e,{...t,visibilityLoader:i.serverVisibilityLoader})}),void 0,i)},F=A(o.default,"AwServerVisibilityPopupCommandBarImpl"),P=A(n.default,"AwServerVisibilityCommandBarImpl"),B=A(a.default,"AwServerVisibilityToolbarImpl"),D=e=>Object(y.jsx)(P,{...e}),k=e=>Object(y.jsx)(B,{...e}),R=e=>Object(y.jsx)(F,{...e})}}]);